{"searchDocs":[{"title":"Use Markdown Architectural Decision Records","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2022-09-19-use-markdown-architectural-decision-records","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Use Markdown Architectural Decision Records","url":"/docs/adrs/decisions/2022-09-19-use-markdown-architectural-decision-records#context-and-problem-statement","content":" We want to record architectural decisions made in this project. Which format and structure should these records follow?  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Use Markdown Architectural Decision Records","url":"/docs/adrs/decisions/2022-09-19-use-markdown-architectural-decision-records#decision-drivers","content":" We want to improve the information and technical documentation of our software engineering projectsWe want to create an immutable log of important architectural decisions we have made during the software developmentWe recognise the need for a complement to RFCs that typically documents the process before a decision has been reached (and not after)We want this decision log to offer a a standardised, lightweight, and extensible manner to increase consistency across systemsWe want this decision log to live as close as possible to the relevant code-baseWe want this decision log to be easily readable, discoverable and meaningfully searchable  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Use Markdown Architectural Decision Records","url":"/docs/adrs/decisions/2022-09-19-use-markdown-architectural-decision-records#considered-options","content":" MADR 3.0.0-beta.2MADR 2.1.2 with Log4brains patchMADR 2.1.2 ‚Äì The original Markdown Architectural Decision RecordsMichael Nygard's template ‚Äì The first incarnation of the term &quot;ADR&quot;  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Use Markdown Architectural Decision Records","url":"/docs/adrs/decisions/2022-09-19-use-markdown-architectural-decision-records#decision-outcome","content":" Chosen option: &quot;MADR 2.1.2 with Log4brains patch&quot;, because  The MADR format is lean and fits our development style.The MADR structure is comprehensible and facilitates usage &amp; maintenance.The Log4brains patch adds more features, like tags.This format is compatible with Log4brains and allows us to run a portal with a timeline of ADRs  The &quot;Log4brains patch&quot; performs the following modifications to the original template:  Change the ADR filenames format (NNN-adr-name becomes YYYYMMDD-adr-name), to avoid conflicts during Git merges.Add a Tags field.  ","version":"Next","tagName":"h2"},{"title":"Additional Information‚Äã","type":1,"pageTitle":"Use Markdown Architectural Decision Records","url":"/docs/adrs/decisions/2022-09-19-use-markdown-architectural-decision-records#additional-information","content":" We will implement Architectural Decision Records (ADRs) with immediate effect;  ADRs are to be authored and published with (at minimum) 1 TA as decider;ADRs will be formatted using MADR 2.12 with log4Brains Patches format;ADRs are to be used to log system-wide decisions;Should the system consist of multiple code-repositories, ADRs should live in the main system repository;ADRs are to be stored in a subfolder docs/decisions/ of the repository for the software affected;ADRs will follow a flat filename convention with relevant components in their filename  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Use Markdown Architectural Decision Records","url":"/docs/adrs/decisions/2022-09-19-use-markdown-architectural-decision-records#links","content":" Relates to RFC-0016 ","version":"Next","tagName":"h2"},{"title":"Architecture knowledge base","type":0,"sectionRef":"#","url":"/docs/adrs/","content":"","keywords":"","version":"Next"},{"title":"Definition and purpose‚Äã","type":1,"pageTitle":"Architecture knowledge base","url":"/docs/adrs/#definition-and-purpose","content":" An Architectural Decision (AD) is a software design choice that addresses a functional or non-functional requirement that is architecturally significant. An Architectural Decision Record (ADR) captures a single AD, such as often done when writing personal notes or meeting minutes; the collection of ADRs created and maintained in a project constitutes its decision log.  An ADR is immutable: only its status can change (i.e. become deprecated or superseded). That way, you can become familiar with the whole project history just by reading its decision log in chronological order. Moreover, maintaining this documentation aims at:  üöÄ Improving and speeding up the onboarding of a new team memberüî≠ Avoiding blind acceptance/reversal of a past decision (cf Michael Nygard's famous article on ADRs)ü§ù Formalizing the decision process of the team  ","version":"Next","tagName":"h2"},{"title":"Usage‚Äã","type":1,"pageTitle":"Architecture knowledge base","url":"/docs/adrs/#usage","content":" This website is automatically updated after a change on the main branch of the project's Git repository. In fact, the developers manage this documentation directly with markdown files located next to their code, so it is more convenient for them to keep it up-to-date. You can browse the ADRs by using the left menu or the search bar.  ","version":"Next","tagName":"h2"},{"title":"More information‚Äã","type":1,"pageTitle":"Architecture knowledge base","url":"/docs/adrs/#more-information","content":" RFC-0016Engineering GuidanceLog4brains documentationWhat is an ADR and why should you use themADR GitHub organization ","version":"Next","tagName":"h2"},{"title":"Store private keys of Issuers inside the Cloud Agent","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2022-10-06-store-private-keys-of-issuers-inside-prism-agent","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Store private keys of Issuers inside the Cloud Agent","url":"/docs/adrs/decisions/2022-10-06-store-private-keys-of-issuers-inside-prism-agent#context-and-problem-statement","content":" While each holder has a wallet application on the phone (edge agent) to store private keys, contacts, and credentials, Identus Cloud Agent will provide a custodial solution to Issuers and Verifiers. Thus they won't have their wallets or store/manage keys. There needs to be storage for the private keys of Issuers and Verifiers on the Cloud Agent side.  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Store private keys of Issuers inside the Cloud Agent","url":"/docs/adrs/decisions/2022-10-06-store-private-keys-of-issuers-inside-prism-agent#considered-options","content":" Having issuers store and manage their own keys on the edge wallet (Prism 1.4 approach)Storing keys in a dedicated wallet application that is connected to the Cloud AgentHaving the Cloud Agent store and manage keys directly  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Store private keys of Issuers inside the Cloud Agent","url":"/docs/adrs/decisions/2022-10-06-store-private-keys-of-issuers-inside-prism-agent#decision-outcome","content":" Chosen option: Option 3, because it is the simplest approach that satisfies the needs of providing the Issuer and Verifier with key storage while also not requiring them to manage their own keys. Option 3 was chosen instead of Option 2 because it achieves the same goal but does not require work on integrating another wallet application, so in short, it is simpler and faster to implement.  ","version":"Next","tagName":"h2"},{"title":"Negative Consequences ‚Äã","type":1,"pageTitle":"Store private keys of Issuers inside the Cloud Agent","url":"/docs/adrs/decisions/2022-10-06-store-private-keys-of-issuers-inside-prism-agent#negative-consequences-","content":" While Option 3 is simpler to implement then Option 2 and provides basic functionality required to solve the problem emphasized in Context and Problem Statement, it does not provide full functionality and security of widely used and well tested wallet application. Therefore this decision is considered to be temporary and made only in the interest of solving the problem as fast as possible.  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Store private keys of Issuers inside the Cloud Agent","url":"/docs/adrs/decisions/2022-10-06-store-private-keys-of-issuers-inside-prism-agent#links","content":" Recording of the meeting where decision was made ","version":"Next","tagName":"h2"},{"title":"Using tapir library as a DSL for OpenAPI specification","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#context-and-problem-statement","content":" Identus Platform will contain the REST API. The decision was made by team consensus during the first AOH meeting to follow &quot;OpenAPI specification first&quot; approach and generate stubs, server side and client side code based on OAS. Following this strategy we currently have 4-5 OAS files (Castor, Pollux, Mercury, Configuration).  The following tool was selected for code generation: OpenAPI Tools  Instead of using the yaml file as OpenAPI specification and openapi-generator for server and client stub generation - this ADR proposes to use Tapir Scala library as DSL for OpenAPI specification, interpret the endpoint defitions as Scala server and client stub, generate the yaml file, and use openapi-generator for client stubs.  Technology stack that is going to be used in the Identus platform backend: Scala 3 + ZIO ecosystem  Akka framework after version 2.6.x cannot be used because Lightbend changed the license type to BSL 1.1.  Looks like Akka 2.6.x still can be used according to License FQA  Currently, we have a code generation for Akka that is wrapped up into ZIO. Code generation mustache templates for ZIO-http are not available in OpenAPI tools.  Mustache templates and code generation doesn't work out of the box, so the original templates where copied to the project and fixed by @Shota and @Pat. Current templates and generator contains constraints that were reported by @Pat and @Shota, this requires engineering time to adopt the OAS for a code generation. @Ben says that we can live with these constraints  Generally, OAS files are written by the engineers with different experience and different view on formatting, schemas, normalization, datatype. For instance, in current templates don't have  a consistent way for paginating the entitiesstandard Responses for 4xx and 5xx errorsnormalized data types (we use anyOf, allOf)query parameters convention for filtering the entitiessome data types are duplicated in both Castor and Pollux OAS  As OAS specification evolves it's getting harder to manage it because of the size of the file. To mitigate this issue @Pat proposed to use well-known tools: &quot;Knowing that there are tools like dhall or CUE that allow us to write large configuration in yaml (or json) in a typesafe / reuseable way, I'm not hesitant to go contract-first.&quot;(c)  Quality and formatting of autogenerated code depend on the template (not all templates are good enough). Making the good code from existing templates require additional time of engineers.  ","version":"Next","tagName":"h2"},{"title":"OpenAPI code generator constraints for Akka server‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#openapi-code-generator-constraints-for-akka-server","content":" @Pat‚Äã  oneOf is not supported. It combines everything from the list if it‚Äôs an object, discard if it‚Äôs a primitiveallOf is not supported as stated in the documentation, but testing locally it workedHave to handwrite the serialization layer  @Shota‚Äã  Undefined type AnyType. You can have additionalProperties (components/schemas/&lt;schema name&gt;/properties/additionalProperties) in the schema, when you add it, it will generate a type for &lt;schema name&gt; that has another type called AnyType inside, this type is not defined, it just does not exist in generated code so the compilation will fail, if you get a compilation error in your sources with some AnyType that is not defined, look for additionalProperties in your schemaValues of type object without properties don‚Äôt serialize with spray json. You can have componets/schemas/&lt;schema name&gt;/properties/&lt;property name&gt; and every property has a type, like string, int, etc.., you can have type as object, but if you do so, you must provide object properties as well like in example below, if you don‚Äôt add it, it will generate this object type with Any in scala, and then the Akka marshaller will fail, because we use SprayJson there, and it does not support Reader and Writer for type Any (basically it can‚Äôt serialize type Any into json), you could probably define Writer and Reader for type Any to be an empty object, but I personally don‚Äôt see a reason to have value of type object and not define what properties it is going to have anyway.requestBody in every path must be explicitly required:true. It is false by default, if not marked as true it will generate a service functions that accepts Option[Type] instead of Type but endpoints are always expecting Type even if required is false, not Option[Type], then when you try to generate sources you will get compilation error expecting Type got Option[Type]  ","version":"Next","tagName":"h3"},{"title":"Decision Drivers ‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#decision-drivers-","content":" enforce type-safety to endpoint definitions using Scala compiler and Tapir DSL, add CI for endpoints definitionsmake endpoint definitions convenient for engineers by reusing common abstractions and definitionsintroduce a standard types, schemas and approaches for all endpoint definitions: query, pagination, responses, etcreuse endpoint definitions for creating server and client stubs in Scalaalign the server side of REST API with the current technology stack (ZIO + ecosystem)have a control over the codebase and data typesreduce time-of-maintenance of the code (either OAS should be adapted for generator or mustache templates should be fixed)functional way of implementation of non-functional requirement (metrics, tracing, logging)straight forward generation of Swagger UI, Redoc documentation and Async API documentation based on endpoint definitions  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#considered-options","content":" use OpenAPI tools (edit OAS manually, generate server stub for Akka and client stubs for any other languages)use OpenAPI tools, but generate code for other server-side library (Play, Finch, Lagom)use Tapir library (edit endpoint definitions as Scala code, reuse endpoint definitions for server stubs, generate OAS based on endpoint definitions, generate client stubs for any other language)  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#decision-outcome","content":" Chosen option:&quot;use Tapir library&quot; till the end of the year, evaluate this solution in 2023  All endpoint definition are written in Tapir DSL.  OpenAPI specification generated based on endpoint definition and is published as an artefact. (must be a part of CI)  The server side is interpreted using a ZIO-HTTP interpreter to be aligned with the given technology stack.  Client side stubs are generated using OpenAPI tools and OpenAPI specification file. (must be a part of CI)  For server-side code the flow is following:  graph TD ED(Endpoint Definition) --&gt; |Generate| OAS(OpenAPI Specification) ED --&gt; |Generate| AAUI(AsyncAPI Specification) ED --&gt; |Interpret| SSS(Scala Server Stub) ED --&gt; |Interpret| SCS(Scala Client Stub) ED --&gt; |Produce| SUI(Swagger UI) ED --&gt; |Produce| RUI(Redoc UI) OAS --&gt; |Input| OAT(OpenAPI Tools) OAT --&gt; |Generate| SS(Server Stub) OAT --&gt; |Generate| CS(Client Stub)  ","version":"Next","tagName":"h2"},{"title":"Positive Consequences ‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#positive-consequences-","content":" Type-safety and OAS configuration as a code will speed up developmentGenerated OpenAPI specification is unified according to the single standard (Tapir generator)Errors in the types and endpoint definitions will be found in compile-timeCode generations will be replaced with interpretation with higher guarantees of stabilityEngineers will save time for feature implementation instead of investigating the issues with AOS files or templatesBetter management of OAS spec and control over the documentation (Swagger UI, Redoc, Async API for WebSockets)  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences ‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#negative-consequences-","content":" Not all engineers will be able to edit the endpoint definitions in Tapir DLS, so either only engineer with Scala knowledge will do this, or knowledge sharing and workshops &quot;How to use Tapir&quot; are required.OAS is going to be generated from the model defined by DLS, so the granular/manual control over the spec will be replaced by Tapir generatorThere is a risk that Tapir might have some hidden surprises and constraints  ","version":"Next","tagName":"h3"},{"title":"Option 1 & 2: Feature Implementation Workflow‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#option-1--2-feature-implementation-workflow","content":" graph TD U[Start Feature] --&gt; |Edit OAS| A A[OAS File] --&gt; |Input| E U --&gt; |Edit Template| E E[Generator &amp; Templates]--&gt;|Generate Server Code| B(Server Code) E --&gt;|Generate Client Code| C(Client Code) C --&gt;|Compile| OC(Other Compiler) OC --&gt;|Compilation Error| I OC --&gt;|Success| T E --&gt;|Host file as Swagger UI| D(Swagger) B --&gt; |Compile| S(Scala Compiler) S --&gt; |Compilation Error| I(Investigate) I --&gt; |Try again| U S --&gt; |Success| T(Complete Feature)  ","version":"Next","tagName":"h3"},{"title":"Option 3: Feature Implementation Workflow‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#option-3-feature-implementation-workflow","content":" graph TD U[Start Feature] --&gt; |Edit Endpoint Specification| ED(Endpoint Definition) U --&gt; |Edit Input/Output Types| DM(Domain Model) ED --&gt; |Input| TE(Tapir Library) DM --&gt; |Input| TE TE --&gt; |Generate| A TE --&gt; |Interpret| SC(Server Code) TE --&gt; |Interpret| CC(Client Code) TE --&gt; |Produce| SW(Swagger UI) TE --&gt; |Produce| RD(Redoc UI) TE --&gt; |Compilation Error| U A[OAS File] --&gt; |Input| E U --&gt; |Edit Template| E E[Generator &amp; Templates]--&gt;|Generate Server Code| B(Server Code) E --&gt;|Generate Client Code| C(Client Code) C --&gt;|Compile| OC(Other Compiler) OC --&gt;|Compilation Error| I OC --&gt;|Success| T E --&gt;|Host file as Swagger UI| D(Swagger) B --&gt; |Compile| S(Scala Compiler) S --&gt; |Compilation Error| I(Investigate) I --&gt; |Try again| U S --&gt; |Success| T(Complete Feature)  ","version":"Next","tagName":"h3"},{"title":"Pros and Cons of the Options ‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#pros-and-cons-of-the-options-","content":" ","version":"Next","tagName":"h2"},{"title":"Option 1: use OpenAPI tools and mustache templates for Akka server‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#option-1-use-openapi-tools-and-mustache-templates-for-akka-server","content":" Good, because @Pat and @Shota already stabilized the templates, and we have a working solutionGood, because any engineer from CoreDID and Product Foundry team is able to contribute to the documentationGood, because the same source of truth (OAS file) is used to generate Server and Client stub (less integration problems for client stubs)Bad, because there are known constraints in the mustache templates that can slow down engineeringBad, because Akka changed the licence and version 2.6.x will not be supported in 1 year.Bad, because it's hard to keep the same standard for OAS that are written by different engineersBad, because all OAS files are merged together at infrastructure level which is slightly complex solution for this task.Bad, because Akka Framework is not in ZIO ecosystem (it's not a good practice to use both frameworks)  ","version":"Next","tagName":"h3"},{"title":"Option 2: use OpenAPI tools and mustache templates for alternative Scala server libraries (Finch, Lagom, Play )‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#option-2-use-openapi-tools-and-mustache-templates-for-alternative-scala-server-libraries-finch-lagom-play-","content":" [example | description | pointer to more information | ‚Ä¶]  All good and bad are the same as in Option 1Bad, because we don't know if the mustache templates are good enough for Scala 3Bad, because we need to evaluate if engineering team have the experience in Finch, Lagom or Play  ","version":"Next","tagName":"h3"},{"title":"Optoin 3: use Tapir as DSL for OpenAPI specification‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#optoin-3-use-tapir-as-dsl-for-openapi-specification","content":" [example | description | pointer to more information | ‚Ä¶]  Good, because type-safety and DLS will save the engineering time by providing a quick feedback loop in compile timeGood, because generated OAS will be aligned with the common standardsGood, because engineers can define and reuse the abstractions in FP wayGood, because entities (inputs/outputs) will be reused by Scala backend libraryGood, because the endpoint definition will be reused in Scala Server or Client stubGood, because there is no need to generate the code, stubs are interpreted by the libraryGood, because ZIO-HTTP will be used, which is aligned with the current stackGood, because Open API, Swagger, Redoc, Async API document/site generations are supportedBad, because only Scala engineers will be able to edit the documentationBad, because the granular control over OAS YAML file will be lost (OAS file is generated automatically)Bad, because we need to spend 3-5 day to transform OAS files into Tapir DSL  ","version":"Next","tagName":"h3"},{"title":"How to migrate from the current state to Tapir?‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#how-to-migrate-from-the-current-state-to-tapir","content":" ","version":"Next","tagName":"h2"},{"title":"Current state: OpenAPI Tools + mustache templates for Akka server‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#current-state-openapi-tools--mustache-templates-for-akka-server","content":" ","version":"Next","tagName":"h3"},{"title":"Desired state: Endpoint Definitions in Tapir + ZIO-HTTP‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#desired-state-endpoint-definitions-in-tapir--zio-http","content":" Estimated migration time is 4-6 days which we don't really want to waste.  So, engineering team can proceed with keeping the existing endpoints in the current state and even work on the new endpoints using generated server stubs for Akka.  At the same time OAS file can be translated to Tapir step-by-step and the endpoint definitions can be interpreted by Tapir library as Akka routes, and attached to the server endpoint in the same way as generated endpoints.  This transitions period might take 2-3 weeks till engineering team get enough knowledge of using Tapir.  Then all the endpoints are translated to Tapir, it will be possible to switch the interpreter from Akka to ZIO-HTTP library.  ","version":"Next","tagName":"h3"},{"title":"Links ‚Äã","type":1,"pageTitle":"Using tapir library as a DSL for OpenAPI specification","url":"/docs/adrs/decisions/2022-10-05-using-tapir-library-as-a-dsl-for-openapi-specification#links-","content":" OpenAPI ToolsGoals of Tapir libraryTapir ","version":"Next","tagName":"h2"},{"title":"Routing Requests to the Correct Tenant","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-05-09-message-routing-for-multi-tenant","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Routing Requests to the Correct Tenant","url":"/docs/adrs/decisions/2023-05-09-message-routing-for-multi-tenant#context-and-problem-statement","content":" The Cloud Agent in multi-tenancy is still a single agent running, however, some of the resources are now shared between the tenants of the agent. Each tenant has their own keys, with their own DIDs, connections. Transports and most of the settings are still shared between agents. All the API endpoints are same from outside  Multi-tenancy, message routing can be used to ensure that messages are delivered only to the intended recipient or tenants, and not to unauthorized tenants.  Backend services: Cloud Agent use PostgreSQL. Authentication and authorization  sequenceDiagram autonumber actor H as Holder(DidComm) actor T as Tenant(Issuer) participant A as CloudAgent participant W as Wallet participant DB as Database[did &lt;- tenantId] T-&gt;&gt;A: Register Tenant activate A A-&gt;&gt;W: Create wallet activate W note over W: Each Tenant has his own wallet where keys and dids are stored W--&gt;&gt;A: tenantId deactivate W note over T, A: Subsequent requests include JWT header activate DB note over DB: did -&gt; tenantId or did -&gt; walletId T-&gt;&gt;A: Create PeerDID[JWT Header] A-&gt;&gt;A: authorised token extract tenantID alt JWT validation A--&gt;&gt;T: 200 OK &amp; JWT else No user A--&gt;&gt;T: 401 Unauthorized end T--&gt;&gt;A: If authorised Create PeerDID A--&gt;&gt;DB: Update [DID(PeerDID) -&gt; tenantID] A-&gt;&gt;H: send DIDCOMM message to holder did deactivate DB deactivate A activate H H-&gt;&gt;A: DIDCOMMV2 message to Agent(did) A--&gt;&gt;DB:lookup to Agent DID identify tenantId A--&gt;&gt;A:decrypt message deactivate H   ","version":"Next","tagName":"h2"},{"title":"Quill library for SQL statement generation and validation","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#context-and-problem-statement","content":" PostgreSQL is essential to the Identus platform technology stack, where most entities are stored.  Backend services: Identus Cloud Agent, Identus Mediator, and PRISM Node use PostgreSQL.  Doobie library is currently used in Scala code to communicate with Postgresql. Quotes from the website  Doobie is a pure functional JDBC layer for Scala and Cats. It is not an ORM, nor is it a relational algebra; it simply provides a functional way to construct programs (and higher-level libraries) that use JDBC doobie is a Typelevel project. This means we embrace pure, typeful, functional programming, and provide a safe and friendly environment for teaching, learning, and contributing as described in the Scala Code of Conduct.   Doobie is a good choice for DAL, and this ADR is about something other than replacing it.  Writing the SQL statement and mapping the row to the case class is a boilerplate and error-prone activity that the Quill library can optimize.  Writing the code for mapping a table row to a case class and writing the low-level SQL statement is an error-prone and boilerplate thing  Using the Quill library on top of Doobie can optimize and improve these things.Quote from the website:  Quill provides a Quoted Domain Specific Language (QDSL) to express queries in Scala and execute them in a target language. The library‚Äôs core is designed to support multiple target languages, currently featuring specializations for Structured Query Language (SQL) and Cassandra Query Language (CQL). 1. Boilerplate-free mapping: The database schema is mapped using simple case classes. 2. Quoted DSL: Queries are defined inside a quote block. Quill parses each quoted block of code (quotation) at compile time and translates them to an internal Abstract Syntax Tree (AST) 3. Compile-time query generation: The ctx.run call reads the quotation‚Äôs AST and translates it to the target language at compile time, emitting the query string as a compilation message. As the query string is known at compile time, the runtime overhead is very low and similar to using the database driver directly. 4. Compile-time query validation: If configured, the query is verified against the database at compile time, and the compilation fails if it is not valid. The query validation does not alter the database state.   There are Slick and ScalikeJDBC libraries as well.  Comparison of these libraries is not a goal of this ADR, but it's essential to know the differences.  There are good references to take a look at in the Links section.  Overall, all libraries have differences in the following aspects:  Metamodel (how to define the schema and type mapping)Static SQL statement (how and where does the SQL statement is written/generated)Dynamic SQL statement (how and where does the dynamic SQL statement written/generated)Connection Management (thread and connection pooling)Asynchronous API (the high-level API to execute queries blocking or non-blocking)Asynchronous IO (is IO operation blocking or asynchronous)Effect library that is used (free-monad, Future, Task, ZIO)  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#decision-drivers","content":" Generate and validate SQL statement based on the convention-over-configuration approach in compile time (type-safe queries)Reduce boilerplate and error-prone codeEasy to write the dynamic queries  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#considered-options","content":" Doobie (Quill for the connection pooling, SQL statement execution, and SQL statement writing)Doobie + Quill (Quill for the connection pooling, SQL statement execution, and SQL statement writing + Quill for the SQL statement generation)Quill (Quill for the connection pooling, SQL statement execution, and SQL statement writing and generation)  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#decision-outcome","content":" Chosen option: &quot;Doobie + Quill&quot; because it's the simplest solution that requires minimal changes to the existing code and brings the benefits of automatic SQL statement generation and validation in compile time (see below).  ","version":"Next","tagName":"h2"},{"title":"Positive Consequences‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#positive-consequences","content":" convention-over-configuration approach for the generation and validation of SQL statements using macros in the compile timeeasy work with dynamic queriesbackward compatible solution (minimum changes are required for the current code base)  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#negative-consequences","content":" DTO case classes are required for each table to generate the SQL statement based on the convention  ","version":"Next","tagName":"h3"},{"title":"Pros and Cons of the Options‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#pros-and-cons-of-the-options","content":" ","version":"Next","tagName":"h2"},{"title":"Doobie‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#doobie","content":" Doobies library is used as it is right now without any changes  Good, because it is a solid FP library for PostgresqlGood, because it has good documentation and a large community of developers who contribute to the libraryGood, because it is built using Free Monad, which makes it composable and easy to integrate with any popular effects libraryBad, because it has a low-level API for writing the SQL statement (boilerplate and error-prone code)Bad, because it uses blocking IO at the network level  ","version":"Next","tagName":"h3"},{"title":"Doobie+Quill‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#doobiequill","content":" Doobie library is used as it is right now, and Quill library is used for SQL statement generation and validation in compile time  Good, because it ss a solid FP library for PostgresqlGood, because it has good documentation and a large community of developers who contribute to the libraryGood, because it is built using Free Monad, which makes it composable and easy to integrate with any popular effects libraryGood, because Quill library is used for SQL statement generation at the compile timeGood, because Quill library extends the current solution, and no changes to the code base are requiredBad, because the DTO case class must be created for each tableBad, because it uses blocking IO at the network level  ","version":"Next","tagName":"h3"},{"title":"Quill‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#quill","content":" Quill is used instead of Doobie  Good, because it is a solid FP library for PostgresqlGood, because it has good documentation and a large community of developers who contribute to the libraryGood, because it is built using Free Monad, which makes it composable and easy to integrate with any widespread effects libraryGood, because it is used for SQL statement generation at the compile time instead of using Doobie low-level APIGood, because it can be configured to use non-blocking IO at the network levelGood, because it get rid of the cats ecosystem that comes with doobie (simplify the dependency management)Bad, because significant refactoring of all DAL is requiredBad, because the DTO case class must be created for each table  ","version":"Next","tagName":"h3"},{"title":"Examples‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#examples","content":" ","version":"Next","tagName":"h2"},{"title":"Doobie‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#doobie-1","content":" import doobie._ import doobie.implicits._ import doobie.postgres._ case class Person(id: Int, name: String) val q = sql&quot;SELECT id, name FROM person WHERE id = 1&quot;.query[Person] val result: ConnectionIO[List[Person]] = q.to[List].transact(Transactor.fromDriverManager[IO]( &quot;org.postgresql.Driver&quot;, &quot;jdbc:postgresql:world&quot;, &quot;username&quot;, &quot;password&quot; ))   ","version":"Next","tagName":"h3"},{"title":"Quill‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#quill-1","content":" import io.getquill._ val ctx = new SqlMirrorContext(PostgresDialect, &quot;ctx&quot;) case class Person(id: Int, name: String) val q = quote { query[Person].filter(p =&gt; p.id == 1) } val result: List[Person] = ctx.run(q)   ","version":"Next","tagName":"h3"},{"title":"Slick‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#slick","content":" import slick.jdbc.PostgresProfile.api._ val db = Database.forConfig(&quot;database&quot;) case class Person(id: Int, name: String) val q = TableQuery[Person].filter(_.id === 1) val result: Future[Seq[Person]] = db.run(q.result)   Two more real example of Doobie and Quill usage are in the Links section‚Äã  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Quill library for SQL statement generation and validation","url":"/docs/adrs/decisions/2023-01-18-quill-library-for-sql-statement-generation#links","content":" Comparing Scala relational database access librariesComparison with AlternativesDoobie vs QuillSlick vs DoobieDatabase access libraries in ScalaTypechecking SQL queries with doobieTypechecking SQL in Slick and doobieDoobie example in the Pollux libraryQuill example in the Pollux library ","version":"Next","tagName":"h2"},{"title":"Mediator message storage","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Mediator message storage","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage#context-and-problem-statement","content":" Mediator storage Relational databases like PostgreSQL store data in structured tables, with rows and columns that help establish relationships between various tables and entities. SQL is used in PostgreSQL to save, retrieve, access, and manipulate the database data. While PostgreSQL may be ideal for managing structured data streams, it tends to struggle when dealing with big unstructured data, as maintaining such relations can increase time complexity significantly. Postgres SQL relies on relational data models that need to defined in advance Change in any field in table requires lengthy process of migration scripts run and to maintain but it works there are tools available and we also use it PrismAgent, But maintenance cost of software is higher.  Contrastingly, non-relational databases like MongoDB excel in these scenarios because data isn't constrained to a single table. This approach permits massive data streams to be imported directly into the system without the burden of setting up increasingly complex relationships and keys. MongoDB typically stores data within documents using JSON (JavaScript Object Notation) or BSON (Binary JavaScript Object Notation), which simplifies the handling of big data and complex data streams. document database supports a rapid, iterative cycle of development the way that a document database turns data into code. MongoDB is faster at inserting and for queries that use nested references instead of joins In Mediator the data which we send or receive is json message and to process json message we can avoid the unnecessary serialization and deserialization by having it stored in document database. Postgres SQL by default in vertically scalable where as Mongo can scale horizontally, This can help in scalability problem Mediator messages store in simple and straight forward write there is no transactional workflow involved so we don't gain much by using relational db like postgres.  Below are the 2 options which we can use to reduce infrastructure management MongoDB Atlas. Fully managed MongoDB in the cloud which can reduce the infrastructure management [https://www.mongodb.com/atlas/database]Amazon DocumentDB (with MongoDB compatibility) [https://aws.amazon.com/documentdb/]  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Mediator message storage","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage#decision-drivers","content":" DIDCOMM messages are json basedflexibility to store the dataReduce serialisation deserilisation of the dataEasy to write the json queriesscalabilitylow maintainance  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Mediator message storage","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage#considered-options","content":" PostgresSQL (Storing unstructured data (JSON) and quering data (JSON), scalability)MongoDB (Storing unstructured data (JSON) and quering data (JSON), scalability)Kafka Stream (Storing unstructured data (JSON) and quering data (JSON), scalability and streaming)  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Mediator message storage","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage#decision-outcome","content":" Chosen option: MongoDB because of storing unstructured json data and json queries that requires minimal changes to the existing code and provides the benefits for the current use cases. Is a NoSQL database that uses a document-oriented data model. Data is stored in a semi-structured format (BSON, similar to JSON), which can easily accommodate changes in data structure. This makes MongoDB particularly suitable for large volumes of data that may not be easily modeled in a relational schema. Kafka Stream was also considered but current usecases are more towards storage of the messages, streaming is not the usecase for all the scenarios and the mediator pickup protocol ([https://didcomm.org/pickup/3.0/]) requirements need the flexibily to delete the messages read.  ","version":"Next","tagName":"h2"},{"title":"Positive Consequences‚Äã","type":1,"pageTitle":"Mediator message storage","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage#positive-consequences","content":" flexility to store unstructured data in json formateasy work with storage of unstrutured data and json querieslow cost for with no sql migrations required.Uses a flexible, JSON-like query language. While this provides great flexibilityIs designed for easy horizontal scalability, which is achieved through sharding.  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences‚Äã","type":1,"pageTitle":"Mediator message storage","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage#negative-consequences","content":" Extra infrastructure and additional resource to be maintained  ","version":"Next","tagName":"h3"},{"title":"Pros and Cons of the Options‚Äã","type":1,"pageTitle":"Mediator message storage","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage#pros-and-cons-of-the-options","content":" ","version":"Next","tagName":"h2"},{"title":"MongoDB‚Äã","type":1,"pageTitle":"Mediator message storage","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage#mongodb","content":" MongoDB provides flexibility with json storage and queries  Good, because it is horizontally scalableGood, because typically performs better with large, unstructured datasets and write-heavy applicationsGood, because have strong communities and extensive support materials, so you can expect to find help when you encounter issues.Bad, Is not full ACID complianceBad, Doesn't natively support complex joins like a relational database  ","version":"Next","tagName":"h3"},{"title":"Refrences used‚Äã","type":1,"pageTitle":"Mediator message storage","url":"/docs/adrs/decisions/2023-05-15-mediator-message-storage#refrences-used","content":" [https://www.plesk.com/blog/various/mongodb-vs-postgresql/][https://www.dbvis.com/thetable/json-vs-jsonb-in-postgresql-a-complete-comparison/][https://severalnines.com/blog/overview-json-capabilities-within-postgresql/][https://www.mongodb.com/docs/manual/core/schema-validation/][https://www.mongodb.com/compare/mongodb-dynamodb][https://www.projectpro.io/article/dynamodb-vs-mongodb/826] ","version":"Next","tagName":"h2"},{"title":"Data isolation for multi-tenancy","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#context-and-problem-statement","content":" In a multi-tenant architecture, where multiple clients or tenants share the same infrastructure or application, data isolation is crucial to ensure the privacy and security of each tenant's data.  The specific requirements for data isolation may vary depending on the system and its specific needs. However, here are some common requirements for achieving data isolation in a multi-tenant architecture:  ","version":"Next","tagName":"h2"},{"title":"Logical Separation‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#logical-separation","content":" Tenants' data should be logically separated from each other, meaning that each tenant should have their own isolated environment within the system. This can be achieved through logical partitions, such as separate databases, schemas, or tables.  ","version":"Next","tagName":"h3"},{"title":"Physical Separation‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#physical-separation","content":" In addition to logical separation, physical separation can provide an extra layer of isolation. This involves segregating tenants' data onto separate physical resources, such as servers, storage devices, or networks. Physical separation helps prevent data leakage or unauthorized access between tenants.  ","version":"Next","tagName":"h3"},{"title":"Access Controls‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#access-controls","content":" Robust access controls should be implemented to restrict access to each tenant's data. This includes authentication mechanisms to verify the identity of users or applications accessing the data and authorization rules to define what actions they are allowed to perform. Each tenant's access should be limited to their own data and not extend beyond their boundaries.  ","version":"Next","tagName":"h3"},{"title":"Hierarchical deterministic key generation algorithm","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#context-and-problem-statement","content":" The Identus Platform must provide the hierarchical deterministic (HD) key derivation algorithm for the identity wallets managed by the platform (Cloud Agent and SDKs)  HD key derivation can be used for both managed and unmanaged solutions. In both cases, the key material is created from the seed.  In the case of a managed solution, the keys are created by the Agent or SDK and stored in the secured storage that is managed by the Identus platform.  In the case of an unmanaged solution, the key material is created by the tools (for instance, identus-cli) following similar rules, and is stored on the client side in the secret storage managed by the client.  We are going to be using different derivation implementations for secp256k1 and ed25519.  ","version":"Next","tagName":"h2"},{"title":"Out of the Scope‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#out-of-the-scope","content":" ","version":"Next","tagName":"h2"},{"title":"did:peer‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#didpeer","content":" DID peer key material derivation is out of the scope of this ADR, so this type of DIDs is created dynamically from the secure random  ","version":"Next","tagName":"h3"},{"title":"Recovery Procedure‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#recovery-procedure","content":" Key material recovery procedure is out of the scope of this ADR, but the main idea is the following: having a seed and the latest versions of the DID Documents published on-chain it is possible to recover all the key materials related to the latest state of the identity wallet related to DIDs.  ","version":"Next","tagName":"h3"},{"title":"Implementation details‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#implementation-details","content":" The HD key derivation algorithm is a part of the Apollo building block, the choice of the programming language is up to the engineering team.  ","version":"Next","tagName":"h3"},{"title":"Secure Storage‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#secure-storage","content":" Secure store implementation is a matter of another ADR. By now, the Hashicorp Vault is going to be used by the Identus platform by default.  ","version":"Next","tagName":"h3"},{"title":"Backward Compatibility with the PRISM v1.4‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#backward-compatibility-with-the-prism-v14","content":" The current decision doesn't have backward compatibility with the PRISM v1.4, but it can be mitigated by switching to the unmanaged way of key management for the DIDs created in v1.4 or by implementing the backward compatibility module in the Identus Platform  ","version":"Next","tagName":"h3"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#decision-drivers","content":" Deterministic key derivation for the Identus Platform and in all components: Cloud Agent (JVM), Identity Wallets (Android, iOS, Web)Possibility to use the same seed value for crypto and identity wallets.Compliance with BIP32 specificationKey material migration between the walletsKey material recovery in case of disasterWe must use different derivation standards bip32 with secp256k1 and ed25519-bip32  ","version":"Next","tagName":"h2"},{"title":"Considered Option‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#considered-option","content":" Implement the HD key derivation algorithm according to the research spike for all the components of the Identus Platform. The derivation path contains the following segments/layers:  m/wallet-purpose'/did-method'/did-index'/key-purpose'/key-index'  wallet purpose is used to distinguish the wallet purpose for the identity wallet and is a constant for the Identus platform 0x1D, which looks like ID  did-method - the DID method that the key will be generated for. The value of did-method should be registered. The following are available values for the did-method:  PRISM DID method - 0x1d  did-index - the index of the DID, it's possible to create  key-purpose - the purpose of the key associated with the DID. There are the following available values for the key purpose:  master key 1 - is the most privileged key type, when any other key is lost, you could use this to recover the othersissuing key 2 - is used for issuing credentials only, it should be kept in a safe place to avoid malicious credentials being issued.key-agreement key 3 - is used to establish a shared symmetric key for secure end-to-end communication, use this key type to encrypt the content.authentication key 4 - is used to authenticate requests or log into services.revocation key 5 - is used for revoking credentials only, it should be kept in a safe place to avoid malicious credentials being issued.capability-invocation key 6 - is used to specify a verification method that might be used by the DID subject to invoke a cryptographic capability, such as the authorization to update the DID Document.capability-delegation key 7 - is used to specify a mechanism that might be used by the DID subject to delegate a cryptographic capability to another party, such as delegating the authority to access a specific HTTP API to a subordinate.  key-index - the index of the key pair  In order to generate key material (private and public keys):  Secp256k1 ellipstic curve will be used with standard bip32 derivationCurve25519 (Ed25519) will be used with the standard bip32 implementation for ed25519Future implementations will require their own implementations of the derive function, and very potentially at some point we may want to rework bip32 implementation to make it more agnostic, because a high percentage of the code is going to be the same.  Seed entropy must be used for the HD algorithm is 256 bits which corresponds to 24 words mnemonic  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#decision-outcome","content":" The PRIMS platform uses HD key derivation algorithm for managed and unmanaged solutions based on the research spike the current ADR.  ","version":"Next","tagName":"h2"},{"title":"Positive Consequences‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#positive-consequences","content":" deterministic key material derivation among all components of the Identus platformBIP32 compliance (for both secp256k1 and ed25519 with their corresponding implementations)key material migration capabilitykey material recovery capability  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#negative-consequences","content":" backward compatibility with the key material created by PRISM v1.4 version (can be mitigated by removing the wallet_purpose from the derivation path)  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Hierarchical deterministic key generation algorithm","url":"/docs/adrs/decisions/2023-05-16-hierarchical-deterministic-key-generation-algorithm#links","content":" Evaluation of Using a Single Mnemonic both for Cryptocurrency and Identity Wallets ","version":"Next","tagName":"h2"},{"title":"Data Encryption‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#data-encryption","content":" To protect data at rest and in transit, encryption techniques should be employed. This ensures that even if unauthorized access occurs, the data remains unreadable without the appropriate decryption keys. Encryption can be applied at various levels, including the application, database, or file system.  ","version":"Next","tagName":"h3"},{"title":"Tenant-Specific Configuration‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#tenant-specific-configuration","content":" Each tenant may have specific configuration requirements, such as custom data schemas, access controls, or data retention policies. The system should allow for flexible configuration options to accommodate these individual tenant needs while maintaining isolation.  ","version":"Next","tagName":"h3"},{"title":"Auditing and Logging‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#auditing-and-logging","content":" Comprehensive logging and auditing mechanisms should be in place to track and monitor access to tenants' data. This helps in detecting any unauthorized activities or potential breaches and provides an audit trail for forensic analysis if needed.  ","version":"Next","tagName":"h3"},{"title":"Data Backup and Recovery‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#data-backup-and-recovery","content":" Robust data backup and recovery processes should be implemented to ensure the availability and integrity of tenants' data. Regular backups should be taken and securely stored, with mechanisms in place to restore data in the event of data loss or system failures.  ","version":"Next","tagName":"h3"},{"title":"Performance and Scalability‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#performance-and-scalability","content":" Data isolation mechanisms should be designed to minimize performance impacts and provide scalability. The architecture should be able to handle increasing numbers of tenants and their data without sacrificing performance or compromising isolation.  ","version":"Next","tagName":"h3"},{"title":"Technology Stack‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#technology-stack","content":" The Identus platform heavily uses the relational database PostgreSQL. Even having the abstraction as a Data Access Layer (DAL), introducing the alternative solution implies a lot of engineering efforts for refactoring and is not recommended at the current phase of the platform development.  ","version":"Next","tagName":"h3"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#decision-drivers","content":" Logical Separation: Tenants' data should be logically separated from each other, meaning that each tenant should have their own isolated space within the system. This can be achieved through logical partitions, such as separate databases, schemas, tables or Row Security Policies (RSP in the PostgreSQL) Physical Separation: In addition to logical separation, physical separation can provide an extra layer of isolation. This involves segregating tenants' data into separate physical resources, such as servers, storage devices, or networks. Physical separation helps prevent data leakage or unauthorized access between tenants.  Logical and Physical Separations define the level of isolation for storage, connection pool, and computation resources: CPU, RAM, and Disk I/0.  Access Controls: Robust access controls should be implemented to restrict access to each tenant's data. This includes authentication mechanisms to verify the identity of users or applications accessing the data and authorization rules to define what actions they are allowed to perform. Each tenant's access should be limited to their data and not extend beyond their boundaries. Data Encryption: To protect data at rest and in transit, encryption techniques should be employed. This ensures that even if unauthorized access occurs, the data remains unreadable without the appropriate decryption keys. Encryption can be applied at various levels, including the application, database, or file system. Data encryption at rest and in transit is a matter of infrastructure configuration and shouldn't play a significant role in the following ADR. Tenant-Specific Configuration: Each tenant may have specific configuration requirements, such as custom data schemas, access controls, or data retention policies. The system should allow for flexible configuration options to accommodate these individual tenant needs while maintaining isolation. For simplification, in the scope of the following ADR, all tenants will not have the custom configuration, but it can be implemented by having one of the following physical separations, such as separated schemas or instances of the database. Auditing and Logging: Comprehensive logging and auditing mechanisms should be in place to track and monitor access to tenants' data. This helps in detecting any unauthorized activities or potential breaches and provides an audit trail for forensic analysis if needed. Auditing and Logging should provide visibility if the tenant tried to access the data that don't belong to it and the basic statistic to determine resource unitisation by the tenant (requests/sec, request latency). Data Backup and Recovery: Robust data backup and recovery processes should be implemented to ensure the availability and integrity of tenants' data. Regular backups should be taken and securely stored, with mechanisms in place to restore data in the event of data loss or system failures. The current aspect corresponds to the SRE area and will not be taken into account in the following ADR and can be guaranteed by the infrastructure layer. Performance and Scalability: Data isolation mechanisms should be designed to minimize performance impacts and provide scalability. The architecture should be able to handle increasing numbers of tenants and their data without sacrificing performance or compromising isolation. The Complexity of the Implementation: It's essential to build the multi-tenancy capability for the Identus platform without the introduction of unnecessary complexity at the application layer, operation layer, and maintenance, in a way that allows evolving the platform naturally along with the growth of the users, scalability requirements, and real business needs.  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#considered-options","content":" All considered options are built using the PostgreSQL database  Row Security Policies (RSP) - Shared Database, Shared Schemas, Shared Tables, Separate RowsTable per Tenant - Shared Instance, Shared Database, Shared Schemas, Separate TablesSchema per Tenant - Shared Instance, Shared Database, Separate SchemasDatabase per Tenant - Shared Instance, Separate DatabaseInstance per Tenant - Separate Instance,Citus extension (sharding) - Sharded InstancesAWS (sharding) - Sharded Instances  The first five options are the common architecture patterns for multi-tenancy built using PostgreSQL  The level of isolation grows up from the 1st to the 5th option  The maintenance cost grows up from the 1st to the 5th option  The infrastructure cost grows significantly using the 5th option  Sharding options (Citus extension and AWS sharding) must be used with the combination of one of the first five options to provide the scalability and performance aspects by sharding the instances of the database. These options must be considered for SaaS solutions when the number of tenants grows to millions and cannot be managed by a single instance of the database because of resource constraints: disk space, CPU, RAM, disk I/O, and network I/O.  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#decision-outcome","content":" The Row Security Policies option is the easiest for implementation at the current phase of the Identus platform development. A single instance of the PostgreSQL database can keep the data and handle requests of hundreds of thousands of tenants leveraging the Row Security Policies without additional operation and infrastructure costs.  At the same time, the Cloud Agent architecture can support Instance per Tenant or Database per Tenant configuration by isolating the DAL under the repository interface. So, these options also can be considered for organizations with a lot of tenants to provide better isolation and data protection guarantees. These two options are excellent for a group of tenants under a single organisation or can be considered for tenants that require geographical separation of data, but should not be used for a single tenant.  Moreover, for the SaaS application to manage thousands of organizations and millions of tenants, the Row Security Policies option will not be enough because of the resource limitations and amount of requests to the database. In this case, one of the PostgreSQL sharding options is required together with Row Security Policies. So, either Citus extension or Amazon RDS sharding should be used. Citus extension is a preferred way for an on-premise environment, but, it probably, can be used in AWS as well.  ","version":"Next","tagName":"h2"},{"title":"Out of the Scope‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#out-of-the-scope","content":" Access Controls - must be enforced by the access control at the application level by implementing a policies enforcement point (PEP) and resolving the tenant.Auditing and Logging - must be implemented at the application layer, but basic statistics can be implemented at the database level (by using triggers on the tables)Performance and Scalability - are not covered by this option and must be implemented on top of it. Performance and Load tests at the particular infrastructure configuration must be performed in order to know the limitations of the PostgreSQL instance.  ","version":"Next","tagName":"h3"},{"title":"Positive Consequences‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#positive-consequences","content":" Logical Separation - PostgreSQL RSP allows to separate of the tenant data at the database level end and enforces the ACL using the policiesThe Complexity of the Implementation - this option can be implemented on top of the current codebase without significant refactoring of the codebase and additional work for infrastructure engineers.  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#negative-consequences","content":" Physical Separation - is not covered by this option  ","version":"Next","tagName":"h3"},{"title":"Pros and Cons of the Options‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#pros-and-cons-of-the-options","content":" ","version":"Next","tagName":"h2"},{"title":"Row Security Policies (RSP)‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#row-security-policies-rsp","content":" In addition to the SQL-standard privilege system available through GRANT, tables can have row security policies that restrict, on a per-user basis, which rows can be returned by normal queries or inserted, updated, or deleted by data modification commands. This feature is also known as Row-Level Security. By default, tables do not have any policies, so if a user has access privileges to a table according to the SQL privilege system, all rows within it are equally available for querying or updating.  Having the Wallet abstraction and the tenantId that is resolved from JWT issued by PEP, it's possible to logically isolate the rows of the table in the database.  Good, because logical isolation is performed at the application and database layerGood, because it's easy to implement based on the current architectureGood, because no additional overhead for DevOps engineersGood, because the migration is going to be executed within the same time as for the single tenant solutionGood, because the cost of the solution is going to be the same as for single-tenantBad, because noisy neighbors issue might occur when some tenant is actively using the Wallet and occupies the resourcesBad, because it might not fit the clients that require a higher level of data isolation.  ","version":"Next","tagName":"h3"},{"title":"Table per Tenant and Schema per Tenant‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#table-per-tenant-and-schema-per-tenant","content":" In this option, the data are logically isolated either in the table or the schema that belongs to the tenant.  For each Wallet abstraction, the tenant must have the table or the schema with the suffix as a tenantId and routing to the concrete tenant is resolved at the application layer.  Good, because logical isolation is performed at the application layerGood, because it's possible to implement it based on the current architecture (but more work is required compared to option 1)Good, because no additional overhead for DevOps engineersGood, because the cost of the solution is going to be the same as for single-tenantBad, because all isolation must be figured out at the application layer, so all components must use the same approach to the data isolationBad, because the migration time and maintenance complexity is going to grow with the number of tenantsBad, because noisy neighbors issue might occur when some tenant is actively using the Wallet and occupies the resources  ","version":"Next","tagName":"h3"},{"title":"Database per Tenant and Instance per Tenant‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#database-per-tenant-and-instance-per-tenant","content":" In this option, the data are physically isolated by using the database or the server instance per tenant. The logic for data isolation must be implemented at the application layer, so per each tenant, the table with the mapping of the tenant to the database or the instance must be configured.  Good, because of the physical data isolationGood, because of granular control over the resources per each tenant, so noisy neighbors issue will not happen in this optionBad, because the cost of running the additional database or server instance with grow with the number of tenantsBad, because the migration time and maintenance complexity is going to grow with the number of tenantsBad, because more work is required for engineers to implement this solution  ","version":"Next","tagName":"h3"},{"title":"Citus extension and AWS - Sharded Instances‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#citus-extension-and-aws---sharded-instances","content":" Current options must be applied for SaaS solutions with a high number of tenants which requires sharding of the databases.  Both options serve the same goal - horizontal scaling of the instances of PostgreSQL  The main advantages of Citus:  fits for on-premise deploymentsprovides additional monitoring and statistics to manage the tenantsrouting to the shard is managed by Citus using the hash of the table index (compared to AWS sharding option, the routing is done at the application layer and the system table contains the information about the mapping of the tenant to the instance of the database)  One of the previously described options should be implemented behind these options.  Good, because can manage millions of tenantsGood, because can manage the isolation (logical or physical bases on the configured mapping of the tenant to the database)Good, noisy neighbors issue can be monitored and solved (Citus)Bad, because additional work is required from engineersBad, because the cost of the solution is higher compared to the single-tenant  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Data isolation for multi-tenancy","url":"/docs/adrs/decisions/2023-05-18-data-isolation-for-multitenancy#links","content":" Strategies for Using PostgreSQL as a Database for Multi-Tenant ServicesMulti‚ÄëTenant Data ArchitecturePostgreSQL Row Security PoliciesSharding with Amazon Relational Database ServiceCitusdataCitusdata Multi-Tenant Applications ","version":"Next","tagName":"h2"},{"title":"DID-linked-resources","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources","content":"","keywords":"","version":"Next"},{"title":"Target‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#target","content":" Research Spike - Schema and Verifiable Presentation Registry  Provide a clear and concise analysis of the various schema registry implementation and the associated benefits and downfalls of each approach.Provide a concrete proposal for what we would like to implement for the Identus platform.Provide a generic way of storing and linking the resources for the DID in the Identus platform.  ","version":"Next","tagName":"h2"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#context-and-problem-statement","content":" Identus platform must be able to store and distribute the various resources such as credential schemas, logos, revocation status lists, and documents (aka any text, JSON, images, etc). But in the scope of the current ADR the following resource types are discussed:  credential schema (JSON and AnonCreds)credential definition (AnonCreds)revocation list  NOTE: Resources containing the PII must never be stored on-chain.  Requirements for storing and distributing resources:  Decentralization - resources must be stored in decentralized storageDiscoverability - it should be possible to discover the resourceLongevity - the ability of a storage solution to maintain the availability and integrity of stored resourcesInteroperability - it should be possible for other SSI systems to fetch the resourceTrust - resources must be stored in reliable tamper-proof storage and be trusted by other SSI systems  Other requirements, such as versioning, security and immutability are out of the scope of this ADR:  Versioning - is a specific requirement for the particular resource and belongs to the resource metadataSecurity - is an important aspect that must be taken into account by the underlying storage system and data access layerImmutability - is one of the strategies to guarantee trust and `decentralisation``, but it shouldn't be a requirement by itself.  The technical solution contains a lot of variations and particular small decisions but overall it can be split into two main questions:  where the resource is stored?how the resource is discovered and fetched?  ","version":"Next","tagName":"h2"},{"title":"Constraints‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#constraints","content":" ","version":"Next","tagName":"h2"},{"title":"Storage limitations‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#storage-limitations","content":" All decentralized storage (DLT or IPFS) has storage limitations, and the amount of data that can be stored is limited by the available storage capacity and the way how the resources are stored.  The following aspect must be taken into account for storing the resources in DLT:  transaction size limit (can be mitigated by data fragmentation, so the single resource is stored in multiple transactions) - 16KB, 32KB, 64KB, up to 1MB - depending on the type of the blockchainthroughput - bytes we can insert to storage per unit of timelatency - multi-second time per insertcost - each insertion costs fees  Based on the nature of the resource the size limitations must be considered.  For the following resource types and the common use cases 16KB should be enough, so it's possible to store these on DLT:  credential schemacredential definitionlogo in SVG formatMerkle Treedocumentation in the markdown format  For larger resource types IPFS or another option should be considered. Large resource examples:  media fileslarge documentslarge revocation status lists  IPFS doesn't have a size limitation (it's limited by the underlying storage or the particular SDK) and requires additional infrastructure and incentives (the way to pay for the storage) from the community.  IPFS can be used for storing the resources, but it should be covered in the scope of separated ADR.  ","version":"Next","tagName":"h3"},{"title":"Scalability‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#scalability","content":" While DLT and IPFS are designed for scalability, they can still face issues with scalability when it comes to storing SSI resources. As more users store their SSI resources on these platforms, it can become more difficult to scale the infrastructure to handle the increased demand.  To mitigate the scalability challenge the hybrid solution can be considered. In this case, the resource is stored in the centralized database or IPFS system, and the hash, signature or other metadata that guarantees the trust is stored on-chain.  Storing credential schemas, and logos, not large documents don't require the hybrid solution, so the use cases for it is out of scope in the current ADR.  Scalability issues also must be considered in the decision for linking the resources to the DID. For instance, the Cheqd solution keeps all the resources linked to the DID inside of the metadata of the DIDDoc which leads to growing the DIDDoc size after some period and an update of the DID Document when the new resource is published on-chain and linked to the DID.  ","version":"Next","tagName":"h3"},{"title":"Access control‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#access-control","content":" SSI resources stored in DLT and IPFS can be accessed by anyone who has access to the network.  This can be a security concern for organizations that need to control access to their SSI resources.  Access control also can be an issue for interoperability with other SSI systems.  The types of resources such as credential schemas, logos, and revocation lists should be available without additional access control.  ","version":"Next","tagName":"h3"},{"title":"Data privacy‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#data-privacy","content":" While DLT and IPFS are designed to be secure, there is still a risk that SSI resources stored on these platforms could be accessed or stolen by unauthorized parties.  This is especially concerning when it comes to sensitive personal information.  Personal data or any other sensitive information should not be stored on-chain and be available for unauthorized parties.  Credential schemas, documents, and logos usually do not contain personal data, so can be stored on-chain.  Revocation lists that are designed using privacy-preserving capabilities can be stored on-chain as well.  ","version":"Next","tagName":"h3"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#decision-drivers","content":" InteroperabilityTrustLongevityScalabilityDiscoverabilityVendor Lock  ","version":"Next","tagName":"h2"},{"title":"Storage‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#storage","content":" Choosing the right storage for resources is an architectural decision.  Companies that build SSI platforms usually use the underlying blockchain for storing the resources in a generic way and an API layer with an underlying centralized database and SDK for indexing, and access to the resources.  Usually, resources are stored efficiently (any binary format, protobuf, CBOR) on-chain to reduce the size and the cost of the operation.  The application layer that communicates with the underlying blockchain is used for publishing and retrieval of the resource. Based on concrete implementation, the resources can be decoded and indexed in the database and available via internal API, SDI, or Universal Resolver.  Storing resources off-chain also makes sense, but in this case, the longevity of the storage and an API layer is limited by the lifetime of the organization that published the resource. For this solution, trust can be achieved by signing the resource using the key of the DID stored on-chain. This solution is not fully centralized as the organizations have their infrastructure with the database.  ","version":"Next","tagName":"h2"},{"title":"Linking the resource to the DID‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#linking-the-resource-to-the-did","content":" Linking a resource to a DID means associating a specific resource with a DID and resolving the resource via the Universal Resolver or application API or SDK or finding it on-chain.  In all the considered solutions this is achieved using a DID document and the algorithm for discovery and resource dereferencing.  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#considered-options","content":" ","version":"Next","tagName":"h2"},{"title":"DID document linkedResources field‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#did-document-linkedresources-field","content":" The particular resource must be available via URL and the metadata of the resource are described in the linkedResources array.  Example:  { &quot;@context&quot;: &quot;https://w3id.org/did/v1&quot;, &quot;id&quot;: &quot;did:example:123456789abcdefghi&quot;, &quot;publicKey&quot;: [{ &quot;id&quot;: &quot;did:example:123456789abcdefghi#keys-1&quot;, &quot;type&quot;: &quot;Ed25519VerificationKey2018&quot;, &quot;controller&quot;: &quot;did:example:123456789abcdefghi&quot;, &quot;publicKeyBase58&quot;: &quot;7dNN1A8H4DwPU1h4btvohGadnbx8sHF2U6XJU6vLBBfA&quot; }], &quot;linkedResources&quot;: [{ &quot;url&quot;: &quot;https://example.com/credentialschema/123&quot;, &quot;type&quot;: &quot;CredentialSchema&quot;, &quot;name&quot;: &quot;DrivingLicense&quot; }] }   Positive Consequences‚Äã  solution describes the simple way of linking the resources to the DID Document. This approach looks outdated and is not part of the did-core specification.  Negative Consequences‚Äã  The drawbacks of the solution:  interoperability: it is not a part of the DID-core specification anymore even if it is possible to find information about itinteroperability: the resource should be fetched by the application or SDKtrust: must be guaranteed by the underlying DLT, the DID document should have an anchor: hash, signature or Tx id that references to the DLTdiscoverability: information about the resource's metadata (author, version, content type) is absentscalability: DID document must be updated when a new resource is added, so the solution sacrifices scalability as the content of the DID document will grow  Out of the Scope‚Äã  longevity: should be guaranteed by the underlying DLT  ","version":"Next","tagName":"h3"},{"title":"DID document didDocumentMetadata -> linkedResourceMetadata (Cheqd ADR)‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#did-document-diddocumentmetadata---linkedresourcemetadata-cheqd-adr","content":" Each resource entry is a part of the collection and is described in the linkedResourceMetadata field.  The solution is described in the Cheqd ARD in the Links section of the current ADR  Example:  { &quot;didDocumentMetadata&quot;: { &quot;linkedResourceMetadata&quot;: [ { &quot;resourceURI&quot;: &quot;did:cheqd:mainnet:1f8e08a2-eeb6-40c3-9e01-33e4a0d1479d/resources/f3d39687-69f5-4046-a960-3aae86a0d3ca&quot;, &quot;resourceCollectionId&quot;: &quot;1f8e08a2-eeb6-40c3-9e01-33e4a0d1479d&quot;, &quot;resourceId&quot;: &quot;f3d39687-69f5-4046-a960-3aae86a0d3ca&quot;, &quot;resourceName&quot;: &quot;PassportSchema&quot;, // First version of a Resource called PassportSchema &quot;resourceType&quot;: &quot;CL-Schema&quot;, &quot;mediaType&quot;: &quot;application/json&quot;, &quot;created&quot;: &quot;2022-07-19T08:40:00Z&quot;, &quot;checksum&quot;: &quot;7b2022636f6e74656e74223a202274657374206461746122207d0ae3b0c44298&quot;, &quot;previousVersionId&quot;: null, // null if no previous version, otherwise, resourceId of previous version &quot;nextVersionId&quot;: null, // null if no new version, otherwise, resourceId of new version } ] } }   The solution is not fully interoperable with the SSI ecosystem, but it's probably the first successful specification that formalizes the DID-linked resources and the DID URL.  Cheqd's approach for linking the resources to the DID is not a part of the current version of DID specification. Even if it's possible to find some information about linkedResources and linkedResourceMetadata optional field of the DIDDoc in the cache of the search system or ChatGPT.  Looks like the ToIP specification is inspired by Cheqd's ADR.  Positive Consequences‚Äã  versioning of the resource, as metadata contains the references to the previous and next versioncollection definition is formalized and published on-chain and in the DID document, so all the resources are categorizeddiscoverability: URI is replaced with DID URL that allows discovering the resource using Internal and/or Universal resolvertrust: the checksum is provided, so it is possible to verify that the resource was not modified by 3rd party  Negative Consequences‚Äã  scalability: the DID document should be updated when the new resource is createdinteroperability: using the Universal Resolver is optional, so either SDK or internal application API must be used to fetch the resourcestandard: the linkedResourceMetadata field is not a standard part of the DID specification, so the application should be aware of how to deal with it  ","version":"Next","tagName":"h3"},{"title":"DID URL dereferencing (W3C specification)‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#did-url-dereferencing-w3c-specification","content":" The current solution is based on the dereferencing algorithm described in the DID-Resolution#dereferencing specification and describes how the DID resolver can dereference the resource linked to the DID. It does not describe where the resource is stored.  The main idea is an algorithm that allows using the DID URL and the information about the services in the DID Document that allows DID Resolver to compose the final resource URL and return the requested resource.  Dereference is performed by defining the service id and relativeRef params or path in the DID URL  NOTE:The service.type property is not taken into account in this flow. According to the did-core specification, the service type and its associated properties SHOULD be registered in the DID Specification Registries. So, defining and registering the schemaService or resourceService should be the next step to facilitate the interoperability of SSI systems.  Example 1: using service and relativeRef  The credential schema resource can be defined as a DID URL  did:prism:abcdefg?service=credentialschema&amp;relativeRef=%2Fcredentialschemas%2F123e4567-e89b-12d3-a456-426614174000   and the DID Document must have the service defined  { &quot;service&quot;: [ { &quot;id&quot;: &quot;did:prism:abcdefg#credentialschema&quot;, &quot;type&quot;: &quot;CredentialSchema&quot;, &quot;serviceEndpoint&quot;: &quot;https://agent.example.com/schema-registry&quot; } ] }   so, the Universal Resolver using the concrete DID resolver must dereference the resource as  https://agent.example.com/schema-registry/credentialschemas/F123e4567-e89b-12d3-a456-426614174000   and should return the instance of the credential schema  Example 2: is another variation but using service and path in the DID URL  did:prism:abcdefg/credentialschemas/123e4567-e89b-12d3-a456-426614174000?service=credentialschema   In this case, the DID Method may describe how the path should be resolved and the resource must be fetched.  Positive Consequences‚Äã  interoperability: the resource is resolved by the conformant DID resolver according to the specificationdiscoverability: the resource defined in DID URL is resolved and fetched dynamicallyscalability: the DID document is not updated for each new resource  Negative Consequences‚Äã  specification: for the particular cases when the path is used in the DID URL, the resolution behavior must be described in the DID Methodscalability: the algorithm contains 2 or 3 steps and the DID Document is always must be resolved in the first step  Out of the Scope‚Äã  trust, longevity, and technology stack are not specified in this solution  ","version":"Next","tagName":"h3"},{"title":"DID URL Dereferencing (Trust over IP specification - outdated)‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#did-url-dereferencing-trust-over-ip-specification---outdated","content":" ToIP specification is an analog of the W3C dereferencing specification and describes the convention for dereferencing the resources from the DID URL  The main idea is the same: use the DID URL and a combination of convention and the DID method to resolve the digital resource associated with the DID.  But instead of relying on the service and the relativeRef parameter, the ToIP spec is focused on the resource parameter - so, if the DID URL contains the resource parameter - it must return the resource.  Example:  did:example:21tDAKCERh95uGgKbJNHYp/some/path?resource=true did:example:21tDAKCERh95uGgKbJNHYp/some/longer/path?resource=json did:example:21tDAKCERh95uGgKbJNHYp/uuid:33ad7beb-1abc-4a26-b892-466df4379a51/?resource=ld+json did:example:21tDAKCERh95uGgKbJNHYp/resources/uuid:33ad7beb-1abc-4a26-b892-466df4379a51/?resource=cbor   The main disadvantage of this approach is that the logic for resolving and fetching the resource associated with the given DID URL completely relies on DID method specification (in the W3C variation it's just a convention and the algorithm for the resource resolution)  ToIP specification doesn't describe the details about the storage of the underlying resource. It might be DLT (blockchain or IPFS) or classic cloud or on-premise storage.  ","version":"Next","tagName":"h3"},{"title":"DID URL Dereferencing (Trust over IP specification - latest)‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#did-url-dereferencing-trust-over-ip-specification---latest","content":" The new specification for DID URL dereferencing is an improved specification with recommended Cheqd idea to publish the resource metadata in the DID Document.  The main difference with the previous specification is an introduction of parameters that can discover the resource (instead of using resource field only) and simplification of the Cheqd's approach by skipping the collection abstraction.  The DID Document refers to the associated resource via linked resource metadata.  The changes to the DID method are also required (described in the Verifiable Data Registry and DID Method Requirements)  The current status of the document is a draft, but it's going to be published in the did-core specification.  The list of resource parameters with descriptions is the following:  resourceUri (required): A string or a map that conforms to the rules of [RFC3986] for URIs which SHOULD directly lead to a location where the resource can be accessed from.resourceCollectionId (optional): A string that conforms to a method-specific unique identifier format.resourceId (optional): A string that conforms to a method-specific unique identifier format.resourceName (required): A string that uniquely names and identifies a resource. This property, along with the resourceType below, can be used to track version changes within a resource.resourceType (required): A string that identifies the type of resource. This property, along with the resourceName above, can be used to track version changes within a resource. Not to be confused with the media type. (TBC to add to DID Spec Registries)resourceVersionId (optional): A string that uniquely identifies the version of the resource provided by the resource creator as a tag.mediaType (required): A string that identifies the IANA-registered Media Type for a resource.created (required): A JSON String serialized as an XML DateTime normalized to UTC 00:00:00 and without sub-second decimal precision.checksum (optional): A string that provides a checksum (e.g. SHA256, MD5) for the resource to facilitate data integrity.previousVersionId (optional): The value of the property MUST be a string. This is the previous version of a resource with the same resourceName and resourceType. The value must be 'null' if there is no previous version.nextVersionId (optional): The value of the property MUST be a string. This is the previous version of a resource with the same resourceName and resourceType. The value must be 'null' if there is no previous version.  This specification describes many important aspects:  the list of the query parameters in the DID URL for dereferencing the resource and error messages,DID Method and VDR requirements, andDID Resolver requirements  Positive Consequences‚Äã  interoperability: the resource is resolved in a standard way according to the ToIP specification following W3C specification for DID URL dereferencingdiscoverability: the resource defined in DID URL is resolved and fetched dynamicallyscalability: compared to W3C specification, the DID Document is not required to fetch the resource, so instead of 2-3 steps (calls), the resource resolution should be completed in a single step. The behavior must be described in the DID Method and implemented by the DID resolver.trust: publishing the checksum of the resource inside of the DID Document allows other SSI system to check the resource validity.  Negative Consequences‚Äã  scalability: the specification is inspired by the Cheqd approach to store the linkedResourceMetadata inside of the DID Document. ToIP specification describes this functionality as optional (&quot;Through associating the resource with a DID Document, the DID Document may generate associated metadata about the resource&quot;)complexity: the specification is the most complex to fetch the resource, so it's not trivial to implement it for all DIDs in the SSI ecosystem.specification: the resolution logic of resources must be described in the DID method and implemented in the DID resolver. As a consequence of this approach, the solution must either communicate directly with the DLT or rely on the SaaS layer for fetching the resources.  Out of the Scope‚Äã  longevity, and technology stack are not specified in this solution but must be guaranteed by the underlying DLT  ","version":"Next","tagName":"h3"},{"title":"RootsID - Cardano AnonCreds (Implementation of ToIP at the Cardano stack)‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#rootsid---cardano-anoncreds-implementation-of-toip-at-the-cardano-stack","content":" RootsID adopted the AnonCreds specification to store the credential schema and credential definition on the Cardano blockchain.  Links to the implementation and the method description are in the #Links section for this ADR  It is a proof of concept implementation of ToIP specification of DID URL dereferencing for resolving the resources linked to the DID in TypeScript and Python using Blockfrost REST API to the Cardano blockchain. The Blockfrost SaaS middle layer is used for publishing and fetching the Tx from the Cardano blockchain.  The solution is limited to storing AnonCreds entities only but can be extended to store the general resources.  For more details, please refer to the source code.  As the solution is based on the latest ToIP specification, it derives all positive and negative consequences from the previous but contains the concrete implementation for the Cardano blockchain that solves the trust and longevity aspects of the technical solution.  Positive Consequences‚Äã  interoperability: the resource is resolved in a standard way according to the ToIP specification following W3C specification for DID URL dereferencingdiscoverability: the resource metadata is published in the DID Documenttrust &amp; longevity: is guaranteed by the underlying Cardano blockchaintechnology stack: the solution is leveraging Blockfrost REST API for communicating with the Cardano blockchaintechnology stack: the solution is stateless and is much cheaper in terms of the infrastructure costtechnology stack: the solution is implemented in Python and TypeScript (mobile platforms can use the same approach as well)  Negative Consequences‚Äã  scalability: the specification is inspired by the Cheqd approach to store the linkedResourceMetadata inside of the DID Documentthe convention for references and the logic must be carefully reviewed: schemaId in this solution is {didRef}/resources/{cardano_transaction_id}, so it doesn't refer to the id but to the Tx where everything else is stored (it's an interesting idea for a stateless design)resource metadata is built according to the ToIP specification but for AnonCreds entities only: credential schema and credential definition. technology stack: it doesn't fit to current platform, but can be used for inspiration.  ","version":"Next","tagName":"h3"},{"title":"Hyperledger AnonCreds‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#hyperledger-anoncreds","content":" According to the AnonCreds specification, such kinds of resources as credential schema and credential definition are stored on-chain. Indy blockchain is used by the Hyperledger technology stack.  The credential schema and definition are not signed by the issuer, but the transaction with the underlying resource is published by the issuer. So, the integrity of the resource is guaranteed by the fact that it's published inside of the transaction signed by the issuer.  Example of the credential schema transaction:  { &quot;txn&quot;: { &quot;data&quot;: { &quot;data&quot;: { &quot;attr_names&quot;: [ &quot;birthlocation&quot;, &quot;facephoto&quot;, &quot;expiry_date&quot;, &quot;citizenship&quot;, &quot;name&quot;, &quot;birthdate&quot;, &quot;firstname&quot;, &quot;uuid&quot; ], &quot;name&quot;: &quot;BasicIdentity&quot;, &quot;version&quot;: &quot;1.0.0&quot; } }, &quot;metadata&quot;: { &quot;digest&quot;: &quot;06bf8a90335563826154700bf80003598932c8ffaffd4f3656fd8ed604bbb639&quot;, &quot;endorser&quot;: &quot;Ar1YzNwcM74M2Z4XKUWXMW&quot;, &quot;from&quot;: &quot;Y6LRXGU3ZCpm7yzjVRSaGu&quot;, &quot;payloadDigest&quot;: &quot;44e0181c9f9d5080434f9bf11801f1b0768a6b985195e14d56e5dab06fde0cb8&quot;, &quot;reqId&quot;: 1632381635230531300, &quot;taaAcceptance&quot;: { &quot;mechanism&quot;: &quot;at_submission&quot;, &quot;taaDigest&quot;: &quot;8cee5d7a573e4893b08ff53a0761a22a1607df3b3fcd7e75b98696c92879641f&quot;, &quot;time&quot;: 1632355200 } }, &quot;protocolVersion&quot;: 2, &quot;type&quot;: &quot;101&quot;, &quot;typeName&quot;: &quot;SCHEMA&quot; }, &quot;txnMetadata&quot;: { &quot;seqNo&quot;: 73904, &quot;txnId&quot;: &quot;Y6LRXGU3ZCpm7yzjVRSaGu:2:BasicIdentity:1.0.0&quot;, &quot;txnTime&quot;: &quot;2021-09-23T07:20:40.000Z&quot; } }   The resource (credential schema) in the current example can be discovered using Indy SDK by the following id:  Y6LRXGU3ZCpm7yzjVRSaGu:2:BasicIdentity:1.0.0   Technical details and flows are described in the AnonCreds specification.  Positive Consequences‚Äã  discoverability: the credential schema or any other resource is discovered using the Indy SDKscalability and longevity: are guaranteed by the underlying blockchain technologytrust: is achieved by underlying blockchain technology, the transaction with the resource contains the hashes and contains the digest, taaDigest, and payloadDigest fields  Negative Consequences‚Äã  interoperability: the current solution for storing the resources on-chain is coupled with the Indy blockchain and SDK (it will be mitigated by decoupling the AnonCreds specification from the Indy blockchain)vendor lock: the solution is tightly coupled to the Indy blockchain (it will be mitigated in the future by decoupling the Aries project from the underlying Indy blockchain)  Note: there is a new specification of the AnonCreds that is decoupled from the Hyperledger stack. The specification can describe more details about the resource publishing.  ","version":"Next","tagName":"h3"},{"title":"Trinsic Solution‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#trinsic-solution","content":" The Trinsic solution is built on top of the Hyperledger Aries platform on the Indy blockchain The main benefit is the Trinsic application layer that defines the domain models, entities, REST API and SDK for working with these.  The resource, such as credential schema, is stored on-chain, but the technical complexity and low-level details are hidden under Template and Template Service  Positive &amp; Negative Consequences‚Äã  Are similar to the Hyperledger AnonCreds solution  The main benefit of the Trinsic approach to storing resources is a good abstraction layer, documentation, REST API and a variety of supported programming languages in SDKs for dealing with underlying resources.  ","version":"Next","tagName":"h3"},{"title":"Solution #1 (W3C with dynamic resource resolution)‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#solution-1-w3c-with-dynamic-resource-resolution","content":" The solution for storing the resources linked to the DID depends on two decisions that are described in the Context and Problem Statement:  where the resource is storedhow the resource is discovered and fetched  Taking into account the advantages and disadvantages of the existing solutions the decision about the solution for the Identus platform might be the following:  -the resource is linked to the DID by convention specified in the W3C specification, so specifying the resource in the DID URL and defining the service endpoint that exposes the resource allows to discover and fetch the resource using the Universal Resolver  as an option, the same resource can be discovered and fetched by the Identus platform backend and SDK without loading the Universal resolverthe resource integrity must be guaranteed by one of the following options: by signing the payload with one of the DID's keys orby publishing the resource metadata that contains the information about the resource (id, type, name, media type, hash) on-chain orfor the resource that is less than the blockchain limitation (up to 64KB) by publishing the resource together with the hash, and/or signature the resource can be stored in the cloud storage - PostgreSQL database - for indexing and lookup API  As the Identus platform can leverage the Cardano blockchain and there is a strong requirement for longevity and security - the resource together with the signature and/or hash must be stored in the Cardano blockchain.  An example of this solution will be the following (concerning the current infrastructure and services):  prism-node must be able to store the generic resource payload, signature and/or hash on-chain and restore the given resource in the underlying database (PostgreSQL) for indexing and lookup APIcredential schema (or any other resource module) must be a part of the Atala SSI infrastructure and allow publishing the concrete resource as a generic resource using the prism-node APIexpose the API for discovery and fetching the resource by URLexpose the API for managing the resources (create, publish, lookup with pagination) the Universal Resolver for the DID Method must be able to discover and fetch the resource by DID URLis needed, SDK and backend services can fetch the resources directly (not via the Universal Resolver)  Example:  Given the credential schema with the signature:  { &quot;$id&quot;: &quot;driving-license-1.0&quot;, &quot;$schema&quot;: &quot;http://json-schema.org/draft-07/schema#&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;credentialSubject&quot;: { &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;datetime&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot; ], &quot;additionalProperties&quot;: true } } }, &quot;proof&quot;: { &quot;type&quot;: &quot;RsaSignature2018&quot;, &quot;created&quot;: &quot;2023-04-18T10:30:00Z&quot;, &quot;jws&quot;: &quot;eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20vY3JlZGVudGlhbHMvc3ViamVjdCIsInR5cGUiOiJWZXJpZmljYWxpY0NyZWRlbnRpYWwiLCJpc3N1ZXIiOiJodHRwczovL2V4YW1wbGUuY29tL2lzc3VlciIsImlzc3VlckRhdGUiOiIyMDIzLTA0LTE4VDEwOjMwOjAwWiIsImV4cGlyYXRpb25EYXRlIjoiMjAyNC0wNC0xOFQxMDowOTo1MFoiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6Imh0dHBzOi8vZXhhbXBsZS5jb20vY3JlZGVudGlhbHMvc3ViamVjdC9zdWJqZWN0IiwibmFtZSI6IkpvaG4gRG9lIiwic2lnbmF0dXJlIjoxMH19.OesuS6eC0gVh8SZpESM7Z4Yln9sGSsJHQ8s0LlcsD99H6_7U6vukUeT2_GZTtuTf9SwIfdtgViFTOfhzGTyM6oMGEeUJv6Umlh6TQ1fTm9XEDQV7JDBiaxRzV7S_vS6i&quot;, &quot;alg&quot;: &quot;RS256&quot; } }   In order to store it as a general resource on-chain, it should be binary encoded into CBOR format (or Base64 encoded string) and the metadata must be added to it.  For example, it might look like the following JSON object:  { &quot;id&quot;: &quot;f3d39687-69f5-4046-a960-3aae86a0d3ca&quot;, &quot;name&quot;: &quot;DrivingLicense-1.0&quot;, &quot;resourceType&quot;: &quot;CredentialSchema&quot;, &quot;mediaType&quot;: &quot;application/json&quot;, // MIME Type of the resource &quot;data&quot;: &quot;SGVsbG8sIHdvcmxk&quot;, // base 64 encoded or CBOR file &quot;did&quot;: &quot;did:prism:abdcefg&quot;, // the DID reference to link the resource to the DID and create the anchor to the DID }   ... and published on the Cardano blockchain as a payload of the AtalaOperation object, so can be retrieved from the blockchain and added to the indexed database for resolution by the REST API  Given there is an Agent or CredentialSchema service that exposes the REST API for fetching the credential schema by ID (in the current implementation it corresponds to the Cloud Agent /schema-registry/credential-schema/{uuid}, but later might be changed to /credential-schema/{didRef}/{id}?version={version} )  So, the services of the Identus platform and SDKs can resolve the given schema by URL and use the convenient lookup API with filtering and pagination to manage the credential schema in the Web application.  To define the schemaId in the message of Issue Credential and Present Proof protocols the following DID URL can be used:  did:prism:abcdefg1234567890?service=credentialschema&amp;relativeRef=%2Ff3d39687-69f5-4046-a960-3aae86a0d3ca   The version is skipped as for resolving the single resource we don't need a version parameterf3d39687-69f5-4046-a960-3aae86a0d3ca - is a unique identifier that is derived from the triple: didRef, id and version.  So, having the following service endpoint definition in the DID Document:  { &quot;service&quot;: [ { &quot;id&quot;: &quot;did:prism:abcdefg#credentialschema&quot;, &quot;type&quot;: &quot;CredentialSchemaService&quot;, &quot;serviceEndpoint&quot;: &quot;https://agent.example.com/schema-registry/schemas&quot; } ] }   And having the logic for dereferencing the DID URL in the PRISM DID Resolver, any system in the SSI ecosystem can fetch this resource and validate its authorship.  Storing resources larger than 64KB is out of the scope of this ADR. These must be stored in a slightly different way, for instance, the image ~10MB, can be stored and linked to the DID Document in the following way:  the image is stored in the cloud database in a binary formatthe metadata and the hash of the image are stored on-chainoptionally, the signature of the owner DID can be generated for the payload and stored together with the hashto prove the integrity of the image file, the hash of the binary representation must be the same and/or the signature must be verifiedthe resource can be fetched in the same way and the credential schema from the previous example  Positive Consequences‚Äã  discoverability: the credential schema or any other resource is discovered using the Universal Resolverscalability: the size of DID document doesn't grow when a new resource is added, the number of the resources is limited by the scalability of the underlying database and the blockchainlongevity: for the resource that can be stored on-chain the longevity is 100% guaranteed by the underlying blockchain technologytrust: is achieved by cryptography and the underlying blockchain technology, the transaction with the resource contains the hashes and the signatures that can be verifiedinteroperability: any system that uses Universal Resolver can fetch the resource by dereferencing the DID URL (following the W3C specification)vendor lock: by publishing the specifications and the algorithms for fetching the data, the resource can be resolved by any other SSI system  Negative Consequences‚Äã  longevity: for the resource that can not be stored on-chain because of the large size longevity is guaranteed by the cloud recovery procedures and data backup. As an option for mitigating this problem, the resource can be stored in IPFS (additional ADR is required for this)vendor lock: the solution is coupled to the Cardano blockchain  NOTE: one of the main concerns of this ADR is storing the resources on-chain because of size limitation, throughput, latency and cost. This option allows to postpone this decision and implement the DID-linked resources without the need of storing resources on-chain.    ","version":"Next","tagName":"h3"},{"title":"Solution #2 (ToIP specification implementation)‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#solution-2-toip-specification-implementation","content":" ToIP specification can be used to implement the resource resolution. To implement it the following things are required:  specify in the DID method the logic of resolution of the resources from the DID URLspecify the service mapping in the DID method and implement the resource resolution logic in the DID resolveradd didDocumentMetadata.linkedResourceMetadata field to the DID method and implement the logic in the VDR layerimplement the service layer according to the ToIP specification  ToIP solution specifies the requirements to the VDR (blockchain) that is not easy to achieve with the current implementation of the Identus platform. According to this specification, the Universal Resolver must have the direct access to the blockchain or use a centralized layer for fetching the resources over REST API. Before implementing this specification is the Identus platform we need to answer the following questions:  who is hosting the prism-node infrastructure for the Universal Resolver and how it's managed?should we make the PRISM DID Method responsible for resource resolution logic?  Positive Consequences‚Äã  interoperability: the resource is resolved in a standard way according to the ToIP specification following W3C specification for DID URL dereferencingdiscoverability: the resource defined in DID URL is resolved and fetched dynamicallyscalability: compared to W3C specification, the DID Document is not required to fetch the resource, so instead of 2-3 steps (calls), the resource resolution should be completed in a single step. The behavior must be described in the DID Method and implemented by the DID resolver.  Negative Consequences‚Äã  complexity: the solution is complex and over-engineered. A lot of components and flows must be defined to fetch the resource.specification: current approach might be changed as it's still in the draft status, so implementing it is risky  ","version":"Next","tagName":"h3"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#decision-outcome","content":" Each option has technical challenges and limitations, but it's possible to define the following decisions as an outcome:  the resource MUST be stored on-chain to guarantee trust and longevity aspects, for the Identus platform it is the Cardano blockchainthe resource SHOULD be indexed for quick lookup over the APIthe resource CAN be referenced in the DID Document for additional discoverabilitythe resource MUST be dereferenced from the DID URL according to W3C or ToIP specification and implementationthe resource resolution CAN be described in the DID Method (for the dynamic resource linking and W3C dereferencing algorithm it's not required)the complexity of the solution SHOULD be adequate to the original goal: get the resource linked to the DIDthe solution SHOULD be scalablethe solution MUST be interoperable and easily adopted by the SSI ecosystem  The solution option #1 is considered a good option as it satisfies the requirements and the majority of the negative consequences are mitigated. The following comparison table is a summary of the available options.  Option\tSimplicity\tTrust\tScalability\tInterop\tDiscoverability\tDecentalisationlinkedResources field\t‚ûï\t‚úîÔ∏è\t‚ûñ\t‚ûñ\t‚ûï\tN/A linkedResourceMetadata (Cheqd)\t‚ûñ/‚ûï\t‚úîÔ∏è\t‚ûñ/‚ûï\t‚ûï\t‚ûï\t‚úîÔ∏è DID URL Dereferencing (W3C specification)\t‚ûï\tN/A\t‚ûï\t‚ûï\t‚ûñ\t‚úîÔ∏è DID URL Dereferencing (ToIP specification)\t‚ûñ\t‚úîÔ∏è\t‚ûï/‚ûñ\t‚ûï/‚ûñ\t‚ûï\t‚úîÔ∏è RootsID - Cardano AnonCreds\t‚ûï\t‚úîÔ∏è\t‚ûï/‚ûñ\t‚ûï\t‚ûï\t‚úîÔ∏è Hyperledger AnonCreds\t‚ûï\t‚úîÔ∏è\t‚ûï\t‚ûñ\t‚ûñ\t‚úîÔ∏è Trinsic\t‚ûñ\t‚úîÔ∏è\t‚ûï/‚ûñ\t‚ûñ\t‚ûñ\t‚úîÔ∏è Solution #1 W3C\t‚ûï\t‚úîÔ∏è\t‚ûï\t‚ûï\t‚ûñ\t‚úîÔ∏è Solution #2 ToIP\t‚ûñ\t‚úîÔ∏è\t‚ûñ/‚ûï\t‚ûï/‚ûñ\t‚ûï\t‚úîÔ∏è    Each option reviewed in this ADR is a composition of the following architectural decisions:  the resource is stored on-chain or off-chainthe VDR layer is managed or unmanaged (for instance, leveraging the Blockfrost REST API can simplify the solution, but might be expensive at scale)domestic or official (W3C/ToIP specification implementationstatic/dynamic resource discoverability (is resource metadata stored in the DID Document or not)DID URL dereferencing algorithm and naming conventionlevel of trust: Tx signature, resource hash, resource signaturedecentralized or SaaS solutionSDK, Universal Resolver or REST API for fetching the resource  The main benefits of option #1 for the Identus platform are the following:  the resource is stored on-chainthe resource is published and indexed by the managed VDR layer (prism-node)the resource is available via REST API &amp; SDK for the product-level applicationsthe resource is dereferenced via the DID URL in the DID resolverthe resource is linked to the DID dynamically (using DID URL + dereferencing algorithm)this solution is scalable and decentralized (anyone can deploy the Identus stack)level of trust can be guaranteed by the underlying VDR and enforced by hashes or signatures of the resource  ","version":"Next","tagName":"h2"},{"title":"Links‚Äã","type":1,"pageTitle":"DID-linked-resources","url":"/docs/adrs/decisions/2023-04-05-did-linked-resources#links","content":" Our Approach to DID-Linked ResourcesContext for Developing DID-Linked ResourcesADR 002: DID-Linked ResourcesHyperledger Anoncreds - Schema Publisher: Publish Schema ObjectToIP - DID URL Resource Parameter SpecificationToPI - DID-Linder Resources SpecificationDID-Core#did-parametersDID-Resolution#dereferencingRootsID AnonCreds MethodsRootsID Cardano AnonCreds repo ","version":"Next","tagName":"h2"},{"title":"Apollo as centralised and secure cryptography management module","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#context-and-problem-statement","content":"   ","version":"Next","tagName":"h2"},{"title":"1. Summary‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#1-summary","content":" This proposal sets out to crystallize a long-term plan for Identus' cryptographic functionality. Rather than constructing an entirely new cryptographic functionality, our focus is on integrating robust, secure and tested libraries, meeting several key requirements in the process.  By leveraging the flexibility of Kotlin Multiplatform, this library will ensure strong, provable security, centralized management of all cryptography, easy upgrades, and efficient code reuse across multiple platforms.  A significant additional advantage of our chosen framework, particularly for the JavaScript version of this library, is the future potential to export to WebAssembly (WASM).    ","version":"Next","tagName":"h3"},{"title":"2. Introduction‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#2-introduction","content":" This proposal outlines a comprehensive plan to develop a cryptographic library using Kotlin Multiplatform. This library will meet our defined requirements and strategically position us for future technological advancements.  2.1 Provable Security‚Äã  Our cryptographic library will provide engineers with high assurances of security. This will be accomplished by using cryptographic primitives that are secure, with this security being provable through rigorous mathematical proofs. Documentation will accompany these proofs to offer transparency and enable a deeper understanding of the underlying logic and assurances.  2.2 Centralized Cryptography Management‚Äã  We propose the creation of a cryptographic library that serves as the central management hub for all cryptographic operations within the Identus platform. By preventing &quot;DIY&quot; implementations, we decrease potential vulnerabilities and establish a standard, thus enhancing overall security across our organization.  2.3 Easy Upgrade Path‚Äã  In light of emerging cryptographic needs such as the introduction of quantum-resistant cryptography, our library will be designed with easy upgrades in mind. Its modular design will allow for the seamless introduction of new cryptographic primitives as they become necessary or advisable. This adaptability will ensure that cryptographic upgrades across all of Identus' components are consistent and efficient.  2.4 Code Reusability‚Äã  Our library will make the most of Kotlin Multiplatform's capabilities for code reuse across different platforms. We aim to design cryptographic functions that promote this potential, thus minimizing the development effort required for adding new functionality or adapting to different platforms.    ","version":"Next","tagName":"h3"},{"title":"3. Advantages of Kotlin Multiplatform‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#3-advantages-of-kotlin-multiplatform","content":" Choosing Kotlin Multiplatform for this project affords us several advantages, notably its potential to export to WASM. Not only this stack, but it significantly enhances the utility and versatility of our library, especially for our JavaScript version. While other languages like Rust offer similar capabilities, the use of Kotlin Multiplatform aligns more closely with our resource allocation and current technological strategy.    ","version":"Next","tagName":"h3"},{"title":"4. Trade Offs‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#4-trade-offs","content":" The trade-off gap analysis does not come from the debate between having 1 single language (agnostic) or multiple native platform implementations as this discussion could end super quickly by just reading the 4 points in the Introduction section (Easy upgrade path, code reusability).  The real debate is between choosing the right language that suits us best. We have been analyzing the potential use of Rust or KMM to build the Apollo module.  4.1 Advantages of KMM‚Äã  Easier to have same interface for the cryptographic functionalities in all platforms Single Unit test suit to verify platform compatibility between platforms Version lock for supported library versions Less pron to compatibility errors between platforms When a new Platform is added to KMM we can easily test and verify with our code quality standards, if it passes we can add a new platform support  4.2 Disadvantages of KMM‚Äã  KMM is very powerful but still has some issues the more complex the project is, in Apollo it should be quite straightforward High dependency on a single point of failure (This can be advantage and disadvantage)  4.3 Advantage of KMM against rust‚Äã  KMM in this situation has great advantageous against Rust It might be more difficult to find libraries in Rust that can do all we require for all the platforms. Testing would not be so straightforward and By platform. It would instead run only on the platform that is building the code. Uniffi doesnt work for all platforms we provide, so some wrappers would have to be written by hand with C bindings (Not safe and very error pron)    ","version":"Next","tagName":"h3"},{"title":"5. Implementation Details‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#5-implementation-details","content":" We have established several key requirements for our team:  Ownership of Apollo and its roadmap is clearly defined. If any issues, doubts, or concerns arise or if any decisions need to be made about the roadmap, tech debt, or any other related aspects, stakeholders know who to contact. We aim to rebuild the current implementations into a more robust system rather than re-using old code from 1.4. Anyone inquiring about the features or algorithms we support will have a clear and accessible resource to answer their questions. We plan to provide a complete list of features that Apollo offers, document them, and make this information accessible to everyone. Apollo will fully document its public APIs in terms of cryptography, compliance, supported algorithms, and key curves. While TypeScript could temporarily survive without WASM, we would significantly benefit from offering native performance for cryptographic libraries through WASM for browsers. Apollo will be tested using best practices, and over time we aim to raise the minimum test coverage threshold. Best practices and quality assurance will be addressed in a collaborative way between Cryptography and engineering, Cryptography engineers will be in charge of making sure our security is robust enough and properly tested and potentially helping us drive unit testing better.    ","version":"Next","tagName":"h3"},{"title":"6. Definition of Done‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#6-definition-of-done","content":" In order to consider this completed or done the existing SDK's must have integrated with this new Module.    ","version":"Next","tagName":"h3"},{"title":"7. Implementation plan‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#7-implementation-plan","content":" Initial Phase: We will establish clear ownership of Apollo and announce it to the rest of the team. From this point forward, the SDK team will take charge of these tasks. This step will facilitate decision-making and clarify who to contact regarding various issues and understanding the roadmap. Phase 1: We will implement wrappers around basic and required functionality for secp256k1, ed25519, and x25519 (generating keyPairs, signing and verifying). We aim to standardize the interface and ensure that it exposes all the functionality that the SDKs need to work. Implementation phase: Phase1 will be by then fully documented, tested and available for other engineers to pick up on their platforms. Engineers will then replace that functionality that was done by third party packages in swift, kmm and typescript with the new Apollo package.    Implementation resources‚Äã  Engineer\tRole\tAvailabilityFrancisco Javier Rib√≥\tEngineering Lead + Developer\tPart time Yurii\tEngineering + CoreDID Integration Lead\tPart time Gon√ßalo Frade\tSDK Project Lead + Roadmap Lead + Developer\tPart time Alexandros Zacharakis Jesus Diaz Vico\tCryptography Engineers + Roadmap Lead\tPart time Ahmed Moussa\tKMM Lead / architect + Developer\tFulltime Cristian Gonzalez\tDeveloper\tFulltime Curtis HArding\tDeveloper\tPart time    ","version":"Next","tagName":"h3"},{"title":"8. Triage & future roadmap‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#8-triage--future-roadmap","content":" The main goal of this section is to describe the process where we choose what comes next in Apollo and how we take those decisions.  Comments  There is a risk of starting to add to Apollo &quot;anything that looks like cryptography&quot;. For instance, the Anoncreds part that takes care of formatting the credentials (which is what anoncreds-rs does) should not go into Apollo.But the underlying cryptographic functionality (for which anoncreds-rs calls libursa) should go into Apollo.Maybe something similar applies to HD wallets.  Owners of this triage process are the engineering + roadmap leads. Those will take decisions based on what has been defined here:  Provable SecurityCentralized Cryptography ManagementEasy Upgrade PathCode Reusability    ","version":"Next","tagName":"h3"},{"title":"9. Conclusion‚Äã","type":1,"pageTitle":"Apollo as centralised and secure cryptography management module","url":"/docs/adrs/decisions/2023-06-28-apollo-as-centralised-and-secure-cryptography-management-module#9-conclusion","content":" This proposed Kotlin Multiplatform cryptographic library will ensure that Identus remains at the forefront of secure digital operations by providing strong, provable security, centralized cryptographic management, easy upgradeability, and efficient code reuse. By addressing these critical constraints and harnessing the benefits of Kotlin Multiplatform, we are set to create a library that will set a new standard for cryptographic operations within the Identus platform. ","version":"Next","tagName":"h3"},{"title":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#context-and-problem-statement","content":" Prior to this Architectural Decision Record (ADR) and the related Value Brief, authentication (AuthN) and authorisation (AuthZ) for API consumers of an agent are implemented using a pre-shared key, supplied as an API token within each request header.  An agent can support a single-tenant only.  Each single-tenant agent is accessed via a shared API gateway layer (APISIX) that enforces a consumer restriction list. Only assigned consumers, identified through the pre-shared key, can access specific agent instances.  This authentication/authorisation mechanism poses a significant security risk. If the pre-shared key is leaked, we lack the means to detect its misuse by a nefarious actor, as there is no proof-of-possession mechanism or additional authentication factor in place.  In our Multi-tenant Value Brief, we propose modifications to the agent, enabling it to host multiple tenants within a single instance. Here, a tenant is defined as a unique set of private keys and configurations shared by multiple API consumers.  As we transition to multi-tenancy, several critical questions emerge:  How should the Cloud Agent authenticate, or verify the identities of, its API consumers?How should the Cloud Agent authorise a particular identity to use a specific instance of the agent?As the Cloud Agent becomes capable of hosting multiple tenants whose workloads must remain isolated, how should it become tenant-aware? That is, how should it determine which tenant an API consumer belongs to, and authorise them to manage and operate within that tenant?How can we mitigate the security risk associated with a leaked pre-shared key/token?&quot;  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#decision-drivers","content":" The complexity of the solution to implement, run and maintainAbility to offer solution as SaaS offering as well as self-hosted optionUse industry standard approaches for frictionless adoptionNot having to roll our own AuthN/AuthZ implementations [Engineering principle: build differentiating value]Ability to effectively mitigate pre-shared key security risk  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#considered-options","content":" All options use OIDC and the Client Credentials Grant flow which is suitable for machine-to-machine use.  We have not included an option where we write our own AuthN/AuthZ implementation. All options require an additional component to be added to the stack to store identity related data [Users, roles etc] and to potentially act as a Policy Decision Point (PDP), Policy Administration Point (PAP) and a Policyf Information Point (PIP).  ","version":"Next","tagName":"h2"},{"title":"Keycloak as AuthN/AuthZ‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#keycloak-as-authnauthz","content":" Keycloak with opaque tokens (without digital signatures)Keycloak with JWT tokens (without digital signatures)  ","version":"Next","tagName":"h3"},{"title":"Keycloak as AuthN, another system as AuthZ‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#keycloak-as-authn-another-system-as-authz","content":" Keycloak with JWT tokens and Open Policy Agent (OPA) (without digital signatures)  ","version":"Next","tagName":"h3"},{"title":"Digital Signatures/Proof of Possession‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#digital-signaturesproof-of-possession","content":" Keycloak with any token type with Demonstration of Proof of Possession (DPoP)Keycloak with any token type with a custom scheme using Decentralized Identifiers (DIDs)Keycloak with any token type using Mutual TLS (mTLS)  ","version":"Next","tagName":"h3"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#decision-outcome","content":" Chosen option: &quot;Keycloak with JWT tokens (without digital signatures)&quot;, because it provides a balance between security, complexity, and maintainability while using industry-standard approaches, and reduces the need to develop custom AuthN/AuthZ implementations. Application layer can decode JWT and use scope and claims to identify tenant of the consumer.  ","version":"Next","tagName":"h2"},{"title":"Positive Consequences‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#positive-consequences","content":" Industry standard OAuth2/OIDC is used for authentication, ensuring compatibility with many services.Utilizes Keycloak as an Identity Provider (IdP), providing a centralized and robust service for managing identities.JWT tokens allow claims and scopes to be directly embedded in the token, which helps in authorization.APISIX, acting as the Policy Enforcement Point (PEP), can validate JWT tokens without a round trip to Keycloak.Risk of key/token leakage is reduced as compared to pre-shared keys.  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#negative-consequences","content":" Complexity of JWT token management, including key rotation and revocation.Need for a caching and refresh strategy when verifying JWT in the APISIX and application layer.Possible increased latency due to JWT verification at both APISIX and application layers.Reupidation threat minimised by short OIDC access token lifetime but not fully mitigated as no digital signature implemented.  ","version":"Next","tagName":"h3"},{"title":"Pros and Cons of the Options‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#pros-and-cons-of-the-options","content":" ","version":"Next","tagName":"h2"},{"title":"The use of Keycloak in general‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#the-use-of-keycloak-in-general","content":" Good, becasue APISIX and Keycloak are easy to integrate with well documented plugins.Bad, because of the need to run Keycloak [compute resources and management overhead].  ","version":"Next","tagName":"h3"},{"title":"Keycloak with opaque tokens (without digital signatures)‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#keycloak-with-opaque-tokens-without-digital-signatures","content":" Keycloak is utilized for authentication, whereas authorisation requires APISIX and the application layer to make a call to Keycloak. This is because the opaque token, which cannot be decoded outside of Keycloak, doesn't contain any permission-related information, necessitating the authorisation check.  Good, because it simplifies token management.Good, because tokens are not self-contained and therefore don't expose any information.Bad, because it requires a round trip to Keycloak to validate each token and perform authorisation checks, increasing latency.  ","version":"Next","tagName":"h3"},{"title":"Keycloak with JWT tokens (without digital signatures)‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#keycloak-with-jwt-tokens-without-digital-signatures","content":" Keycloak is utilized for authentication, while authorisation is handled by APISIX and the application layer. Both the APISIX and application layer need to call Keycloak's JSON Web Key Set (JWKS) endpoint to retrieve public keys to decode and validate JWTs. However, the actual authorisation process is handled internally, leveraging data added to JWTs as part of scope and claims. This approach reduces latency compared to the authorisation checks required for opaque tokens.  Good, because JWT tokens can be validated by APISIX without a round trip to Keycloak.Good, because claims and scopes can be embedded directly in the token.Bad, because it introduces complexity around JWT management, including key rotation and revocation.  ","version":"Next","tagName":"h3"},{"title":"Keycloak with JWT tokens and Open Policy Agent (OPA) (without digital signatures)‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#keycloak-with-jwt-tokens-and-open-policy-agent-opa-without-digital-signatures","content":" Keycloak is utilized for authentication, while APISIX and the application layer make a call to an OPA service for authorisation. Additionally, they need to contact Keycloak's JWKS endpoint to retrieve public keys, enabling them to decode and validate JWTs. Authorisation policies are articulated using the powerful OPA language.  Good, because it provides a powerful and flexible approach to authorisation.Good, because it works well with JWT tokens, enabling authorization checks to be performed based on JWT claims.Bad, because it introduces additional complexity and another component to maintain (in addition to Keycloak).  ","version":"Next","tagName":"h3"},{"title":"Keycloak with any token type with DPoP‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#keycloak-with-any-token-type-with-dpop","content":" *Only works in oAuth2/OIDC flow  Good, because DPoP provides a method for binding access tokens to a particular client.Good, because it enhances the security by reducing the threat of token theft.Bad, because it introduces additional complexity around token management.  ","version":"Next","tagName":"h3"},{"title":"Keycloak with any token type with a custom scheme using DIDs‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#keycloak-with-any-token-type-with-a-custom-scheme-using-dids","content":" Good, because DIDs provide a self-sovereign method of identity verification.Good, because it enhances security by ensuring that only the valid owner of a DID can authenticate.Bad, because it adds a considerable amount of complexity to token management, and DIDs are still relatively new and may not be widely adopted or fully standardized.  ","version":"Next","tagName":"h3"},{"title":"Keycloak with any token type using Mutual TLS (mTLS)‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#keycloak-with-any-token-type-using-mutual-tls-mtls","content":" Good, because it provides a strong method of security by requiring both client and server to authenticate each other.Good, because it mitigates repudiation threats.Bad, because it introduces complexity around certificate management and may add additional overhead in terms of performance.  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Use Keycloak and JWT tokens for Authentication and Authorisation to facilitate multitenancy in the Cloud Agent","url":"/docs/adrs/decisions/2023-05-27-use-keycloak-and-jwt-tokens-for-authentication-and-authorisation-to-facilitate-multitenancy-in-cloud-agent#links","content":" Keycloak documentationAPISIX documentationOpen Policy Agent (OPA) documentationJWT (JSON Web Tokens) IntroductionOAuth 2.0 documentationInformation on OAuth 2.0 Token Binding - DPoPDecentralized Identifiers (DIDs) documentationJWT vs Opaque Tokens ","version":"Next","tagName":"h2"},{"title":"Use keycloak authorisation service for managing wallet permissions","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#context-and-problem-statement","content":" As we move forward with multi-tenancy, it's essential to give extra attention to authentication and authorisation. Currently, our authentication and authorisation processes are managed by a simple built-in IAM implementation within the Cloud Agent. While this setup is straightforward and functional, it's a somewhat basic and proprietary approach. Transitioning to an industry-standard IAM system like Keycloak represents an important step towards a more robust authentication and authorisation framework.  Within our multi-tenant Cloud Agent, we have some key concepts: wallets (representing resources), entities (representing users), and authentication methods. These models are integrated into our current IAM implementation within the agent allowing a loose coupling of users and resources, as well as resource access.  As we consider the shift towards an external IAM system, several important questions arise:  Where to draw the boundary of AuthN/AuthZ across different components?How to ensure smooth communication of wallet permissions across these components?What will be the impact on the process of onboarding new users and wallets?  These questions are essential as we explore the integration options of an external IAM that suits our needs.  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#decision-drivers","content":" Complexity to implement, operate and maintainMust allow self-hosted option as well as future SaaS offeringMust allow flexible management of resources, users and permissionsShould adhere to standards in AuthN/AuthZ spaceShould promote clear boundary between application and IAM concerns  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#considered-options","content":" Keycloak for authentication and associate the wallet permissions on the Agent. In this option, the agent validates the JWT from Keycloak, extracting the payload and obtain the user identity. Then, the agent stores the user's associated wallet information in its database. Keycloak's responsibility lies solely in user authentication, as permissions management is internally managed by the agent. Keycloak for authentication and embed custom permission claims in the access-token. In this option, the agent validates the JWT from Keycloak, extracting the payload containing custom claims related to the user's accessible wallets. Wallet permissions are managed in Keycloak as user metadata, which needs to be configured to include this claim in the issued JWT. Keycloak for authentication and authorisation service managing permissions. In this option, the agent handles wallet resources on Keycloak using the Protection API. Wallet permissions are managed through Keycloak's authorisation service. When users intend to use the agent, it verifies wallet permissions by checking the Keycloak permission endpoint. Similarly, Keycloak can also issue a self-contained JWT directly to users contains all the permission claims required by the agent.  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#decision-outcome","content":" Use Keycloak authorisation service for managing wallet permissions. Keycloak authorisation service offers a robust abstraction based on an industry-standard specification called UMA (User-Managed Access). It allows us to define resources, resource owners, permissions, and policies with ease. These concepts are tried and tested, and Keycloak provides them right out of the box, making it a suitable choice. It is also the only option to adhere to the standard.  In this setup, applications are responsible for managing their resources and rely on Keycloak for managing permissions on those resources. To determine whether a user can access a specific resource, the application can simply utilise Keycloak's permission endpoint.  ","version":"Next","tagName":"h2"},{"title":"On-boarding sequence diagram‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#on-boarding-sequence-diagram","content":"   ","version":"Next","tagName":"h3"},{"title":"Authorisation sequence diagram‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#authorisation-sequence-diagram","content":"   Optionally, users or downstream applications can directly call Keycloak permission endpoint to get a RPT (requesting-party token) to obtain a self-contained access-token which already include permissions.  Endpoint references  Agent checks the user permissions using permission endpoint [optional] Client may also directly call this endpoint on keycloak Agent registers a new resource using resource endpoints obtain a token for the resource endpoints Admin manages the wallet permissions using both Permission APIPolicy API  ","version":"Next","tagName":"h3"},{"title":"Positive Consequences‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#positive-consequences","content":" Good separation between IAM and application concernsPowerful and proven abstraction for managing permissionsImplementation is ready out of the boxEasy to migrate to different IAM vendor that supports UMA specification  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#negative-consequences","content":" Require additional network call to obtain a permission tokenInvolves more moving parts in managing wallet permissionsEach IAM systems may have a slight variations to the UMA endpoints  ","version":"Next","tagName":"h3"},{"title":"Pros and Cons of the Options‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#pros-and-cons-of-the-options","content":" ","version":"Next","tagName":"h2"},{"title":"Keycloak for authentication and associate the wallet permissions on the Agent‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#keycloak-for-authentication-and-associate-the-wallet-permissions-on-the-agent","content":" Good, because permission logic is on application and allowing any IAM solution to be used regardless of authorisation featureBad, because permissions are managed on the application and IAM boundary is blurredBad, because engineering effort is spent on non-differentiating value in order to have feature parity with other authorisation system  ","version":"Next","tagName":"h3"},{"title":"Keycloak for authentication and embed custom permission claims in the access-token‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#keycloak-for-authentication-and-embed-custom-permission-claims-in-the-access-token","content":" Good, because the access-token is self-contained and doesn't require extra network callGood, because IAM systems are more likely to support custom claims featureBad, because the custom claims are directly linked to user instead of resource preventing flexible mangement of permission  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Use keycloak authorisation service for managing wallet permissions","url":"/docs/adrs/decisions/2023-09-26-use-keycloak-authorisation-service-for-managing-wallet-permissions#links","content":" Keycloak authorisation service ","version":"Next","tagName":"h2"},{"title":"JWT credential revocation status list expansion strategy","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-09-28-revocation-status-list-expansion-strategy","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"JWT credential revocation status list expansion strategy","url":"/docs/adrs/decisions/2023-09-28-revocation-status-list-expansion-strategy#context-and-problem-statement","content":" In the process of devising a mechanism for revoking JWT credentials, we've opted to implement the statusList2021 method. This approach entails the creation of a &quot;status list credential&quot; that incorporates a gZip compressed status list in a form a bitString. The specification recommends a minimum size of 16 KB for the status list included in a credential. However, it does not delineate a maximum size, nor does it provide guidance on how to proceed if the selected status list surpasses its capacity to store information about revoked credentials. Put differently, if more credentials are issued than can be accommodated by a 16 KB status list, no specific instructions are provided.  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"JWT credential revocation status list expansion strategy","url":"/docs/adrs/decisions/2023-09-28-revocation-status-list-expansion-strategy#decision-drivers","content":" We must determine a strategy for expanding the revocation status list to accommodate the increasing number of revoked credentials in the future.  It's crucial to keep in mind that this status list will be part of a &quot;status list credential.&quot; This credential will be frequently requested through the REST API during verification by verifiers and will be downloaded over the network. Therefore, we need to ensure that the status list remains reasonably small in size to prevent any slowdowns in the verification process.  In the future, there might be a need to reorganize the state and possibly move status lists to another public registry for verifiers to depend on. This is not the current scenario, as each Cloud Agent currently maintains status lists specific to their respective tenants.  Absolutely, it's crucial to avoid overengineering the solution. This ensures that the code remains manageable and easy to maintain in the long run.  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"JWT credential revocation status list expansion strategy","url":"/docs/adrs/decisions/2023-09-28-revocation-status-list-expansion-strategy#considered-options","content":" Option 1: Increment status list size as we approach its limit:  We'll enhance the status list by simply doubling its size. If we opt for the minimum size of 16 KB for the revocation status list, it can manage up to 131,072 revocable credentials before requiring expansion. It's important to note that this number represents the potential capacity for revocable credentials to be issued, not necessarily the actual number of credentials that have been revoked. Even unrevoked credentials still occupy space.  Option 2: Generate multiple revocation status lists as the previous one reaches its limit  With this approach, we'll generate and store multiple status list credentials. It will be crucial to ensure that each credential is linked to a specific status list, allowing us to track where the revocation information is stored. If we stick with the smallest recommended status list size, one revocation status list can hold information about 131,072 revocable credentials.  ","version":"Next","tagName":"h2"},{"title":"Pros and Cons of the Options‚Äã","type":1,"pageTitle":"JWT credential revocation status list expansion strategy","url":"/docs/adrs/decisions/2023-09-28-revocation-status-list-expansion-strategy#pros-and-cons-of-the-options","content":" Option 1‚Äã  Option 1 offers the primary advantage of being straightforward to implement. It is also important to note that Option 2 isn't significantly more challenging to implement, so we shouldn't overly prioritize this consideration.  One potential drawback of Option 1 is that the size of the status list could potentially become too large, leading to slower verification due to the increased payload of the verification status list credential. However, it's worth noting that the verification status list credential is gZipped. This means that consecutive 0s and 1s will be compressed. For example, a sequence of 5 zeros (00000) will be stored as 5(0), indicating five consecutive zeros. Assuming that most credentials won't be revoked and will have an index of 0 in the status list, the gzipped status list in the status list credential should be very compact. This is the most crucial factor to consider in the end.  Option 2‚Äã  Option 2 slightly reduces privacy compared to Option 1 in certain scenarios. For example, in cases where the number of Verifiable Credentials (VCs) starts small but grows over time. Initially, both options face the same issue with a small anonymity set due to the limited number of VCs issued. As the number of VCs increases, Option 1 maintains a continuously growing anonymity set. However, in Option 2, when the issuer reaches the 16KB limit and creates a new list, there will be a period where the new list has only a few VCs, resulting in a smaller anonymity set for VCs in the second list.  Option 2 however, has a big advantage considering upcoming need for AnonCreds revocation. AnonCreds doesn't allow for expanding the status list size once defined during revocation registry creation. Pushing back Option 2 for AnonCreds and starting with an initial capacity of 1 million credentials may not be efficient. The size of the attached TAILS FILE grows rapidly with capacity (e.g., 8.4MB for 32,768 VCs!). This file needs to be resolved/downloaded by the holder during the issuance process.  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"JWT credential revocation status list expansion strategy","url":"/docs/adrs/decisions/2023-09-28-revocation-status-list-expansion-strategy#decision-outcome","content":" Given that the implementation of Option 2 is not significantly more complicated than Option 1, and considering that JWT credentials, specifically statusList2021, are not inherently private, we have decided to proceed with Option 2. This choice is more future-proof, especially in light of the anticipated need to implement AnonCreds revocation in the future. ","version":"Next","tagName":"h2"},{"title":"Performance framework for the Identus platform","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2023-07-14-performance-framework-for-atala-prism","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Performance framework for the Identus platform","url":"/docs/adrs/decisions/2023-07-14-performance-framework-for-atala-prism#context-and-problem-statement","content":" There are multiple great solutions today on the market for load testing. We need to choose one that corresponds to our needs, infrastructure, and price. The objective is to assess our requirements and explore the range of available load-testing solutions. Subsequently, we will provide a proposal recommending the load-testing framework that best suits our needs.  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers ‚Äã","type":1,"pageTitle":"Performance framework for the Identus platform","url":"/docs/adrs/decisions/2023-07-14-performance-framework-for-atala-prism#decision-drivers-","content":" What are our needs? Let‚Äôs try to sum up the required capabilities based on RFC-0028, we need:  Create required performance scenarios on various levels, such as endpoint level (e.g. get connections) and flow level (calling endpoints one by one in order, e.g. issuing credentials flow)Do checks for each request to make sure achieved statuses and response data are correctCustom metrics support as we have custom scenarios connectedProtocols support: HTTP (rest API), WebSocket (if we support it in the future for Mediator), gRPC (if we need PRISM Node direct benchmarks on gRPC level)Create the required load over time depending on the scenario and type of test, the more different things are supported - the betterEasy to understand, read and share reportsSomething that does not require too much RAM/CPU resources on the host machine to run, so we can use our custom GitHub runners for performance testing and possible Cloud ExecutionThe fast learning curve for everybody to contributeGood documentation and examples to be able to develop complex scenarios fasterCloud support for tests runningCloud support for tests analysis to make results visible and present them easily as per requestSupport for GitHub actions to integrate into CI/CDOpen source to be able to customize if requiredCheap or free  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Performance framework for the Identus platform","url":"/docs/adrs/decisions/2023-07-14-performance-framework-for-atala-prism#considered-options","content":" What‚Äôs on the market? Here is the list of TOP10 load test frameworks currently available on the market:  Apache JMeterLoadRunnerPFLB PlatformGatlingK6LoadNinjaWebLOADBlazeMeterNeoLoadLocust  We can read multiple papers about their comparison, for example, this one for reference, but we need to understand the difference between them all and which pros and cons they have, and why they were created.  There are 3 main classes of frameworks:  enterprise - huge enterprise solutions in clouds with advanced tools to generate all kinds of load testing scenarios targeted for non-technical testing engineerslightweight - small, highly optimized solutions, open-sourced, and easily extendablemixed - developer-friendly frameworks that are usually open-sourced with some free version providing cloud-paid plans, a kind of a medium between enterprise and lightweight  All frameworks are using different technologies and approaches: JVM-based, JS-based, GO-based, etc; GUI-oriented solutions to simplify tests development; cloud-only, etc.  Keeping in mind that we are not interested in enterprise solutions, because:  They are very expensiveWe are smarter than they think we are (for example, we don‚Äôt need GUI simplifications and blocks to generate scenarios, we would like to use our coding power here)  Based on that, we can conclude that it makes sense for us to analyze and compare the following load-testing frameworks:  GatlingK6Locust  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Performance framework for the Identus platform","url":"/docs/adrs/decisions/2023-07-14-performance-framework-for-atala-prism#decision-outcome","content":" Native support for CI, Grafana, lots of output formats, custom metrics, distributed modes, amazing native Cloud integration, but most importantly the extensive documentation with tutorials and videos makes K6 the best choice for us.  ","version":"Next","tagName":"h2"},{"title":"Pros and Cons of the Options ‚Äã","type":1,"pageTitle":"Performance framework for the Identus platform","url":"/docs/adrs/decisions/2023-07-14-performance-framework-for-atala-prism#pros-and-cons-of-the-options-","content":" ","version":"Next","tagName":"h2"},{"title":"K6‚Äã","type":1,"pageTitle":"Performance framework for the Identus platform","url":"/docs/adrs/decisions/2023-07-14-performance-framework-for-atala-prism#k6","content":" Strengths:  Modern, JavaScript-based: K6 is built on modern web technologies and uses JavaScript as its scripting language, which makes it accessible to a wide range of developers.Cloud-native: K6 is designed to work seamlessly with cloud-based infrastructure, making it easy to scale tests and generate high loads.Open-source: K6 is fully open-source, with an active community and extensive documentation.  Weaknesses:  Limited protocol support: K6 currently only supports HTTP, WebSocket, and gRPC protocols, which may not be ideal for testing more complex systems.Limited customization: While K6 is highly customizable, it does not allow for as much customization as Gatling or Locust.JavaScript knowledge required: Developers need to be familiar with JavaScript or TypeScript to use K6 effectively.  Pros:  JavaScript-based, easy to start using for everyoneNative integration with Grafana that we‚Äôre using in our infrastructureA nice Cloud solution that can be used inside our infrastructureCustom metrics supportTons of output formatsNative CI/CD support for GitHub actionsExtensive, easy-to-read docs with tutorials and youtube videos  Cons:  Not as extendable as Gatling or LocustQuite an expensive Cloud solutionNew for us, some learning curve is expected  ","version":"Next","tagName":"h3"},{"title":"Gatling‚Äã","type":1,"pageTitle":"Performance framework for the Identus platform","url":"/docs/adrs/decisions/2023-07-14-performance-framework-for-atala-prism#gatling","content":" Strengths:  High performance and scalability: Gatling can simulate thousands of virtual users with high performance and low resource usage.User-friendly DSL: Gatling uses a domain-specific language (DSL) that is easy to read and write, making it accessible to developers and testers with varying levels of experience.Comprehensive reporting: Gatling provides detailed and customizable HTML reports that make it easy to analyze test results.  Weaknesses:  Java-based: Gatling requires Java to run, which may not be ideal for some developers or organizations.Steep learning curve: Although the DSL is user-friendly, a learning curve is still associated with mastering Gatling's features and functionality.Limited community support: Gatling has a smaller community than some other load-testing tools, which may make it harder to find answers to specific questions or issues.  Pros:  We already have the performance setup on Gatling and used it as part of 1.4Nice concepts and solid base DSLPerformance scenarios are written in Scala or Kotlin which gives us 2 advantages: re-use data models from our Scala libraries in our benchmarks if required, and we don‚Äôt need to learn any new language to use the framework (most of the team is Scala, Kotlin programmers)Extendable with pluginsCustom Cloud solutions available  Cons:  [subjective opinion writing the code] DSL is not that good, lots of boilerplates to achieve simple things, not intuitiveCustom metrics are available only in EnterpriseNo native integration with Grafana that we use in our infrastructureDocumentation is not that good, many examples are implicit, no good video tutorialsNo native CI/CD integrationSupports a lot less of output formats than K6Distributed load generation is very complex, not natively integrated  ","version":"Next","tagName":"h3"},{"title":"Locust‚Äã","type":1,"pageTitle":"Performance framework for the Identus platform","url":"/docs/adrs/decisions/2023-07-14-performance-framework-for-atala-prism#locust","content":" Strengths:  Python-based: Locust is built on Python, which is a popular and widely used programming language.Simple syntax: Locust uses a clean and intuitive syntax that is easy to read and write, even for beginners.Highly customizable: Locust allows you to customize your test scenarios using Python code, which gives you more flexibility and control over your tests.  Weaknesses:  Limited protocol support: Locust currently only supports HTTP, WebSockets, and MQTT protocols, which may not be ideal for testing more complex systems.Limited reporting: Locust provides basic reporting out of the box, but more advanced reporting features require third-party plugins.Python knowledge required: While Locust's syntax is simple, developers still need to be familiar with Python to use it effectively.  Pros:  Python-based, very intuitive, and easy-to-write scenariosAlready used in IO for benchmarking in other projectsVery lightweight and powerful with capabilities for distributed load testing out of the boxNice docs and examplesHighly and easily extendable  Cons:  No Cloud solution is availableNew for us, some learning curve is expected, but easier ","version":"Next","tagName":"h3"},{"title":"Use JWT claims for agent admin access control","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#context-and-problem-statement","content":" Administrators currently rely on a static API key configured in the agent. Employing a static API key for administrative operations poses a security challenge for the entire system. A standardized centralized permission management system for administrative operations should be integrated, to ensure the solution is security-compliant, yet remains extensible and decoupled.  The existing tenant authorization model relies on UMA (user-managed access) to protect the wallet. In addition to the wallet usage, the agent also handles wallet management, a functionality utilized by both tenants and administrators. While administrators don't directly use the wallet, they oversee its management. Integrating an auth model to distinguish between admins and tenants presents a new challenge.  Where and how to define the role of admin and tenant?What should be the authorization model for the admin role?What boundary the admin role should be scoped to?How to support different deployment topologies?How does it interact with the wallet UMA model?  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#decision-drivers","content":" Must not prevent us from using other IAM systemsMust not prevent us from supporting fine-grained tenant wallet access in the futureShould not mix admin access with tenant accessShould be easy to setup, configure and maintain  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#considered-options","content":" Use ClientRole for defining roles in Keycloak In this option, the ClientRole is configured at the client level, and the user is mapped to the ClientRole using a role mapper. The role claim will be available in the JWT token at resource_access.&lt;client_id&gt;.roles. Use RealmRole for defining roles in Keycloak In this option, the RealmRole is configured at the realm level, and the user is mapped to the RealmRole using a role mapper. The role claim will be available in the JWT token at realm_acces.roles. Use custom user attribute for defining roles in Keycloak In this option, the role is defined as a user attribute. Then the user attribute will be included in a token using a token mapper at any pre-configured path.  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#decision-outcome","content":" Option 1: Use ClientRole for defining roles in keycloak.  Example JWT payload containing ClientRole. (Some claims are omitted for readability)  { &quot;exp&quot;: 1704267723, &quot;aud&quot;: [ &quot;cloud-agent&quot;, &quot;account&quot; ], &quot;realm_access&quot;: { &quot;roles&quot;: [ &quot;default-roles-atala-demo&quot;, &quot;offline_access&quot;, &quot;uma_authorization&quot; ] }, &quot;resource_access&quot;: { &quot;cloud-agent&quot;: { &quot;roles&quot;: [ &quot;admin&quot; ] }, &quot;account&quot;: { &quot;roles&quot;: [ &quot;manage-account&quot;, &quot;manage-account-links&quot;, &quot;view-profile&quot; ] } } }   The claim is available at resource_access.&lt;client_id&gt;.roles by default. The path to the claim should be configurable by the agent to avoid vendor lock and remain agnostic to the IAM configuration.  After introducing the role claim, there will be two distinct access control concepts.  Wallet access scope, where the UMA resource defines specific scopes, providing fine-grained access to wallet operations. For instance, Alice can update a DID but not deactivate a DID on wallet#1. Agent role, which manages agent-level permissions. For example, Alice is an admin for agent #1 and can onboard new tenants, but this authority doesn't extend to agent #2.  Proposed agent role authorization model  Role is a plain text that defines what level of access a user has on a system. For the agent, it needs to support 2 roles:  Admin: admin. Admin can never access a tenant wallet. Agent auth layer must ignore any UMA permission to the wallet.Tenant: tenant or implicitly inferred if another role is not specified. Tenant must have UMA permission defined to access the wallet.  ","version":"Next","tagName":"h2"},{"title":"Positive Consequences‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#positive-consequences","content":" Naturally align the boundary of the agent-level role per agent instanceReady to use abstraction, minimal configuration to use and include the claimToken can be reused across clients, enabling SSO use caseKeep the wallet access and agent-level role separated  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#negative-consequences","content":" The ClientRole is not part of the standard, other IAM systems may provide different abstraction.In some cases, ClientRole can be redundant to configure. RealmRole may be preferred in those scenarios.  ","version":"Next","tagName":"h3"},{"title":"Pros and Cons of the Options‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#pros-and-cons-of-the-options","content":" ","version":"Next","tagName":"h2"},{"title":"Option 2: Use RealmRole for defining roles in Keycloak‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#option-2-use-realmrole-for-defining-roles-in-keycloak","content":" Good, because minimal effort is required to define the role and include it in the JWTBad, because roles are at the realm level, making it hard to support some topology  Note: This option is equally applicable as Option 1, depending on the required topology.  ","version":"Next","tagName":"h3"},{"title":"Option 3: Use custom user attribute for defining roles in Keycloak‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#option-3-use-custom-user-attribute-for-defining-roles-in-keycloak","content":" Bad, because role abstraction is already provided by Keycloak. Engineering effort is spent to reinvent the same conceptBad, because it requires more effort to configure the attribute value and map it down to the token  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Use JWT claims for agent admin access control","url":"/docs/adrs/decisions/2024-01-03-use-jwt-claims-for-agent-admin-auth#links","content":" Keycloak ClientRole ","version":"Next","tagName":"h2"},{"title":"Error Handling Report Problem for Agent","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2024-01-15-Error-handling-report-problem-agent","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Error Handling Report Problem for Agent","url":"/docs/adrs/decisions/2024-01-15-Error-handling-report-problem-agent#context-and-problem-statement","content":" In decentralized systems like those with remote collaborating agents, effectively reporting errors and warnings is a complex task. It's crucial to not only highlight problems but also provide the necessary context to those who need this information, which might include different groups: those who should be informed and those who can actually resolve the issues.  It is more challenging when a problem is identified significantly later or in a different location from where it originated, involving collaboration among various parties for a solution. For DIDComm, the aspect of interoperability is especially critical in the context of problem reporting. In DIDComm, an agent developed by one team is required to be adept at interpreting errors reported by an agent from a completely different team, presenting a unique challenge in this area.  As of the time of writing, the Cloud Agent supports 3 DIDComm flows: Connection, Issuance and Verification.Each Cloud Agent operates a background thread that facilitates interactions between two agents. For each flow, the agent tracks a protocol state, and depending on this state, it triggers a DIDComm(V2) message to communicate with the other agent. The communication between two agents, Agent A and Agent B, occurs asynchronously in the background job. If an error occurs in this background job over DIDComm in Agent A, it is recorded in Agent A's logs. However, Agent B remains uninformed about any such errors.  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers ‚Äã","type":1,"pageTitle":"Error Handling Report Problem for Agent","url":"/docs/adrs/decisions/2024-01-15-Error-handling-report-problem-agent#decision-drivers-","content":" What are our needs? Let‚Äôs try to sum up the required capabilities based onReport Problem 2.0, we need:  The Cloud Agent is designed to perform three distinct roles: Issuer, Holder, and Verifier. Within these roles, it operates across three protocol flows, namely Connection, Issuance, and Verification.  Agent(Protocol) Flows\tProtocolsConnection\t[https://github.com/hyperledger/aries-rfcs/tree/main/features/0160-connection-protocol] Issuance\t[https://github.com/decentralized-identity/waci-didcomm/tree/main/issue_credential] Verification(Present proof)\t[https://github.com/decentralized-identity/waci-didcomm/blob/main/present_proof/present-proof-v3.md]  Custom Behavior table This table defines the expected behavior of the Agent in different scenarios not covered by the specifications.  Agent\tBehaviour\tActionScenario G1\tSend a problem report\te.p.msg.unsupported Scenario G2\tSend a problem report\te.p.msg.unsupported Scenario G3\tSend a problem report\te.p.error Scenario G4\t(Sync ?) Send a problem report\te.p.trust.crypto Scenario G5\t(Sync ?) Send a problem report\te.p.did Scenario G6\t(Sync ?) Send a problem report\te.p.did.malformed Scenario G7\tSend a problem report\te.p.msg.&lt;PIURI&gt;  ","version":"Next","tagName":"h2"},{"title":"Scenarios Description‚Äã","type":1,"pageTitle":"Error Handling Report Problem for Agent","url":"/docs/adrs/decisions/2024-01-15-Error-handling-report-problem-agent#scenarios-description","content":" General Scenarios‚Äã  G1 - Receive a message for an unsupported protocol G1 - Send a problem report e.p.msg.unsupported G2 - Receive a message for an unsupported version of the protocol. G2 - Send a problem report e.p.msg.unsupported and say what version(s) its supported G3 - When an internal error or any unexpected error happens. G3 - Send a problem report &quot;e.p.error&quot; G4 - If the message is tampered or got any crypto errors when decoding. G4 - (sync!) Send a problem report &quot;e.p.trust.crypto&quot; G5 - If the DID method is not supported (did.peer in this case) G5 - (sync?) e.p.did G6 - If the DID method is malformed. G6 - (sync?) e.p.did.malformed G7 - When a parsing error from the decrypted message. G7 - Send a problem report e.p.msg.&lt;PIURI&gt; if the plaintext message is malformed or if parsing into a specific protocol's data model fails.  ","version":"Next","tagName":"h3"},{"title":"Connection Flow Scenarios‚Äã","type":1,"pageTitle":"Error Handling Report Problem for Agent","url":"/docs/adrs/decisions/2024-01-15-Error-handling-report-problem-agent#connection-flow-scenarios","content":" [https://github.com/hyperledger/aries-rfcs/tree/main/features/0160-connection-protocol]  Agent\tBehaviour\tActionScenario C1\tSend a problem report (Invitation expired)\te.p.msg.invitation-expired Scenario C2\tSend a problem report (Invitation parsing decoding)\te.p.msg.malformed-invitation Scenario C3\tSend a problem report (DB connection issues)\te.p.me.res.storage Scenario C4\tSend a problem report (After max retries)\te.p.req.max-retries-exceeded Scenario C5 (G3)\tSend a problem report Any other error\te.p.error  C1 - OOB Invitation has expiredC2 - OOB is tampered / decoding errorC3 - Database connection or related issueC4 - Max retries (Cascading Problems): Connection state cannot be moved after max retriesC5 - See G3  ","version":"Next","tagName":"h2"},{"title":"Issuance Flow Scenarios‚Äã","type":1,"pageTitle":"Error Handling Report Problem for Agent","url":"/docs/adrs/decisions/2024-01-15-Error-handling-report-problem-agent#issuance-flow-scenarios","content":" [https://github.com/decentralized-identity/waci-didcomm/tree/main/issue_credential]  Agent\tBehaviour\tActionScenario I1\tSend a problem report\te.p.msg.credential-format-mismatch Scenario I2\tSend a problem report\te.p.msg.invalid-signature Scenario I3\tSend a problem report\te.p.msg.schema-mismatch Scenario I4\tSend a problem report (DB connection issues)\te.p.me.res.storage Scenario I5\tSend a problem report (After max retries)\te.p.req.max-retries-exceeded Scenario I6(G3)\tSend a problem report Any other error\te.p.error  I1 - Credential format mismatch: The Holder expects a credential format schema, but the credential issued is different formatI2 - Credential signature that cannot be verified. This might be due to the credential being tampered with, or the public key used for signing being incorrect or expired.I3 - Schema Mismatch: The Holder expects a credential that adheres to a certain schema, but the credential presented follows a different schema.I4 - Database connection or related issueI5 - Max retries (Cascading Problems): Issuance state cannot be moved after max retriesI6 - See G3  ","version":"Next","tagName":"h2"},{"title":"Verification(Present proof) Flow Scenarios‚Äã","type":1,"pageTitle":"Error Handling Report Problem for Agent","url":"/docs/adrs/decisions/2024-01-15-Error-handling-report-problem-agent#verificationpresent-proof--flow-scenarios","content":" [https://github.com/decentralized-identity/waci-didcomm/blob/main/present_proof/present-proof-v3.md]  Agent\tBehaviour\tActionScenario V1\tSend a problem report\te.p.msg.credential-format-mismatch Scenario V2\tSend a problem report\te.p.msg.invalid-signature Scenario V3\tSend a problem report\te.p.msg.revoked-credentials Scenario V4\tSend a problem report\te.p.msg.expired-credentials Scenario V5\tSend a problem report\te.p.msg.proof-mismatch Scenario V6\tSend a problem report\te.p.msg.schema-mismatch Scenario V7\tSend a problem report\te.p.msg.revoked-or-expired-issuer-key Scenario V8\tSend a problem report (After max retries)\te.p.req.max-retries-exceeded Scenario V9(G3)\tSend a problem report Any other error\te.p.error Scenario V10\tSend a problem report (DB connection issues)\te.p.me.res.storage  V1 - Credential Format Mismatch: The verifier expects a credential in a specific format, but the prover presents it in a different format.V2 - Credentials presented have signatures that cannot be verified. This might be due to the credential being tampered with, or the public key used for verification being incorrect.V3 - Revoked Credentials: The prover presents a credential that has been revoked by the issuerV4 - Expired Credentials: The credentials presented are past their expiry date, making them invalid for the transaction.V5 - Mismatch in the Proof Request and Presentation: The verifier's proof request asks for certain attributes or predicates, but the presentation from the prover doesn't match these requirements.V6 - Schema Mismatch: The verifier expects a credential that adheres to a certain schema, but the credential presented follows a different schema.V7 - Credential Format Mismatch: The verifier expects a credential in a specific format, but the prover presents it in a different format.V8 - Max retries (Cascading Problems): Verification State cannot be moved after max retriesV9 - See G3V10 - Database connection or related issue  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Error Handling Report Problem for Agent","url":"/docs/adrs/decisions/2024-01-15-Error-handling-report-problem-agent#decision-outcome","content":" In the event of an issue in the Cloud Agent, the following actions are taken:  The error is logged, including the X-Request-ID and the thread ID (thid). A problem report message is generated and sent out as outlined in the previously mentioned table This message is sent in accordance with the return route defined here:Return Route Extension for DIDComm Messaging. Implement the Problem Reporting  ","version":"Next","tagName":"h2"},{"title":"Out of the Scope‚Äã","type":1,"pageTitle":"Error Handling Report Problem for Agent","url":"/docs/adrs/decisions/2024-01-15-Error-handling-report-problem-agent#out-of-the-scope","content":" The problem report generated is not stored in the database along with the associated X-Request-ID. Replying to Warnings ACKs ","version":"Next","tagName":"h3"},{"title":"Handle errors in background jobs by storing on state records and sending via webhooks","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#context-and-problem-statement","content":" In our system, background jobs play a crucial role in handling tasks such as processing DIDComm messages for establishing connections between agents. Currently, if an error occurs in a background job, the original caller is not notified of this error, leading to potential issues in tracking and managing the state of operations. If a ZIO Failure is encountered, a serialised version of the error (string) is stored in the database along the background job record, however, this attribute is not available on the API when checking the status of an operation.  While the DIDComm Error Reporting protocol effectively handles errors in peer-to-peer communications between agents, our system lacks a robust mechanism for notifying clients of errors occurring in background jobs. This gap in error handling affects transparency and the ability to respond to issues promptly. How can we ensure clients are effectively notified of errors in background jobs, especially when such errors cannot be communicated via DIDComm Error Reporting?  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#decision-drivers","content":" Transparency and traceability of errorsSystem reliability and robust error handling, reliability of background job processingMinimising the impact of errors on user experienceComplementing the DIDComm Error Reporting protocolFuture scalability is not hampered by the solution we put in place  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#considered-options","content":" Storing error information in database records  Storing in RFC 9457 Problem Details for HTTP APIs formatStoring in proprietary formatStoring as ZIO.Failure string (as is)Enhancing the API to return this attribute of the record when checking the status of an operation  Creating a central registry of errorsUsing existing webhook system to send errors to clientsImplementing event-driven error notifications  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#decision-outcome","content":" Chosen Option: Combined 1 and 3  We have opted for enhanced error handling by storing error details on background job records in the RFC 9457 Problem Details for HTTP APIs format and leveraging webhooks for error notifications. This approach is selected because it aligns with our objectives of enhancing system reliability and error handling for background jobs. It provides a transparent mechanism for users to be informed about errors and leverages the existing webhook system, thereby avoiding the introduction of unnecessary complexity through event-driven architecture or a central registry.  ","version":"Next","tagName":"h2"},{"title":"Implementation Strategy‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#implementation-strategy","content":" Storing Error Information on Job Records: We will serialise error details into a JSON object that adheres to the RFC 9457 structure and store this information in a dedicated field within the background job records. This method is intended to enhance the visibility of errors and assist in the debugging process.Include error attribute in API responses: We will ensure that the error object is returned on any object which represents the state of a background job (Connection, Issuance or Present Proof)Webhook Notifications: Our strategy includes making use of the existing webhook system to notify clients of errors in real-time. This utilisation ensures that clients are promptly informed of any issues, enhancing the overall user experience and system responsiveness to error conditions.  ","version":"Next","tagName":"h3"},{"title":"Positive Consequences‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#positive-consequences","content":" Clients receive immediate, standardised notifications of errors, improving transparency.Error details are systematically logged, enhancing system monitoring and debugging capabilities.The approach scales well with system growth and can adapt to future requirements for error handling.Error messages logged on records will be secured by the active WalletContext  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#negative-consequences","content":" No central place to access error instances as per RFC 9457 specification.Clients will need to manage potential unknown failures of webhook calls to their system (from agent to client) as webhook events are not persisted.Error information will need to be made available when retrieving background job processing records through the operation API that generated them.  ","version":"Next","tagName":"h3"},{"title":"Storing error information in database records‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#storing-error-information-in-database-records","content":" Good, because it provides a persistent record of errors.Good, RFC 9457 Problem Details for HTTP APIs format, as it provides a standardised way to represent errors.Bad, proprietary format, as it requires converting to RFC 9457 to be sent to the user.Bad, because it requires manual checking and doesn't proactively notify interested parties.  ","version":"Next","tagName":"h3"},{"title":"Creating a central registry of errors‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#creating-a-central-registry-of-errors","content":" Good, because it centralises error management.Bad, because it can become a bottleneck and still lacks proactive notification.Bad, because it carries a lot of complexity that may not get used as data can be made available on other RESTFul APIs in a more cohesive way (such as retrieving a connection record can include the errors about creating that connection).  ","version":"Next","tagName":"h3"},{"title":"Using existing webhook system to send errors to clients‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#using-existing-webhook-system-to-send-errors-to-clients","content":" Good, because it leverages existing implementation and communication channels to send events.Bad, because it is limited by the existing system (events not persisted).  ","version":"Next","tagName":"h3"},{"title":"Implementing event-driven error notifications‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#implementing-event-driven-error-notifications","content":" Good, because it provides real-time, scalable notifications.Bad, because it requires the setup and management of an event-driven system.  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Handle errors in background jobs by storing on state records and sending via webhooks","url":"/docs/adrs/decisions/2024-03-07-handle-errors-in-bg-jobs-by-storing-on-state-records-and-sending-via-webhooks#links","content":" DIDComm Messaging Specification ","version":"Next","tagName":"h2"},{"title":"Storage for SSI related resources","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2024-05-20-use-did-urls-to-reference-resources","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Storage for SSI related resources","url":"/docs/adrs/decisions/2024-05-20-use-did-urls-to-reference-resources#context-and-problem-statement","content":" The main question to answer is: What is the most practical way to store resources related to VC verification and revocation?  In the context of SSI, there are resources such as credential definitions, schemas, revocation lists, etc., that are referenced inside VCs. These resources need to be accessible to different parties in order to verifiy the credentials. In this ADR, we discuss the trade-offs of different storage alternatives.  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Storage for SSI related resources","url":"/docs/adrs/decisions/2024-05-20-use-did-urls-to-reference-resources#decision-drivers","content":" A desired solution should balance  Methods for data integrity and authenticity validation: For instance, if we are referring to a credential definition, the user retrieving the resource should be able to validate that the resource hasn't been altered since its creation. In the case of more dynamic resources, such as revocation lists, which are actually updated throughout time, the recipient party would need to validate that the resource was created by the issuer.Data availability: It is important for resources to be highly available. If a resource is missing, it can lead to an inability to validate a VC.Decentralization: There must be a consideration to avoid innecesary central points of failureHistorical data requests: Some use cases may require support for querying historical data. For example, retreive a revocation list at certain point in the past.Write access control: Most generally issuers (as they create most of the resources), require to have control of the data they store in order to be able to update it when needed, and also to avoid third parties to make un-authorized changes.Latency, throughput, deployment costs: Any solution should provide a reasonable balance of non functional requirements, such as achieving enough throughput, or having low enough latency for the system to be practical.  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Storage for SSI related resources","url":"/docs/adrs/decisions/2024-05-20-use-did-urls-to-reference-resources#considered-options","content":" We considered the following alternatives, which contemplate the approaches currently discussed by the broad SSI ecosystem at the time of this writing.  URLs and traditional HTTP servers: with no surprises, in this approach, each resource is identified with a URL and stored in traditional servers. The URLs will encode hashes as query parameters to enforce integrity for static resources. Dynamic resources will be signed by the resource creator's key.DID URLs and traditional HTTP servers: in this variation, resources are still stored in servers. Resources are identified by DID URLs that dereference services of the associated DID document. The services will contain the final URL to retrieve the corresponding resources. Once again, hashes will be associated to static resources as DID URL query parameters, while dynamic resources will be signed adequately.IPFS: An IPFS approach would be useful for storing static resources using IPFS identifiers for them. Dynamic resources however become more challenges. Even though we recognize the existence of constructions like IPNS or other layers to manage dynamic resources, we find them less secure in terms of availability and consistency guarantees.Ledger based storage (Cardano in particular): In this approach, resources would be stored in transactions' metadata posted on-chain. The data availability and integrity can be inherited from the underlying ledger.A combination of previous methods and the use of a ledger: Similar as above, data references are posted on-chain, but the actual resources are stores in servers. The servers could be traditional HTTP servers or IPFS nodes.  ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Storage for SSI related resources","url":"/docs/adrs/decisions/2024-05-20-use-did-urls-to-reference-resources#decision-outcome","content":" After a careful analysis we concluded the following points:  There is an architectural need to develop a &quot;proxy&quot; component, a.k.a. VDR proxy, that would work as a first phase for resource resolution. Behind the VDR proxy, different storage implementations could be added as extensionsWith respect to specific implementations ledger based storage at this stage introduces latency, throughput bottlenecks, costs and other issues not suitable for most use cases.Hybrid solutions that make use of a ledger share similar drawbacks.Decentralized Hash Tables (such as IPFS) do not provide efficient handling for dynamic resources (such as revocation lists).We concluded that a reasonable first iteration could be delivered using DID URLs to identify resources while they would be, a priori, stored in traditional HTTP servers.  ","version":"Next","tagName":"h2"},{"title":"Positive Consequences‚Äã","type":1,"pageTitle":"Storage for SSI related resources","url":"/docs/adrs/decisions/2024-05-20-use-did-urls-to-reference-resources#positive-consequences","content":" The implementation of a VDR proxy enables a transparent abstraction that allows to extend the possible methods to retrieve resources.DID URLs allow for a fair decentralization level at issuer's disposal to control the location of resources  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences‚Äã","type":1,"pageTitle":"Storage for SSI related resources","url":"/docs/adrs/decisions/2024-05-20-use-did-urls-to-reference-resources#negative-consequences","content":" There is a level of under-specification at W3C specifications with respect to DID URL dereferencing. This forces us to define the under-specificied behaviour or simply creata-our-own solution.  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Storage for SSI related resources","url":"/docs/adrs/decisions/2024-05-20-use-did-urls-to-reference-resources#links","content":" We leave a list of useful links for context  AnonCreds Methods RegistryAnonCreds SpecificationW3C DID resolution algorithm ","version":"Next","tagName":"h2"},{"title":"[short title of solved problem and solution]","type":0,"sectionRef":"#","url":"/docs/adrs/template","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#context-and-problem-statement","content":" [Describe the context and problem statement, e.g., in free form using two to three sentences. You may want to articulate the problem in form of a question.]  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#decision-drivers-","content":" [driver 1, e.g., a force, facing concern, ‚Ä¶][driver 2, e.g., a force, facing concern, ‚Ä¶]‚Ä¶   ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#considered-options","content":" [option 1][option 2][option 3]‚Ä¶   ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#decision-outcome","content":" Chosen option: &quot;[option 1]&quot;, because [justification. e.g., only option, which meets k.o. criterion decision driver | which resolves force force | ‚Ä¶ | comes out best (see below)].  ","version":"Next","tagName":"h2"},{"title":"Positive Consequences ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#positive-consequences-","content":" [e.g., improvement of quality attribute satisfaction, follow-up decisions required, ‚Ä¶]‚Ä¶  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#negative-consequences-","content":" [e.g., compromising quality attribute, follow-up decisions required, ‚Ä¶]‚Ä¶  ","version":"Next","tagName":"h3"},{"title":"Pros and Cons of the Options ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#pros-and-cons-of-the-options-","content":" ","version":"Next","tagName":"h2"},{"title":"[option 1]‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#option-1","content":" [example | description | pointer to more information | ‚Ä¶]  Good, because [argument a]Good, because [argument b]Bad, because [argument c]‚Ä¶   ","version":"Next","tagName":"h3"},{"title":"[option 2]‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#option-2","content":" [example | description | pointer to more information | ‚Ä¶]  Good, because [argument a]Good, because [argument b]Bad, because [argument c]‚Ä¶   ","version":"Next","tagName":"h3"},{"title":"[option 3]‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#option-3","content":" [example | description | pointer to more information | ‚Ä¶]  Good, because [argument a]Good, because [argument b]Bad, because [argument c]‚Ä¶   ","version":"Next","tagName":"h3"},{"title":"Links ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/adrs/template#links-","content":" [Link type](link to adr) ‚Ä¶  ","version":"Next","tagName":"h2"},{"title":"Getting Started","type":0,"sectionRef":"#","url":"/docs/home/","content":"","keywords":"","version":"Next"},{"title":"Supported Standards‚Äã","type":1,"pageTitle":"Getting Started","url":"/docs/home/#supported-standards","content":" W3C DID SpecificationDIDComm v2W3C VC-JWTHyperledger AnoncredsOpenID for Verifiable Credential Issuance ","version":"Next","tagName":"h2"},{"title":"Use ZIO Failures and Defects Effectively","type":0,"sectionRef":"#","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#context-and-problem-statement","content":" ZIO is a powerful and purely functional library for building scalable and resilient applications in Scala. However, effectively handling errors within the context of ZIO presents challenges that must be addressed.  Within our software development projects utilising ZIO, the management and handling of errors have emerged as areas requiring more clarity and strategy. The existing practices have shown limitations in terms of their efficiency and comprehensiveness.  The key issues are:  Lack of Consistent Error Handling Strategies: There's inconsistency in error handling across different modules and components of our ZIO-based applications, making it challenging to maintain a unified approach.Understanding and Communicating Errors: There's a need for a clearer method to categorise errors and communicate these effectively within the team and across various layers, facilitating quicker identifications and resolutions.Optimising Error Recovery Mechanisms: While ZIO provides powerful abstractions for error recovery, there's a necessity to optimise these mechanisms to ensure graceful degradation and resilience in our applications.  This ADR aims to explore and define strategies for utilising ZIO's capabilities more effectively in handling errors. It will outline decision drivers, available options, their pros and cons, and ultimately, the recommended approach to enhance our error management practices with the ZIO framework.  Effective management of errors directly impacts the reliability, maintainability, and customer experience of our applications.  By addressing the challenges of consistent error handling, we aim to enhance the stability of our products, ensuring reduced downtime, clearer communication with customers through structured error messages, and quicker issue resolution.  This not only improves the overall customer experience but also accelerates feature delivery as developers can focus more on implementing new functionalities rather than troubleshooting ad-hoc errors. The resulting streamlined development process contributes to cost reduction and optimised resource allocation.  In essence, these efforts are customer-centric, aiming to deliver a reliable, efficient, and customer-friendly service interface that positively impacts the overall customer experience and product adoption.  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#decision-drivers","content":" Consistency and Standardization: A consistent and standardised approach to error handling across different modules and components of our ZIO applications is crucial. This consistency will ease code readability, maintenance, and team collaboration.Robustness and Resilience: A key driver is to harden our applications against failures by leveraging ZIO's powerful error recovery mechanisms. Enhancing the robustness of our applications will improve their resilience in adverse conditions.Traceability and Debugging: Reducing debugging time and efforts associated with error resolution is another driving factor. An efficient error-handling strategy should enable traceability and quicker identification, communication, and resolution of errors.User Experience and Reliability: Improving the quality and clarity of error messages reported to our users is a key driver. We aim to refine error messages to enable users to better understand what‚Äôs going on and respond to issues, thereby enhancing the user experience and the overall reliability of our applications.Alignment with Best Practices: Aligning our error-handling strategies with industry best practices and leveraging the full potential of ZIO's error management features is a driver. Adhering to established standards can lead to more effective and maintainable code.  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#considered-options","content":" ","version":"Next","tagName":"h2"},{"title":"Option 1: Continue With The Current Error Handling Strategy‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#option-1-continue-with-the-current-error-handling-strategy","content":" Continuing with the existing &quot;so-so&quot; error handling strategy currently in place within our ZIO applications without significant modifications or improvements.  Pros:  Maintains continuity with current practices, potentially requiring minimal adjustments and avoiding immediate disruptions to ongoing projects.  Cons:  Inconsistencies in the code base across the components and services may persist, leading to potential challenges in maintenance and scalability.Engineers may spend time reinventing error-handling solutions rather than leveraging established best practices or frameworks.No significant improvement in terms of traceability and problem debugging, potentially hindering the resolution of issues and defects.  ","version":"Next","tagName":"h3"},{"title":"Option 2: Leverage ZIO Failures And Defects Effectively‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#option-2-leverage-zio-failures-and-defects-effectively","content":" Adopting best practices for error handling within ZIO applications and effectively utilising ZIO Failures and Defects, defining and implementing stricter guidelines and protocols for error handling.  Pros:  Ensures adherence to established best practices, promoting code consistency, reliability, and scalability across various components and services.Reduces the need for developers to reinvent error-handling solutions, allowing them to leverage proven strategies and frameworks.Improves traceability and problem debugging by employing standardised error-handling practices, facilitating quicker issue identification and resolution.  Cons:  Will require adjustments to current code and practices, necessitating time and effort for implementation.Actual impact and workload still needs to be identified.  ","version":"Next","tagName":"h3"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#decision-outcome","content":" It has been decided to pursue Option 2: Leverage ZIO Failures and Defects Effectively. This decision aligns with our commitment to enhancing the reliability, scalability, and maintainability of our applications.  While we acknowledge this option requires more refactoring, its long-term benefits in terms of code quality, developer efficiency, and robust error management outweigh the associated refactoring efforts.  ","version":"Next","tagName":"h2"},{"title":"Option 2 - General Implementation Rules and Principles‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#option-2---general-implementation-rules-and-principles","content":" ","version":"Next","tagName":"h2"},{"title":"Case 1: When designing a component or service‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#case-1-when-designing-a-component-or-service","content":" Carefully Segregate Error Types‚Äã  When designing a new component or service, the nature of anticipated errors should be carefully considered, and a clear distinction between expected errors (i.e. ZIO Failures or domain-specific errors) and unexpected errors (i.e. ZIO Defects) should be made.  This segregation should be done according to the principles outlined in the ZIO Types of Errors documentation section. That is, carefully distinguishing between:  ZIO Failures The expected/recoverable errors (i.e. domain-specific errors).Declared in the Error channel of the effect =&gt; ZIO[R, E, A].Supposed to be handled by the caller to prevent call stack propagation. ZIO Defects The unexpected/unrecoverable errors.Not represented in the ZIO effect.We do NOT expect the caller to handle them.Propagated throughout the call stack until converted to a Failure or logged for traceability and debugging purposes by the uppermost layer.  Use ADT to Model ZIO Failures‚Äã  Use Algebraic Data Types (ADTs) to model domain-specific errors as ZIO failures within the component/service interface.  Implementation tips:  Use a sealed trait or abstract class to represent the hierarchy of ZIO Failures, allowing for a well-defined set of error possibilities.Define specific error cases within the companion object of the sealed trait. This practice prevents potential conflicts when importing errors with common names (e.g. RecordNotFoundError), allowing users to prefix them with the name of the parent sealed trait for better code clarity.  Example:  sealed trait DomainError object DomainError { final case class BusinessLogicError(message: String) extends DomainError final case class DataValidationError(message: String) extends DomainError }   Use Scala 3 Union Types to Be More Specific About ZIO Failure Types‚Äã  Using the Scala 3 Union Types feature to declare the expected failures of a ZIO effect should be preferred over using the broader and more generic top-level sealed trait. This allows for a more explicit and detailed definition of potential failure scenarios and enhances error handling accuracy on the caller side.  This principle is outlined in the following section of the ZIO Error Management Best Practices documentation.  Example:  trait MyService { def myMethod(): ZIO[Any, BusinessLogicError | DataValidationError, Unit] }   Don‚Äôt Type Unexpected Errors (i.e. ZIO Defects)‚Äã  When we first discover typed errors, it may be tempting to put every error into the ZIO failure type parameter/channel. That is a mistake because we can't recover from all types of errors. When we encounter unexpected errors we can't do anything with, we should let the application die (i.e. the ZIO fiber). This is known as the ‚ÄúLet it Crash‚Äù principle, and it is a good approach for all unexpected errors.  This principle is outlined in the following section of the ZIO Error Management Best Practices documentation.  ","version":"Next","tagName":"h3"},{"title":"Case 2: When calling an existing component or service‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#case-2-when-calling-an-existing-component-or-service","content":" Only Catch Failures You Effectively Handle‚Äã  As a user of an existing component or service, you should exclusively catch failures that you are prepared to effectively handle. Any unhandled failures should be transformed into defects and propagated through the call stack. You should not expect callers of your component to handle lower-level failures that you do not handle.  Use Failure Wrappers To Prevent Failures Leakage From Lower Layers‚Äã  Do not directly expose their failure types in your component interface when invoking lower-level components. Use wrappers to encapsulate and abstract failure types originating from lower-level components, thus enhancing loose coupling and safeguarding against leakage of underlying implementation details to the caller.  Using failure wrappers and propagating them should not be the default strategy. Lower-level failures should primarily be managed at your component implementation level, ensuring that it appropriately handles and recovers them.  Failures not handled within the component's boundaries should preferably be transformed into defects whenever possible.  Do not reflexively log errors‚Äã  Avoid catching a ZIO failure or defect solely for the purpose of logging it. Instead, consider allowing the error to propagate through the call stack. It's preferable to assume that the uppermost layer, commonly known as 'the end of the world' will handle the logging of those errors. This practice promotes a centralised and consistent logging approach for better traceability and debugging.  This principle is outlined in the following section of the ZIO Error Management Best Practices documentation.  Adopt The ‚ÄúLet it Crash‚Äù Principle For ZIO Defects‚Äã  Adopt the ‚ÄúLet it Crash‚Äù principle for ZIO defects. Let them bubble up the call stack and crash the current ZIO fiber. They will be handled/recovered at a higher level or logged appropriately ‚Äúat the end of the world‚Äù by the uppermost layer.  ","version":"Next","tagName":"h3"},{"title":"Option 2 - Practical Implementation‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#option-2---practical-implementation","content":" ","version":"Next","tagName":"h2"},{"title":"Repository Layer‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#repository-layer","content":" Try using defects only (UIO or URIO)‚Äã  The repository layer leverages Doobie, which natively relies on unchecked exceptions. Doobie will report any database error as a subclass of Throwable, and its specific type will be directly linked to the underlying database implementation (i.e. PostgreSQL). Handling it this way means there is no deterministic way to recover from an SQL execution error in a database-agnostic way.  A good approach is to use ZIO Defects to report repository errors, declaring all repository methods as URIOor UIO(example). Conversely, declaring them as Task assumes that the caller (i.e. service) can properly handle and recover from the low-level and database-specific exceptions exposed in the error channel, which is a fallacy.  trait ConnectionRepository { def findAll: URIO[WalletAccessContext, Seq[ConnectionRecord]] }   Converting a ZIO Task to ZIO UIO can easily be done using ZIO#orDie(example).  class JdbcConnectionRepository(xa: Transactor[ContextAwareTask], xb: Transactor[Task]) extends ConnectionRepository { override def findAll: URIO[WalletAccessContext, Seq[ConnectionRecord]] = { val cxnIO = sql&quot;&quot;&quot; | SELECT | id, | created_at, | ... | FROM public.connection_records | ORDER BY created_at &quot;&quot;&quot;.stripMargin .query[ConnectionRecord] .to[Seq] cxnIO .transactWallet(xa) .orDie } }   For those cases where one has to generate a defect, a common way to do this is by using the following ZIO construct (example):  class JdbcConnectionRepository(xa: Transactor[ContextAwareTask], xb: Transactor[Task]) extends ConnectionRepository { override def getById(recordId: UUID): URIO[WalletAccessContext, ConnectionRecord] = for { maybeRecord &lt;- findById(recordId) record &lt;- ZIO.fromOption(maybeRecord).orDieWith(_ =&gt; RuntimeException(s&quot;Record not found: $recordId&quot;)) } yield record }   Apply the get vs find pattern‚Äã  Follow the get and find best practices in the repository interface for read operations:  getXxx() returns the requested record or throws an unexpected exception/defect when not found (example).findXxx() returns an Option with or without the request record, which allows the caller service to handle the foundand not-found cases and report appropriately to the end user (example).  trait ConnectionRepository { def findById(recordId: UUID): URIO[WalletAccessContext, Option[ConnectionRecord]] def getById(recordId: UUID): URIO[WalletAccessContext, ConnectionRecord] }   Do not return the affected row count‚Äã  The create, update or delete repository methods should not return an Int indicating the number of rows affected by the operation but either return Unit when successful or throw an exception/defect when the row count is not what is expected, like i.e. an update operation resulting in a 0 affected row count (example).  class JdbcConnectionRepository(xa: Transactor[ContextAwareTask], xb: Transactor[Task]) extends ConnectionRepository { override def create(record: ConnectionRecord): URIO[WalletAccessContext, Unit] = { val cxnIO = sql&quot;&quot;&quot; | INSERT INTO public.connection_records( | id, | created_at, | ... | ) values ( | ${record.id}, | ${record.createdAt}, | ... | ) &quot;&quot;&quot;.stripMargin.update cxnIO.run .transactWallet(xa) .ensureOneAffectedRowOrDie } } extension[Int](ma: RIO[WalletAccessContext, Int]) { def ensureOneAffectedRowOrDie: URIO[WalletAccessContext, Unit] = ma.flatMap { case 1 =&gt; ZIO.unit case count =&gt; ZIO.fail(RuntimeException(s&quot;Unexpected affected row count: $count&quot;)) }.orDie }   Do not reflexively log errors‚Äã  The upper layer will automatically do so appropriately and consistently using Tapir interceptor customization.  ","version":"Next","tagName":"h3"},{"title":"Service Layer‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#service-layer","content":" Reporting 404 Not Found to user‚Äã  How can a service appropriately report a 404 Not Found to a user that i.e. tries to update a record that does not exist in the database? Following the above rules, the update method will throw a defect that will be caught at the upper level and returns a generic 500 Internal Server Error to the user.  For those cases where a specific error like 404 should be returned, it is up to the service to first call find()before update() and construct a NotFound failure, propagated through the error channel, if it gives a None (example).  Relying on the service layer to implement it will guarantee consistent behavior regardless of the underlying database type (could be different RDMS flavor, No-SQL, etc.).  class ConnectionServiceImpl() extends ConnectionService { override def markConnectionRequestSent(recordId: UUID): ZIO[WalletAccessContext, RecordIdNotFound | InvalidStateForOperation, ConnectionRecord] = for { maybeRecord &lt;- connectionRepository.findById(recordId) record &lt;- ZIO.fromOption(maybeRecord).mapError(_ =&gt; RecordIdNotFound(recordId)) updatedRecord &lt;- updateConnectionProtocolState( recordId, ProtocolState.ConnectionRequestPending, ProtocolState.ConnectionRequestSent ) } yield updatedRecord }   Do not type unexpected errors‚Äã  Do not wrap defects from lower layers (typically repository) in a failure and error case class declarations like thisshould be prohibited.  Considering that failures are viewed as expected errors from which users can potentially recover, error case classes like UnexpectedError should be prohibited (example).  Extend the common Failure trait‚Äã  Make sure all service errors extend the shared trait org.hyperledger.identus.shared.models.Failure. This allows handling &quot;at the end of the world‚Äú to be done in a consistent and in generic way.  Create an exhaustive and meaningful list of service errors and make sure the value of the userFacingMessage attribute is chosen wisely! It will present &quot;as is&quot; to the user and should not contain any sensitive data (example).  trait Failure { val statusCode: StatusCode val userFacingMessage: String } sealed trait ConnectionServiceError( val statusCode: StatusCode, val userFacingMessage: String ) extends Failure object ConnectionServiceError { final case class InvitationAlreadyReceived(invitationId: String) extends ConnectionServiceError( StatusCode.BadRequest, s&quot;The provided invitation has already been used: invitationId=$invitationId&quot; ) }   User Input Validation‚Äã  Enforcing user input validation (business invariants) should primarily sit at the service layer and be implemented using theZIO Prelude framework.  While partially implementing user input validation at the REST entry point level via OpenAPI specification, it is crucial to enforce validation at the service level as well. This implementation ensures consistency and reliability across all interfaces that may call our services, recognizing that REST may not be the sole interface interacting with our services.  class ConnectionServiceImpl() extends ConnectionService { def validateInputs( label: Option[String], goalCode: Option[String], goal: Option[String] ): IO[UserInputValidationError, Unit] = { val validation = Validation .validate( ValidationUtils.validateLengthOptional(&quot;label&quot;, label, 0, 255), ValidationUtils.validateLengthOptional(&quot;goalCode&quot;, goalCode, 0, 255), ValidationUtils.validateLengthOptional(&quot;goal&quot;, goal, 0, 255) ) .unit ZIO.fromEither(validation.toEither).mapError(UserInputValidationError.apply) } }   Modeling validation errors should use a dedicated error case class and, when possible, provide validation failure details. One could use a construct like the following:  sealed trait ConnectionServiceError( val statusCode: StatusCode, val userFacingMessage: String ) extends Failure object ConnectionServiceError { final case class UserInputValidationError(errors: NonEmptyChunk[String]) extends ConnectionServiceError( StatusCode.BadRequest, s&quot;The provided input failed validation: errors=${errors.mkString(&quot;[&quot;, &quot;], [&quot;, &quot;]&quot;)}&quot; ) }   Use Scala 3 Union Types‚Äã  Use Scala 3 union-types declaration in the effect‚Äôs error channel to notify the caller of potential failures (example)  class ConnectionServiceImpl() extends ConnectionService { override def receiveConnectionRequest(request: ConnectionRequest, expirationTime: Option[Duration] = None): ZIO[WalletAccessContext, ThreadIdNotFound | InvalidStateForOperation | InvitationExpired, ConnectionRecord] = ??? }   Do not reflexively log errors‚Äã  The upper layer will automatically do so appropriately and consistently using Tapir interceptor customization.  ","version":"Next","tagName":"h3"},{"title":"Controller Layer‚Äã","type":1,"pageTitle":"Use ZIO Failures and Defects Effectively","url":"/docs/adrs/decisions/2024-01-16-use-zio-failures-and-defects-effectively#controller-layer","content":" Reporting RFC-9457 Error Response‚Äã  All declared Tapir endpoints must use org.hyperledger.identus.api.http.ErrorResponseas their output error type (example) This type ensures that the response returned to the user complies with the RFC-9457 Problem Details for HTTP APIs.  object ConnectionEndpoints { val createConnection: Endpoint[ (ApiKeyCredentials, JwtCredentials), (RequestContext, CreateConnectionRequest), ErrorResponse, Connection, Any ] = ??? }   Use &quot;Failure =&gt; ErrorResponse&quot; Implicit Conversion‚Äã  If all the underlying services used by a controller comply with the above rules, then the only error type that could propagate through the effect‚Äôs error channel is the parent org.hyperledger.identus.shared.models.Failuretype and its conversion to the ErrorResponse type is done automatically via Scala implicit conversion.  Do not reflexively log errors‚Äã  The upper layer will automatically do so appropriately and consistently using Tapir interceptor customization. ","version":"Next","tagName":"h3"},{"title":"Why Identity","type":0,"sectionRef":"#","url":"/docs/home/concepts/identity","content":"","keywords":"","version":"Next"},{"title":"Self-Sovereign Identity (SSI)‚Äã","type":1,"pageTitle":"Why Identity","url":"/docs/home/concepts/identity#self-sovereign-identity-ssi","content":" SSI¬†introduces new concepts that flip the existing identity models. The control shifts from the central authorities to the edges, with individuals. SSI is a set of principles that leverage decentralized identity technology. Sovrin compiled a list of the principles in an easy-to-digest format, available here.  The World Wide Web Consortium (W3C) organization has been setting the standards for the Internet as we know it. Similarly, they are also working on next-generation technologies such as decentralized identity. In July 2022, the W3C approved the DID specification to become a recommendation.  The W3C has compiled a list in addition to the specifications for all DID methods available here.  For a deep dive into the DID specification itself, the W3C standard is here. ","version":"Next","tagName":"h2"},{"title":"Multi-Tenancy","type":0,"sectionRef":"#","url":"/docs/home/concepts/multi-tenancy","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#introduction","content":" ","version":"Next","tagName":"h2"},{"title":"Purpose‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#purpose","content":" Multi-tenancy is a fundamental capability of the Identus toolset designed to provide secure and efficient identity and credential management for diverse users, identities, and organizations. It enables the platform to serve multiple tenants while ensuring the logical isolation of their assets.  ","version":"Next","tagName":"h3"},{"title":"Key Benefits‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#key-benefits","content":" Scalability: Identus' multi-tenancy support allows the platform to scale effortlessly to accommodate growing users, entities, and organizations.Resource Efficiency: It optimizes resource utilization by enabling the sharing of infrastructure components, enhancing cost-effectiveness.Data Isolation: Multi-tenancy ensures that the data, such as DIDs (Decentralized Identifiers), connections, VCs (Verifiable Credentials), keys, and more, of one tenant is completely isolated from others, preserving data privacy and security.Enhanced Collaboration: Shared wallets enable collaboration between entities while maintaining data segregation.Granular Control: Administrators control the resources and permissions assigned to each entity.  ","version":"Next","tagName":"h3"},{"title":"Roles in multi-tenancy‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#roles-in-multi-tenancy","content":" Multi-tenancy permits multiple users or systems to use the Cloud Agent within a shared instance, enhancing resource utilization while preserving each tenant's and their resources' separation. Understanding different roles in multi-tenancy is essential for the secure and efficient operation of the Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"Administrator‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#administrator","content":" The administrator's primary responsibilities include setting up, allocating, and managing tenant resources. Administrators have elevated privileges within the system, allowing them to create, modify, or delete multi-tenant resources such as entities, wallets, and authentication methods. They play a critical role in tenant management but typically don't participate in everyday interactions.  ","version":"Next","tagName":"h3"},{"title":"Tenant‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#tenant","content":" Tenants are the users or systems engaged in everyday interactions. They have representation via a resource called an entity, and this entity uses a wallet as a container for the assets they own. Tenants can only view the assets within the wallet assigned to their entity. To access the system, they need an authentication method provided by the administrator.  ","version":"Next","tagName":"h3"},{"title":"Concepts‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#concepts","content":" ","version":"Next","tagName":"h2"},{"title":"Wallet‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#wallet","content":" A wallet is a central component of Identus' multi-tenancy model. It serves as the container for storing and managing a tenant's digital assets, including DIDs, connections, VCs, keys, and more. Wallets are logically isolated to ensure that the data associated with one entity remains separate and secure from others.  ","version":"Next","tagName":"h3"},{"title":"Entity‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#entity","content":" An entity represents a user or any other identity within the Identus platform. Each entity owns a Wallet, making it the primary entity for managing and interacting with its digital credentials and assets. Entities can also share wallets, enabling collaborative use of resources.  ","version":"Next","tagName":"h3"},{"title":"Authentication Method‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#authentication-method","content":" Each entity is associated with an Authentication Method, which serves as a secure means of verifying the identity and access rights of the entity. This method ensures the entity's identity is authenticated during interactions with the platform, enhancing security.  ","version":"Next","tagName":"h3"},{"title":"Logical Isolation‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#logical-isolation","content":" Logical Isolation is a core principle of Identus' multi-tenancy model. It ensures that one entity's digital assets, transactions, and data are logically separated from others, maintaining the highest data privacy and security level.  ","version":"Next","tagName":"h3"},{"title":"Shared Wallets‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#shared-wallets","content":" Identus' multi-tenancy capabilities allow for the sharing of wallets among multiple entities. This feature facilitates collaborative work and resource sharing while preserving data isolation within the shared wallet. The entity can own only one wallet. Sharing it with other entities is possible, but multiple entities cannot own it.  ","version":"Next","tagName":"h3"},{"title":"Tenant Management‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#tenant-management","content":" Tenant Management is the process of onboarding, provisioning, and managing entities and wallets within the Identus platform. Administrators can configure each entity's permissions, resources, and access control, ensuring efficient and secure multi-tenancy operations.  ","version":"Next","tagName":"h3"},{"title":"DIDComm Connections‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#didcomm-connections","content":" DIDComm Connections are the secure communication channels between peers within the SSI ecosystem. Identus' multi-tenancy model ensures that the connections of one entity are logically isolated from those of other entities, preserving data privacy and security. Based on the DID-Peer of the message recipient, the corresponding wallet processes the message.  ","version":"Next","tagName":"h3"},{"title":"Webhook Notifications‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#webhook-notifications","content":" Webhook notifications enable users to receive alerts for specific events in the system. There are two types of webhook notifications:  Global webhooks: monitor all events across all wallets at the Cloud Agent levelWallet webhooks: isolated to individual wallets and do not have visibility into assets in other wallets.  ","version":"Next","tagName":"h3"},{"title":"Relation Diagram‚Äã","type":1,"pageTitle":"Multi-Tenancy","url":"/docs/home/concepts/multi-tenancy#relation-diagram","content":" The following diagram illustrates the relationship between the key components of Identus' multi-tenancy model.  ","version":"Next","tagName":"h2"},{"title":"Authentication and Authorisation","type":0,"sectionRef":"#","url":"/docs/home/identus/cloud-agent/authentication","content":"","keywords":"","version":"Next"},{"title":"Default Entity and Wallet‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#default-entity-and-wallet","content":" The Cloud Agent uses the Default Entity and the Default Wallet for all interactions with the Agent over the REST API and DIDComm in the single-tenant mode. A Default Entity is an entity with the id 00000000-0000-0000-0000-000000000000, and a Default Wallet is a wallet with the id 00000000-0000-0000-0000-000000000000.  ","version":"Next","tagName":"h2"},{"title":"API Key Authentication‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#api-key-authentication","content":" ","version":"Next","tagName":"h2"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#introduction","content":" API Key Authentication is a straightforward method used to authenticate entities by utilizing a secret key. This method requires the inclusion of an apikey header in HTTP requests, with the value corresponding to the issued secret key. The configuration of API Key Authentication for an entity is managed by the Administrator using the Entity API methods.  ","version":"Next","tagName":"h3"},{"title":"Security and Restrictions‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#security-and-restrictions","content":" API Key Length: To maintain robust security, the length of the API Key value must exceed 16 bytes (128 bits). This length requirement is essential for enhancing the security of your API Key against potential attacks. The max length of the API Key value is limited to 128 bytes. Unique API Keys: Each API Key is unique to a specific entity. It cannot be shared or reused by other entities. If an attempt to assign the same API Key value to another entity, the API Key is considered compromised and must be considered unusable.Unique API Keys: Each API Key is unique to a specific entity. It cannot be shared or reused by other entities. If an attempt to assign the same APIKey value to another entity, the APIKey is considered compromised and must be considered unusable.Revocation: In case of a tenant's API Key revocation, it becomes invalid for authentication.  ","version":"Next","tagName":"h3"},{"title":"Agent Responsibilities‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#agent-responsibilities","content":" The Agent manages API Keys for each tenant and maintains the security of the system:  API Key Storage: The Agent maintains each tenant's APIKeys list. However, it is essential to note that the original value of the APIKey is not stored in the Agent, ensuring additional security.Hashing and Authentication: The Agent securely stores the hash of the APIKey in the database and uses it to authenticate the entity. The hashing process employs the SHA-256 algorithm and a salt value to compute the hash value, ensuring data integrity and security during authentication. The length of the salt value must exceed 16 bytes (128 bits)  Based on the configuration API Key authentication, the Cloud Agent can support the following interaction models:  ","version":"Next","tagName":"h3"},{"title":"Single Tenant without apikey authentication‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#single-tenant-without-apikey-authentication","content":" Disable API key authentication and use the Default Wallet for all interactions with the Cloud Agent over the REST API and DIDComm.  Environment Variable\tValueAPI_KEY_ENABLED\tfalse  ","version":"Next","tagName":"h3"},{"title":"Single Tenant with apikey authentication‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#single-tenant-with-apikey-authentication","content":" Enable API key authentication and use the Default Wallet for all interactions with the Cloud Agent over the REST API and DIDComm.  Environment Variable\tValueAPI_KEY_ENABLED\ttrue API_KEY_AUTHENTICATE_AS_DEFAULT_USER\ttrue  ","version":"Next","tagName":"h3"},{"title":"Multi-Tenant with apikey authentication‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#multi-tenant-with-apikey-authentication","content":" Enable APIKey authentication and use the Entity and the Wallet associated with the API-Key for all interactions with the Cloud Agent. The Administrator must register the Entity and Wallet for the tenant before the first interaction with the Cloud Agent over the REST API.  Environment Variable\tValueAPI_KEY_ENABLED\ttrue API_KEY_AUTHENTICATE_AS_DEFAULT_USER\tfalse  ","version":"Next","tagName":"h3"},{"title":"Multi-Tenant with apikey authentication and auto-provisioning‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#multi-tenant-with-apikey-authentication-and-auto-provisioning","content":" Enable APIKey authentication and use the Wallet associated with the APIKey for all interactions with the Cloud Agent. Automatically register the tenant's Entity, Wallet, and API key during the first interaction with the Cloud Agent over the REST API.  Environment Variable\tValueAPI_KEY_ENABLED\ttrue API_KEY_AUTHENTICATE_AS_DEFAULT_USER\tfalse AUTO_PROVISIONING_ENABLED\ttrue  ","version":"Next","tagName":"h3"},{"title":"Admin-Api-Key Authentications‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#admin-api-key-authentications","content":" Admin-Api-Key authentication is an authentication method that uses a secret key to authenticate the Administrator. Adding the x-admin-api-key header to the HTTP request with the value of the issued secret is required. The value of the x-admin-api-key header gets configured in the Cloud Agent at the startup.  Environment Variable\tValueADMIN_API_KEY\tsecret  The following REST APIs get protected by the Admin-Api-Key authentication methods:  Wallet Management REST APIEntity Management REST API  ","version":"Next","tagName":"h2"},{"title":"JWT Token Authentication and Authorisation with the Keycloak‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#jwt-token-authentication-and-authorisation-with-the-keycloak","content":" ","version":"Next","tagName":"h2"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#introduction-1","content":" Keycloak is an open-source identity and access management solution that provides robust authentication, authorization, and user management capabilities. It allows organizations to secure their applications and services by centralizing user authentication and authorization processes. Keycloak supports various identity protocols, including OAuth 2.0 and OpenID Connect, making it a versatile solution for securing modern web applications.  The Cloud Agent utilizes the following Keycloak features:  Authentication with JWT Token with a configured flow according to the ADRAuthentication with JWT Token using token exchangeAuthorization with roles claim supporting both Keycloak RealmRole and ClientRoleAuthorization with JWT Token and RPT according to authorization servicesbased on UMA 2.0 specificationand ADR  When the JWT Token authentication is enabled, it includes protection for all multi-tenant and administrative endpoints of the Cloud Agent. Two mechanisms get utilized in JWT authorization:  Role-based authorization It implements this ADR, which can authorize both the administrator and tenant role. Each role is allowed to operate on different parts of the Agent Administrators are permitted to oversee the wallet management, while tenants are allowed to utilize the wallet and engage in SSI interactions. UMA resource permission When the role is tenant, the Agent must know which wallet the tenant can access. The UMA permission model is employed to configure the tenant's permissions for the wallet.  ","version":"Next","tagName":"h3"},{"title":"Sequence Diagrams‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#sequence-diagrams","content":" The following sequence diagrams illustrate the Cloud Agent and Keycloak interaction during the authentication and authorization processes.  User onboarding and configuration‚Äã    User Authentication‚Äã    ","version":"Next","tagName":"h3"},{"title":"Role-based authorization‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#role-based-authorization","content":" The Agent has a simple mechanism for role-based authorization. It expects the JWT to include a roles claim in the payload, identifying the role such as admin or tenant. The user must belong to one of these roles but not both. If unspecified, the Agent infers the tenant role. The location of the roles claim is also configurable, allowing flexible IAM configuration. As a result, the Agent can support both Keycloak RealmRoles and ClientRoles based on the configuration. Using the environment variable, set the path as: KEYCLOAK_ROLES_CLAIM_PATH.  If Keycloak RealmrRole is used, follow this instruction on Keycloak and the KEYCLOAK_ROLES_CLAIM_PATH should be set to realm_access.roles.  If Keycloak ClientRole is used, follow this instruction on Keycloak and the KEYCLOAK_ROLES_CLAIM_PATH should be set to resource_access.&lt;KEYCLOAK_CLIENT_ID&gt;.roles.  ","version":"Next","tagName":"h3"},{"title":"UMA permission configuration‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#uma-permission-configuration","content":" The current authorization logic is built on the UMA specification, configuring permissions as user A controls resource W. In this model, user A is a registered user in Keycloak, and wallet W is a resource registered in Keycloak.  These configurations are managed manually in Keycloak. However, for a better experience, the Agent can execute these actions through the REST API endpoint. For each wallet, a corresponding resource gets created with the name wallet-wallet_id in Keycloak. Similarly, a corresponding policy is created for each user and resource with the name user userId on wallet wallet_resource_name permission.  The REST API endpoint to configure permissions in Keycloak is:  POST /wallets/{walletId}/uma-permissions   with a body containing subject as UUID.  Authenticated users (admin or the user owning the wallet) can configure permissions in Keycloak for the wallet.  ","version":"Next","tagName":"h3"},{"title":"Migration from apikey authentication‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#migration-from-apikey-authentication","content":" The apikey authentication can work in parallel with the JWT authentication to call the REST API endpoints together with the JWT token.  The migration from API key authentication to JWT authentication is possible using the following steps:  Create a user in Keycloak.Configure the authentication flow in Keycloak.Call the REST API endpoint to configure permissions in Keycloak with a valid API key token.Authenticate with Keycloak and obtain the JWT token.Call the REST API endpoints with a valid JWT token.  ","version":"Next","tagName":"h3"},{"title":"Self-Service Wallet Registration‚Äã","type":1,"pageTitle":"Authentication and Authorisation","url":"/docs/home/identus/cloud-agent/authentication#self-service-wallet-registration","content":" The Cloud Agent supports self-service wallet registration for the users. When the user is registered in the Keycloak and has the valid JWT token, the user can register the wallet in the Cloud Agent. You can use the wallet management endpoints of the REST API for wallet registration:  POST /wallets { &quot;seed&quot;: &quot;secured-seed-value&quot;, &quot;name&quot;: &quot;wallet-name&quot; }   The user can register the wallet only for himself, so the x-api-key header is not required and the seed value is not shared.  The corresponding wallet resource is created in Keycloak, and the user is granted access to this resource. ","version":"Next","tagName":"h2"},{"title":"Building Blocks","type":0,"sectionRef":"#","url":"/docs/home/identus/cloud-agent/building-blocks","content":"","keywords":"","version":"Next"},{"title":"Apollo - Cryptography Module‚Äã","type":1,"pageTitle":"Building Blocks","url":"/docs/home/identus/cloud-agent/building-blocks#apollo---cryptography-module","content":" Apollo is one of the building blocks of Identus. It is a suite of cryptographic primitives ensuring data security during storage and handling. Cryptographic primitives are mathematical algorithms and protocols that form the foundation for secure communication and data protection.  The primary purpose of Apollo is to provide data integrity, authenticity, and confidentiality, which are essential components of secure information systems. Apollo ensures that tampering, unauthorized access, and other security threats do not compromise the protection of user data, giving users confidence in its security.  Apollo utilizes cryptographic hash functions to create digital fingerprints of data for detecting any changes or modifications to the original data. These functions ensure that the data stored and processed remains authentic and unaltered.  For authenticity, Apollo uses digital signatures to authenticate the identity of the sender and recipient of data and ensure that the data has not been tampered with during transmission.  Finally, for confidentiality, Apollo uses encryption algorithms to protect sensitive data from unauthorized access and exposure. This feature helps ensure that sensitive information remains confidential and protected against cyber-attacks and data breaches.  Overall, the Apollo building block is an essential component of Identus, providing a secure and reliable means of protecting data stored and processed within the platform.  ","version":"Next","tagName":"h2"},{"title":"Castor - DID Module‚Äã","type":1,"pageTitle":"Building Blocks","url":"/docs/home/identus/cloud-agent/building-blocks#castor---did-module","content":" Castor is a building block of Identus that provides a set of DID operations, allowing users to create, manage, and resolve DIDs.  A DID Document is a JSON-LD document that contains information about a DID. It includes information such as the public keys associated with the DID, the authentication mechanisms, and linked services. Castor consists of a resolver that resolves a DID to its associated DID Document. The lookup service allows users to retrieve the DID Document for a given DID.  Castor supports a variety of DID methods, including full support of the in-house did:prism method and other widely-used methods such as the Peer DID method, enabling users to choose the DID method that best suits their needs and allows for interoperability with other systems and platforms.  Castor gives users complete control over their DIDs, including creating new DIDs, updating existing ones, and deleting or deactivating them if necessary.  ","version":"Next","tagName":"h2"},{"title":"Pollux - Verifiable Credential Module‚Äã","type":1,"pageTitle":"Building Blocks","url":"/docs/home/identus/cloud-agent/building-blocks#pollux---verifiable-credential-module","content":" Pollux is a building block of Identus that provides a set of operations for managing and verifying verifiable credentials (VCs). This building block is a vital aspect of the self-sovereign identity paradigm. With Pollux, users can issue, manage, and verify VCs in a privacy-preserving manner. Pollux ensures that users can share their credentials with others while maintaining control over their personal information and protecting it from unauthorized access and exposure.  In terms of issuing credentials, Pollux provides the necessary functions to create and issue VCs, including the ability to specify the type of credential, the attributes it represents, and the trusted party attesting to the credentials.  For managing credentials, Pollux allows users to store and manage their VCs in a secure and easily accessible manner, which includes adding, updating, or revoking credentials as needed.  Finally, for verifying credentials, Pollux provides the tools to check a given credential's validity and authenticate that a trusted party has issued it. Pollux includes the ability to check the status of the credential, such as whether it has been revoked or not, and to validate that the attributes it represents are accurate and up-to-date.  ","version":"Next","tagName":"h2"},{"title":"Mercury - DIDComm Module‚Äã","type":1,"pageTitle":"Building Blocks","url":"/docs/home/identus/cloud-agent/building-blocks#mercury---didcomm-module","content":" Mercury is a building block of Identus that provides a set of secure, standards-based communication protocols and infrastructure for establishing and managing trusted, peer-to-peer connections between decentralized identifiers. DIDs allow their owners to manage their identity and interact with others in a privacy-preserving manner.  Additionally, using standards-based protocols ensures that the communication between DIDs is interoperable, meaning that different systems and platforms can communicate seamlessly. ","version":"Next","tagName":"h2"},{"title":"Glossary","type":0,"sectionRef":"#","url":"/docs/home/concepts/glossary","content":"","keywords":"","version":"Next"},{"title":"A‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#a","content":" ","version":"Next","tagName":"h2"},{"title":"Access control‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#access-control","content":" Access control mechanisms define how tenants/entities can access and interact with their data and resources and control who can access them. It helps enforce security and privacy policies in a multi-tenant environment.  ","version":"Next","tagName":"h3"},{"title":"Anchoring‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#anchoring","content":" The act of anchoring is tying to something that is trusted by assumption. Usually some sort of an entity with authority.  ","version":"Next","tagName":"h3"},{"title":"Administrator‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#administrator","content":" An administrator is a role who oversees the agent and releated resources, including tenant, Edge Agent management, or external services. Admistrator typically does not participate in day-to-day SSI interactions.  ","version":"Next","tagName":"h3"},{"title":"C‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#c","content":" ","version":"Next","tagName":"h2"},{"title":"Claim‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#claim","content":" An assertion made about a subject.  ","version":"Next","tagName":"h3"},{"title":"Claims‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#claims","content":" Synonym of claim in the plural form.  ","version":"Next","tagName":"h3"},{"title":"Cloud Agent‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#cloud-agent","content":" The Cloud Agent is a scaleable, easy-to-use, robust, and W3C standards-based agent that provides self-sovereign identity (SSI) services to build products and solutions based on it. The Cloud Agent exposes REST API for integration with any programming language.  ","version":"Next","tagName":"h3"},{"title":"Controller‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#controller","content":" See DID Controller.  ","version":"Next","tagName":"h3"},{"title":"Connection Protocol‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#connection-protocol","content":" The protocol provides endpoints for creating and managing connections, as well as for accepting invitations.  ","version":"Next","tagName":"h3"},{"title":"connection invitation‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#connection-invitation","content":" An invitation from one entity to another to establish a connection.  ","version":"Next","tagName":"h3"},{"title":"Connection request‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#connection-request","content":" A request to establish a connection.  ","version":"Next","tagName":"h3"},{"title":"Credential Definition‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#credential-definition","content":" The term refers to the AnonCreds v1 implementation. Credential Definition contains public and private part. The public part is published and available for anyone to use to verify the credential. The private part is used to issue credentials.  ","version":"Next","tagName":"h3"},{"title":"Credential schema‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#credential-schema","content":" A data template for verifiable credentials (VCs). It contains claims of the VCs, credential schema author, type, name, version, and proof of authorship.  ","version":"Next","tagName":"h3"},{"title":"Credential offer‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#credential-offer","content":" An Issuer sends a request to the Holder to accept a verifiable credential.  ","version":"Next","tagName":"h3"},{"title":"Credential request‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#credential-request","content":" When the Holder accepts or rejects a credential offer, a credential request is created from it.  ","version":"Next","tagName":"h3"},{"title":"D‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#d","content":" ","version":"Next","tagName":"h2"},{"title":"Decentralized Identifier‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#decentralized-identifier","content":" A globally unique persistent identifier that does not require a centralized registration authority and is often cryptographically generated. All DIDs use distributed ledger technology (DLT) or some other decentralized network.  ","version":"Next","tagName":"h3"},{"title":"DID‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#did","content":" See decentralized identifier  ","version":"Next","tagName":"h3"},{"title":"DIDs‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#dids","content":" See decentralized identifiers  ","version":"Next","tagName":"h3"},{"title":"DIDComm‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#didcomm","content":" A set of secure, standards-based communications protocols to establish and manage trusted, peer-to-peer connections and interactions between DIDs in a transport-agnostic and interoperable manner.  ","version":"Next","tagName":"h3"},{"title":"DID controller‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#did-controller","content":" The entity that has control of the DID  ","version":"Next","tagName":"h3"},{"title":"DID document‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#did-document","content":" A set of data that describes the DID subject, including mechanisms such as cryptographic public keys. The entire W3C DID specification is here.  ","version":"Next","tagName":"h3"},{"title":"DID method‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#did-method","content":" The DID method defines how to implement a specific DID method schema. The specification defines the DID method, including precise operations to create DIDs and DID documents and how to resolve, update, and deactivate them.  ","version":"Next","tagName":"h3"},{"title":"DID resolution‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#did-resolution","content":" The process for retrieving a DID document.  ","version":"Next","tagName":"h3"},{"title":"DID subject‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#did-subject","content":" The entity is identified by a DID and described by a DID documents. Anything can be a DID subject: person, group, organization, physical thing, digital thing, etc.  ","version":"Next","tagName":"h3"},{"title":"DID Url‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#did-url","content":" A DID itself is a type of a URL, while did is a registered schema type, like http and https. With Identus, we refer DID URLs to a DID that includes path and query parameters and can resolve a resource via one of the service endpoints in the DID document. For example:  did:prism:9f847f8bbb66c112f71d08ab39930d468ccbfe1e0e1d002be53d46c431212c26?resourceService=agent-base-url&amp;resourcePath=schema-registry/schemas/did-url&amp;resourceHash=4074bb1a8e0ea45437ad86763cd7e12de3fe8349ef19113df773b0d65c8a9c46   ","version":"Next","tagName":"h3"},{"title":"Distributed Ledger Technology (DLT)‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#dlt","content":" A distributed database or ledger establishes confidence for the participants to rely on the data recorded. Typically these databases use nodes and a consensus protocol to confirm the order of cryptographically signed transactions. Linking the transactions over time creates a historical ledger that is effectively immutable.  ","version":"Next","tagName":"h3"},{"title":"E‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#e","content":" ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#endpoints","content":" A network address at which services operate on behalf of a DID subject.  ","version":"Next","tagName":"h3"},{"title":"Entity‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#entity","content":" An entity, in the context of the Identus platform, is an identity representing a user or system. Each entity possesses an Edge Agent and is associated with an authentication method. Entities are crucial for secure and verifiable transactions within the SSI ecosystem.  ","version":"Next","tagName":"h3"},{"title":"Edge Agent SDK‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#edge-agent-sdk","content":" For use with web and mobile (iOS, Android, TypeScript) enable identity holders to store credentials and respond to proof requests.  ","version":"Next","tagName":"h3"},{"title":"Edge Agent‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#edge-agent","content":" A Edge Agent can perform DID operations, like create, update, and deactivate. It also enables management of verifiable credentials, and communications.  ","version":"Next","tagName":"h3"},{"title":"G‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#g","content":" ","version":"Next","tagName":"h2"},{"title":"Governance framework‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#governance-framework","content":" See Trust Framework  ","version":"Next","tagName":"h3"},{"title":"H‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#h","content":" ","version":"Next","tagName":"h2"},{"title":"Holder‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#holder","content":" An entity will take on this role by possessing one or more verifiable credentials and generating verifiable presentations. Also takes the role of a prover when presenting verifiable credentials for verification.  ","version":"Next","tagName":"h3"},{"title":"I‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#i","content":" ","version":"Next","tagName":"h2"},{"title":"IAM‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#iam","content":" IAM (Identity and Access Management), is a framework that controls and manages user access to computing resources. It ensures secure authentication, appropriate authorization, and effective auditing to protect against unauthorized access in a computing environment.  ","version":"Next","tagName":"h3"},{"title":"Identus‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#identus","content":" A suite of products that provides infrastructure for decentralized identity.  ","version":"Next","tagName":"h3"},{"title":"IDP‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#idp","content":" An Identity Provider (IDP) is a centralized service that manages and authenticates user identities, allowing individuals to access multiple applications and services with a single set of credentials. IDPs play a crucial role in Single Sign-On (SSO) systems, simplifying user access management across various platforms and services.  ","version":"Next","tagName":"h3"},{"title":"Invitation‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#invitation","content":" Sent by the inviter to the invitee to request and establish a connection.  ","version":"Next","tagName":"h3"},{"title":"Invitee‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#invitee","content":" A subject that receives a connection invitation and accepts it by sending a connection request.  ","version":"Next","tagName":"h3"},{"title":"Inviter‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#inviter","content":" A subject that initiates a connection request by sending a connection invitation.  ","version":"Next","tagName":"h3"},{"title":"Issuer‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#issuer","content":" An entity that asserts claim(s) about one or more subjects then creates a verifiable credential from these claims and transmits the VC to a holder.  ","version":"Next","tagName":"h3"},{"title":"Issue Credential Protocol‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#issue-credential-protocol","content":" Allows you to create, retrieve, and manage issued verifiable credentials (VCs) between a VC issuer and a VC holder.  ","version":"Next","tagName":"h3"},{"title":"K‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#k","content":" ","version":"Next","tagName":"h2"},{"title":"Keycloak Service‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#keycloak-service","content":" Keycloak is an open-source IAM solution that provides authentication, authorization, and single sign-on capabilities for applications and services. It allows organizations to secure their applications by managing user identities, enforcing security policies, and facilitating seamless and secure user authentication.  ","version":"Next","tagName":"h3"},{"title":"M‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#m","content":" ","version":"Next","tagName":"h2"},{"title":"Mediator‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#mediator","content":" A mediator participates in agent-to-agent message delivery that the sender must model. It has its keys and will deliver messages only after decrypting an outer envelope to reveal a forward request. Many types of mediators may exist, but two important ones should be widely understood, as they commonly manifest in DID Docs:  A service that hosts many cloud agents at a single endpoint to provide herd privacy (an &quot;agency&quot;) is a mediator.A cloud-based agent that routes between/among the edges of a sovereign domain is a mediator. For a detailed overview of mediators refer to the RFC0046: Mediators and Relays.  ","version":"Next","tagName":"h3"},{"title":"Mutli-tenancy‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#mutli-tenancy","content":" Multi-tenancy is a core capability of the Identus platform, allowing it to serve numerous users/identities while logically isolating their Edge Agent assets. This segregation maintains data privacy and security, enhancing scalability and resource sharing within the SSI ecosystem.  ","version":"Next","tagName":"h3"},{"title":"O‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#o","content":" ","version":"Next","tagName":"h2"},{"title":"OIDC‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#oidc","content":" OIDC (OpenID Connect), is an authentication protocol built on top of OAuth 2.0. It enables secure user authentication and allows applications to obtain information about users, facilitating single sign-on (SSO) and identity verification in web and mobile applications.  ","version":"Next","tagName":"h3"},{"title":"OID4VCI‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#oid4vci","content":" OID4VCI (OpenID for Verifiable Credential Issuance) defines an authorization mechanism for issuing credentials using the OAuth2 protocol. It grants the holder access to credentials protected by the issuer's authorization server.  ","version":"Next","tagName":"h3"},{"title":"P‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#p","content":" ","version":"Next","tagName":"h2"},{"title":"Peer DID‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#peer-did","content":" They are specialized DIDs for peer-to-peer relationships.  ","version":"Next","tagName":"h3"},{"title":"Peer DID Method‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#peer-did-method","content":" A rich DID method that has no blockchain dependencies. The verifiable data registry is a synchronization protocol between peers. See the Peer DID Method specification.  ","version":"Next","tagName":"h3"},{"title":"Present Proof Protocol‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#present-proof-protocol","content":" The protocol provides endpoints for a Verifier to request new proof presentations from Holder/Provers and for a Holder/Prover to respond to the presentation request using a specific verifiable credential they own.  ","version":"Next","tagName":"h3"},{"title":"Proof‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#proof","content":" A cryptographic mechanism that proves the information in a verifiable credential or verifiable presentation has not been tampered with. Many types of cryptographic proofs include but are not limited to digital signatures, zero-knowledge proofs, Proofs of Work, and Proofs of Stake.  ","version":"Next","tagName":"h3"},{"title":"Proof presentation‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#proof-presentation","content":" See verifiable presentation. Also see Present Proof Protocol.  ","version":"Next","tagName":"h3"},{"title":"Protection API‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#protection-api","content":" The Protection API in User-Managed Access (UMA) is a set of endpoints that enables resource servers to enforce access policies and protect resources. It provides a mechanism for resource servers to interact with the authorization server to obtain necessary information and permissions, ensuring that access to user-managed resources aligns with the user's specified policies.  ","version":"Next","tagName":"h3"},{"title":"Protection API‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#protection-api-1","content":" The Protection API in User-Managed Access (UMA) is a set of endpoints that enables resource servers to enforce access policies and protect resources. It provides a mechanism for resource servers to interact with the authorization server to obtain necessary information and permissions, ensuring that access to user-managed resources aligns with the user's specified policies.  ","version":"Next","tagName":"h3"},{"title":"Protocol buffer‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#protocol-buffer","content":" Also known as protobuf.  ","version":"Next","tagName":"h3"},{"title":"Prism envelope‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#prism-envelope","content":" A response type for endpoints that implement prism anoncred method  {&quot;resource&quot;: &lt;encoded resource as string&gt;, url: &lt;did url at which this resource can be resolved&gt;}   ","version":"Next","tagName":"h3"},{"title":"R‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#r","content":" ","version":"Next","tagName":"h2"},{"title":"Relay‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#relay","content":" A relay is an entity that passes along agent-to-agent messages depending on the sender's encryption choices. It does not decrypt anything. Relays can change the transport for a message (e.g., accept an HTTP POST, then turn around and emit an email, or accept a Bluetooth transmission, then turn around and transmit something in a message queue). Mix networks like TOR are a type of relay. For a detailed overview of relays refer to the RFC0046: Mediators and Relays.  ","version":"Next","tagName":"h3"},{"title":"Relying party‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#relying-party","content":" A party that depends on the authenticity of digital signatures.  ","version":"Next","tagName":"h3"},{"title":"RPT‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#rpt","content":" Requesting Party Token (RPT) is a concept within the UMA framework. It represents a token obtained by a client application from an authorization server, allowing the client to access protected resources on behalf of the requesting party (user), based on the user's policies and consent.  ","version":"Next","tagName":"h3"},{"title":"S‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#s","content":" ","version":"Next","tagName":"h2"},{"title":"Secrets storage‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#secrets-storage","content":" This component securely stores sensitive information, such as private keys associated with an individual's digital identity, Edge Agent seed, etc. Secrets storage plays a crucial role in SSI implementations because it ensures that sensitive information is securely stored and protected against unauthorized access or disclosure  ","version":"Next","tagName":"h3"},{"title":"Subject‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#subject","content":" See DID Subject  ","version":"Next","tagName":"h3"},{"title":"SSI‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#ssi","content":" See Self-Sovereign Identity  ","version":"Next","tagName":"h3"},{"title":"Self-Sovereign Identity (SSI)‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#self-sovereign-identity","content":" An identity model that shifts control to the edges, focused on security, privacy using public/private key encryption.  ","version":"Next","tagName":"h3"},{"title":"T‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#t","content":" ","version":"Next","tagName":"h2"},{"title":"Tenant‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#tenant","content":" A tenant is an individual user, organization, or entity that utilizes the SSI platform. Each tenant has its isolated area within the system, maintaining the separation of assets.  ","version":"Next","tagName":"h3"},{"title":"Tenant Isolation‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#tenant-isolation","content":" Tenant isolation is a core capability of the Identus platform, allowing it to serve numerous users/identities while logically isolating their Edge Agent assets.  ","version":"Next","tagName":"h3"},{"title":"Tenant Management‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#tenant-management","content":" Tenant management encompasses the processes and tools used to onboard, provision, and manage tenants within the SSI platform, including user registration, role assignment, authentication method configuring, and access permissions.  ","version":"Next","tagName":"h3"},{"title":"Trust Framework‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#trust-framework","content":" A governing body that establishes rules, requirements, establishes operating procedures, and a trust registry for specific ecosystems.  ","version":"Next","tagName":"h3"},{"title":"Trust Registry‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#trust-registry","content":" A document that lists authorized issuers and verifiers established by the Trust framework.  ","version":"Next","tagName":"h3"},{"title":"U‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#u","content":" ","version":"Next","tagName":"h2"},{"title":"UMA‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#uma","content":" User-Managed Access (UMA) is an authorization framework that allows users to control and manage access to their online resources. UMA enables individuals to share their digital assets with others while maintaining control over who can access the information and for what purposes.  ","version":"Next","tagName":"h3"},{"title":"V‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#v","content":" ","version":"Next","tagName":"h2"},{"title":"Vault Service‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#vault-service","content":" HashiCorp Vault is a widely used open-source and enterprise-grade solution designed for securely storing, accessing, and managing secrets and sensitive data in modern computing environments. It offers a centralized platform for managing cryptographic keys, passwords, API keys, tokens, and other secrets.  ","version":"Next","tagName":"h3"},{"title":"Verifiable Credential (VC)‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#verifiable-credential","content":" A verifiable credential is a tamper-evident credential that contains one or more claims made by an issuer whose authorship can be cryptographically verified. It is possible to use VCs to create a verifiable presentation. Also, the claims in a VC can be about different subjects.  ","version":"Next","tagName":"h3"},{"title":"Verifiable Credentials (VCs)‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#verifiable-credentials","content":" Synonym of the Verifiable Credential (VC).  ","version":"Next","tagName":"h3"},{"title":"Verifiable Data Registry‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#verifiable-data-registry","content":" A system that mediates the creation and verification of identifiers, keys, and other relevant data.  ","version":"Next","tagName":"h3"},{"title":"Verifiable Presentation‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#verifiable-presentation","content":" Data is derived from one or more verifiable credentials, issued by issuers, and shared (presented) to a specific verifier. The verifiable presentation is tamper-evident and encoded in a way to trust the authorship of the data after a cryptographic verification.  ","version":"Next","tagName":"h3"},{"title":"Verifier‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#verifier","content":" An entity that receives one or more verifiable credentials optionally, inside a verifiable presentation. Also known as a relying party.  ","version":"Next","tagName":"h3"},{"title":"W‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#w","content":" ","version":"Next","tagName":"h2"},{"title":"Wallet SDK‚Äã","type":1,"pageTitle":"Glossary","url":"/docs/home/concepts/glossary#wallet-sdk","content":" A software development kit (SDK) that enables developers to build applications that interact with the Identus platform. The Wallet SDK provides a set of tools, libraries, and APIs that simplify the integration of SSI features, such as DID operations, verifiable credentials, and secure communications, into web and mobile applications. Wallet SDK is much wider term than Edge Agent SDK, as it includes all the features of Edge Agent SDK and more. ","version":"Next","tagName":"h3"},{"title":"DID management","type":0,"sectionRef":"#","url":"/docs/home/identus/cloud-agent/did-management","content":"","keywords":"","version":"Next"},{"title":"Managed PRISM DID‚Äã","type":1,"pageTitle":"DID management","url":"/docs/home/identus/cloud-agent/did-management#managed-prism-did","content":" The Cloud Agent simplifies identity management by effectively handling PRISM DIDs for users. Relying on a Cloud Agent-managed DID, users entrust the Cloud Agent with tasks such as creating, updating, storing, and using the PRISM DID.  The Cloud Agent employs hierarchical deterministic key derivation to manage the keys of the PRISM DID. The Cloud Agent calculates and stores the derivation path whenever an activity involves new key information, such as creating a new DID or adding a new key. It internally tracks the DID counter and key counter to increment the derivation path accordingly. Details about the Cloud Agent constructs key material from the seed are on the HD-key derivation decision record.  ","version":"Next","tagName":"h2"},{"title":"Managed Peer DID‚Äã","type":1,"pageTitle":"DID management","url":"/docs/home/identus/cloud-agent/did-management#managed-peer-did","content":" The Cloud Agent also manages Peer DIDs for DIDComm activities. The Key materials for Peer DIDs are randomly generated and stored securely in secret storage, allowing control of the Peer DID.  ","version":"Next","tagName":"h2"},{"title":"Storing key material‚Äã","type":1,"pageTitle":"DID management","url":"/docs/home/identus/cloud-agent/did-management#storing-key-material","content":" ","version":"Next","tagName":"h2"},{"title":"PRISM DID‚Äã","type":1,"pageTitle":"DID management","url":"/docs/home/identus/cloud-agent/did-management#prism-did","content":" PRISM DID management involves deriving key materials from a seed and derivation path. A corresponding derivation path is generated and stored in the database when creating a new DID or updating a new key. Only the derivation path, not the key material itself, is stored. The Cloud Agent can reconstruct and use key materials for PRISM DIDs by combining the stored derivation path with the provided seed at runtime.  The Cloud Agent itself does not store the wallet seed. However, the infrastructure hosting the Cloud Agent may choose to keep it based on operation requirements and security considerations.  ","version":"Next","tagName":"h3"},{"title":"Peer DID‚Äã","type":1,"pageTitle":"DID management","url":"/docs/home/identus/cloud-agent/did-management#peer-did","content":" The Cloud Agent securely stores the key materials of peer DIDs using secret storage. ","version":"Next","tagName":"h3"},{"title":"Environment Variables","type":0,"sectionRef":"#","url":"/docs/home/identus/cloud-agent/environment-variables","content":"","keywords":"","version":"Next"},{"title":"Hocon duration format‚Äã","type":1,"pageTitle":"Environment Variables","url":"/docs/home/identus/cloud-agent/environment-variables#hocon-duration-format","content":" Hocon duration format is a string that represents a duration of time. It is used in the configuration file to specify the duration of time in seconds, minutes, hours, etc.  ","version":"Next","tagName":"h2"},{"title":"Null default value‚Äã","type":1,"pageTitle":"Environment Variables","url":"/docs/home/identus/cloud-agent/environment-variables#null-default-value","content":" Null default value means that the variable is not set by default and must be set by the user based on the environment configuration. ","version":"Next","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/home/identus/cloud-agent/overview","content":"","keywords":"","version":"Next"},{"title":"Cloud Agent Features‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/cloud-agent/overview#cloud-agent-features","content":" This document provides an overview of the Cloud Agent feature set. This document is manually updated; as such, it may not be up to date with the most recent release of Cloud Agent.  Last Update: 2023-03-06, Release 0.48.3  ","version":"Next","tagName":"h2"},{"title":"Platform Support‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/cloud-agent/overview#platform-support","content":" Platform\tSupported\tNotesServer\t‚úÖ Kubernetes\t‚úÖ Docker\t‚úÖ\tIOG will publish docker images on Docker Hub in future. A link to the IOG Docker Hub for Cloud Agent will be provided once published. Desktop\t‚ö†Ô∏è\tCould be run as a local service on the computer iOS\t‚ùå Android\t‚ùå Browser\t‚ùå\t  ","version":"Next","tagName":"h2"},{"title":"Agent Types‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/cloud-agent/overview#agent-types","content":" Role\tSupported\tNotesIssuer\t‚úÖ Holder\t‚úÖ Verifier\t‚úÖ Mediator Service\t‚úÖ\t  ","version":"Next","tagName":"h2"},{"title":"Credential Types‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/cloud-agent/overview#credential-types","content":" Credential Type\tSupported\tNotesW3C Standard Verifiable Credentials\t‚úÖ\tSupports JSON and JSON-LD Credentials encoded as JWT using the JsonWebSignature2020 with ES256K (secp256k1) signature suite. Supports the DIF Presentation Exchange data format for presentation requests and presentation submissions.  ","version":"Next","tagName":"h2"},{"title":"DID Methods‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/cloud-agent/overview#did-methods","content":" Method\tSupported\tNotesdid:prism\t‚úÖ\tW3C Decentralized Identifiers (DIDs) v1.0 compliant PRISM DID Method specification. A distributed ledger is the default Verifiable Data Registry (VDR) to anchor DIDs. PRISM DID Method is used for Verifiable Credentials and Verifiable Presentations. did:peer\t‚úÖ\tUsed for P2P connections Universal Resolver\tüöß\t  ","version":"Next","tagName":"h2"},{"title":"DIDComm‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/cloud-agent/overview#didcomm","content":" Version\tSupportedV1\t‚ùå V2\t‚úÖ  ","version":"Next","tagName":"h2"},{"title":"DIDComm Protocol Support‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/cloud-agent/overview#didcomm-protocol-support","content":" Protocol\tSupportedMediator Coordinator\t‚úÖ DIDComm V2 Messaging\t‚úÖ DIDComm V2 Issue Credential\t‚úÖ DIDComm V2 Present Proof\t‚úÖ DIDComm V2 Report Problem\t‚úÖ DIDComm V2 Routing Protocol\t‚úÖ  ","version":"Next","tagName":"h2"},{"title":"Supported Aries RFCs‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/cloud-agent/overview#supported-aries-rfcs","content":" RFC\tSupported0023-did-exchange\t‚úÖ 0434-out-of-band-protocol\t‚úÖ 0453-issue-credential-protocol\t‚úÖ 0453-present-proof-protocol\t‚úÖ ","version":"Next","tagName":"h2"},{"title":"VDR","type":0,"sectionRef":"#","url":"/docs/home/identus/cloud-agent/vdr","content":"","keywords":"","version":"Next"},{"title":"HTTP binding‚Äã","type":1,"pageTitle":"VDR","url":"/docs/home/identus/cloud-agent/vdr#http-binding","content":" Although the VDR implementation is available as a library, it is also integrated intothe Cloud Agent to expose its functionality via HTTP, supporting use cases where direct library integration is not feasible.  The Cloud Agent exposes the VDR functionality through a RESTful stlye API, providing an interface analogous to direct method calls.  Example  Operation\tHTTP Endpointcreate(data, options)\tPOST /vdr/entries?drid=... read(url, options)\tGET /vdr/entries?url=... update(url, data, options)\tPUT /vdr/entries?url=... delete(url, options)\tDELETE /vdr/entries?url=...  ","version":"Next","tagName":"h2"},{"title":"Selecting VDR drivers‚Äã","type":1,"pageTitle":"VDR","url":"/docs/home/identus/cloud-agent/vdr#selecting-vdr-drivers","content":" The driver is a key component of VDR, providing the actual implementation for the storage backend. The cloud agent acts as a proxy, supporting multiple drivers and allowing users to choose the one that best fits their needs. To select the appropriate driver, specify the following parameters when creating a VDR entry.  Parameters\tDescriptiondrid\tDriver ID drf\tDriver famely drv\tDriver version  Currently, the Cloud Agent supports the following drivers  Driver\tID\tFamily\tVersion\tDescriptionIn-memory\tmemory\tmemory\t0.1.0\tDriver storing data in-memory for testing Database\tdatabase\tdatabase\t0.1.0\tDriver storing data in local database testing purposes  For a full range of parameters and driver options, please refer the the VDR specification. ","version":"Next","tagName":"h2"},{"title":"Secrets Storage","type":0,"sectionRef":"#","url":"/docs/home/identus/cloud-agent/secrets-storage","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Secrets Storage","url":"/docs/home/identus/cloud-agent/secrets-storage#introduction","content":" To ensure maximum security, storing sensitive information, including secrets, actively and securely in the Secrets Storage. The Cloud Agent manages the following types of secrets:  seed: a secret used to derive cryptographic keysprivate key: a secret used to sign and decrypt dataany other sensitive data from entities' (for instance, credential definition and the link-secret used by the AnonCreds)  The default secret storage for the Cloud Agent is the HashiCorp Vault Service. Other implementations of secret storage can be implemented based on the needs.  ","version":"Next","tagName":"h2"},{"title":"Technical Overview‚Äã","type":1,"pageTitle":"Secrets Storage","url":"/docs/home/identus/cloud-agent/secrets-storage#technical-overview","content":" ","version":"Next","tagName":"h2"},{"title":"Secrets Engine Configuration‚Äã","type":1,"pageTitle":"Secrets Storage","url":"/docs/home/identus/cloud-agent/secrets-storage#secrets-engine-configuration","content":" The Vault service uses a secrets engine to store secrets. KV2 secrets engine is used to keep secrets in the Vault service and provides the following features:  encrypted at restencrypted in transitversionedcan be deleted, restored, and rolled back to a previous versionavailable via REST API, WEB UI, and command client  ","version":"Next","tagName":"h3"},{"title":"Secrets Storage Sequence Diagram‚Äã","type":1,"pageTitle":"Secrets Storage","url":"/docs/home/identus/cloud-agent/secrets-storage#secrets-storage-sequence-diagram","content":"   ","version":"Next","tagName":"h3"},{"title":"Naming Convention for the Vault Assets‚Äã","type":1,"pageTitle":"Secrets Storage","url":"/docs/home/identus/cloud-agent/secrets-storage#naming-convention-for-the-vault-assets","content":" Each asset is assigned a unique name to store the assets in the Vault service. The Vault is a key/value store with metadata attached to the key and versioning.  The naming convention for the Vault assets is a matter of implementation. For a multi-tenant configuration, the Wallet requires all the asset storage under the path containing the `wallet-id'.  As an example, the seed could be stored in the path below:  &lt;wallet-id&gt;/seed value=&lt;base64-encoded-value&gt; &lt;metadata&gt;   The following path can store the private keys for the DID:  &lt;wallet-id&gt;/dids/prism/&lt;did-ref&gt;/keys/&lt;key-purpose&gt;/&lt;key-index&gt;/&lt;operation-hash&gt; value=&lt;base64-encoded-value&gt; &lt;metadata&gt;   where:  wallet-id is the unique identity of the Walletdid-ref is the DID refkey-purpose is the key purpose according to the PRISM DID Method specificationkey-index is the key index. Starting from 0 and increasing incrementally after each key rotationoperation-hash is the reference to the updated DID document operationbase64-encoded-value is the base64-encoded value of the keymetadata is the key/value metadata attached to the key used to store additional information about the key, such as seed or key-derivation-path  The following path can store the key material of the DID peer:  &lt;wallet-id&gt;/dids/peer/&lt;did-ref&gt;/keys/&lt;key-purpose&gt; value=&lt;base64-encoded-value&gt; &lt;metadata&gt;   ","version":"Next","tagName":"h3"},{"title":"Links:‚Äã","type":1,"pageTitle":"Secrets Storage","url":"/docs/home/identus/cloud-agent/secrets-storage#links","content":" HashiCorm VaultVault KV Secrets Engine ","version":"Next","tagName":"h2"},{"title":"DID PRISM Resolver in SDKs","type":0,"sectionRef":"#","url":"/docs/home/identus/did-prism-resolver/did-prism-resolver-sdk","content":"","keywords":"","version":"Next"},{"title":"SDK-TS‚Äã","type":1,"pageTitle":"DID PRISM Resolver in SDKs","url":"/docs/home/identus/did-prism-resolver/did-prism-resolver-sdk#sdk-ts","content":" The SDK-TS provides a way to resolve PRISM DIDs and retrieve their associated DID Documents. The resolver that can be configured with the corresponding URL is the PrismShortFormDIDResolver.  ","version":"Next","tagName":"h2"},{"title":"SDK-Swift‚Äã","type":1,"pageTitle":"DID PRISM Resolver in SDKs","url":"/docs/home/identus/did-prism-resolver/did-prism-resolver-sdk#sdk-swift","content":" The SDK-Swift provides a way to resolve PRISM DIDs and retrieve their associated DID Documents. The resolver that can be configured with the corresponding URL is the PrismShortFormResolver  ","version":"Next","tagName":"h2"},{"title":"SDK-KMP‚Äã","type":1,"pageTitle":"DID PRISM Resolver in SDKs","url":"/docs/home/identus/did-prism-resolver/did-prism-resolver-sdk#sdk-kmp","content":" SDK-KMP cannot resolve the short form DIDs, but it can resolve the long form DIDs. ","version":"Next","tagName":"h2"},{"title":"DID PRISM Resolver","type":0,"sectionRef":"#","url":"/docs/home/identus/did-prism-resolver/","content":"","keywords":"","version":"Next"},{"title":"Cloud Agent and Prism Node‚Äã","type":1,"pageTitle":"DID PRISM Resolver","url":"/docs/home/identus/did-prism-resolver/#cloud-agent-and-prism-node","content":" The Cloud Agent together with the Prism Node provides a comprehensive solution for managing and resolving DIDs. The Prism Node is a microservice that exposes gRPC endpoints and implements did:prism events, allowing users to create, update, deactivate, and resolve DIDs in a secure and privacy-preserving manner. This solution is designed for the enterprise use case and requires setting up the full Cardano stack together with the Prism Node.  ","version":"Next","tagName":"h2"},{"title":"Universal Resolver‚Äã","type":1,"pageTitle":"DID PRISM Resolver","url":"/docs/home/identus/did-prism-resolver/#universal-resolver","content":" The Universal Resolver is a service that provides a unified interface for resolving DIDs across different DID methods. It allows users to resolve DIDs from various DID methods, including PRISM, and retrieve their associated DID Documents. The did:prism has been integrated into the Universal Resolver, enabling users to resolve PRISM DIDs using the same interface as other DID methods.  According to the did:prism specification, the Universal Resolver resolves PRISM DIDs published on the Cardano mainnet.  The Universal Resolver endpoint for PRISM DIDs is:https://dev.uniresolver.io/  ","version":"Next","tagName":"h2"},{"title":"SDKs‚Äã","type":1,"pageTitle":"DID PRISM Resolver","url":"/docs/home/identus/did-prism-resolver/#sdks","content":" Each SDK provides a way to resolve DIDs and retrieve their associated DID Documents. The SDKs are designed to be easy to use and integrate into existing applications, allowing developers to quickly add DID resolution capabilities to their projects. Each SDK implements the DIDResolver interface via a URL. In order to configure the DIDResolver the corresponding endpoint should be set in the SDK configuration.  ","version":"Next","tagName":"h2"},{"title":"Identus Community Project‚Äã","type":1,"pageTitle":"DID PRISM Resolver","url":"/docs/home/identus/did-prism-resolver/#identus-community-project","content":" ","version":"Next","tagName":"h2"},{"title":"Blocktrust Node‚Äã","type":1,"pageTitle":"DID PRISM Resolver","url":"/docs/home/identus/did-prism-resolver/#blocktrust-node","content":" The Blocktrust Node is a community alternative to the Prism Node, providing similar functionality for resolving DIDs and managing DID Documents. The publicly available Blocktrust Node can be used to resolve PRISM DIDs and retrieve their associated DID Documents.  The list of the Blocktrust endpoints for the PRISM DIDs is:https://statistics.blocktrust.dev/resolve  ","version":"Next","tagName":"h3"},{"title":"Neoprism‚Äã","type":1,"pageTitle":"DID PRISM Resolver","url":"/docs/home/identus/did-prism-resolver/#neoprism","content":" The Neoprism is a community alternative to the Prism Node, providing similar functionality for resolving DIDs and managing DID Documents. The publicly available Neoprism can be used to resolve PRISM DIDs and retrieve their associated DID Documents.  The instance of the Neoprism for the PRISM DIDs published in the Cardano mainnet is:https://neoprism.patlo.dev/resolver  ","version":"Next","tagName":"h3"},{"title":"PRISM Indexer‚Äã","type":1,"pageTitle":"DID PRISM Resolver","url":"/docs/home/identus/did-prism-resolver/#prism-indexer","content":" The PRISM Indexer is a community project that uses the Blockfrost API to fetch all relative transactions and metadata from the Cardano Blockchain relative to did:prism protocol. It them passes the method data into PRISM events and indexes them by DID.  After having the sequence of events relative to each did:prism the indexer is capable of validate the PRISM Events and build the corresponding DID Document. This validation can also be performed locally on the end-user's device. Requiring zero trust on Indexer since from the PRISM events you can verify the authenticity from the SSI itself.  The project is distributed as a Docker image and available in fmgp's Docker Hub. This image store the status off all DIDs in the file system. But the image is light enough that is capable of running constantly in GitHub actions.  The code is also distributed as a library in Maven Central repository and it's capable to run on the JVM and JS Environments.  Prism-VDR‚Äã  The prism-vdr is alternative PRISM DID indexer that stores all the PRISM DIDs events and their associated DID Documents in the GitHub repository. The PRISM-VDR supports the following Cardano networks:  mainnet networkpreprod network  Blockfrost &amp; PRISM‚Äã  Blockfrost is also constantly running the PRISM Indexer for all the Cardano networks and uploading the status to a Blockfrost's GitHub repository:  mainnet networkpreprod networkpreview network  Blockfrost is also developing a experimental API for resolving and managing the PRISM DIDs.  scala-did‚Äã  Its a tool using the same library as PRISM Indexer but running the in JS Environment. Its fetchs the all PRISM events from one DID from the Prism-VDR Github repos and resolves into a DID Document.  A instance of this tool can be found in did.fmgp.app. Its capable of resolving some DID methods including the did:prism. ","version":"Next","tagName":"h3"},{"title":"Getting Help","type":0,"sectionRef":"#","url":"/docs/home/identus/getting-help","content":"","keywords":"","version":"Next"},{"title":"Help Desk‚Äã","type":1,"pageTitle":"Getting Help","url":"/docs/home/identus/getting-help#help-desk","content":" The best way to get support is on our Discord server. ","version":"Next","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/home/identus/did-prism-resolver/overview","content":"","keywords":"","version":"Next"},{"title":"Cloud Agent and Prism Node‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/did-prism-resolver/overview#cloud-agent-and-prism-node","content":" The Prism-Node is a microservice that exposes gRPC endpoint and implements DID PRISM operations, allowing users to create, update, deactivate, and resolve DIDs in a secure and privacy-preserving manner. The DID PRISM resolver is a component that interacts with the Prism-Node to retrieve the current state of a DID and its associated DID Document. The Cloud Agent can serve as a DID PRISM resolver, allowing users to resolve DIDs and retrieve their associated DID Documents.  ","version":"Next","tagName":"h2"},{"title":"Universal Resolver‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/did-prism-resolver/overview#universal-resolver","content":" The DID PRISM can also be resolved via the Universal Resolver, which is a service that provides a unified interface for resolving DIDs across different DID methods.  ","version":"Next","tagName":"h2"},{"title":"SDK‚Äã","type":1,"pageTitle":"Overview","url":"/docs/home/identus/did-prism-resolver/overview#sdk","content":" This documentation provides an in-depth guide to the DID PRISM resolution process, including its architecture, resolution flow, components, and how it integrates with decentralized identity ecosystems. Whether you're building identity-enabled applications or integrating DID support into your systems, this overview will help you understand how DID PRISM resolves DIDs and retrieves trusted identity data. ","version":"Next","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/home/identus/identus-cloud-agent/manage/overview","content":"Overview PRISM Manage is an intuitive web application designed to simplify workflows for the issuance and verification of credentials. Initially, PRISM Manage will allow users to: Create and manage credential schemas that can be used for issuing credentials [using the Issue APIs]Create and manage verification policies that can be used for proof requests for verifying credentials [using the Verify APIs]. Coming Soon!Create and manage DIDs including the ability to publish and deactivate DIDs. Coming Soon!","keywords":"","version":"Next"},{"title":"Verification Policies","type":0,"sectionRef":"#","url":"/docs/home/identus/identus-cloud-agent/manage/policies","content":"Verification Policies Coming soon!","keywords":"","version":"Next"},{"title":"Credential Schemas","type":0,"sectionRef":"#","url":"/docs/home/identus/identus-cloud-agent/manage/schemas","content":"","keywords":"","version":"Next"},{"title":"Create Credential Schema‚Äã","type":1,"pageTitle":"Credential Schemas","url":"/docs/home/identus/identus-cloud-agent/manage/schemas#create-credential-schema","content":" On initial login the credential schema list will be empty  ADD SCREENSHOT WITH EMPTY LIST  Select the Credential schemas option in the Menu Bar  Select '+ Create new button  ADD SCREENSHOT WITH CREATE NEW SCHEMA SCREEN  Enter a Name for the Credential Schema. This is mandatory and should be unique and descriptive. The maximum length for a Schema name is 50 characters.  You will get an error message ‚ÄúUnable to create schema‚Äù if you create a schema where there is an existing schema with the same name.  Hint: Ensure name is descriptive, for example ‚ÄúEmployee Badge‚Äù  Enter a Description for the Credential Schema. This is mandatory and should give more details on the credential schema. The maximum length of description is 150 characters.  Hint: Ensure description is clear and concise especially where there are multiple similar schemas. For example ‚ÄúThe Employee Badge is to be issued to all employees on their first day of employment and is used for authorisation into physical parts of the office and to allow authentication into the company‚Äôs systems‚Äù  Start to add the credential attributes you require for the credential by selecting the '+' Add new attribute button. There is no limit on the amount of attributes you can add.  Hint: Ensure each attribute should have a description. The description is optional and has no limit in the number of characters.  Use the Applicable Rule Per Attribute table (add reference to above) above to guide you in creating the rules correctly that you need.  Select the Save button to the credential schema  To edit a credential attribute select the 'Edit' button To delete a credential attribute select the 'Delete' button  Select 'Save' buttononce you have added all the attributes. The credential schema has now been saved and added to the listing.  ADD SCREENSHOT WITH NEWLY CREATED SCHEMA  ","version":"Next","tagName":"h2"},{"title":"View Credential Schema‚Äã","type":1,"pageTitle":"Credential Schemas","url":"/docs/home/identus/identus-cloud-agent/manage/schemas#view-credential-schema","content":" A list of all credential schemas that have been created already are viewable in the Credential Schema tab  The First Schema created will be top of the list followed by schemas created in chronological order.  The schema name and description will be displayed in the list.  Select a credential schema to view its attributes and associate rules.  ","version":"Next","tagName":"h2"},{"title":"Duplicate Credential Schema‚Äã","type":1,"pageTitle":"Credential Schemas","url":"/docs/home/identus/identus-cloud-agent/manage/schemas#duplicate-credential-schema","content":" To create a duplicate of an existing credential schema, select the schema you want to copy and select ‚ÄúDuplicate‚Äù button.  You can now add more attributes, or remove existing ones. The Schema name does not have to be unique. You can use the description field to differentiate between credentials of the same name  ADD SCREENSHOT FOR DUPLICATING SCHEMA  ","version":"Next","tagName":"h2"},{"title":"Future Features‚Äã","type":1,"pageTitle":"Credential Schemas","url":"/docs/home/identus/identus-cloud-agent/manage/schemas#future-features","content":" We have exciting features to add to PRISM Manage including:  ","version":"Next","tagName":"h2"},{"title":"Preview Credential Schema‚Äã","type":1,"pageTitle":"Credential Schemas","url":"/docs/home/identus/identus-cloud-agent/manage/schemas#preview-credential-schema","content":" An ability to preview the credential schema in an easy manner and have the option to confirm creation or edit it if required. Restrictions  ","version":"Next","tagName":"h3"},{"title":"Validation of Attribute Rules‚Äã","type":1,"pageTitle":"Credential Schemas","url":"/docs/home/identus/identus-cloud-agent/manage/schemas#validation-of-attribute-rules","content":" Currently there is minimal validation performed on the attribute rules.  For example:  Entering a minimum and maximum value for integer attribute. No validation is done that the minimum value is less than the maximum value Entering a minimum and maximum value for a number attribute. No validation is done that the minimum value is less than the maximum number Entering a minimum and maximum length value for a string attribute. No validation is done that the minimum value is less than the maximum length value  These validation checks will be added to a future iteration of PRISM Manage. ","version":"Next","tagName":"h3"},{"title":"Definitions","type":0,"sectionRef":"#","url":"/docs/home/identus/identus-cloud-agent/manage/definitions","content":"","keywords":"","version":"Next"},{"title":"Credential Schemas‚Äã","type":1,"pageTitle":"Definitions","url":"/docs/home/identus/identus-cloud-agent/manage/definitions#credential-schemas","content":" A credential schema is a standardised specification or template that defines the structure, format, and properties of a digital credential. It outlines the necessary attributes, data elements, and metadata that should be included in a credential to ensure consistency and interoperability.  PRISM Manage allows you to to easily and visually create a credential schema, and allow you to decide:  Which data attributes are includedWhat rules to apply to each attribute  These schemas are then stored as JSON in specific format per this specification, and can subsequently be used to issue credentials using the Issue Credential APIs.  ","version":"Next","tagName":"h2"},{"title":"Attributes‚Äã","type":1,"pageTitle":"Definitions","url":"/docs/home/identus/identus-cloud-agent/manage/definitions#attributes","content":" In a credential schema, attributes refer to the properties or characteristics associated with a credential.  Attributes provide additional information and metadata about the credential, such as its title, issuer, issuance date, description, and any other relevant details.  Attributes help define and describe the credential in a structured manner, allowing for clear identification, validation, and organization of the credential data. They provide a standardized way to represent and exchange information about the credential, ensuring consistency and interoperability.  ","version":"Next","tagName":"h2"},{"title":"Attribute Types‚Äã","type":1,"pageTitle":"Definitions","url":"/docs/home/identus/identus-cloud-agent/manage/definitions#attribute-types","content":" Each Attribute has to be one of the following type;  Integer‚Äã  An integer attribute is used to define a property that expects a whole number as its value. It represents numeric values without any fractional or decimal component. Integers can be positive or negative, including zero. The JSON specification does not impose any specific limitation on the minimum or maximum.This means that any integer value would be considered valid for that attribute.  Number‚Äã  A number attribute is used to define a property that expects a numeric value. This numeric value can include both whole numbers (integers) and decimal numbers. A number attribute can have any number of decimal points. The JSON specification does not impose any specific limit on the precision or number of decimal places for numeric values.  String‚Äã  A string attribute is used to define a property that expects textual data as its value, such as words, sentences, or any sequence of characters. The JSON specification does not impose any specific limitation on the maximum number of characters a string attribute can have.  Object‚Äã  An object attribute is used to define a property that expects a complex data structure consisting of key-value pairs, allowing for the organization and representation of structured data.  Array‚Äã  An array attribute is used to define a property that expects an ordered collection of values, allowing for the representation of multiple items or elements within a single property.  Boolean‚Äã  A boolean attribute is used to define a property that expects a value that can be either true or false, representing binary logic or conditions.  ","version":"Next","tagName":"h3"},{"title":"Attribute Rules‚Äã","type":1,"pageTitle":"Definitions","url":"/docs/home/identus/identus-cloud-agent/manage/definitions#attribute-rules","content":" Each Attribute can have a set of rules applied. The types of rules that are available include:  Required‚Äã  The &quot;required&quot; rule specifies which attributes must be included or present in a credential for it to be considered valid or complete.  Option to set True (Mandatory)Option to set False (Optional)  Minimum/Maximum‚Äã  The &quot;Minimum&quot; and &quot;Maximum&quot; rules define numeric constraints on attribute values. They allow specifying the minimum and maximum allowed values for numeric attributes within a credential.  Option to set Minimum valueOption to set Maximum value  Format‚Äã  The &quot;format&quot; rule ensures that the attribute values representing integers are within the expected bit size range. This helps maintain data integrity and enables consistent interpretation and handling of integer values in the context of the credential.  For int32, which represents a 32-bit signed integer, the attribute value should conform to this format. The value should be within the range of -2,147,483,648 to 2,147,483,647, as dictated by the 32-bit signed integer representation.  For int64, representing a 64-bit signed integer, the attribute value should fall within the range of -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807, adhering to the 64-bit signed integer representation.  Option to set to int32Option to set to int64  multipleOf‚Äã  The &quot;multipleOf&quot; rule defines a constraint on numeric attribute values, specifying that they must be a multiple of a given number.  Option to set MultipleOf  eNum‚Äã  The &quot;enum&quot; rule is used to define a list of allowable or valid values for an attribute. It restricts the attribute value to be one of the specified options, ensuring that it conforms to a predefined set of choices.  Option to set fixed set of values  Format (Strings)‚Äã  The &quot;format&quot; rule specifies the expected format or pattern for attribute values that represent specific data types, such as dates, email addresses, URLs, or custom formats. It allows for the validation and enforcement of a particular structure or pattern for attribute values.  Date (Attribute must be a string representing a valid Date in format &quot;YYYY-MM-DD&quot;)Date-time (Attribute must be a string representing a valid Date in format &quot;YYYY-MM-DDTHH:MM:SSZ&quot; (ISO 8601 format)Time (Attribute must be a string representing a valid Date in format &quot;HH:MM:SS&quot;Email (Attribute must be a string representing a valid email address)URLHostname (Attribute must be a string representing a valid hostname)Ipv4 (Attribute must be a string representing a valid IPv4 address)Ipv6 (Attribute must be a string representing a valid IPv6 address)uuid (Attribute must be a string representing a valid UUID)  RegEx‚Äã  The &quot;regex&quot; rule allows the definition of a custom validation pattern using a regular expression. Regular expressions (regex) are powerful string matching patterns that specify the format or pattern that an attribute value must follow.  Option to set fixed set regular expressionEnter as text  AllowAdditionalProperties‚Äã  The &quot;additionalProperties&quot; rule allows you to define whether additional properties, which are not explicitly defined in the schema, are allowed or disallowed within the credential.  Option to set True (Allow additional properties)Option to set False (Disallow additional properties)  Unique Items‚Äã  The &quot;uniqueItems&quot; rule is used to enforce that the elements within an array attribute must be unique. It ensures that there are no duplicate values present in the array.  Option to set True (Allow Unique Items)Option to set False (Do Not Allow Unique Items)  Default Value‚Äã  The &quot;default&quot; rule allows you to specify a default value for an attribute. The default value is used when no explicit value is provided for that attribute in the credential.  Option to set Default value  ","version":"Next","tagName":"h3"},{"title":"Applicable Rules Per Attribute‚Äã","type":1,"pageTitle":"Definitions","url":"/docs/home/identus/identus-cloud-agent/manage/definitions#applicable-rules-per-attribute","content":" Below summarises the rules applicable for each attribute  Integer  RequiredMin/Max ValueFormatmultipleOfeNum  Number  RequiredMin/Max ValueFormatmultipleOfeNum  String  RequiredFormatMin/Max LengthmultipleOfRegEx  Object  Min/Max PropertiesAllowAdditionalProperties  Array  RequiredMin/Max ItemsUnique Items  Boolean  Default Value  ","version":"Next","tagName":"h3"},{"title":"Verification Policies‚Äã","type":1,"pageTitle":"Definitions","url":"/docs/home/identus/identus-cloud-agent/manage/definitions#verification-policies","content":" Verification Policies enable verifiers to define the specific data that they require for their business processes and that they will request from holders.  Verification Policies are flexible in that you can request only the specific data you need from a holder.  When you create a verification policy, you can decide:  From what specific credential schemas you require the data fromFrom which specific issuer you require the data from  ","version":"Next","tagName":"h2"},{"title":"DIDs‚Äã","type":1,"pageTitle":"Definitions","url":"/docs/home/identus/identus-cloud-agent/manage/definitions#dids","content":" Create and manage PRISM DIDs easily using PRISM Manage. Easily publish or deactivate your PRISM DIDs ","version":"Next","tagName":"h2"},{"title":"Setup","type":0,"sectionRef":"#","url":"/docs/home/identus/identus-cloud-agent/manage/setup","content":"Setup You can access PRISM Manage at the root of the host domain where cloud enterprise agent has been deployed. If you already have an enterprise agent deployed you can Access PRISM Manage via a web browser use https://your-agent.alaprism.io where &quot;your-agent&quot; is the name of the agent you are usingUse the existing API key","keywords":"","version":"Next"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/home/identus/identus-cloud-agent/overview","content":"Overview Enterprise services is a comprehensive suite of services available exclusively as part of the Enterprise edition of the Identus platform. These services aim to empower businesses to integrate SSI-based (Self-Sovereign Identity) effortlessly into their existing solutions, providing their users and business partners with greater control over their identity and personal data. At the same time, we handle the technical complexities behind it. The Enterprise services suite currently includes ManageUI, Onboard, and Authenticate services. The ManageUI is a web-based application to manage the PRISM product suite. Use it to create and manage credential schemas and verification policies within a user-friendly graphical interface. The Onboard and Authenticate services provide a streamlined approach to authenticate users and things based on Decentralized Identifiers (DIDs) within their control. In the future, we plan to expand the Enterprise services suite by adding more services. These services allow organizations to implement SSI-based features in their applications and seamlessly integrate with external systems. We aim to ensure that the Enterprise services suite continues to evolve and grow to meet the changing needs as the industry grows.","keywords":"","version":"Next"},{"title":"Authenticate","type":0,"sectionRef":"#","url":"/docs/home/identus/identus-cloud-agent/authenticate","content":"","keywords":"","version":"Next"},{"title":"Actors‚Äã","type":1,"pageTitle":"Authenticate","url":"/docs/home/identus/identus-cloud-agent/authenticate#actors","content":" User or a device - the party being authenticated.SSI Wallet - any piece of software able to create and manage DIDs - in control of the user.Application - the party that is requesting authentication, which has its own state and business logic.Authenticate Service - a service that provides authentication primitives (managing authentication challenges and responses).  ","version":"Next","tagName":"h2"},{"title":"Authentication flow‚Äã","type":1,"pageTitle":"Authenticate","url":"/docs/home/identus/identus-cloud-agent/authenticate#authentication-flow","content":" On a high level, the authentication flow starts with the application creating a challenge, encoding it, and sending it to the other party. The other party then uses their SSI wallet to respond to the challenge by signing the nonce and sending it back to the submission endpoint specified in the challenge.  Let's go through the whole process in more detail.  Application creates a new authentication challenge. The challenge contains a nonce, expiration time, and submission endpoint. It also includes a type field used as a protocol identifier for wallets to understand how to process the message.  An example of an authentication challenge state:  { &quot;self&quot;: &quot;https://demo.atalaprism.io/did-authentication/challenges/challenge-id-1234&quot;, &quot;kind&quot;: &quot;AuthenticationChallengeState&quot;, &quot;id&quot;: &quot;challenge-id-1234&quot;, &quot;challenge&quot;: { &quot;type&quot;: &quot;https://atalaprism.io/authentication-challenge&quot;, &quot;submissionEndpoint&quot;: &quot;https://demo.atalaprism.io:8085/did-authentication/challenge-submissions/request-id-1234&quot;, &quot;nonce&quot;: &quot;authenticate-NzIxZTZmNjQtOGY0Ni00ODQ4LWFhYjAtZGYzNDJmYzNlMjM2&quot;, &quot;from&quot;: &quot;Application ABC&quot;, &quot;expireAt&quot;: &quot;2021-10-31T09:22:23Z&quot; }, &quot;did&quot;: null, &quot;state&quot;: &quot;pending&quot;, &quot;createdAt&quot;: &quot;2023-02-24T19:13:23Z&quot;, &quot;updatedAt&quot;: &quot;2023-02-24T19:13:23Z&quot; }   It contains a challenge field and other metadata which makes it possible to track the challenge over time.  Note: Only the challenge field should be encoded and sent to the other side!  It is possible to add the optional from field too. It is a human-readable label that represents the party requesting authentication. Wallets could use this label later to display information to users about who is sending requests.  The initial state is pending, and did field is null.  Next, the challenge object is encoded, typically as a QR code or deep link, depending on the use case. The encoded challenge is then presented or sent to the other party.  Now, the receiving party uses their wallet to decode and process the received authentication challenge. In this case, the type field gets checked for valuehttps://atalaprism.io/authentication-challenge. The wallet then should present a prompt to the user to accept or reject the request, showing the optionalfrom label. If the user accepts the request, the next step is to instruct the wallet which DID to use to respond to the challenge. The authentication key from the selected DID signs the nonce field and sends the signature, and the used DID to the submission endpoint specified in the challenge.  Upon receiving the response, the Authenticate service verifies the signature and updates the challenge state accordingly. In the case of an invalid signature, the state changes to error. In the case of a valid signature, the state is set tosuccess and the did field gets populated with the DID used to sign the response.  During the process, an application can query the state of the sent authentication challenge to check the response status and if it's valid. As mentioned, the terminal state is either error or success. Once the challenge response is received, the application can act upon it, depending on the business logic. For example, creating a login session for the user based on JWT.  Note: Authenticate service only checks if the signature is valid, based on the DID used to sign the response. Checking if the given DID is known to the application is the application's responsibility.  ","version":"Next","tagName":"h2"},{"title":"Code example‚Äã","type":1,"pageTitle":"Authenticate","url":"/docs/home/identus/identus-cloud-agent/authenticate#code-example","content":" Here's an example of implementing user login flow using Authenticate API. We will demonstrate how to add DID-based authentication to an existing application, which already has a user database and supports password-based login.  Note: This aims to 'sketch' or illustrate the general flow. This example is just one of many possible ways to implement this flow. The intent of the code herein is for demonstration purposes only, not for execution.  The example code is in JavaScript/TypeScript, but it should be easy to translate it to any other language. API could be consumed directly or via a generated client library. For example,Orval tool can generate a TypeScript API client from OpenAPI spec.  npx orval --input ./enterprise-services-spec.yml --output ./prism-api-client.ts   Let's use this hypothetical user model as an example:  interface User { id: string; email: string; password: string; did?: string; name: string; company?: string; }   Here is the implementation of the endpoint called by the application front-end to start the DID-based login flow. A new authentication challenge is created and encoded as a QR code.  async function handleDidAuthRequest() { // we are using generated API client here to interact with Authenticate service. const authChallengeState = await prismApiClient.createAuthenticationChallenge({ from: 'Application ABC', }); // depends on the use-case: QR code, deep link or something else! const encodedAuthChallenge = encodeAsQrCode(authChallengeState.challenge); await respondWithSuccessToApplicationFrontend(authChallengeState.id, encodedAuthChallenge); console.info(`Challenge &quot;${authChallengeState.id}&quot; has been created and sent to the front-end.`); }   Once the QR code gets presented to the user for scanning with their mobile wallet, the front-end app could call an endpoint to track the challenge state and wait for the response.  async function trackAuthChallengeState(challengeId) { while (true) { const authChallengeState = await prismApiClient.getAuthenticationChallenge(challengeId); // expiration time default is 2 minutes if (isExpired(authChallengeState.challenge.expireAt)) { console.info(`Challenge &quot;${authChallengeState.id}&quot; has been expired`); return respondWithErrorToApplicationFrontend(&quot;CHALLENGE_EXPIRED&quot;); } if (authChallengeState.state === &quot;error&quot;) { // invalid response has been received - either invalid signature or invalid body format console.info(`Invalid response to challenge &quot;${authChallengeState.id}&quot; has been received`); return respondWithErrorToApplicationFrontend(&quot;INVALID_CHALLENGE_RESPONSE&quot;); } if (authChallengeState.state === &quot;success&quot;) { console.info(`Valid response to challenge &quot;${authChallengeState.id}&quot; has been received`); console.info(`Challenge signed with DID: &quot;${authChallengeState.did}&quot;`); // user has to use DID which is already registered in the application! const userData = await getUserByDid(authChallengeState.did); if (!userData) { return respondWithErrorToApplicationFrontend(&quot;UNKNOWN_DID&quot;); } // create JWT access token, in the same way as it's done for password-based login const accessToken = jwt.sign({ userId: userData.id }, process.env.JWT_SECRET, { expiresIn: &quot;1h&quot;, }); return respondWithSuccessToApplicationFrontend({ accessToken, userData: { id: userData.id, did: userData.did, email: userData.email, } }); } // challenge is still pending - wait for a while and check again await wait(5000); } }   Note: Please be aware that the Authenticate service currently does not provide an eventing mechanism. Therefore, the application is responsible for periodically checking the challenge state. However, when eventing gets implemented, this portion will be easier to cover reliably.  ","version":"Next","tagName":"h2"},{"title":"How wallets should respond to authentication challenge?‚Äã","type":1,"pageTitle":"Authenticate","url":"/docs/home/identus/identus-cloud-agent/authenticate#how-wallets-should-respond-to-authentication-challenge","content":" Upon receiving a challenge, wallets should extract the nonce field, pick a DID to sign the response, and sign the nonce field. The signature should be submitted to the submissionEndpoint, with the DID used to sign.  Current restrictions and expectations:  { signature, did } shape of object should be submitted as a JSON body to thesubmissionEndpoint.Only did:peer DIDs are supported - numalgo 0 and 2 variants.Ed25519 authentication key is expected to be used for signing.Signature should be encoded as a base64Url string.  ","version":"Next","tagName":"h2"},{"title":"Code example - wallet integration with TypeScript Wallet SDK‚Äã","type":1,"pageTitle":"Authenticate","url":"/docs/home/identus/identus-cloud-agent/authenticate#code-example---wallet-integration-with-typescript-wallet-sdk","content":" Wallets and other applications can use the TypeScript SDK to create required key pairs and DIDs. Also, to resolve DIDs, sign data and verify signatures. Here is an example of how to do it:  Note: We assume the wallet already has a DID created and stored. See the Onboard service docs for more details about that step.  import {Apollo, Castor, Domain} from &quot;@input-output-hk/atala-prism-wallet-sdk&quot;; import * as jose from &quot;jose&quot;; // init Apollo and Castor SDK modules. // Apollo = cryptography, Castor = DIDs management. const apollo = new Apollo(); const castor = new Castor(apollo); /** * Wallet will receive encoded authentication challenge as a deep link, QR code, * or in some other way. This is the function which will handle decoded challenge. * We assume that user has already selected a DID to use for signing the challenge. * DID is usually a part of wallet specific abstraction - contact/account/avatar. * * @param {type, from, nonce, expireAt, submissionEndpoint} authChallenge * @param {string} did */ async function handleDidRequest(authChallenge, did) { if (authChallenge.type !== &quot;https://atalaprism.io/authentication-challenge&quot;) { throw new Error(&quot;Invalid Authentication Challenge&quot;); } // application specific logic to retrieve private keys for DID from wallet storage const keys = await getKeysForDidFromStorage(did); // we need to sign with ED25519 key const authKeyPair = keys.find(key =&gt; key.curve === Domain.Curve.ED25519); const signature = apollo.signStringMessage(authKeyPair.privateKey, authChallenge.nonce); // POST signature &amp; did back to the Authenticate service - using axios for example await axios.post(authChallenge.submissionEndpoint, { did, signature: jose.base64url.encode(signature.value), }); }  ","version":"Next","tagName":"h3"},{"title":"Mediator","type":0,"sectionRef":"#","url":"/docs/home/identus/mediator","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/home/identus/mediator#introduction","content":" Mediators are indispensable in identity wallets, especially when dealing with mobile devices or edge agents. These mobile devices usually lack static IP addresses. They may only sometimes be online, posing a challenge in establishing reliable, direct connections between various parties in a decentralized ecosystem and guaranteeing delivery of DIDComm messages. The Mediator functions similarly to an email inbox for the recipient, storing &quot;Forward&quot; messages and their final encrypted content until retrieved by the intended party.  ","version":"Next","tagName":"h2"},{"title":"Mediator's Role in Decentralized Identity Transactions‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/home/identus/mediator#mediators-role-in-decentralized-identity-transactions","content":" Within a decentralized identity framework, the Mediator bridges the Holder's device and other key players, such as Issuers and Verifiers. For instance, if a Holder wishes to obtain a credential from an Issuer, the Mediator can relay or mediate this request, ensuring smooth interaction between both parties. Similarly, when a holder must present a credential to a verifier, the Mediator steps in again to mediate or relay the transaction. By leveraging a Mediator, identity wallets can offer secure and reliable communication between all involved entities. This approach also empowers holders to maintain control over their data and identities.  ","version":"Next","tagName":"h2"},{"title":"Security, Scalability, and Efficiency‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/home/identus/mediator#security-scalability-and-efficiency","content":" The Mediator is an integral part of Identus, facilitating secure communication without the need for a centralized authority. It seamlessly connects various entities in the Identus ecosystem, including Holders, Issuers, and Verifiers, ensuring the system remains secure, scalable, and efficient.  ","version":"Next","tagName":"h2"},{"title":"Technical Specifications‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/home/identus/mediator#technical-specifications","content":" The Mediator is an open-source initiative. For more details, you can refer to the atala-prism-mediator Github repository. The project aims to address the inherent limitations of edge agents, which are not always online, by assuming that the Mediator is perpetually online. Employing DIDComm v2 protocols and cryptographic methods, the Mediator guarantees all exchanged messages' authenticity, integrity, and confidentiality.  ","version":"Next","tagName":"h2"},{"title":"DIDComm V2 Mediator Test Suite‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/home/identus/mediator#didcomm-v2-mediator-test-suite","content":" ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/home/identus/mediator#overview","content":" We have rigorously evaluated our Mediator protocols using the DIDComm V2 Mediator Test Suite. This test suite scrutinizes the compatibility of mediators with DIDComm V2 protocols, serving as a benchmark for quality and reliability.  ","version":"Next","tagName":"h3"},{"title":"Protocols Tested‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/home/identus/mediator#protocols-tested","content":" The suite tests a variety of vital protocols, including:  Trust Ping 2.0Mediator Coordination 2.0Pickup 3.0  You can consult the features folder in the test suite repository for an exhaustive list of test scenarios and detailed descriptions.  ","version":"Next","tagName":"h3"},{"title":"Future Enhancements in Testing‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/home/identus/mediator#future-enhancements-in-testing","content":" As part of our ongoing commitment to improving the Mediator, we plan to make our test sets publicly accessible, allowing users and developers to perform comparative assessments on functionality and performance against other mediators in the market. We aim to continually refine the Mediator's features based on real-world scenarios and demands, ensuring it remains a reliable and robust component in the Identus ecosystem.  We are working on enhancing the scope of our testing suite to address limitations and include additional protocols and scenarios. These future updates will make the Mediator even more robust and versatile.  The Mediator will continue to develop with the same rigorous testing protocols to ensure it remains at the forefront of secure, efficient, and interoperable decentralized identity management.  ","version":"Next","tagName":"h3"},{"title":"Future Developments‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/home/identus/mediator#future-developments","content":" Looking ahead, we are committed to the ongoing development of the Mediator, with plans to expand its feature set and integrate new protocols. Real-world use cases drive these updates to achieve feature completeness. Additionally, we aim to keep the Mediator at the forefront of industry developments, ensuring it remains aligned with emerging protocols and technological advancements. ","version":"Next","tagName":"h2"},{"title":"Overview","type":0,"sectionRef":"#","url":"/docs/home/identus/overview","content":"Overview Identus is a toolset designed for Decentralized Identity enablement. These tools work together to establish a framework for implementing Decentralized Identity Solutions. Here's an overview of the key components: Cloud Agent: It is a W3C/Aries standards-based agent that provides decentralized identity services. It exposes a REST API for integration, enabling the development of solutions based on SSI technology. PRISM Node: Serves as a verifiable data registry (VDR). The PRISM Node stores and retrieves data securely, is tamper-proof, and is responsible for publishing Identus's protocol transactions to the Distributed Ledger blockchain. It also plays a critical role in resolving DIDs efficiently without requiring access to the underlying blockchain‚Äã‚Äã‚Äã‚Äã‚Äã‚Äã. Mediator: The Mediator acts as a bridge between the holder's device and other actors, such as issuers and verifiers, ensuring secure and reliable communication without centralized management‚Äã‚Äã‚Äã‚Äã. Edge Agent SDKs: allow the development of edge agents - Decentralized Identity mobile apps and browser extensions. The SDKs are available in Swift (iOS and other Apple OS), TS (Browser and Node.js), and Kotlin Multiplatform (JVM and Android)","keywords":"","version":"Next"},{"title":"PRISM Node","type":0,"sectionRef":"#","url":"/docs/home/identus/prism-node","content":"PRISM Node The PRISM Node acts as a second-layer node for the distributed ledger. It functions as a verifiable data registry, providing a secure and reliable way to store and manage data. PRISM Node's primary purpose is to provide a secure and trustworthy platform for storing and managing data on the distributed ledger. By leveraging the blockchain's security and decentralization, the PRISM Node stores and retrieves data in a secure and immutable manner. All operations are independently verified and authenticated using cryptographic signatures and other security measures, so all data is accurate and trustworthy. The PRISM Node runs alongside a blockchain. It keeps the internal state synchronized with the underlying blockchain and indexed for efficient lookup operations. Furthermore, it implements did:prism method in an efficient and scalable way by publishing transactions to the distributed ledger. These transactions support the PRISM Node's protocol and perform the creation, update, resolution, and deactivation of decentralized identifiers (DIDs). The PRISM Node generates a transaction with information about the DID operation and verifies and validates the DID operation before publishing it to the blockchain. Once the transaction gets confirmed on the blockchain, the PRISM Node updates its internal state to reflect the changes. The second-layer PRISM Node also plays a critical role in resolving DIDs. Because the PRISM Node keeps the internal state indexed, it allows retrieving information about a particular DID quickly and efficiently without requiring access to the underlying blockchain. Overall, second-layer nodes are essential for the PRISM Node protocol, providing the necessary off-chain processing and data storage capabilities to make DIDs scalable and efficient. At its core, PRISM depends on protocols defining how to manage decentralized identifiers and Verifiable Credentials (VCs). The PRISM Node is the main component that implements these protocols. First, we should explain how the protocol works to understand what the PRISM Node does. Any user can run a PRISM Node to self-validate information or rely on a set of actors that run nodes on his behalf. The level of delegation of trust is a decision made by each user.Any user willing to create a DID can do so without any need to interact with any PRISM Node. Creating a DID can be optionally announced publicly by publishing a creation operation on-chain. The action of posting an operation on-chain does require interaction with a PRISM Node.Users can update the DID documents associated with their DIDs. To do this, they must publish respective update operations on-chain by interacting with a PRISM Node.Deactivating a DID can be performed along the same lines as an update by publishing a deactivation operation.PRISM Nodes read the operations published on-chain (by possibly other nodes) and internally maintain the map of DIDs to the history of changes of their associated DID documents.Clients can query any PRISM Node and obtain a DID's historical change log information.DID resolvers can take the output of PRISM Nodes and construct the current DID document associated with a DID.An additional consideration is that operations can be posted on-chain in blocks, helping on the scalability side and general reduction of fees. Additionally, the node provides an interface to track the status of operations submitted to a PRISM Node.","keywords":"","version":"Next"},{"title":"PRISM Node","type":0,"sectionRef":"#","url":"/docs/home/identus/prism-node/overview","content":"PRISM Node The PRISM Node acts as a second-layer node for the Distributed Ledger. It functions as a verifiable data registry, providing a secure and reliable way to store and manage data. PRISM Node's primary purpose is to provide a secure and trustworthy platform for storing and managing data on the Distributed Ledger. By leveraging the blockchain's security and decentralization, the PRISM Node stores and retrieves data in a secure and immutable manner. All operations are independently verified and authenticated using cryptographic signatures and other security measures, so all data is accurate and trustworthy. The PRISM Node runs alongside a blockchain. It keeps the internal state synchronized with the underlying blockchain and indexed for efficient lookup operations. Furthermore, it implements did:prism method in an efficient and scalable way by publishing transactions to the Distributed Ledger. These transactions support the PRISM Node's protocol and perform the creation, update, resolution, and deactivation of decentralized identifiers (DIDs). The PRISM Node generates a transaction with information about the DID operation and verifies and validates the DID operation before publishing it to the blockchain. Once the transaction gets confirmed on the blockchain, the PRISM Node updates its internal state to reflect the changes. The second-layer PRISM Node also plays a critical role in resolving DIDs. Because the PRISM Node keeps the internal state indexed, it allows retrieving information about a particular DID quickly and efficiently without requiring access to the underlying blockchain. Overall, second-layer nodes are essential for the PRISM Node protocol, providing the necessary off-chain processing and data storage capabilities to make DIDs scalable and efficient. At its core, PRISM depends on protocols defining how to manage decentralized identifiers and Verifiable Credentials (VCs). The PRISM Node is the main component that implements these protocols. First, we should explain how the protocol works to understand what the PRISM Node does. Any user can run a PRISM Node to self-validate information or rely on a set of actors that run nodes on his behalf. The level of delegation of trust is a decision made by each user.Any user willing to create a DID can do so without any need to interact with any PRISM Node. Creating a DID can be optionally announced publicly by publishing a creation operation on-chain. The action of posting an operation on-chain does require interaction with a PRISM Node.Users can update the DID documents associated with their DIDs. To do this, they must publish respective update operations on-chain by interacting with a PRISM Node.Deactivating a DID can be performed along the same lines as an update by publishing a deactivation operation.PRISM Nodes read the operations published on-chain (by possibly other nodes) and internally maintain the map of DIDs to the history of changes of their associated DID documents.Clients can query any PRISM Node and obtain a DID's historical change log information.DID resolvers can take the output of PRISM Nodes and construct the current DID document associated with a DID.An additional consideration is that operations can be posted on-chain in blocks, helping on the scalability side and general reduction of fees. Additionally, the node provides an interface to track the status of operations submitted to a PRISM Node.","keywords":"","version":"Next"},{"title":"Onboard","type":0,"sectionRef":"#","url":"/docs/home/identus/identus-cloud-agent/onboard","content":"","keywords":"","version":"Next"},{"title":"Getting a DID‚Äã","type":1,"pageTitle":"Onboard","url":"/docs/home/identus/identus-cloud-agent/onboard#getting-a-did","content":" On a high level, the process of obtaining a DID includes creating a DID request, encoding it, and sending it to the other party. The other party then uses their wallet to scan/receive the DID request and send back the existing or new DID.  Let's go through the whole process in more detail.  The inviting party creates a so-called &quot;DID request.&quot; An example of a request state:  { &quot;self&quot;: &quot;https://demo.atalaprism.io/did-requests/did-request-1234&quot;, &quot;kind&quot;: &quot;DidRequestState&quot;, &quot;id&quot;: &quot;did-request-1234&quot;, &quot;didRequest&quot;: { &quot;type&quot;: &quot;https://atalaprism.io/did-request&quot;, &quot;onboardEndpoint&quot;: &quot;https://demo.atalaprism.io:8085/request-id-1234&quot;, &quot;from&quot;: &quot;Application ABC&quot; }, &quot;did&quot;: null, &quot;state&quot;: &quot;pending&quot;, &quot;createdAt&quot;: &quot;2023-02-24T10:22:23Z&quot;, &quot;updatedAt&quot;: &quot;2023-02-24T10:22:23Z&quot; }   It contains the didRequest field and other metadata that makes tracking the requesting possible.  Note: Only the didRequest field should be encoded and sent to the other side!  The optional from field could be added too. It is a human-readable label that represents the inviting party. Wallets could use this label later to display information to users about who is sending request.  The initial state is pending, and did field is null.  Next, the didRequest object is encoded depending on the use case, typically as a QR code or deep link. The encoded request gets sent to the other party via an appropriate channel: email, chat message, or presenting directly in a web app.  Now, the receiving party uses their wallet to decode and process the received DID request. The type of message is identifiable by the type field. In the case of DID request, it is https://atalaprism.io/did-request. The wallet then should present a prompt to the user to accept or reject the request, showing optionallyfrom label. If the user accepts the request, the wallet creates a new relationship and sends its DID back to the onboardEndpoint specified in the DID request.  During the process, the inviting party can query the sent DID request's state to check the response status. The terminal state is either error orsuccess with received DID in did field. Once the DID is received, depending on the business logic, the application can act upon it, for example, associate it with a user ID in the main application state.  Note: DID request is for one-time use only. The request is invalidated if the response is received and is not reusable.  Note: Currently, if a DID is under the other party's control, there is no mechanism to verify.. See Authenticate API if such a feature is required.  ","version":"Next","tagName":"h2"},{"title":"Code example‚Äã","type":1,"pageTitle":"Onboard","url":"/docs/home/identus/identus-cloud-agent/onboard#code-example","content":" Here is the code example of the process of adding a DID to an existing user profile:  ","version":"Next","tagName":"h2"},{"title":"Server side‚Äã","type":1,"pageTitle":"Onboard","url":"/docs/home/identus/identus-cloud-agent/onboard#server-side","content":" /** * This is an example of a server side handler. Imagine a web application which * has a &quot;Connect with DID&quot; button on the user profile page, which triggers this * flow. */ async function createDidRequest(context) { // get the existing user profile from the application database for a given userId let userProfile = await getUserById(context.userId); // to interact with Onboard API, we use an API client generated based on OpenAPI // specification, with a tool such as Orval. let didRequestState = await prismApiClient.createDidRequest({ from: &quot;Application ABC&quot; }) // depends on the use-case: deep link, QR code, or something else! let encodedDidRequest = encodeAsDeepLink(didRequestState.didRequest); // could be any communication channel, we use email here as an example await sendDidRequestToEmail(userProfile.email, encodedDidRequest); // track the state of DID request in the background - no events yet! await scheduleBackgroundTrackingJob({ requestId: didRequestState.id, userId: context.userId }); await respondWithSuccessToApplicationFrontend(); console.info(`DID request &quot;${didRequestState.id}&quot; has been created and sent to user.`); }   Since there is no eventing mechanism currently, the application should periodically check the state of the DID request. For example, this could be a way to implement a processing step in a background job:  async function checkDidRequest(didRequestId, userId) { let didRequestState = await prismApiClient.getDidRequest(didRequestId); if (didRequestState.state === &quot;error&quot;) { console.log(`DID request (${didRequestState.id}) for ${userId} has been either rejected or failed`); await cancelBackgroundTrackingJob(); return; } if (didRequestState.did) { console.log(`Received a DID (`${didRequestState.did}`) from ${userId} at ${didRequestState.updatedAt}`); await updateUserProfile(userId, {did: didRequestState.did}); await cancelBackgroundTrackingJob(); return; } // ...still no response, wait for next check iteration }   ","version":"Next","tagName":"h3"},{"title":"Holder side - wallet integration with TypeScript Wallet SDK‚Äã","type":1,"pageTitle":"Onboard","url":"/docs/home/identus/identus-cloud-agent/onboard#holder-side---wallet-integration-with-typescript-wallet-sdk","content":" Wallets and other applications can use the TypeScript SDK to create DIDs to respond to DID requests. Here is an example of how to do it:  Note: See Wallet SDK documentation for more information on how to use it.  import {Apollo, Castor, Domain} from &quot;@input-output-hk/atala-prism-wallet-sdk&quot;; // init Apollo and Castor SDK modules. // Apollo = cryptography, Castor = DIDs management. const apollo = new Apollo(); const castor = new Castor(apollo); /** * Wallet will receive encoded DID request as a deep link, QR code, or in some * other way. This is the function which will handle decoded DID request. This * is just a simple example where new Peer DID is created and sent back to the * Onboard service. In a real-world application, there would be some more * complex flow in which user would be asked to confirm the request, and create * a new contact or avatar in the wallet (or select an existing one). * * @param {type, from, onboardEndpoint} didRequest */ async function handleDidRequest(didRequest) { if (didRequest.type !== &quot;https://atalaprism.io/did-request&quot;) { throw new Error(&quot;Invalid DID request&quot;); } // create new authentication and key agreement key pairs, and use them to // create a new Peer DID. Onboard service accepts any DID, but if you plan // to use it with Authenticate, you should use Peer DIDs. const authKeyPair = apollo.createKeyPairFromKeyCurve({ curve: Domain.Curve.ED25519, }); const keyAgreementKeyPair = apollo.createKeyPairFromKeyCurve({ curve: Domain.Curve.X25519, }); const peerDID = await castor.createPeerDID( [authKeyPair, keyAgreementKeyPair], [] ); const didStr = peerDID.toString(); const newContact = { name: didRequest.from, did: didStr, keys: [authKeyPair, keyAgreementKeyPair] }; // store the new contact in the wallet database await storeContact(newContact); // POST created DID back to the Onboard service - using axios for example await axios.post(didRequestReceived.onboardEndpoint, { did: didStr, }); }   ","version":"Next","tagName":"h3"},{"title":"Summary‚Äã","type":1,"pageTitle":"Onboard","url":"/docs/home/identus/identus-cloud-agent/onboard#summary","content":" In the previous section, we discussed the process of obtaining a DID. Typically, the requesting party is an application aiming to extend its feature set with SSI capabilities, and the receiving party is a user with their own SSI wallet. The Onboard service that helps to facilitate obtaining a DID by providing necessary abstractions and state management. We also provided a code example of using the Onboard API from both sides of the process. ","version":"Next","tagName":"h2"},{"title":"Specifications","type":0,"sectionRef":"#","url":"/docs/home/identus/specifications","content":"","keywords":"","version":"Next"},{"title":"Legend‚Äã","type":1,"pageTitle":"Specifications","url":"/docs/home/identus/specifications#legend","content":" ‚úÖ - Supported‚ùå - Not supportedüö´ - Not applicableüîÑ - In progress‚ùì - Not sureüöß - Under construction  ","version":"Next","tagName":"h2"},{"title":"Mediator‚Äã","type":1,"pageTitle":"Specifications","url":"/docs/home/identus/specifications#mediator","content":" \tSpecification\tPurpose‚úÖ\tDIDComm Messaging v2.x Editor's Draft\tThe core DIDCommV2 specification ‚úÖ\tPeer DID 1.0\t‚ùìPeer DID specification, did:peer:2 is currently used ‚úÖ\tBasicMessage 2.0\tThe BasicMessage protocol describes a stateless, easy to support user message protocol ‚úÖ\tCoordinate Mediation 2.0\tThe protocol to coordinate mediation configuration between a mediating agent and the recipient üöß\tCoordinate Mediation 3.0 (TODO)\tThe protocol to coordinate mediation configuration between a mediating agent and the recipient ‚úÖ\tMessage Pickup 3.0\tThe protocol to facilitate an agent picking up messages held at a mediator ‚úÖ\tTrust Ping 2.0\tThe trust-ping protocol defined in the DIDComm Messaging Spec. This enables the sender and recipient to engage in an exchange of trust pings ‚úÖ\tReport Problem 2.0\tThe Report Problem protocol is defined in the DIDComm Messaging Spec. This protocol describes sending a problem report to another party  ","version":"Next","tagName":"h2"},{"title":"Cloud Agent (CA) and SDKs TypeScript(TS)/Swift(SW)/Kotlin Multiplatform(KM)‚Äã","type":1,"pageTitle":"Specifications","url":"/docs/home/identus/specifications#cloud-agent-ca-and-sdks-typescripttsswiftswkotlin-multiplatformkm","content":" CA\tTS\tSW\tKM\tSpecification\tPurpose‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tDecentralized Identifiers (DIDs) v1.0\tCore specification for DIDs ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tPRISM DID Method Specification - did:prism\tPRISM DID Method specification ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tPeer DID 1.0\tPeer DID specification. Partually suported (did:peer:2 is fully supported) ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tVerifiable Credentials JSON Schema Specification\tJSON Schemas for Verifiable Credentials ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tSecuring Verifiable Credentials using JOSE and COSE\tCore specification for VC-JWT ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tJSON Object Signing and Encryption (JOSE)\tJOSE registry of headers, curves, keys, signature and encryption algorithms ‚úÖ\t‚ùå\t‚ùå\t‚ùå\tSelective Disclosure for JWTs (SD-JWT)\tCore specification for SD-JWT (not SD-JWT-VC). Outdated, the latest is v14 ‚ùå\t‚úÖ\t‚úÖ\t‚úÖ\tSD-JWT-based Verifiable Credentials (SD-JWT VC)\tCore specification for SD-JWT (not SD-JWT-VC). Outdated, the latest is v14 ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tAnonCreds Specification v1.0\tCore specification for AnonCreds ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tDID:PRISM AnonCreds Method\tDID:PRISM AnonCreds Method for Schema and Credential Definition ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tHTTP AnonCreds Method\tHTTP AnonCreds Method for Schema and Credential Definition ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tBitstring Status List v1.0\tCore specification for VC-JWT ‚ùå\t‚ùå\t‚ùå\t‚ùå\tDIF Presentation Exchange 2.x.x\tDIF Presentation Exchange protocol ‚úÖ\t‚úÖÔ∏è\t‚úÖÔ∏è\t‚úÖÔ∏è\tOut of Band Protocol 2.0\tOut of Band messages for DIDComm (part of DIDCommV2 specification) üö´\t‚úÖ\t‚úÖ\t‚úÖ\tCoordinate Mediation Protocol 2.0\tCoordinate Mediation Protocol for DIDCommV2 ‚úÖ\t‚úÖÔ∏è\t‚úÖÔ∏è\t‚úÖÔ∏è\tConnection Protocol 1.0\tThe protocol is used when you wish to create a connection with another agent ‚úÖ\t‚ùìÔ∏è\t‚ùìÔ∏è\t‚ùìÔ∏è\tAries RFC 0023: DID Exchange v1\tThe protocol to exchange DIDs between agents when establishing a DID based relationship ‚úÖ\t‚ùìÔ∏è\t‚ùìÔ∏è\t‚ùìÔ∏è\tAries RFC 0434: Out-of-Band Protocol 1.1, same as DIDCommV2 Invitation 1.0\tOut-of-Band Protocol for DIDComm (part of DIDCommV2 specification) ‚úÖ\t‚ùå\t‚ùå\t‚ùå\tTrust Ping Protocol 2.0\tThe protocol is a standard way for agents to test connectivity, responsiveness, and security of a DIDComm channel ‚úÖ\t‚ùå\t‚ùå\t‚ùå\tRouting Protocol 2.0\tThe routing protocol defines how a sender and a recipient cooperate, using a partly trusted mediator, to facilitate message delivery ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tIssue Credential Protocol 3.0\tDIDCommV2 Issue Credential Protocol 3.0 for VC-JWT, AnonCreds and SD-JWT ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tPresent Proof Protocol 3.0\tDIDCommV2 Present Proof Protocol 3.0 for VC-JWT, AnonCreds and SD-JWT ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tIdentus Revocation Notification Protocol 1.0\tThe protocol for an Issuer to notify the revocation of a credential to the holder. ‚úÖ\t‚úÖ\t‚úÖ\t‚úÖ\tAries RFC 0035: Report Problem Protocol 1.0\tReport Problem Protocol for DIDCommV2 üîÑ\tüîÑ\tüîÑ\tüîÑ\tOpenID for Verifiable Credential Issuance - draft 15\tOpenID Connect for VC Issuance (VC-JWT is supported only). Client side. üîÑ\tüîÑ\tüîÑ\tüöß\tOpenID for Verifiable Credential Presentation - draft 15\tOpenID Connect for VC Presentation (VC-JWT is supported only). Client side. ","version":"Next","tagName":"h2"},{"title":"Running Node","type":0,"sectionRef":"#","url":"/docs/home/identus/prism-node/running-node","content":"","keywords":"","version":"Next"},{"title":"Overview‚Äã","type":1,"pageTitle":"Running Node","url":"/docs/home/identus/prism-node/running-node#overview","content":" The Node is a level 2 proxy on top of the Cardano blockchain responsible for publishing, resolving, updating, and deactivating DIDs. It exposes a gRPC API to perform all the operations above.  note This documentation will not describe the gRPC API itself.  The Identus cloud Agent communicates with the Node, with all operations conducted through it. The following documentation will provide a high-level overview of how the Node functions and explain its usage, including the environment variables required and how to deploy it to the Cardano mainnet and testnet.  ","version":"Next","tagName":"h2"},{"title":"Node components‚Äã","type":1,"pageTitle":"Running Node","url":"/docs/home/identus/prism-node/running-node#node-components","content":" The Node consists of four separate executables:  Node gRPC serverNode PosgresQL databaseCardano wallet backendDB sync  Node gRPC server‚Äã  The Node gRPC is a service responsible for submitting transactions to the Cardano network with a configurable frequency, retrieving blocks, and processing the data for storage in a database.  Node PosgresQL database‚Äã  The database used by the Node to store processed data, namely DID documents and their respective states.  Cardano wallet backend‚Äã  An interface enables the Node to submit transactions to the Cardano node.  DB sync.‚Äã  The Node uses an indexed version of the Cardano blockchain to access and parse minted blocks.    ","version":"Next","tagName":"h2"},{"title":"Node enviroment variables‚Äã","type":1,"pageTitle":"Running Node","url":"/docs/home/identus/prism-node/running-node#node-enviroment-variables","content":" Environment Variable\tDescription\tDefault Value\tData TypeNODE_PSQL_HOST\tHost and port of Node PosgresQL database\tlocalhost:5432\tString NODE_PSQL_DATABASE\tName of the database to connect to\tnode_db\tString NODE_PSQL_USERNAME\tUsername for database authentication\tpostgres\tString NODE_PSQL_PASSWORD\tPassword for database authentication\tpostgres\tString NODE_PSQL_AWAIT_CONNECTION_THREADS\tMaximum amount of database connections\t8\tInt NODE_LEDGER\tLedger which will be used for txs and blocks\tin-memory\tEnum(in-memory, cardano) NODE_REFRESH_AND_SUBMIT_PERIOD\tTime period between refreshing transaction statuses and submitting pending operations\t20s\tString NODE_MOVE_SCHEDULED_TO_PENDING_PERIOD\tTime period between making scheduled operations ready for submissions\t15s\tString NODE_WALLET_MAX_TPS\tMaximum number of transactions cardano-wallet can work with\t10\tInt NODE_DID_PUBLIC_KEYS_LIMIT\tMaximum number of public keys Node API can create/update/get per request to a DID\t50\tInt NODE_DID_SERVICES_LIMIT\tMaximum number of services Node API can create/update/get per request to a DID\t50\tInt NODE_SERVICE_ENDPOINT_CHAR_LIMIT\tMaximum number of characters every DID service endpoint can have\t300\tInt NODE_SERVICE_TYPE_CHAR_LIMIT\tMaximum number of characters every DID type can have\t100\tInt NODE_CONTEXT_STRING_CHAR_LIMIT\tMaximum number of characters every context string of a DID can have\t100\tInt NODE_ID_CHAR_LIMIT\tMaximum number of characters id field of pk and service can have\t50\tInt NODE_CARDANO_NETWORK\tCardano network node should operate on\ttestnet\tEnum(testnet, mainnet) NODE_CARDANO_WALLET_ID\tID (hex encoded) of the wallet to use for payments String NODE_CARDANO_WALLET_PASSPHRASE\tSpending passphrase of NODE_CARDANO_WALLET_ID String NODE_CARDANO_PAYMENT_ADDRESS\tAddress (hex encoded) to make payments to, can be NODE_CARDANO_WALLET_ID itself String NODE_CARDANO_WALLET_API_HOST\tCardano wallet backend API host\tlocalhost\tString NODE_CARDANO_WALLET_API_PORT\tCardano wallet backend API port\t8090\tInt NODE_CARDANO_WALLET_ROUTING_HEADER_NAME\tCardano wallet backend routing header name String NODE_CARDANO_PRISM_GENESIS_BLOCK\tIndex of the first block from which node should start syncing from\t1868381\tInt NODE_CARDANO_CONFIRMATION_BLOCKS\tNumber of blocks to wait before transaction is considered to be confirmed\t112\tInt NODE_CARDANO_DB_SYNC_HOST\tDb sync database host and port\tlocalhost:5433\tString NODE_CARDANO_DB_SYNC_DATABASE\tdatabse name in DB sync PosgresQL database\tcexplorer\tString NODE_CARDANO_DB_SYNC_USERNAME\tUsername for db sync database authentication\tpostgres\tString NODE_CARDANO_DB_SYNC_PASSWORD\tPassword for db sync database authentication\tpassword\tString  Running node‚Äã  Node docker image is available on GitHub, accessible here:  docker pull ghcr.io/input-output-hk/prism-node:2.3.0   By default, Node will run with an in-memory ledger, ideal for development purposes. To run it on Cardano, you must set the NODE_LEDGER environment variable to cardano. If you do this, Node will utilize the Cardano wallet backend and DB-sync to query for blocks and submit transactions. It is crucial to have the Cardano wallet backend and DB-sync running before running the Node with NODE_LEDGER set to cardano.  Most up-to-date instructions on how to run the Cardano wallet backend and DB-sync are available in their respective repositories:  Cardano wallet backendDB-sync  Once you have these services up and running, specify their respective URLs in the environment variables of the Node:  Cardano wallet backend NODE_CARDANO_WALLET_API_HOST for wallet server hostNODE_CARDANO_WALLET_API_PORT for wallet server portNODE_CARDANO_WALLET_ROUTING_HEADER_NAME for wallet routing header name DB-sync NODE_CARDANO_DB_SYNC_HOST for DB-sync host and port in a format host:portNODE_CARDANO_DB_SYNC_DATABASE the databse name in DB-sync postgres databaseNODE_CARDANO_DB_SYNC_USERNAME DB-sync Database usernameNODE_CARDANO_DB_SYNC_PASSWORD DB-sync Database password  When running the Node with Cardano ledger, you must specify which network to use, either mainnet or testnet, using the NODE_CARDANO_NETWORK environment variable. While this environment variable is essential for the correct operation of the Node, it does not define the usable network. As mentioned earlier, the interface communicates with the Cardano node; subsequently, the network is DB-sync and Cardano wallet backend. Therefore, when configuring those services, you must specify the network used in their respective configurations. It is possible to run DB-sync on testnet, and Cardano wallet backend on mainnet, and select either one via NODE_CARDANO_NETWORK. The Node won't report any errors, but this configuration would be incorrect and won't work correctly. You are responsible for syncing these three components. If you intend to use the testnet, set NODE_CARDANO_NETWORK to the testnet, but also run Cardano wallet backend connected to the testnet and start DB-sync to sync from the Node that is also running on the testnet as well. The same goes with mainnet.  Apart from that, you must also provide the Wallet ID and its spending password as environment variables as well:  NODE_CARDANO_WALLET_ID - The wallet ID must be in hex-encoded format, and the wallet must belong to the network you are running the Node on, which can be either testnet or mainnetNODE_CARDANO_WALLET_PASSPHRAS - Spending password or wallet above  The Node utilizes Cardano as a decentralized open database, and its implementation is similar to the DIF Sidetree Protocol. In short, the Node stores all relevant information in a Cardano transaction metadata and sends 1 ADA (minimum allowed amount) to another address, which you must provide via the NODE_CARDANO_PAYMENT_ADDRESS environment variable, which will store arbitrary information on the blockchain. In most cases, you don't need to specify a particular address for sending transactions as long as the transaction gets recorded. In this case, you should set NODE_CARDANO_PAYMENT_ADDRESS to the same address you are sending transactions from, NODE_CARDANO_WALLET_ID. In this configuration, you are not spending any ADA other than the transaction fee for every transaction. Suppose your wallet does not have enough ADA to cover the transaction fee (plus 1 ADA to send to yourself). In that case, the transaction won't get recorded, and your operation, which includes any DID-related action, won't be submitted.  The last component is the database that the Node uses internally to index Identus cloud agent related Cardano transactions and maintain the state of DID documents. It is a simple PostgreSQL version 13 database, and you can use the Docker image postgres:13 to run it.  When running the Node, you must specify the host, database name, username, and password of this database via environment variables.  NODE_PSQL_HOST - host with a port, in a format host:portNODE_PSQL_DATABASE - database nameNODE_PSQL_USERNAME - usernameNODE_PSQL_PASSWORD - password  The Node gRPC server has three dependencies: Node DB, Cardano wallet, and DB-sync. You need to run these three services before starting the Node.  Node DB is a simple PostgreSQL database.  Cardano wallet is an application that communicates with the Cardano network; it functions as a server that you can start and connect to either the mainnet or testnet. You must provide the Node runnable's host and port as environment variables.  DB-sync is an application responsible for syncing the Cardano blockchain with a PostgreSQL database. It would help if you used it to sync with either the mainnet or testnet and must provide the database host with port, database name, and credentials as environment variables to the Node runnable. ","version":"Next","tagName":"h3"},{"title":"Troubleshooting & Considerations","type":0,"sectionRef":"#","url":"/docs/home/identus/troubleshooting&considerations","content":"","keywords":"","version":"Next"},{"title":"Docker Logging Management Considerations‚Äã","type":1,"pageTitle":"Troubleshooting & Considerations","url":"/docs/home/identus/troubleshooting&considerations#docker-logging-management-considerations","content":" When setting up a long-running environment using Docker Compose, it‚Äôs important to consider several factors to avoid issues such as excessive log file sizes leading to out-of-memory errors.  ","version":"Next","tagName":"h2"},{"title":"Configuring Docker Compose for Effective Log Management‚Äã","type":1,"pageTitle":"Troubleshooting & Considerations","url":"/docs/home/identus/troubleshooting&considerations#configuring-docker-compose-for-effective-log-management","content":" To ensure your Docker containers run smoothly and avoid problems related to excessive log file growth, configure log rotation in your docker-compose.yml file. This will help manage log file sizes and prevent out-of-memory errors caused by uncontrolled log growth.  ","version":"Next","tagName":"h3"},{"title":"Log Rotation Example‚Äã","type":1,"pageTitle":"Troubleshooting & Considerations","url":"/docs/home/identus/troubleshooting&considerations#log-rotation-example","content":" Here‚Äôs a example in the mediator how to set up log rotation in your Docker Compose configuration:  Open your docker-compose.yml file.Add or update the logging configuration under your service definition. For example:  version: '3.8' services: identus-mediator: image: ghcr.io/input-output-hk/atala-prism-mediator:0.14.2 logging: driver: json-file options: max-size: &quot;10m&quot; max-file: &quot;3&quot;   driver: Specifies the logging driver to use. The json-file driver is the default and supports log rotation options.max-size: Sets the maximum size of the log file before it gets rotated. In the example above, the log file will be rotated when it reaches 10 MB.max-file: Determines the number of rotated log files to keep. In this example, up to 3 log files will be kept before old files are deleted.  docker-compose up -d   Save the changes to your docker-compose.yml file and Restart your Docker containers to apply the new logging configuration.  ","version":"Next","tagName":"h3"},{"title":"Configuring Docker Daemon for Effective Log Management‚Äã","type":1,"pageTitle":"Troubleshooting & Considerations","url":"/docs/home/identus/troubleshooting&considerations#configuring-docker-daemon-for-effective-log-management","content":" We should consider configuring the logging Options in the Docker Daemon. For a global logging configuration applicable to all Docker containers. We can modify the Docker daemon settings. This approach ensures consistent log management across all containers.  Edit the Docker daemon configuration file (usually located at /etc/docker/daemon.json). If the file doesn‚Äôt exist, you can create it.Add or update the logging options in the daemon.json file:  { &quot;log-driver&quot;: &quot;json-file&quot;, &quot;log-opts&quot;: { &quot;max-size&quot;: &quot;10m&quot;, &quot;max-file&quot;: &quot;3&quot; } }   Restart the Docker daemon to apply the new settings:  sudo systemctl restart docker   Docker logging drivers‚Äã  For more information see https://docs.docker.com/engine/logging/configure/#supported-logging-drivers ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/","content":"README Redirecting to /atala-prism-wallet-sdk-ts/sdk/.","keywords":"","version":"Next"},{"title":"SDK Package Release","type":0,"sectionRef":"#","url":"/docs/sdk-ts/decisions/sdk-package-release","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"SDK Package Release","url":"/docs/sdk-ts/decisions/sdk-package-release#context-and-problem-statement","content":" The package is now publicly available in the @atala npm organisation, removing the need of using a custom npmrc and a token with permissions to fetch from github repository.  Our current release process for all atala is to do monthly releases, before they close we choose what versions go in and which ones don't. During the month we also make new releases causing a lot of confusion with our users. Further to this, the current master HEAD is deployed as the latest package, which removes our control over the release of breaking changes etc, and causes friction for developers.  We propose to publish the package in the Atala-Prism and use a release-candidate or nightly build for the latest changes.  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers‚Äã","type":1,"pageTitle":"SDK Package Release","url":"/docs/sdk-ts/decisions/sdk-package-release#decision-drivers","content":" Developer friction when releasing unstable changes.  ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"SDK Package Release","url":"/docs/sdk-ts/decisions/sdk-package-release#considered-options","content":" All the proposed options split the RC and production releases in 2 so this issues are better addressed.  ","version":"Next","tagName":"h2"},{"title":"[option 1] Github packages for RC + NPM for production‚Äã","type":1,"pageTitle":"SDK Package Release","url":"/docs/sdk-ts/decisions/sdk-package-release#option-1-github-packages-for-rc--npm-for-production","content":" Releasing @atala packages into npm for official releases and use github packages for release-candidates.  ","version":"Next","tagName":"h3"},{"title":"[option 2] NPM for everything‚Äã","type":1,"pageTitle":"SDK Package Release","url":"/docs/sdk-ts/decisions/sdk-package-release#option-2-npm-for-everything","content":" Releasing @atala packages in official NPM repo as RC and Production packages.  This will have some side effects, semantic-release npm package will check what is the latest published version and trigger the semantic-publishing based on that. If we release a package as RC and then without changes we just want to release as production package without RC, this maybe needs to be done manually (another CI action).  ","version":"Next","tagName":"h3"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"SDK Package Release","url":"/docs/sdk-ts/decisions/sdk-package-release#decision-outcome","content":" Chosen option: &quot;[option 2]&quot;, because we don't want to make anyone go back to using a RC package with a github token and is really the best option.  We will have master and an RC branch and will follow normal expected semantic-release-process  Releasing packages:  Master branch is our development branch and we will / can always merge changes in master. In order to release a package, a new branch must be created, it does not matter if its a maintenance-release in a previous package, a release candidate or a production release.  For maintenance release, the engineer is going to create a branch representing the Maintenance (also RC) by creating &quot;release/v2.0.0&quot;. The changes will then be either cherry-picked or implemented in a PR that will merge directly into &quot;release/v2.0.0&quot;.  For release candidates, in normal development flow all the changes will be available in Master and each time we want to release a new RC package, we will create a branch called &quot;release/v3.0.0&quot; and cherry-pick those changes ready to release.  Production, can just be deployed from the release/* candidate branch by running the task &quot;Release&quot; which will set the version to be released without the RC. ","version":"Next","tagName":"h2"},{"title":"[short title of solved problem and solution]","type":0,"sectionRef":"#","url":"/docs/sdk-ts/decisions/template","content":"","keywords":"","version":"Next"},{"title":"Context and Problem Statement‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#context-and-problem-statement","content":" [Describe the context and problem statement, e.g., in free form using two to three sentences. You may want to articulate the problem in form of a question.]  ","version":"Next","tagName":"h2"},{"title":"Decision Drivers ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#decision-drivers-","content":" [driver 1, e.g., a force, facing concern, ‚Ä¶][driver 2, e.g., a force, facing concern, ‚Ä¶]‚Ä¶   ","version":"Next","tagName":"h2"},{"title":"Considered Options‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#considered-options","content":" [option 1][option 2][option 3]‚Ä¶   ","version":"Next","tagName":"h2"},{"title":"Decision Outcome‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#decision-outcome","content":" Chosen option: &quot;[option 1]&quot;, because [justification. e.g., only option, which meets k.o. criterion decision driver | which resolves force force | ‚Ä¶ | comes out best (see below)].  ","version":"Next","tagName":"h2"},{"title":"Positive Consequences ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#positive-consequences-","content":" [e.g., improvement of quality attribute satisfaction, follow-up decisions required, ‚Ä¶]‚Ä¶  ","version":"Next","tagName":"h3"},{"title":"Negative Consequences ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#negative-consequences-","content":" [e.g., compromising quality attribute, follow-up decisions required, ‚Ä¶]‚Ä¶  ","version":"Next","tagName":"h3"},{"title":"Pros and Cons of the Options ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#pros-and-cons-of-the-options-","content":" ","version":"Next","tagName":"h2"},{"title":"[option 1]‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#option-1","content":" [example | description | pointer to more information | ‚Ä¶]  Good, because [argument a]Good, because [argument b]Bad, because [argument c]‚Ä¶   ","version":"Next","tagName":"h3"},{"title":"[option 2]‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#option-2","content":" [example | description | pointer to more information | ‚Ä¶]  Good, because [argument a]Good, because [argument b]Bad, because [argument c]‚Ä¶   ","version":"Next","tagName":"h3"},{"title":"[option 3]‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#option-3","content":" [example | description | pointer to more information | ‚Ä¶]  Good, because [argument a]Good, because [argument b]Bad, because [argument c]‚Ä¶   ","version":"Next","tagName":"h3"},{"title":"Links ‚Äã","type":1,"pageTitle":"[short title of solved problem and solution]","url":"/docs/sdk-ts/decisions/template#links-","content":" [Link type](link to adr) ‚Ä¶  ","version":"Next","tagName":"h2"},{"title":"Identus Edge SDK TS Examples","type":0,"sectionRef":"#","url":"/docs/sdk-ts/examples/","content":"","keywords":"","version":"Next"},{"title":"Tutorials‚Äã","type":1,"pageTitle":"Identus Edge SDK TS Examples","url":"/docs/sdk-ts/examples/#tutorials","content":" ","version":"Next","tagName":"h2"},{"title":"Cross platform SDK Verification‚Äã","type":1,"pageTitle":"Identus Edge SDK TS Examples","url":"/docs/sdk-ts/examples/#cross-platform-sdk-verification","content":" Start a verification flow from an Edge Agent (holder wallet) and another holder to request (a did) to send you a credential proof for a specific issuer and specific claims.  Start tutorial  ","version":"Next","tagName":"h3"},{"title":"Connectionless Credential Offer‚Äã","type":1,"pageTitle":"Identus Edge SDK TS Examples","url":"/docs/sdk-ts/examples/#connectionless-credential-offer","content":" How to handle a Connectionless Credential Offer.  Start tutorial  ","version":"Next","tagName":"h3"},{"title":"Connectionless presentation‚Äã","type":1,"pageTitle":"Identus Edge SDK TS Examples","url":"/docs/sdk-ts/examples/#connectionless-presentation","content":" Trigger the verifier to generate an out of band verification request. It will work exactly as the didcomm connection invitation links  Start tutorial ","version":"Next","tagName":"h3"},{"title":"Edge SDK Backup & Restore","type":0,"sectionRef":"#","url":"/docs/sdk-ts/examples/Backup","content":"","keywords":"","version":"Next"},{"title":"The Foundation: Encryption and Key Management‚Äã","type":1,"pageTitle":"Edge SDK Backup & Restore","url":"/docs/sdk-ts/examples/Backup#the-foundation-encryption-and-key-management","content":" At the heart of the backup solution lies robust encryption. The process begins with the derivation of a master key from a seed, following the BIP32 standard. This master key is then used to encrypt the wallet data using JSON Web Encryption (JWE), a widely adopted standard. The encryption algorithm, ECDH-ES+A256KW, combined with AES-256-CBC and HMAC SHA-512, ensures that the data remains confidential and tamper-proof.  ","version":"Next","tagName":"h3"},{"title":"Data Specifications: Structure and Versioning‚Äã","type":1,"pageTitle":"Edge SDK Backup & Restore","url":"/docs/sdk-ts/examples/Backup#data-specifications-structure-and-versioning","content":" The structure of the backup data, which is formatted as a JSON document. This structure includes essential elements like keys, decentralized identifiers (DIDs), credentials, and messages. To accommodate future changes, the specification adheres to semantic versioning (semver), allowing for updates and modifications while maintaining backward compatibility.  ","version":"Next","tagName":"h3"},{"title":"Requirements‚Äã","type":1,"pageTitle":"Edge SDK Backup & Restore","url":"/docs/sdk-ts/examples/Backup#requirements","content":" SDK A - a used instance with data in the store.SDK B - an unused instance, with an empty store.  ","version":"Next","tagName":"h2"},{"title":"Flow‚Äã","type":1,"pageTitle":"Edge SDK Backup & Restore","url":"/docs/sdk-ts/examples/Backup#flow","content":" SDK A creates a Backup jweSDK B restores from the jwe  ","version":"Next","tagName":"h2"},{"title":"Code Reference‚Äã","type":1,"pageTitle":"Edge SDK Backup & Restore","url":"/docs/sdk-ts/examples/Backup#code-reference","content":" Create the jwe using the Agent function provided.  Example  const jwe = await Agent_a.backup.createJWE();   Transfer the jwe to another SDK.Restore from the jwe using the Agent function provided.  Example  await Agent_b.backup.restore(jwe);  ","version":"Next","tagName":"h2"},{"title":"Connectionless Presentation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessPresentation","content":"","keywords":"","version":"Next"},{"title":"Description‚Äã","type":1,"pageTitle":"Connectionless Presentation","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessPresentation#description","content":" A Connectionless PresentationRequest is an Out of Band Invitation with a PresentationRequest Attachment. This should be a URI with a single query parameter _oob, which is an encoded JSON. It should look similar to:  https://my.domain.com/path?_oob=eyJpZCI6IjcxYTE2ZGEzLTk3ZmYtNDYwYS1iNWY5LTI1YTYxZmU4NjRmNCIsInR5cGUiOiJodHRwczovL2RpZGNvbW0ub3JnL291dC1vZi1iYW5kLzIuMC9pbnZpdGF0aW9uIiwiZnJvbSI6ImRpZDpwZWVyOjIuRXo2TFN0MkMxeHZpQjduRkVVSEpBeVdxdkRGMnh5SnRRSFdhZlFNeG15MVN5U29INi5WejZNa2dNQ2hxWlZRNDdHODhFQlk2UVpvUGJCc0NxQnlodHlmQTNUUXB5QktuN0VqLlNleUowSWpvaVpHMGlMQ0p6SWpwN0luVnlhU0k2SW1oMGRIQTZMeTh4T1RJdU1UWTRMakV1TkRRNk9EQXdNQzlrYVdSamIyMXRJaXdpY2lJNlcxMHNJbUVpT2xzaVpHbGtZMjl0YlM5Mk1pSmRmWDAiLCJib2R5Ijp7ImdvYWxfY29kZSI6InByZXNlbnQtdnAiLCJnb2FsIjoiUmVxdWVzdCBwcm9vZiBvZiB2YWNjaW5hdGlvbiBpbmZvcm1hdGlvbiIsImFjY2VwdCI6W119LCJhdHRhY2htZW50cyI6W3siaWQiOiJjOGMxY2E3Zi05YjJjLTQwOGQtODZkMi0zNWJiYmU2ZTMwNjgiLCJtZWRpYV90eXBlIjoiYXBwbGljYXRpb24vanNvbiIsImRhdGEiOnsianNvbiI6eyJpZCI6Ijc4ZTc5NTFhLWZhOTYtNDg2Mi1hYmVkLWFmYTBhZWQyMzgzNCIsInR5cGUiOiJodHRwczovL2RpZGNvbW0uYXRhbGFwcmlzbS5pby9wcmVzZW50LXByb29mLzMuMC9yZXF1ZXN0LXByZXNlbnRhdGlvbiIsImJvZHkiOnsiZ29hbF9jb2RlIjoiUmVxdWVzdCBQcm9vZiBQcmVzZW50YXRpb24iLCJ3aWxsX2NvbmZpcm0iOmZhbHNlLCJwcm9vZl90eXBlcyI6W119LCJhdHRhY2htZW50cyI6W3siaWQiOiJiNWIzZjBjMC05NWQ2LTRkOTItOWQ0Ni1hNDVmYTdlMzVjYWEiLCJtZWRpYV90eXBlIjoiYXBwbGljYXRpb24vanNvbiIsImRhdGEiOnsianNvbiI6eyJvcHRpb25zIjp7ImNoYWxsZW5nZSI6IjExYzkxNDkzLTAxYjMtNGM0ZC1hYzM2LWIzMzZiYWI1YmRkZiIsImRvbWFpbiI6Imh0dHBzOi8vcHJpc20tdmVyaWZpZXIuY29tIn0sInByZXNlbnRhdGlvbl9kZWZpbml0aW9uIjp7ImlkIjoiZjNmNmQwYTAtYzdhNS00NjAzLWJkZjUtMjU1ZWJkZGU5ODdiIiwiaW5wdXRfZGVzY3JpcHRvcnMiOltdfX19LCJmb3JtYXQiOiJwcmlzbS9qd3QifV0sInRoaWQiOiI3MWExNmRhMy05N2ZmLTQ2MGEtYjVmOS0yNWE2MWZlODY0ZjQiLCJmcm9tIjoiZGlkOnBlZXI6Mi5FejZMU3QyQzF4dmlCN25GRVVISkF5V3F2REYyeHlKdFFIV2FmUU14bXkxU3lTb0g2LlZ6Nk1rZ01DaHFaVlE0N0c4OEVCWTZRWm9QYkJzQ3FCeWh0eWZBM1RRcHlCS243RWouU2V5SjBJam9pWkcwaUxDSnpJanA3SW5WeWFTSTZJbWgwZEhBNkx5OHhPVEl1TVRZNExqRXVORFE2T0RBd01DOWthV1JqYjIxdElpd2ljaUk2VzEwc0ltRWlPbHNpWkdsa1kyOXRiUzkyTWlKZGZYMCJ9fX1dLCJjcmVhdGVkX3RpbWUiOjE3MjQ0MjY1NjgsImV4cGlyZXNfdGltZSI6MTcyNDQyNjg2OH0=   The Verifier creates a PresentationRequest and shares it with the Holder as an out-of-band URL. The Holder can then decode the PresentationRequest and use the SDK to either approve or reject it.  If the Holder accepts the PresentationRequest, a credential Presentation is sent to the Verifier. The Verifier will then resolve the DIDs onChain and verify that the Presentation is valid. All communications are performed using DIDComm v2.    ","version":"Next","tagName":"h2"},{"title":"For Issuers‚Äã","type":1,"pageTitle":"Connectionless Presentation","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessPresentation#for-issuers","content":" ","version":"Next","tagName":"h2"},{"title":"Using the Cloud Agent‚Äã","type":1,"pageTitle":"Connectionless Presentation","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessPresentation#using-the-cloud-agent","content":" Creating a Credential Offer OOB Url through the Cloud Agent is pretty straight forward, do POST request to /present-proof/presentations/invitation:  curl --location 'http:///cloud-agent/present-proof/presentations/invitation' \\ --header 'Content-Type: application/json' \\ --data '.......'   A successful response will contain (string) invitation.invitationUrl.  ","version":"Next","tagName":"h3"},{"title":"Using TS SDK‚Äã","type":1,"pageTitle":"Connectionless Presentation","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessPresentation#using-ts-sdk","content":" The SDK provides everything that is needed by Verifiers, creating and publishing prism:dids, resolving those onChain, creating OOB Presentation requests...  Add the required imports  import SDK from &quot;@hyperledger/identus-sdk&quot;;   Here's the types we are going to be using  async function createRequestPresentationMessage&lt;T extends SDK.Domain.CredentialType&gt;( agent: SDK.Agent, type: T, claims: SDK.Domain.PresentationClaims&lt;T&gt;, toDID?: SDK.Domain.DID, ): Promise&lt;SDK.Domain.Message&gt; { if (!agent) { throw new Error(&quot;No agent found&quot;); } const peerDID = await createPeerDID(); let task: SDK.Utils.Task&lt;any&gt;; const task = new SDK.Tasks.CreatePresentationRequest({ type, toDID: toDID ?? peerDID, claims:claims }) const requestPresentation = await agent.runTask&lt;SDK.RequestPresentation&gt;(task); const requestPresentationMessage = requestPresentation.makeMessage(); if (!toDID) { delete (requestPresentationMessage as any).to; } return requestPresentationMessage; }   That function will return a SDK.Domain.Message that we can easily send with agent.send(requestPresentationMessage)  ","version":"Next","tagName":"h3"},{"title":"For Holders‚Äã","type":1,"pageTitle":"Connectionless Presentation","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessPresentation#for-holders","content":" Holders will scan the qrcode, and extract the PresentationRequest from the OutOfBandInvitation Message.  Parsing the OOB Url is very easy in the SDK:  import SDK from &quot;@hyperledger/identus-sdk&quot;; async function parseOOB(agent: SDK.Agent, url: string): Promise&lt;SDK.InvitationType&gt; { return agent.parseInvitation(url) }   We would then build the complete Presentation message, holder at this point should have accepted or rejected already:  import SDK from &quot;@hyperledger/identus-sdk&quot;; const selfPeerDID = await agent.createPeerDID([], true) const oobMessage = await parseOOB(agent, oobURL); const presentationRequestMessage = SDK.Domain.Message.fromJson( oobMessage.attachments.at(0)?.payload ) const request = SDK.RequestPresentation.fromMessage(message); const credential:SDK.Domain.Credential = //The credential tha the user accepted the PresentaionRequest with const task = new SDK.Tasks.CreatePresentation({ request, credential }) const presentationMessage = await agent.runTask(task);   Once the user has accepted the PresentationRequest, it will choose one SDK.Domain.Credential and reply to the SDK.RequestPresentation Message with a SDK.Presentation Message.  await agent.send(presentationMessage);  ","version":"Next","tagName":"h2"},{"title":"Edge SDK Connectionless Credential Offer","type":0,"sectionRef":"#","url":"/docs/sdk-ts/examples/OIDC","content":"","keywords":"","version":"Next"},{"title":"Flow‚Äã","type":1,"pageTitle":"Edge SDK Connectionless Credential Offer","url":"/docs/sdk-ts/examples/OIDC#flow","content":" Obtain a Connectionless Credential Offer from an Issuer.  A Credential Offer should be a URI with a single query parameter credential_offer, which is an encoded JSON. It should look similar to:  openid-credential-offer://?credential_offer=%7B%22credential_issuer%22%3A%22http%3A%2F%2Flocalhost%3A8090%2Foid4vci%2Fissuers%2F59104e60-3bf1-4e38-be58-4a219acf561b%22%2C%22credential_configuration_ids%22%3A%5B%22Example%22%5D%2C%22grants%22%3A%7B%22authorization_code%22%3A%7B%22issuer_state%22%3A%22aa10127f-c27e-4130-a0ed-659e3e1ad6ae%22%7D%7D%7D   Ensure the validity of the Offer with Agent.parseCredentialOffer  parseCredentialOffer decodes and validates the encoded credential_offer returning the JSON on success.  const offer = await Agent.parseCredentialOffer(rawOffer);   Create an AuthorizationRequest with Agent.resolveCredentialOffer  resolveCredentialOffer takes the parsed Offer, relevant client id and the desired redirect url, and constructs an AuthorizationRequest. This AuthorizationRequest contains a url that goes to the Authorization Server where the user can authorize the client to gain an access token.  const authRequest = await Agent.resolveCredentialOffer(offer, CLIENT_ID, REDIRECT_URL); const urlString = authRequest.url.href;   Retrieve the Credential with Agent.resolveCredentialRequest  After successfully authorizing, the user will be redirected to the given redirect url. Once there we use the full URL plus query parameters, the Offer and the AuthorizationRequest to gain an access token and request the Credential (these steps are handled by resolveCredentialRequest).  const credential = await oidcAgent.resolveCredentialRequest(offer, authRequest, { callbackUrl: url });  ","version":"Next","tagName":"h2"},{"title":"Cross-Platform Edge SDK Verification","type":0,"sectionRef":"#","url":"/docs/sdk-ts/examples/SDKVerification","content":"","keywords":"","version":"Next"},{"title":"Requirements‚Äã","type":1,"pageTitle":"Cross-Platform Edge SDK Verification","url":"/docs/sdk-ts/examples/SDKVerification#requirements","content":" A working Identus Mediator and an Identus Cloud Agent.A holder who already has a JWT Credential issued by a known issuer (prism:did) [Holder A]A holder who does not have credentials but aims to start the Verification [Holder B (verifier)]Holder A shares its peerDID with holder B.Holder B will initiate a presentation request  NOTE: Please follow the Quick started guide to complete steps 1, 2, 3  ","version":"Next","tagName":"h2"},{"title":"Specification‚Äã","type":1,"pageTitle":"Cross-Platform Edge SDK Verification","url":"/docs/sdk-ts/examples/SDKVerification#specification","content":" NOTE: It follows the Identity Foundation Presentation-exchange V2 protocol Claims can be export type PredicateType = string | number export type InputFieldFilter = { type: string, pattern?: string, enum?: PredicateType[], const?: PredicateType[], value?: PredicateType } export type Claims = { [name: string]: InputFieldFilter }   ","version":"Next","tagName":"h2"},{"title":"Flow‚Äã","type":1,"pageTitle":"Cross-Platform Edge SDK Verification","url":"/docs/sdk-ts/examples/SDKVerification#flow","content":" Holder B Initiates the Presentation Request: creating a PresentationDefinitionRequest with specified requirements.Holder A, will then create a Presentation Submission which contains the requested credential together with a randomised challenge.Holder B, will receive the Presentation Submission and verify the following Holder A signed the JWT presentation with the correct signatures.Holder A signed the random challenge that required him to have the correct keys.Holder A is including a credentials it owns and not somebody else's.Holder A is includes a credential with valid signatures, matching the issuer through the specified DID.(optional) Holder A has included a credential that the requested issuer has issued.(optional) Holder A has included a credential that satisfies the requested claims. Holder B can then verify at any point in time that presentation request and show feedback in UI.  ","version":"Next","tagName":"h2"},{"title":"Code Reference‚Äã","type":1,"pageTitle":"Cross-Platform Edge SDK Verification","url":"/docs/sdk-ts/examples/SDKVerification#code-reference","content":" toDID is the peer did of holder A, which has the credential that we aim to verifyclaims contain an object with all the claims we aim to validate; setting claims is internally used to help Holder A choose the proper credential and correctly verify the fields when Holder B receives the presentation.  Example  const claims: Claims = { email: { type: 'string', pattern:'email@email.com' } } const options:PresentationClaims = { issuer: Domain.DID.fromString(&quot;did:peer:12345&quot;), claims: claims } agent.initiatePresentationRequest( Domain.CredentialType.JWT, toDID, options );   The Edge Agent Verifier (SDK) will then send the Presentation Request to the desired holderThe Edge Agent Holder will be asked to choose what credential wants to be used for that Presentation RequestThe Edge Agent Verifier (SDK) will then receive and validate the Credential as follows  Example  //Presentation is the message sent by the holder back to the verifier const message = SDK.Presentation.fromMessage(message); agent.handlePresentation(message)  ","version":"Next","tagName":"h2"},{"title":"Connectionless Credential Offer","type":0,"sectionRef":"#","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessOffer","content":"","keywords":"","version":"Next"},{"title":"Description‚Äã","type":1,"pageTitle":"Connectionless Credential Offer","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessOffer#description","content":" A Connectionless Credential Offer is an Out of Band Invitation with a Credential Offer Attachment. This should be a URI with a single query parameter _oob, which is an encoded JSON. It should look similar to:  https://my.domain.com/path?_oob=eyJpZCI6ImY5NmUzNjk5LTU5MWMtNGFlNy1iNWU2LTZlZmU2ZDI2MjU1YiIsInR5cGUiOiJodHRwczovL2RpZGNvbW0ub3JnL291dC1vZi1iYW5kLzIuMC9pbnZpdGF0aW9uIiwiZnJvbSI6ImRpZDpwZWVyOjIuRXo2TFNmc0tNZTh2U1NXa1lkWkNwbjRZVmlQRVJmZEdBaGRMQUdIZ3gyTEdKd2ZtQS5WejZNa3B3MWtTYWJCTXprQTN2NTl0UUZuaDNGdGtLeTZ4TGhMeGQ5UzZCQW9hQmcyLlNleUowSWpvaVpHMGlMQ0p6SWpwN0luVnlhU0k2SW1oMGRIQTZMeTh4T1RJdU1UWTRMakV1TXpjNk9EQTRNQzlrYVdSamIyMXRJaXdpY2lJNlcxMHNJbUVpT2xzaVpHbGtZMjl0YlM5Mk1pSmRmWDAiLCJib2R5Ijp7ImdvYWxfY29kZSI6Imlzc3VlLXZjIiwiZ29hbCI6IlRlc3QgT09CIiwiYWNjZXB0IjpbImRpZGNvbW0vdjIiXX0sImNyZWF0ZWRfdGltZSI6MTcyNDg1MTEzOSwiZXhwaXJlc190aW1lIjo5OTI0ODUxNDM5LCJhdHRhY2htZW50cyI6W3siaWQiOiIwMGNkYzkwYy05YTk5LTRjZGEtODdmZS00ZjRiMjU5NTExMmEiLCJtZWRpYV90eXBlIjoiYXBwbGljYXRpb24vanNvbiIsImRhdGEiOnsianNvbiI6eyJpZCI6IjY1NWU5YTJjLTQ4ZWQtNDU5Yi1iM2RhLTZiMzY4NjY1NTU2NCIsInR5cGUiOiJodHRwczovL2RpZGNvbW0ub3JnL2lzc3VlLWNyZWRlbnRpYWwvMy4wL29mZmVyLWNyZWRlbnRpYWwiLCJib2R5Ijp7ImdvYWxfY29kZSI6Ik9mZmVyIENyZWRlbnRpYWwiLCJjcmVkZW50aWFsX3ByZXZpZXciOnsidHlwZSI6Imh0dHBzOi8vZGlkY29tbS5vcmcvaXNzdWUtY3JlZGVudGlhbC8zLjAvY3JlZGVudGlhbC1jcmVkZW50aWFsIiwiYm9keSI6eyJhdHRyaWJ1dGVzIjpbeyJuYW1lIjoiZmFtaWx5TmFtZSIsInZhbHVlIjoiV29uZGVybGFuZCJ9XX19fSwiYXR0YWNobWVudHMiOlt7ImlkIjoiODQwNDY3OGItOWEzNi00OTg5LWFmMWQtMGY0NDUzNDdlMGUzIiwibWVkaWFfdHlwZSI6ImFwcGxpY2F0aW9uL2pzb24iLCJkYXRhIjp7Impzb24iOnsib3B0aW9ucyI6eyJjaGFsbGVuZ2UiOiJhZDBmNDNhZC04NTM4LTQxZDQtOWNiOC0yMDk2N2JjNjg1YmMiLCJkb21haW4iOiJkb21haW4ifSwicHJlc2VudGF0aW9uX2RlZmluaXRpb24iOnsiaWQiOiI3NDhlZmE1OC0yYmNlLTQ0MGQtOTIxZi0yNTIwYTg0NDY2NjMiLCJpbnB1dF9kZXNjcmlwdG9ycyI6W10sImZvcm1hdCI6eyJqd3QiOnsiYWxnIjpbIkVTMjU2SyJdLCJwcm9vZl90eXBlIjpbXX19fX19LCJmb3JtYXQiOiJwcmlzbS9qd3QifV0sInRoaWQiOiJmOTZlMzY5OS01OTFjLTRhZTctYjVlNi02ZWZlNmQyNjI1NWIiLCJmcm9tIjoiZGlkOnBlZXI6Mi5FejZMU2ZzS01lOHZTU1drWWRaQ3BuNFlWaVBFUmZkR0FoZExBR0hneDJMR0p3Zm1BLlZ6Nk1rcHcxa1NhYkJNemtBM3Y1OXRRRm5oM0Z0a0t5NnhMaEx4ZDlTNkJBb2FCZzIuU2V5SjBJam9pWkcwaUxDSnpJanA3SW5WeWFTSTZJbWgwZEhBNkx5OHhPVEl1TVRZNExqRXVNemM2T0RBNE1DOWthV1JqYjIxdElpd2ljaUk2VzEwc0ltRWlPbHNpWkdsa1kyOXRiUzkyTWlKZGZYMCJ9fX1dfQ==   The Issuer creates a CredentialOffer and shares it with the Holder as an out-of-band URL. The Holder can then decode the CredentialOffer and use the SDK to either approve or reject it.  If the Holder accepts the offer, a CredentialRequest is sent to the Issuer. The Issuer then issues the final Credential to the Holder. All communications are performed using DIDComm v2.    ","version":"Next","tagName":"h2"},{"title":"For Issuers‚Äã","type":1,"pageTitle":"Connectionless Credential Offer","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessOffer#for-issuers","content":" ","version":"Next","tagName":"h2"},{"title":"Using the Cloud Agent‚Äã","type":1,"pageTitle":"Connectionless Credential Offer","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessOffer#using-the-cloud-agent","content":" Creating a Credential Offer OOB Url through the Cloud Agent is pretty straight forward, do POST request to /issue-credentials/credential-offers/invitation:  curl --location 'http:///cloud-agent/issue-credentials/credential-offers/invitation' \\ --header 'Content-Type: application/json' \\ --data '.......'   A successful response will contain (string) invitation.invitationUrl.  ","version":"Next","tagName":"h3"},{"title":"Using TS SDK‚Äã","type":1,"pageTitle":"Connectionless Credential Offer","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessOffer#using-ts-sdk","content":" The SDK provides everything that is needed by issuers, creating and publishing prism:dids, resolving those onChain, creating OOB Credential Offers, OOB Presentation requests.  Add the required imports  import SDK from &quot;@hyperledger/identus-sdk&quot;;   Here's the types we are going to be using  type Claims = {name: string, value: any} type Request = { id: string; claims: Claims[]; credentialFormat: string; automaticIssuance: boolean; issuingDID: string; }   Let's create the function to create the OOB Credential Offer URL   async function createCredentialOffer(agent: SDK.Agent, request: Request, baseUrl: string) { const peerDID = await agent.createNewPeerDID([], true) const oobTask = new SDK.Tasks.CreateOOBOffer({ from: peerDID, offer: new SDK.OfferCredential( { goal_code: &quot;Offer Credential&quot;, credential_preview: { type: SDK.ProtocolType.DidcommCredentialPreview, body: { attributes: request.claims }, }, }, [ new SDK.Domain.AttachmentDescriptor( { json: { id: crypto.randomUUID(), media_type: &quot;application/json&quot;, options: { challenge: crypto.randomUUID(), domain: baseUrl }, thid: request.id, presentation_definition: { id: crypto.randomUUID(), input_descriptors: [], format: { jwt: { alg: [ SDK.Domain.JWT_ALG.EdDSA ], proof_type: [] }, }, }, format: request.credentialFormat, }, }, &quot;application/json&quot;, request.id, undefined, request.credentialFormat ) ], undefined, undefined, request.id ) }); const oob = await agent.runTask(oobTask); return `${baseUrl}/?oob=${oob}`; }   Calling the function is pretty straight forward, you will need an instance of the Agent (SDK.Agent) and pass the required parameters, await for the response that will already be the string with the oob url.  ","version":"Next","tagName":"h3"},{"title":"For Holders‚Äã","type":1,"pageTitle":"Connectionless Credential Offer","url":"/docs/sdk-ts/examples/connectionless/ConnectionlessOffer#for-holders","content":" Holders will scan the qrcode, and extract the CredentialOffer from the OutOfBandInvitation Message.  Parsing the OOB Url is very easy in the SDK:  import SDK from &quot;@hyperledger/identus-sdk&quot;; async function parseOOB(agent: SDK.Agent, url: string): Promise&lt;SDK.InvitationType&gt; { return agent.parseInvitation(url) }   We would then build the complete CredentialOffer message, holder at this point should accept or reject:  import SDK from &quot;@hyperledger/identus-sdk&quot;; const oobMessage: SDK.OutOfBandInvitation = await parseOOB(agent, oobURL); const selfPeerDID = await agent.createPeerDID([], true) const oobOfferMessage:SDK.Domain.Message = SDK.Domain.Message.fromJSON({ ...oobMessage.attachments.at(0)?.pasyload, from: oobMessage.from, to: selfPeerDID })   Accepting the Offer using oobOfferMessage, which will Create SDK.Domain.Message and send it back to the Issuer for its acceptance. (If automatic issuance was implemented then the Credential should come right after receiving the appropiate credential request)  const requestCredential = await agent.handle(oobOfferMessage) await agent.send(requestCredential.makeMessage());  ","version":"Next","tagName":"h2"},{"title":"Migration guide from 6.X to 7.X","type":0,"sectionRef":"#","url":"/docs/sdk-ts/migration/migrating_6x_to_7x","content":"Migration guide from 6.X to 7.X This migration guide applies to both @hyperledger/identus-edge-agent-sdk and @hyperledger/identus-sdk. ##¬†Breaking Changes If core internals where not in use, this breaking changes are likely to not affect you, except if you weren't relying on the Agent but using the internals directly for some things. ###¬†feat: making didcomm plugin (#425) BREAKING CHANGE: Revocation handling is no longer automatic What Changed: DIDComm functionality has been refactored into a plugin architectureCredential revocation notifications are no longer handled automatically by the SDKRevocation messages must now be explicitly passed to the agent.handle() function for processingMajor reorganization of DIDComm-related code into src/plugins/internal/didcomm/ and src/plugins/internal/oea/Connection management protocols (MediateDeny, MediateGrant, PickupDelivery, etc.) moved to plugin structureProtocol types and invitation handlers restructured Migration Required: Update code that expects automatic revocation handling to explicitly call agent.handle() with revocation messagesReview any custom integrations with DIDComm protocols as file paths and module structures have changedIf using Out-of-Band (OOB) invitations or presentation protocols, verify imports from new plugin locations Files Changed: 89 files (630 insertions, 590 deletions) ###¬†feat!: Anoncreds moving to plugin export (#420) BREAKING CHANGE: Anoncreds is no longer included in the core SDK bundle What Changed: Anoncreds functionality has been extracted from the core SDK bundle into a separate pluginAnoncreds is no longer exported by default from the main SDKA new plugin system entry point has been created at src/plugins/internal/anoncreds/plugin.tsAnoncreds must now be explicitly loaded as a plugin if neededThis significantly reduces the core bundle size for applications that don't use Anoncreds Migration Required: Import and register the Anoncreds plugin explicitly in your application: import { AnoncredsPlugin } from '@atala/prism-wallet-sdk/plugins' // Register plugin with your agent configuration Update any imports that previously expected Anoncreds to be available by defaultE2E tests updated to show plugin registration pattern ###¬†feat!: updating DIDComm connection protocols (#400) BREAKING CHANGE: Removed HandshakeRequest.safeParseBody method What Changed: The HandshakeRequest.safeParseBody static method has been completely removedProtocol parsing logic has been refactored and centralizedChanges to how connection protocols handle message body parsingUpdates to MediationKeysUpdateList, PickupReceived, PickupRequest, and RevocationNotification protocolsProtocol types file has been cleaned up (removed 26 lines of unused types) Migration Required: Replace any calls to HandshakeRequest.safeParseBody() with the new parsing mechanismReview connection establishment code for any dependencies on the removed methodUpdate tests that relied on safeParseBody functionality feat(Pluto)!: updating Pluto to extend Startable (#399) BREAKING CHANGE: Pluto.stop() is now a required method What Changed: The Pluto interface now extends the Startable interfaceAll Pluto implementations must now provide a stop() method for proper cleanupThe stop() method was previously optional but is now mandatoryThis ensures consistent lifecycle management across all storage implementationsRxDB Store implementation updated to properly implement the stop() method Migration Required: If you have a custom Pluto implementation, you must implement the stop() methodThe stop() method should handle cleanup of database connections, event listeners, and any other resourcesUpdate initialization code to call pluto.stop() during application shutdown or cleanupExample implementation: async stop(): Promise&lt;void&gt; { // Clean up database connections // Remove event listeners // Close any open resources } ###¬†feat!: updating DIDComm other protocols (#397) BREAKING CHANGE: Protocol helper methods removed and message handling refactored What Changed: Removed 51 lines of protocol helper functions from ProtocolHelpers.tsBasicMessage protocol simplified (reduced from more complex implementation)ProblemReport protocol significantly refactored (84 lines changed)OutOfBandInvitation and PrismOnboardingInvitation protocol handling updatedRemoved 24 lines of type definitions from protocol types fileOverall simplification and cleanup of protocol handling code Migration Required: Review any code using BasicMessage or ProblemReport protocolsUpdate OutOfBand invitation handling if you have custom implementationsCheck for any dependencies on removed helper functions from ProtocolHelpers fix!: refactor JWK implementation into a pollux task (#386) BREAKING CHANGE: Removed KeyProperties.type field from Apollo key management What Changed: The KeyProperties.type field has been completely removedThis field previously stored curve type information (e.g., &quot;Curve25519&quot;, &quot;EC&quot;)Curve type information is now determined automatically from other key propertiesNew JWK (JSON Web Key) utilities added to Pollux at src/pollux/utils/jwt/FromJWK.ts (145 new lines)Apollo key creation simplified - no longer needs or accepts the type parameterExtensive new test coverage added for JWK functionality (253 lines of tests) Migration Required: Remove any code that sets KeyProperties.type when creating keys with ApolloThe type field will be silently ignored if provided, but should be removed from your codeIf you have custom key creation logic, verify it works without the type parameterExample migration: // Before: apollo.createPrivateKey({ type: &quot;EC&quot;, curve: &quot;secp256k1&quot;, ... }) // After: apollo.createPrivateKey({ curve: &quot;secp256k1&quot;, ... }) ###¬†feat!: refactor ConnectionManager (#394) BREAKING CHANGE: Major Agent API changes - removed connection management from constructor What Changed: Removed connectionManager parameter from Agent constructorRemoved mediationHandler parameter from Agent constructorRemoved PlutoMediatorStore from public exportsDeleted entire ConnectionsManager class (304 lines removed)Deleted BasicMediatorHandler class (263 lines removed)Deleted PlutoMediatorStore class (43 lines removed)Connection management now handled internally through new architecture: New ConnectionsManager implementation (86 lines)New Connection and JobManager classesDIDComm connection handling moved to dedicated modules New standalone functions: StartFetchingMessages and StartMediatorRemoved MediationGrant and PickupRunner protocols (replaced with new implementations) Migration Required: Agent Initialization: Remove connectionManager and mediationHandler from Agent constructor // Before: const agent = Agent.initialize({ connectionManager: myConnectionManager, mediationHandler: myMediationHandler, // ... other options }) // After: const agent = Agent.initialize({ // ... other options (connection management is now internal) }) The Agent now manages connections internally - no need to provide external connection managementIf you extended or customized BasicMediatorHandler or PlutoMediatorStore, you'll need to refactor to use the new internal APIsReview any code that imported ConnectionsManager, MediatorHandler, or PlutoMediatorStore types ###¬†feat!: updating DIDComm presentation protocols (#383) BREAKING CHANGE: Removed static factory methods from presentation protocol classes What Changed: Removed Methods: Presentation.makePresentationFromRequest() - removedProposePresentation.makeProposalFromRequest() - removedRequestPresentation.makeRequestFromProposal() - removedProofTypes interface - removed entirely Removed 93 lines of helper functions from ProtocolHelpers.tsPresentation, ProposePresentation, and RequestPresentation classes refactored to remove convenience factory methodsProtocol construction now requires explicit instantiation with all required parametersTest files significantly updated to reflect new construction patterns Migration Required: Replace factory method calls with direct class construction: // Before: const presentation = Presentation.makePresentationFromRequest(request, credentials) const proposal = ProposePresentation.makeProposalFromRequest(request) const request = RequestPresentation.makeRequestFromProposal(proposal) // After: const presentation = new Presentation({ // explicitly provide all required fields }) Update any code using the ProofTypes interfaceReview presentation protocol flows to ensure all required fields are provided during construction ###¬†feat: update DIDComm json message types (#375) BREAKING CHANGE: AttachmentDescriptor now only accepts bodies with json property What Changed: Tightened type safety for AttachmentDescriptor.bodyThe body of an AttachmentDescriptor must now explicitly include a json propertyRemoved support for other body formats in AttachmentDescriptorMessage attachment handling simplified in Mercury wrapper (36 lines reduced)Added comprehensive test coverage for message attachments (47 new test lines)This aligns with DIDComm v2 specification requirements Migration Required: Ensure all message attachments use the json property in their body: // Before (may have worked): const attachment = { data: { base64: encodedData } } // After (required): const attachment = { data: { json: jsonData // Must use json property } } Review any custom message creation code that uses attachmentsUpdate tests that create AttachmentDescriptor instances ###¬†feat!: updating DIDComm protocols closer to specification (#373) BREAKING CHANGE: Removed static factory methods from credential issuance protocols What Changed: Removed Methods: IssueCredential.build() - removedIssueCredential.makeIssueFromRequestCredential() - removedOfferCredential.build() - removedOfferCredential.makeOfferFromProposedCredential() - removed Protocol construction now requires explicit parameter specificationExtensive test updates to reflect new construction patterns Migration Required: Replace factory method calls with direct class construction: // Before: const offer = OfferCredential.build() const issue = IssueCredential.makeIssueFromRequestCredential(request) // After: const offer = new OfferCredential({ // explicitly provide all required fields from: did, to: recipientDid, body: credentialBody, // ... other required fields }) Update credential issuance flows to explicitly construct protocol messagesReview test files for examples of the new construction patterns ###¬†feat(Pollux)!: plugins (#349) BREAKING CHANGE: Complete architectural overhaul - Pollux class removed, plugin system introduced What Changed:This is the largest breaking change in this release, fundamentally restructuring how credential operations work: Pollux Class Removed: The entire Pollux class (1,355 lines) has been removed Plugin System Introduced: All credential functionality moved to plugin-based architecture Three Main Plugin Categories: Anoncreds Plugin (src/plugins/internal/anoncreds/) CredentialIssue, CredentialOffer, PresentationRequest, PresentationVerifyAnoncredsLoader module (220 lines)Must be explicitly loaded if Anoncreds support is needed DIF (Decentralized Identity Foundation) Plugin (src/plugins/internal/dif/) IsCredentialRevoked, PresentationRequest, PresentationVerifyCreatePresentationDefinition moduleHandles DIF Presentation Exchange protocol OEA (OpenID for Verifiable Credentials) Plugin (src/plugins/internal/oea/) JWT and SD-JWT credential supportCredentialIssue, CredentialOffer, PresentationRequest for both formats Agent Constructor Changes: Removed mediationHandler parameter (no longer required)Removed connectionManager parameter (no longer required)Agent initialization significantly simplified New Core Infrastructure: Plugin system with Plugin interface and PluginManager (36 + 30 lines)Task-based architecture for credential operations (src/utils/tasks.ts)Protocol payload handling improved (src/domain/protocols/Payload.ts) Credential Model Changes: VerifiableCredential class streamlined (466 lines reduced)JWT and SD-JWT credential models refactoredNew utility modules in src/pollux/utils/jwt/ Removed Utilities: src/domain/utils/hash.ts (26 lines removed)src/domain/utils/randomBytes.ts (8 lines removed)Various Pollux utils consolidated into plugin-specific implementations Migration Required: Remove Pollux Initialization: // Before: const pollux = new Pollux(...) const agent = Agent.initialize({ pollux, mediationHandler: handler, connectionManager: manager, // ... }) // After: const agent = Agent.initialize({ // pollux, mediationHandler, connectionManager no longer needed // ... }) Load Required Plugins:This is just an example on how the SDK can be extended with new DIDComm protocols, allowing you to customize your own flows but is not require for most implementations that are using the Agent export. import { AnoncredsPlugin } from '@atala/prism-wallet-sdk/plugins/anoncreds' import { DIFPlugin } from '@atala/prism-wallet-sdk/plugins/dif' import { OEAPlugin } from '@atala/prism-wallet-sdk/plugins/oea' agent.registerPlugin(AnoncredsPlugin) agent.registerPlugin(DIFPlugin) agent.registerPlugin(OEAPlugin) Update Credential Operations: Credential issuance, verification, and presentation operations now go through the plugin systemThe Agent will automatically route operations to the appropriate plugin based on credential typeNo need to call Pollux methods directly anymore Update Imports: Many internal types are no longer exportedImport credential types from the main SDK exportPlugin-specific types available from plugin modules Review Custom Integrations: Any custom code extending or wrapping Pollux must be completely rewrittenUse the plugin interface to add custom credential format supportReview backup/restore functionality as it has changed","keywords":"","version":"Next"},{"title":"Pluto","type":0,"sectionRef":"#","url":"/docs/sdk-ts/pluto/","content":"","keywords":"","version":"Next"},{"title":"Top level interface‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/pluto/#top-level-interface","content":" An SDK specific interface, detailing all the necessary storage functions for operation.  This interface defines the specific functions requried by the SDK, and while it's input and output are all Domain classes, it provides no opinion on how they are handled internally. This approach allows for maximum customisation, constrained only by the interface contract.  The top level interface can be found at SDK.Domain.Pluto alongside our other top level interfaces.   import SDK from &quot;@hyperledger/identus-edge-agent-sdk&quot;; class CustomPluto implements SDK.Domain.Pluto { storeMessage(message: SDK.Domain.Message): Promise&lt;void&gt; { // implementation } getAllMessages(): Promise&lt;SDK.Domain.Message[]&gt; { // implementation } // ...etc } const pluto = new CustomPluto(); const agent = Agent.initialize({ pluto, ...etc });   ","version":"Next","tagName":"h2"},{"title":"Store‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/pluto/#store","content":" A general purpose CRUD interface, with a pre-designed Table structure and significantly smaller footprint than the top level interface.  Designed to be used with the existing Pluto implementation, where Pluto handles the logic and orchestration from Domain classes to Storable models, and the Store handles the persistence of those models.  The Store revolves around a storable object, which is an arbitrary object with a uuid property that uniquely identifies the object. The interface can be found at SDK.Pluto.Store   import SDK from &quot;@hyperledger/identus-edge-agent-sdk&quot;; class CustomStore implements SDK.Pluto.Store { insert&lt;T extends SDK.Domain.Pluto.Storable&gt;(table: string, model: T): Promise&lt;void&gt; { // implementation } query&lt;T extends SDK.Domain.Pluto.Storable&gt;(table: string, query?: MangoQuery&lt;T&gt;): Promise&lt;T[]&gt; { // implementation } update&lt;T extends SDK.Domain.Pluto.Storable&gt;(table: string, model: T): Promise&lt;void&gt; { // implementation } delete(table: string, uuid: string): Promise&lt;void&gt; { // implementation } } const store = new CustomStore(); const pluto = new SDK.Pluto(store, apollo); const agent = Agent.initialize({ pluto, apollo, ...etc });   ","version":"Next","tagName":"h2"},{"title":"Configuration","type":0,"sectionRef":"#","url":"/docs/sdk-ts/prism/configuration","content":"","keywords":"","version":"Next"},{"title":"Agent Configuration‚Äã","type":1,"pageTitle":"Configuration","url":"/docs/sdk-ts/prism/configuration#agent-configuration","content":" The easiest way to configure the did:prism resolver is to provide the resolverEndpoint option when initializing the Agent.  Here's an example of how to configure the Agent to use a custom resolver endpoint:  import { Agent } from '@hyperledger/identus-sdk'; const agent = Agent.initialize({ pluto: myPlutoInstance, options: { resolverEndpoint: 'https://my-custom-resolver.com/dids/', }, });   The resolverEndpoint should be the base URL of the resolver, and the DID will be appended to it. For example, if you are resolving did:prism:123, the resolver will make a GET request to https://my-custom-resolver.com/dids/did:prism:123.  The default resolver endpoint is https://raw.githubusercontent.com/FabioPinheiro/prism-vdr/refs/heads/main/mainnet/diddoc/.  ","version":"Next","tagName":"h2"},{"title":"Castor Configuration‚Äã","type":1,"pageTitle":"Configuration","url":"/docs/sdk-ts/prism/configuration#castor-configuration","content":" If you are using Castor directly, you can configure the resolver endpoint in the Castor constructor:  import { Apollo, Castor } from '@hyperledger/identus-sdk'; const apollo = new Apollo(); const castor = new Castor(apollo, [], 'https://my-custom-resolver.com/dids/');  ","version":"Next","tagName":"h2"},{"title":"RxDB storage‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/pluto/#rxdb-storage","content":" An implementation of the RxStorage interface, allowing the choice and customisation of data layer using RxDB implementations. The SDK exports an implementation of the Store interface using RxDB, which only requires the storage, name and password to run.  Note: the composed storage requires encryption capabilities.   import SDK from &quot;@hyperledger/identus-edge-agent-sdk&quot;; import { getRxStorageMemory } from 'rxdb/plugins/storage-memory'; import { wrappedKeyEncryptionCryptoJsStorage } from 'rxdb/plugins/encryption-crypto-js'; // custom RxDB inMemory storage const customStorage = wrappedKeyEncryptionCryptoJsStorage({ storage: getRxStorageMemory() }); const store = new SDK.Store({ name: `exampledb`, password: 'examplepass', storage: customStorage, }); const pluto = new SDK.Pluto(store, apollo); const agent = Agent.initialize({ pluto, apollo, ...etc });   Read more about RxStorage in the RxDB docs https://rxdb.info/rx-storage.html  ","version":"Next","tagName":"h2"},{"title":"Implementing storage for the SDK‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/pluto/#implementing-storage-for-the-sdk","content":" Pluto, the SDK storage layer, is not a complete solution and requires some work. To make this as simple as possible, there are multiple options of different complexity provided. These options are discussed in more detail in the Pluto module.¬†  [!WARNING] Provided demo implementations are intentionally oversimplified and should not be used in production.  ","version":"Next","tagName":"h2"},{"title":"Community implementations:‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/pluto/#community-implementations","content":" atala-community-projects/pluto-encrypted: InMemory, IndexDB, LevelDB, as well as a test-suite to help you build your own. ","version":"Next","tagName":"h3"},{"title":"Community DID:PRISM Resolver Endpoints","type":0,"sectionRef":"#","url":"/docs/sdk-ts/prism/endpoints","content":"","keywords":"","version":"Next"},{"title":"Public Resolver Endpoints‚Äã","type":1,"pageTitle":"Community DID:PRISM Resolver Endpoints","url":"/docs/sdk-ts/prism/endpoints#public-resolver-endpoints","content":" Here is a list of public endpoints that you can use:  Endpoint URL\tMaintained By\tNoteshttps://Your endpoint\tCommunity\tMainnet resolver.  To resolve a DID, you can make a GET request to the resolver's /1.0/identifiers/{did} path.  Example using cURL:  curl 'https://Your endpoint/1.0/identifiers/did:prism:00592a141a4c2bcb7a6aa691750511e2e9b048231820125e15ab70b12a210aae' | jq   ","version":"Next","tagName":"h2"},{"title":"Running Your Own Resolver‚Äã","type":1,"pageTitle":"Community DID:PRISM Resolver Endpoints","url":"/docs/sdk-ts/prism/endpoints#running-your-own-resolver","content":" If you prefer to run your own resolver, you can use the community-provided Docker image. This gives you a private instance that you control.  The source code for the resolver driver can be found on GitHub.  ","version":"Next","tagName":"h2"},{"title":"Using Docker‚Äã","type":1,"pageTitle":"Community DID:PRISM Resolver Endpoints","url":"/docs/sdk-ts/prism/endpoints#using-docker","content":" The resolver is available as a Docker image.  1. Pull the Docker image:  docker pull ghcr.io/fabiopinheiro/uni-resolver-driver-did-prism:1.1   2. Run the Docker container:The container listens on port 9090 by default. You can map it to any port on your host machine.  docker run -it --rm -p 9090:9090 ghcr.io/fabiopinheiro/uni-resolver-driver-did-prism:1.1   3. Test your local resolver:Once the container is running, you can test it by trying to resolve a DID:  curl 'http://localhost:9090/1.0/identifiers/did:prism:00592a141a4c2bcb7a6aa691750511e2e9b048231820125e15ab70b12a210aae' | jq   If you wish to contribute by adding your public resolver to this list, please submit a pull request to update this page. ","version":"Next","tagName":"h3"},{"title":"Resolving a did:prism","type":0,"sectionRef":"#","url":"/docs/sdk-ts/prism/resolving-did","content":"","keywords":"","version":"Next"},{"title":"Resolving with the Agent‚Äã","type":1,"pageTitle":"Resolving a did:prism","url":"/docs/sdk-ts/prism/resolving-did#resolving-with-the-agent","content":" If you have an Agent instance, you can use its castor instance to resolve a did:prism DID.  Here's an example of how to resolve a did:prism DID using the Agent:  import { Agent } from '@hyperledger/identus-sdk'; const agent = Agent.initialize({ pluto: myPlutoInstance, }); const did = 'did:prism:b6c0c33d701ac1b9a262a14454d1bbde3d127d697a76950963c5fd930605:Cj8KPRI7CgdtYXN0ZXIwEAFKLgoJc2VmsxEiECSTjyV7sUfCr_ArpN9rvCwR9fRMAhcsr_S7ZRiJk4p5k'; const didDocument = await agent.castor.resolveDID(did); console.log(didDocument);   The resolveDID method will automatically handle both long-form and short-form DIDs. For short-form DIDs, it will use the configured resolverEndpoint to fetch the DID Document.  ","version":"Next","tagName":"h2"},{"title":"Resolving with Castor‚Äã","type":1,"pageTitle":"Resolving a did:prism","url":"/docs/sdk-ts/prism/resolving-did#resolving-with-castor","content":" If you are using Castor directly, you can use the resolveDID method to resolve a did:prism DID.  Here's an example of how to resolve a did:prism DID using Castor:  import { Apollo, Castor } from '@hyperledger/identus-sdk'; const apollo = new Apollo(); const castor = new Castor(apollo); const did = 'did:prism:b6c0c33d701ac1b9a262a14454d1bbde3d127d697a76950963c5fd930605:Cj8KPRI7CgdtYXN0ZXIwEAFKLgoJc2VmsxEiECSTjyV7sUfCr_ArpN9rvCwR9fRMAhcsr_S7ZRiJk4p5k'; const didDocument = await castor.resolveDID(did); console.log(didDocument);  ","version":"Next","tagName":"h2"},{"title":"What is a did:prism?","type":0,"sectionRef":"#","url":"/docs/sdk-ts/prism/what-is-did-prism","content":"","keywords":"","version":"Next"},{"title":"did:prism DID Formats‚Äã","type":1,"pageTitle":"What is a did:prism?","url":"/docs/sdk-ts/prism/what-is-did-prism#didprism-did-formats","content":" The did:prism method supports two different formats for DIDs:  Long Form (Offline) DID: This is a self-contained DID that includes all the information needed to resolve it. It can be created and used offline, without needing to interact with the Cardano blockchain. This is useful for scenarios where you need to create a DID quickly and without an internet connection. Short Form DID: This is a shorter, more user-friendly DID that is created by publishing a long-form DID to the Cardano blockchain. The short-form DID can be resolved by querying the blockchain for the corresponding long-form DID.  ","version":"Next","tagName":"h2"},{"title":"did:prism DID Structure‚Äã","type":1,"pageTitle":"What is a did:prism?","url":"/docs/sdk-ts/prism/what-is-did-prism#didprism-did-structure","content":" A did:prism DID has the following structure:  did:prism:&lt;method-specific-id&gt;   The method-specific-id is a base64url-encoded string that contains the initial state of the DID. For long-form DIDs, this state includes the public keys and services associated with the DID. For short-form DIDs, this state is a hash of the initial state of the long-form DID. ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/","content":"","keywords":"","version":"Next"},{"title":"SDK Overview‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/#sdk-overview","content":" Apollo: Provides a suite of necessary cryptographic operations.Castor: Provides a suite of operations to create, manage and resolve decentralized identifiers.Mercury: Provides a suite of operations for handling DIDComm V2 messages.Pluto: Provides an interface for storage operations in a portable, storage-agnostic manner.Agent: A component using all other building blocks, provides basic edge agent capabilities, including implementing DIDComm V2 protocols.  ","version":"Next","tagName":"h2"},{"title":"Getting started‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/#getting-started","content":" We highly recommend you check out the docs üó∫  ","version":"Next","tagName":"h2"},{"title":"Install‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/#install","content":" NOTE: The package was renamed from @hyperledger/identus-edge-agent-sdk to @hyperledger/identus-sdk. Modify the scripts if you ready to use the new package accordingly.  npm i @hyperledger/identus-edge-agent-sdk   or  yarn add @hyperledger/identus-edge-agent-sdk   ","version":"Next","tagName":"h3"},{"title":"Demo application‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/#demo-application","content":" This repository also includes a browser and a Node.js demo application  Build demo dependencies‚Äã  The demos assume building this repo from source, so you will need the following:  BashRust (cargo) and wasm-pack installed.Node JS Version (20/LTS Recommended)  Clone and build:  git clone git@github.com:hyperledger-identus/sdk-ts.git --recurse-submodules cd sdk-ts yarn npm run build   If you have any issues while building you can try building from docker (this runs exaclty the same build):  docker build -t atalaprismwalletsdkts:latest &quot;.&quot; docker run -v $(pwd)/build:/app/build atalaprismwalletsdkts:latest   Run the demos‚Äã  Once you have built the demo dependencies, you can try out each of the demos:  Browser React / NextJS  cd demos/next npm i npm run dev   ","version":"Next","tagName":"h3"},{"title":"Modules‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/#modules","content":" Module\tDescriptionoverview\t- plugins/internal/anoncreds\tThis export contains the Anoncreds plugin for the Identus SDK. plugins/internal/didcomm\tThis export contains the DIDComm plugin for the Identus SDK plugins/internal/dif\tThis export contains the DIF plugin for the Identus SDK Please use the following export plugins/internal/oea\tThis export contains the OEA plugin for the Identus SDK Please use the following export plugins/internal/oidc\tThis export contains the OIDC plugin for the Identus SDK Please use the following export ","version":"Next","tagName":"h2"},{"title":"Quick Start Guide","type":0,"sectionRef":"#","url":"/docs/home/quick-start","content":"","keywords":"","version":"Next"},{"title":"Introduction into Self Sovereign Identity (SSI)‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#introduction-into-self-sovereign-identity-ssi","content":" Self-sovereign identity (SSI) is complex. This Quick Start Guide explains the fundamental concepts to get up and running with Hyperledger Identus. This guide will familiarize you with the general concepts and how to create decentralized identifiers (DIDs), issue credentials, make connections, and verify credentials with verifiable presentations. Refer to the Concepts and Components sections for a more in-depth explanation.  The trust triangle is the most basic process for conveying trust in the digital world. There are three roles in an SSI ecosystem: Holders, Issuers, and Verifiers.    Holders can be any entity, such as individuals, organizations, and digital or physical things. They will hold verifiable credentials (VCs) and use a verifiable presentation to share their VCs.  Issuers can also be any entity that makes claims about an entity. These claims are attestations, or evidence of something, about the Holder. As an example, an insurance company would provide proof of valid insurance.  Verifiers are the relying party in the triangle. They will request information from the Holder, such as proof of insurance, and the Holder will use a verifiable presentation to share the appropriate VCs with the Verifier. The Holder's digital signature, the issuer DID get verified, and the contents therein to ensure nothing has been tampered with.  ","version":"Next","tagName":"h2"},{"title":"Hyperledger Identus flow‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#hyperledger-identus-flow","content":" The diagram details how the concepts fit alongside the Identus components in a typical SSI interaction.    ","version":"Next","tagName":"h2"},{"title":"An overview of Hyperledger Identus components‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#an-overview-of-hyperledger-identus-components","content":" Identus consists of core libraries that facilitate typical SSI interactions between Issuers, Holders, and Verifiers.  ","version":"Next","tagName":"h2"},{"title":"A Cloud Agent‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#a-cloud-agent","content":" A Cloud Agent can issue, hold, and verify verifiable credentials (VCs) for any entity and manage decentralized identifiers (DIDs) and DID-based connections. The Cloud Agent has an easy-to-use REST API to enable easy integration into any solution and uses DIDComm V2 as a messaging protocol for Cloud Agent-to-Cloud Agent communication.  It is maintained as an open source through the Hyperledger Identus.  More in depth documentation about Cloud Agent can be found here.  ","version":"Next","tagName":"h3"},{"title":"Wallet SDKs‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#wallet-sdks","content":" Wallet SDKs for web and mobile (iOS, Android, TypeScript) enable identity holders to store credentials and respond to proof requests. They are typically used in applications that allow identity holders to interact with issuers and verifiers.  More in-depth documentation about the different Wallet SDKs can be found here (TypeScript, Swift, KMP)  ","version":"Next","tagName":"h3"},{"title":"Mediator‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#mediator","content":" Mediators are for storing and relaying messages between Cloud Agents and Wallet SDKs. They act as a proxy that remains connected to the network and receives any message, credential, or proof request on behalf of the Wallet SDKs (which can be offline occasionally).  More in-depth documentation about Mediator can be found here.  Node for a Verifiable Data Registry (VDR)‚Äã  To issue and verify VCs to and from DIDs, we need a Verifiable Data Registry (VDR) that is globally resolvable and always on. In Identus's case, it is prism-node, anchoring key information required for issuance and verification on the Distributed Ledger.  ","version":"Next","tagName":"h3"},{"title":"Pre-Requisites‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#pre-requisites","content":" ","version":"Next","tagName":"h2"},{"title":"Agent Deployment‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#agent-deployment","content":" This guide will demonstrate a single-tenant deployment with API Key authentication disabled and an in-memory ledger for published DID storage, which is the simplest configuration to get started as a developer. More advanced configuration options can be found in Multi-Tenancy Management and associated Environment Variables configuration options.  We develop on modern machines equipped with either Intel based x64 processors or Apple ARM processors with a minimum of four cores, 16 GB of memory and 128GB+ of SSD-type storage.  To spin up an Cloud Agent you must:  Have Git installed.Have Docker installed.Clone the Identus Cloud Agent repository.  git clone https://github.com/hyperledger/identus-cloud-agent   Once cloned, create a new file named ./identus-cloud-agent/infrastructure/local/.env-issuer to define the Issuer Agent environment variable configuration with the following content:  API_KEY_ENABLED=false AGENT_VERSION=2.0.0 PRISM_NODE_VERSION=2.6.0 PORT=8000 NETWORK=identus VAULT_DEV_ROOT_TOKEN_ID=root PG_PORT=5432   Create a new file named ./identus-cloud-agent/infrastructure/local/.env-verifier to define the Verifier Agent environment variable configuration with the following content:  API_KEY_ENABLED=false AGENT_VERSION=2.0.0 PRISM_NODE_VERSION=2.6.0 PORT=9000 NETWORK=identus VAULT_DEV_ROOT_TOKEN_ID=root PG_PORT=5433   Setting the API_KEY_ENABLED to false disables the requirement of using API Keys.  caution API_KEY_ENABLED disables API Key authentication. This should not be used beyond Development purposes.  Start the issuer and verifier Cloud Agents by running the below commands in the terminal.  Issuer Cloud Agent:  Mac OSX terminal shell   ./infrastructure/local/run.sh -n issuer -b -e ./infrastructure/local/.env-issuer -p 8000 -d &quot;$(ipconfig getifaddr $(route get default | grep interface | awk '{print $2}'))&quot;   Linux terminal shell   ./infrastructure/local/run.sh -n issuer -b -e ./infrastructure/local/.env-issuer -p 8000 -d &quot;$(ip addr show $(ip route show default | awk '/default/ {print $5}') | grep 'inet ' | awk '{print $2}' | cut -d/ -f1)&quot;   The Issuer API endpoint will be accessible on port 8000 http://localhost:8000/cloud-agent/ with a Swagger Interface available at http://localhost:8000/cloud-agent/redoc. Verifier Cloud Agent:  For Mac OSX terminal shell   ./infrastructure/local/run.sh -n verifier -b -e ./infrastructure/local/.env-verifier -p 9000 -d &quot;$(ipconfig getifaddr $(route get default | grep interface | awk '{print $2}'))&quot;   For Linux terminal shell   ./infrastructure/local/run.sh -n verifier -b -e ./infrastructure/local/.env-verifier -p 9000 -d &quot;$(ip addr show $(ip route show default | awk '/default/ {print $5}') | grep 'inet ' | awk '{print $2}' | cut -d/ -f1)&quot;   The Verifier API endpoint will be accessible on port 9000 http://localhost:9000/cloud-agent/ with a Swagger Interface available at http://localhost:9000/cloud-agent/redoc.  ","version":"Next","tagName":"h3"},{"title":"Agent configuration‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#agent-configuration","content":" Creating LongForm PrismDID‚Äã  Run the following API request against your Issuer API to create a PRISM DID:  note üìå Note: To create DIDs with various supported curves.  curl --location \\ --request POST 'http://localhost:8000/cloud-agent/did-registrar/dids' \\ --header 'Accept: application/json' \\ --data-raw '{ &quot;documentTemplate&quot;: { &quot;publicKeys&quot;: [ { &quot;id&quot;: &quot;auth-1&quot;, &quot;purpose&quot;: &quot;authentication&quot; }, { &quot;id&quot;: &quot;issue-1&quot;, &quot;purpose&quot;: &quot;assertionMethod&quot; } ], &quot;services&quot;: [] } }'   Publish the DID by replacing {didRef} with the longFormDid output value from the previous step.  curl --location \\ --request POST 'http://localhost:8000/cloud-agent/did-registrar/dids/{didRef}/publications' \\ --header 'Accept: application/json'   The short version of the DID is the publishedPrismDID.  info üìñLearn more about PRISM DIDs and why it is necessary to publish specific DIDs here.  Create a credential schema (JWT W3C Credential)‚Äã  To create a credential schema on the Issuer API instance, run the following request:  info Replace the [[publishedPrismDID]] in the example request with the did value from the previous step.  We need to capture the schema's guid as its used in further steps.  curl -X 'POST' \\ 'http://localhost:8000/cloud-agent/schema-registry/schemas' \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -d '{ &quot;name&quot;: &quot;driving-license&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;Driving License Schema&quot;, &quot;type&quot;: &quot;https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json&quot;, &quot;author&quot;: [[publishedPrismDID]], &quot;tags&quot;: [ &quot;driving&quot;, &quot;license&quot; ], &quot;schema&quot;: { &quot;$id&quot;: &quot;https://example.com/driving-license-1.0.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot; ], &quot;additionalProperties&quot;: true } }'   ","version":"Next","tagName":"h3"},{"title":"Starting Sample App‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#starting-sample-app","content":" All wallet SDK's come bundled with a sample application, that cover all the Identus flows, including establishing connections, issuance, and verification flows.  Typescript Sample APPSwift Sample APPAndroid Sample APP Clone the TypeScript SDK repository. git clone -b v6.6.0 https://github.com/hyperledger-identus/sdk-ts Ensure you have all applications installed for building the SDK and their dependencies rust and wasm-pack are leveraged to build and use the AnonCreds and DIDComm Rust libraries within TypeScript. To build the SDK locally or run demonstration applications, you must have these applications installed. The following should work Linux and MacOS. If you experience any issues, refer to the latest installation instructions for your platform. curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh Run the following: Build the source SDK: cd sdk-ts git submodule update --init --recursive npm i npm run build Start the React demo: cd demos/next npm i npm run build npm run start This will start the React Wallet SDK TypeScript Demonstration at http://localhost:3000.  ","version":"Next","tagName":"h3"},{"title":"Deploy & Establish Mediation‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#deploy--establish-mediation","content":" Mediation is the process that ensures messages get routed and stored correctly between Issuers, Verifiers and Holders, even if they are offline. The mediator offers a service that is always running and can securely store messages and deliver them to the associated DIDs using DIDComm. This enables use-cases where connectivity to a (mobile) wallet cannot be guaranteed.  Preparation‚Äã  To get the mediator deployed locally for the demo, clone the Mediator repository.  git clone https://github.com/hyperledger/identus-mediator   With a Docker service running, open a new terminal and run:  info The latest mediator version can be found at Mediator releases. Change the version in the example if you want to use the latest version.  Mac OSX terminal shell  MEDIATOR_VERSION=1.1.0 SERVICE_ENDPOINTS=&quot;http://$(ipconfig getifaddr $(route get default | grep interface | awk '{print $2}')):8080;ws://$(ipconfig getifaddr $(route get default | grep interface | awk '{print $2}')):8080/ws&quot; docker compose up   Linux terminal shell  MEDIATOR_VERSION=1.1.0 SERVICE_ENDPOINTS=&quot;http://$(ip addr show $(ip route show default | awk '/default/ {print $5}') | grep 'inet ' | awk '{print $2}' | cut -d/ -f1):8080;ws://$(ip addr show $(ip route show default | awk '/default/ {print $5}') | grep 'inet ' | awk '{print $2}' | cut -d/ -f1):8080/ws&quot; docker compose up   MEDIATOR_ENDPOINTS is then set to your local IP address:8080.  More advanced documentation and configuration options can be found here. Now you need to capture the Mediator's Peer DID in order to start DIDCOMM V2 Mediation protocol, you can do so by opening you browser at the mediators endpoint.  Demo application‚Äã  info In order to complete this step you'll need to connect to the mediators Peer DID which you can fetch by making the following API request. curl --location \\ --request GET 'localhost:8080/invitation' \\ --header 'Content-Type: application/json'   Follow the steps in your desired platform as stated below:  Typescript Sample APPSwift Sample APPAndroid Sample APP Open http://localhost:3000/debug in your browser,paste the mediator peer DID (obtained from the from attribute after fetching from the mediator's invitation endpoint),click Edge Agent tab in the bottom left,click Connect button,click Start button.  If you are running the SampleApp, click the Start Agent button.  The below code examples show how to establish mediation when building your own application.   Code examples 3. The following code examples represent establishing mediation and instantiating the Cloud Agent.   TypescriptSwiftAndroid const mediatorDID = SDK.Domain.DID.fromString( [[MEDIATOR DID PEER]] ); const api = new SDK.ApiImpl(); const apollo = new SDK.Apollo(); const castor = new SDK.Castor(apollo); const didcomm = new SDK.DIDCommWrapper(apollo, castor, pluto); const mercury = new SDK.Mercury(castor, didcomm, api); const store = new SDK.PublicMediatorStore(pluto); const handler = new SDK.BasicMediatorHandler(mediatorDID, mercury, store); const manager = new SDK.ConnectionsManager(castor, mercury, pluto, handler); const seed = apollo.createRandomSeed() const agent = new SDK.Agent( apollo, castor, pluto, mercury, handler, manager, seed.seed ); /** * This internally will attempt to load an existing mediator from the * database. If it does not exist it will try to achieve mediation * automatically, by creating a PeerDID and sending a MediationRequest. * After this step the mediator starts capturing messages for the PeerDID we specied. */ await agent.start()   ","version":"Next","tagName":"h3"},{"title":"Establish Holder connections‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#establish-holder-connections","content":" To connect the Holder to both Cloud Agent instances, you must run this in both Issuer and Verifier endpoints.  ","version":"Next","tagName":"h2"},{"title":"Establish a connection - Agent side‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#establish-a-connection---agent-side","content":" A connection must be established between the Holder and Cloud Agents to correctly deliver the Issuance + Verification Messages to the Holder.  Establish connection on the Issuer Cloud Agent‚Äã  curl --location \\ --request POST 'http://localhost:8000/cloud-agent/connections' \\ --header 'Content-Type: application/json' \\ --data-raw '{ &quot;label&quot;: &quot;Cloud Agent demo connection with holder&quot; }'   This request will return a JSON response with an invitation and its URL. The Issuer Cloud Agent would share this URL as a QR code, and the holder would scan it with the wallet app.  Copy the invitationUrl and the connectionId.  Establish connection on the Verifier Cloud Agent‚Äã  curl --location \\ --request POST 'http://localhost:9000/cloud-agent/connections' \\ --header 'Content-Type: application/json' \\ --data-raw '{ &quot;label&quot;: &quot;Cloud Agent demo connection with holder&quot; }'   This request will return a JSON response with an invitation and its URL. The Verifier Cloud Agent would share this URL as a QR code, and the holder would scan it with the wallet app.  Copy the invitationUrl and the connectionId.  ","version":"Next","tagName":"h3"},{"title":"Establish a connection - Holder side‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#establish-a-connection---holder-side","content":" Now that you have the invitation, it's time for the Holder to accept it.  Demo application‚Äã  Typescript Sample APPSwift Sample APPAndroid Sample APP Open a browser at localhost:3000.Start the Edge Agent by clicking the button.Paste the invitation URL generated in the previous step into the CloudAgent connection section and click on Create Connection. The application will react when the connection gets established correctly and show a new connection.  Code examples  TypescriptSwiftAndroid const parsed = await props.agent.parseOOBInvitation(new URL([[OOB URL]])); await props.agent.acceptDIDCommInvitation(parsed);   ","version":"Next","tagName":"h3"},{"title":"Issue a Credential from the Issuer to the holder‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#issue-a-credential-from-the-issuer-to-the-holder","content":" The credential issuance flow consists of multiple steps, detailed in this section. It starts with the Issuer sending a Credential Offer to the Holder, which would accept or reject this invitation and create a credentialRequest from it. The credential request gets sent through DIDComm to the Issuer, issuing and sending the credential back to the Holder.  The Issuer can create a credential offer in two ways:  As a direct credential offer DIDComm message for a holder with an existing connectionAs an credential offer as attachment in an OOB invitation message for connectionless issuance  With Existing ConnectionConnectionless Issuance Create a Credential Offer with an existing connection Issuer Agent‚Äã To trigger the creation of a credential-offer, we call the credential-offers-endpoint, as follows: info Please replace the following variables in the example request before sending: connectionId: The ID of the connection previously established between agent and holder. This is part of the response of the POST message from the agent when calling the cloud-agent/connections endpoint. It is returned in the connectionId attribute. There is a unique connection ID for the relationship between issuer and holder and verifier and holder. In this example, please use the connectionId returned when creating the connection between issuer and holderpublishedPrismDID: The short form of the PRISM DID created when setting up the Issuer agent The connectionId is just the ID of the connection we previously established with the issuer. The Issuing DID is the published PRISM DID in its short version which was also used to create and publish the credential schema. `` curl --location --request POST 'http://localhost:8000/cloud-agent/issue-credentials/credential-offers' \\ --header 'Content-Type: application/json' \\ --data-raw '{ &quot;claims&quot;: { &quot;emailAddress&quot;:&quot;sampleEmail&quot;, &quot;familyName&quot;:&quot;Alice&quot;, &quot;dateOfIssuance&quot;:&quot;2023-01-01T02:02:02Z&quot;, &quot;drivingLicenseID&quot;:&quot;42&quot;, &quot;drivingClass&quot;:1 }, &quot;connectionId&quot;: [[connectionId]], &quot;issuingDID&quot;: [[publishedPrismDID]], &quot;schemaId&quot;: [[schemaId]], &quot;automaticIssuance&quot;: true }'   ","version":"Next","tagName":"h2"},{"title":"Create CredentialRequest from CredentialOffer Holder‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#create-credentialrequest-from-credentialoffer-holder","content":" Because this credential Offer was created with the automaticIssuance true, as soon as the CloudAgent receives this credentialRequest it will respond with the IssuedCredential message and send this back to the holder.  info automaticIssuance is optional. It can also be manually triggered and confirmed by the Holder.```  Demo application‚Äã  The holder will at some point receive a CredentialOffer, which the holder must accept, and then, a CredentialRequest is created and sent back to the Issuer through DIDComm V2 protocols.  Typescript Sample APPSwift Sample APPAndroid Sample APP The CredentialOffer message will be automatically accepted as soon as it reaches the browser. In exchange, a CredentialRequest message will get sent back to the CloudAgent.  Code examples  The exchange between CredentialOffer and CredentialRequest is demonstrated through more advanced code samples below, showcasing how different platforms handle it.  TypescriptSwiftAndroid props.agent.addListener(ListenerKey.MESSAGE,async (newMessages:SDK.Domain.Message[]) =&gt; { //newMessages can contain any didcomm message that is received, including //Credential Offers, Issued credentials and Request Presentation Messages const credentialOffers = newMessages.filter((message) =&gt; message.piuri === &quot;https://didcomm.org/issue-credential/2.0/offer-credential&quot;); if (credentialOffers.length) { for(const credentialOfferMessage of credentialOffers) { const credentialOffer = OfferCredential.fromMessage(credentialOfferMessage); const requestCredential = await props.agent.prepareRequestCredentialWithIssuer(credentialOffer); try { await props.agent.sendMessage(requestCredential.makeMessage()) } catch (err) { console.log(&quot;continue after err&quot;, err) } } } })   ","version":"Next","tagName":"h3"},{"title":"Store the Issued Credential [Holder]‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#store-the-issued-credential-holder","content":" caution The sample application are using an insecure storage solution which should only be used for testing purposes and not production environments!   Code examples 6. Once the Holder receives a credential from the Cloud Agent, it needs to store the credential somewhere:   TypescriptSwiftAndroid props.agent.addListener(ListenerKey.MESSAGE,async (newMessages:SDK.Domain.Message[]) =&gt; { //newMessages can contain any didcomm message that is received, including //Credential Offers, Issued credentials and Request Presentation Messages const issuedCredentials = newMessages.filter((message) =&gt; message.piuri === &quot;https://didcomm.org/issue-credential/2.0/issue-credential&quot;); if (issuedCredentials.length) { for(const issuedCredential of issuedCredentials) { const issueCredential = IssueCredential.fromMessage(issuedCredential); await props.agent.processIssuedCredentialMessage(issueCredential); } } })   ","version":"Next","tagName":"h3"},{"title":"Request a verification from the Verifier Cloud Agent to the Holder (JWT W3C Credential)‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#request-a-verification-from-the-verifier-cloud-agent-to-the-holder-jwt-w3c-credential","content":" Now that the Holder has received a credential, it can be used in a verification workflow between a Holder and a Verifier. This requires the following steps:  Verifier creates a proof requestHolder receives the proof requestHolder creates a proof presentation and shares this with the verifierVerifier verifies the proof presentation  info In the example, we demonstrate two verification flows: Verification with an established connection between the Holder and the Verifier.Connectionless verification in which the Holder and Verifier do not have a pre-established connection.  ","version":"Next","tagName":"h2"},{"title":"Verifier Agent‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#verifier-agent","content":" With Existing ConnectionConnectionless Request Presentation To run this section, we will use the connection we created between the Holder and the Verifier. curl --location \\ --request POST 'http://localhost:9000/cloud-agent/present-proof/presentations' \\ --header 'Content-Type: application/json' \\ --data-raw '{ &quot;connectionId&quot;: [[connectionId]], &quot;proofs&quot;: [ { &quot;schemaId&quot;: [[schemaId]], &quot;trustIssuers&quot;: [ [[PUBLISHED PRISM DID FROM THE ISSUER]] ] } ], &quot;options&quot;: { &quot;challenge&quot;: &quot;A challenge for the holder to sign&quot;, &quot;domain&quot;: &quot;domain.com&quot; } }' This API request will return a presentationRequestId, which the verifier can use later to check the current status of the request.  ","version":"Next","tagName":"h3"},{"title":"Holder: Receives the Presentation proof request‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#holder-receives-the-presentation-proof-request","content":" The Holder needs an Edge Agent running with the message listener active. It will receive the presentation proof request from the Verifier Cloud Agent for the correct type of messages as detailed below:  Code examples  TypescriptSwiftAndroid props.agent.addListener(ListenerKey.MESSAGE,async (newMessages:SDK.Domain.Message[]) =&gt; { //newMessages can contain any didcomm message that is received, including //Credential Offers, Issued credentials and Request Presentation Messages const requestPresentations = newMessages.filter((message) =&gt; message.piuri === &quot;https://didcomm.atalaprism.io/present-proof/3.0/request-presentation&quot;); if (requestPresentations.length) { for(const requestPresentation of requestPresentations) { const lastCredentials = await props.pluto.getAllCredentials(); const lastCredential = lastCredentials.at(-1); const requestPresentationMessage = RequestPresentation.fromMessage(requestPresentation); try { if (lastCredential === undefined) throw new Error(&quot;last credential not found&quot;); const presentation = await props.agent.createPresentationForRequestProof(requestPresentationMessage, lastCredential) await props.agent.sendMessage(presentation.makeMessage()) } catch (err) { console.log(&quot;continue after err&quot;, err) } } } })   ","version":"Next","tagName":"h3"},{"title":"Verifier: Will then check on the API if the Presentation Request has been completed or not.‚Äã","type":1,"pageTitle":"Quick Start Guide","url":"/docs/home/quick-start#verifier-will-then-check-on-the-api-if-the-presentation-request-has-been-completed-or-not","content":" curl --location \\ --request GET 'http://localhost:9000/cloud-agent/present-proof/presentations/[[presentationRequestId]]' \\ --header 'Accept: application/json'   The response body establishes the completion of the request and can be verified for correctness. ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/","content":"","keywords":"","version":"Next"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#namespaces","content":" Namespace\tDescriptionConnection\t- DIDLink\tDeclaration merge to group Types Domain\t- Payload\t- PeerDID\t- Plugins\t- Pluto\tPluto implementation Utils\t-  ","version":"Next","tagName":"h2"},{"title":"Enumerations‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#enumerations","content":" Enumeration\tDescriptionAnonCredsCredentialProperties\t- JWT_VC_PROPS\t- JWT_VP_PROPS\t- ListenerKey\t- SDJWT_VP_PROPS\t-  ","version":"Next","tagName":"h2"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#classes","content":" Class\tDescriptionAgent\tEdge agent implementation AgentBackup\t- AgentContext\tContext is provided to running tasks it optimistically provides access to Modules AnonCredsCredential\tStorable define properties a Domain object must implement to be compatible with Pluto ApiImpl\tImplement API using built in fetch Apollo\tApollo defines the set of cryptographic operations. BackupManager\tBackupManager handle the different versions of backup and restore BaseRepository\tBaseRepository CancellableTask\t- Castor\tCastor is a powerful and flexible library for working with DIDs. Whether you are building a decentralised application or a more traditional system requiring secure and private identity management, Castor provides the tools and features you need to easily create, manage, and resolve DIDs. ConnectionsManager\tConnectionsManager is responsible for handling Connections and Mediators CreateOOBOffer\tTask class for creating out-of-band (OOB) credential offer invitations. CreateOOBPresentationRequest\tTask class for creating out-of-band (OOB) presentation request invitations. CreatePresentation\t- CreatePresentationRequest\t- CreatePrismDID\tHandle the creation of a PrismDID CredentialMetadataRepository\tMapperRepository CredentialRepository\tMapperRepository DIDCommWrapper\t- DIDKeyLinkRepository\tLinkRepository DIDLinkRepository\tLinkRepository DIDRepository\tMapperRepository EventsManager\tAn extension for the Edge agent that gives it capability of creating listeners for specific events and also emitting or notifying any listener available with the new event. ForwardMessage\t- JobManager\t- JWT\tused to enable Modules to propagate the Context and have access to runTask JWTCredential\tStorable define properties a Domain object must implement to be compatible with Pluto KeyRepository\tMapperRepository LinkRepository\tLinkRepository LinkSecretRepository\tMapperRepository MapperRepository\tMapperRepository Mercury\tMercury is a powerful and flexible library for working with decentralized identifiers and secure communications protocols. Whether you are a developer looking to build a secure and private messaging app or a more complex decentralized system requiring trusted peer-to-peer connections, Mercury provides the tools and features you need to establish, manage, and secure your communications easily. MessageRepository\tMapperRepository PeerDID\t- PeerDIDService\tProvides functionality to transfrom peerDIDServices from our interfaces into DIDComm module ones PKInstance\tA Task encapsulates a unit of work Plugin\tProvide interface to augment the SDK. PluginManager\t- Pluto\tPluto is a storage interface describing storage requirements of the edge agents which will be implemented using this SDK. Implement this interface using your preferred underlying storage technology, most appropriate for your use case. RunProtocol\tFind and execute a task registered by plugins for the given pid (protocol identifier) SDJWT\tused to enable Modules to propagate the Context and have access to runTask SDJWTCredential\tStorable define properties a Domain object must implement to be compatible with Pluto  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#interfaces","content":" Interface\tDescriptionArgs_RequestCredentialJWT\t- Args_RequestCredentialSDJWT\t- Connection\tDefine the structure of a Connection CreateOOBOfferArgs\tArguments for creating an out-of-band (OOB) offer invitation CreateOOBPresentationRequestArgs\tArguments for creating an out-of-band (OOB) presentation request invitation CreatePresentationArgs\tAsyncronously create a verifiablePresentation from a valid stored verifiableCredential This is used when the verified requests a specific verifiable credential, this will create the actual instance of the presentation which we can share with the verifier. CreatePresentationRequestArgs\t- CreatePrismDIDArgs\t- Credential\tDefinition for Storable Credential model Represents Credential CredentialMetadata\tDefinition for CredentialMetadata model Represents CredentialMetadata DID\tDefinition for DID model Represents DID DIDCommProtocol\t- DIDKeyLink\tDefinition for DID -&gt; Key relationships DIDLink\tDefinition for DID -&gt; DID relationships ForwardMessageBody\t- IArgs\tRunProtocol exists to bridge the gap between the strong coupling to DIDComm messages and abstracting to Protocols IBackupTask\t- IRestoreTask\t- JWTCredentialPayload\t- JWTPresentationPayload\t- Key\tDefinition for Key model Represents PrivateKey Message\tDefinition for Message model Represents Message Payload\tGeneral purpose struct to pass data around PeerDIDEncoded\t- PKInstanceArgs\t- QueryOperators\t- SchemaGenerator\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#type-aliases","content":" Type Alias\tDescriptionAgentOptions\t- Args_CredentialIssue\t- Args_CredentialOffer\t- Args_Message\t- Args_PresentationRequest\t- Args_PresentationVerify\t- Args_RequestCredential\t- Args_RevocationCheck\t- Args_Unknown\t- BackupAgent\tdefine Agent requirements for Backup BackupExclude\t- BackupOptions\t- CollectionCreate\t- CollectionList\t- ConnectionEventArg\t- EventCallback\t- EventCallbacks\t- ExtractModelProperties\t- ExtraResolver\t- InvitationType\t- Join\t- KeysFor\t- KeysOf\t- MasterKey\t- MessageEventArg\t- MigrationStrategies\t- MigrationStrategy\t- Model\tDefine common properties ModelOptionalKeys\t- ModelPropertyNames\t- ModelRequiredKeys\t- OptionalId\t- OptionalKeys\t- OptionalTypeToSchemaType\t- Paths\t- PlutoRepositories\t- Prev\t- PropertyType\t- PropertyTypes\t- ProtocolType\tTemporary workaround to smooth transition of internal module splitting and end-user consumables ProtocolType is a merging of all the supported ProtocolIds These have been split internally into Didcomm and OEA modules But we can hide that from our users until full support exists Query\tQuery type for Pluto QueryNoLimit\t- QuerySelector\t- QuerySelectorAndIndex\t- QuerySortDirection\t- QuerySortPart\t- RequiredKeys\t- RequiredTypeToSchemaType\t- RevokeEventArg\t- RunProtocolArgs\t- StringKeys\t- Task\t- TaskContext\t- TypedSchema\t- WithId\t-  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#variables","content":" Variable\tDescriptionAnonCredsRecoveryId\t- CredentialMetadataSchema\t- CredentialMigration\t- CredentialSchema\t- DIDKeyLinkSchema\t- DIDLinkSchema\t- DIDSchema\t- JWTVerifiableCredentialRecoveryId\t- KeySchema\t- MessageSchema\t- ProtocolType\t- SDJWTVerifiableCredentialRecoveryId\t- Tasks\t-  ","version":"Next","tagName":"h2"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#functions","content":" Function\tDescriptionmakeCollections\t- repositoryFactory\tFactory fn to instantiate all Repositories schemaFactory\thelper for creating Schemas handle repetitive and improve type safety  ","version":"Next","tagName":"h2"},{"title":"References‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#references","content":" ","version":"Next","tagName":"h2"},{"title":"BasicMessage‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#basicmessage","content":" Re-exports BasicMessage    ","version":"Next","tagName":"h3"},{"title":"BasicMessageBody‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#basicmessagebody","content":" Re-exports BasicMessageBody    ","version":"Next","tagName":"h3"},{"title":"CredentialFormat‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#credentialformat","content":" Re-exports CredentialFormat    ","version":"Next","tagName":"h3"},{"title":"DIDCommConnection‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#didcommconnection","content":" Re-exports DIDCommConnection    ","version":"Next","tagName":"h3"},{"title":"HandshakeRequest‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#handshakerequest","content":" Re-exports HandshakeRequest    ","version":"Next","tagName":"h3"},{"title":"HandshakeRequestBody‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#handshakerequestbody","content":" Re-exports HandshakeRequestBody    ","version":"Next","tagName":"h3"},{"title":"IssueCredential‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#issuecredential","content":" Re-exports IssueCredential    ","version":"Next","tagName":"h3"},{"title":"IssueCredentialBody‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#issuecredentialbody","content":" Re-exports IssueCredentialBody    ","version":"Next","tagName":"h3"},{"title":"KeyProperties‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#keyproperties","content":" Re-exports KeyProperties    ","version":"Next","tagName":"h3"},{"title":"OfferCredential‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#offercredential","content":" Re-exports OfferCredential    ","version":"Next","tagName":"h3"},{"title":"OfferCredentialBody‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#offercredentialbody","content":" Re-exports OfferCredentialBody    ","version":"Next","tagName":"h3"},{"title":"OutOfBandInvitation‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#outofbandinvitation","content":" Re-exports OutOfBandInvitation    ","version":"Next","tagName":"h3"},{"title":"OutOfBandInvitationBody‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#outofbandinvitationbody","content":" Re-exports OutOfBandInvitationBody    ","version":"Next","tagName":"h3"},{"title":"Presentation‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#presentation","content":" Re-exports Presentation    ","version":"Next","tagName":"h3"},{"title":"PresentationBody‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#presentationbody","content":" Re-exports PresentationBody    ","version":"Next","tagName":"h3"},{"title":"ProposePresentation‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#proposepresentation","content":" Re-exports ProposePresentation    ","version":"Next","tagName":"h3"},{"title":"ProposePresentationBody‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#proposepresentationbody","content":" Re-exports ProposePresentationBody    ","version":"Next","tagName":"h3"},{"title":"RequestCredential‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#requestcredential","content":" Re-exports RequestCredential    ","version":"Next","tagName":"h3"},{"title":"RequestPresentation‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#requestpresentation","content":" Re-exports RequestPresentation    ","version":"Next","tagName":"h3"},{"title":"RequestPresentationBody‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/#requestpresentationbody","content":" Re-exports RequestPresentationBody ","version":"Next","tagName":"h3"},{"title":"Publishing a did:prism on Cardano (End-to-End Guide)","type":0,"sectionRef":"#","url":"/docs/sdk-ts/prism/publishing-did","content":"","keywords":"","version":"Next"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Publishing a did:prism on Cardano (End-to-End Guide)","url":"/docs/sdk-ts/prism/publishing-did#prerequisites","content":" A CIP30-compliant wallet extension installed in your browser (e.g., Eternl, Nami, or Flint).Some ADA in your wallet to pay for transaction fees.A Blockfrost API key for a project on the Cardano Mainnet.  ","version":"Next","tagName":"h2"},{"title":"Required Packages‚Äã","type":1,"pageTitle":"Publishing a did:prism on Cardano (End-to-End Guide)","url":"/docs/sdk-ts/prism/publishing-did#required-packages","content":" First, you need to install the following packages in your project:  npm install @hyperledger/identus-sdk @meshsdk/core @meshsdk/react   ","version":"Next","tagName":"h2"},{"title":"Environment Setup‚Äã","type":1,"pageTitle":"Publishing a did:prism on Cardano (End-to-End Guide)","url":"/docs/sdk-ts/prism/publishing-did#environment-setup","content":" Create a .env.local file in your project's root directory and add your Blockfrost API key:  NEXT_PUBLIC_BLOCKFROST_API_KEY=your_blockfrost_api_key   ","version":"Next","tagName":"h2"},{"title":"End-to-End Example with React and Mesh‚Äã","type":1,"pageTitle":"Publishing a did:prism on Cardano (End-to-End Guide)","url":"/docs/sdk-ts/prism/publishing-did#end-to-end-example-with-react-and-mesh","content":" The following example demonstrates the complete process of creating and publishing a did:prism DID on Cardano using a React component and the Mesh SDK. This approach simplifies wallet interaction and transaction building.  To use this component, you must wrap your application with the MeshProvider from @meshsdk/react.  Example pages/_app.tsx:  import type { AppProps } from &quot;next/app&quot;; import { MeshProvider } from &quot;@meshsdk/react&quot;; function MyApp({ Component, pageProps }: AppProps) { return ( &lt;MeshProvider&gt; &lt;Component {...pageProps} /&gt; &lt;/MeshProvider&gt; ); } export default MyApp;   Example Publishing Component:  import React, { useState, useCallback } from &quot;react&quot;; import SDK from &quot;@hyperledger/identus-sdk&quot;; import { useWallet, CardWallet } from &quot;@meshsdk/react&quot;; import { Transaction } from &quot;@meshsdk/core&quot;; // Helper to split data into chunks for Cardano metadata function splitStringIntoChunks(input: Uint8Array, chunkSize = 64): Uint8Array[] { const buffer = Buffer.from(input); const chunks: Uint8Array[] = []; for (let i = 0; i &lt; buffer.length; i += chunkSize) { chunks.push( Uint8Array.from(buffer.slice(i, i + chunkSize)) ); } return chunks; } // Helper to check for transaction confirmation on Blockfrost async function checkTransactionConfirmation(txHash: string) { // NOTE: This requires a Blockfrost API key to be configured in your environment const projectId = process.env.NEXT_PUBLIC_BLOCKFROST_API_KEY; if (!projectId) { throw new Error(&quot;Blockfrost API key is not configured.&quot;); } try { const response = await fetch( `https://cardano-mainnet.blockfrost.io/api/v0/txs/${txHash}`, { headers: { project_id: projectId }, } ); return response.ok; } catch (error) { console.error(&quot;Error checking transaction confirmation:&quot;, error); return false; } } export function PublishDidComponent() { const { wallet, connected } = useWallet(); const [did, setDid] = useState&lt;SDK.Domain.DID | null&gt;(null); const [txHash, setTxHash] = useState&lt;string | null&gt;(null); const [isPublishing, setIsPublishing] = useState(false); const [isConfirmed, setIsConfirmed] = useState(false); const [error, setError] = useState&lt;string | null&gt;(null); const publishDid = useCallback(async () =&gt; { if (!connected || !wallet) { setError(&quot;Please connect a wallet first.&quot;); return; } setIsPublishing(true); setError(null); setTxHash(null); setIsConfirmed(false); try { // 1. Initialize Apollo and Castor const apollo = new SDK.Apollo(); const castor = new SDK.Castor(apollo); // 2. Create a master key and a DID const masterPrivateKey = apollo.createPrivateKey({ type: SDK.Domain.KeyTypes.EC, curve: SDK.Domain.Curve.SECP256K1, seed: Buffer.from(apollo.createRandomSeed().seed.value).toString(&quot;hex&quot;), }); const services: SDK.Domain.Service[] = []; // Add any services if needed const newDid = await castor.createPrismDID(masterPrivateKey, services); setDid(newDid); // 3. Prepare the metadata for the transaction const atalaObject = await castor.createPrismDIDAtalaObject(masterPrivateKey, newDid); const metadataBody = { v: 1, c: splitStringIntoChunks(atalaObject), }; // 4. Build, sign, and submit the transaction with Mesh const tx = new Transaction({ initiator: wallet }) .setMetadata(21325, metadataBody); const unsignedTx = await tx.build(); const signedTx = await wallet.signTx(unsignedTx); const submittedTxHash = await wallet.submitTx(signedTx); setTxHash(submittedTxHash); // 5. Wait for confirmation console.log(`Transaction submitted. Hash: ${submittedTxHash}. Waiting for confirmation...`); let confirmed = false; while (!confirmed) { await new Promise(resolve =&gt; setTimeout(resolve, 15000)); // Wait 15s confirmed = await checkTransactionConfirmation(submittedTxHash); } setIsConfirmed(true); console.log(&quot;Transaction confirmed! DID published successfully.&quot;); } catch (err) { console.error(err); setError(err instanceof Error ? err.message : &quot;An unknown error occurred.&quot;); } finally { setIsPublishing(false); } }, [wallet, connected]); return ( &lt;div&gt; &lt;h2&gt;Publish a did:prism DID&lt;/h2&gt; {!connected ? ( &lt;CardWallet /&gt; ) : ( &lt;button onClick={publishDid} disabled={isPublishing}&gt; {isPublishing ? &quot;Publishing...&quot; : &quot;Create and Publish DID&quot;} &lt;/button&gt; )} {error &amp;&amp; &lt;p style={{ color: &quot;red&quot; }}&gt;Error: {error}&lt;/p&gt;} {did &amp;&amp; &lt;p&gt;DID created: {did.toString()}&lt;/p&gt;} {txHash &amp;&amp; ( &lt;div&gt; &lt;p&gt;Transaction Hash: {txHash}&lt;/p&gt; &lt;p&gt; &lt;a href={`https://cardanoscan.io/transaction/${txHash}`} target=&quot;_blank&quot; rel=&quot;noopener noreferrer&quot;&gt; View on Cardanoscan &lt;/a&gt; &lt;/p&gt; &lt;/div&gt; )} {isPublishing &amp;&amp; !isConfirmed &amp;&amp; &lt;p&gt;Waiting for transaction confirmation...&lt;/p&gt;} {isConfirmed &amp;&amp; &lt;p style={{ color: &quot;green&quot; }}&gt;DID Published Successfully!&lt;/p&gt;} &lt;/div&gt; ); }   ","version":"Next","tagName":"h2"},{"title":"Explanation of the Code‚Äã","type":1,"pageTitle":"Publishing a did:prism on Cardano (End-to-End Guide)","url":"/docs/sdk-ts/prism/publishing-did#explanation-of-the-code","content":" This example provides a self-contained React component, PublishDidComponent, that handles the entire lifecycle of creating and publishing a did:prism.  Component Setup and Helpers: The component uses React state to manage the DID, transaction status, and any potential errors.It uses the useWallet hook from @meshsdk/react to get the connected wallet's state and instance.splitStringIntoChunks is a helper function to correctly format the DID operation data for Cardano's transaction metadata.checkTransactionConfirmation is a helper to poll the Blockfrost API and verify when the transaction is confirmed on the blockchain. publishDid Function: This is the core logic, triggered by a button click. Initialization: It initializes the Apollo and Castor modules from the Atala PRISM SDK.DID Creation: It creates a new master private key and uses it to generate a new, unpublished did:prism.Metadata Preparation: It calls createPrismDIDAtalaObject to generate the specific data structure required for the publication operation. This data is then chunked for the metadata.Transaction with Mesh: It uses Mesh's Transaction builder, which provides a simple and elegant API. It sets the metadata for the transaction using the standard label for PRISM DID operations (21325).Signing and Submission: The transaction is built, signed by the user through their connected wallet, and submitted to the blockchain.Confirmation: The component then polls for confirmation and updates the UI to reflect the successful publication. User Interface: It renders Mesh's CardWallet component to allow users to easily connect their CIP30 wallet.Once connected, it displays a button to initiate the publishing process.It provides real-time feedback to the user, showing the created DID, transaction hash, and final confirmation status.  After the transaction is confirmed, your did:prism is published on the Cardano blockchain, and its short-form DID can be resolved by anyone. ","version":"Next","tagName":"h3"},{"title":"AgentBackup","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/AgentBackup","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"AgentBackup","url":"/docs/sdk-ts/sdk/overview/classes/AgentBackup#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"AgentBackup","url":"/docs/sdk-ts/sdk/overview/classes/AgentBackup#constructor","content":" new AgentBackup(Agent: BackupAgent): AgentBackup  Defined in: src/edge-agent/Agent.Backup.ts:27  Parameters‚Äã  Parameter\tTypeAgent\tBackupAgent  Returns‚Äã  AgentBackup  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"AgentBackup","url":"/docs/sdk-ts/sdk/overview/classes/AgentBackup#properties","content":" Property\tModifier\tType\tDefined in Agent\treadonly\tBackupAgent\tsrc/edge-agent/Agent.Backup.ts:28  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"AgentBackup","url":"/docs/sdk-ts/sdk/overview/classes/AgentBackup#methods","content":" ","version":"Next","tagName":"h2"},{"title":"createJWE()‚Äã","type":1,"pageTitle":"AgentBackup","url":"/docs/sdk-ts/sdk/overview/classes/AgentBackup#createjwe","content":" createJWE(options?: BackupOptions): Promise&lt;string&gt;  Defined in: src/edge-agent/Agent.Backup.ts:47  Creates a JWE (JSON Web Encryption) containing the backup data stored in Pluto. The data can optionally be encrypted using a custom master key, compressed, and filtered to exclude specified fields.  Parameters‚Äã  Parameter\tType\tDescriptionoptions?\tBackupOptions\tOptional settings for the backup.  Returns‚Äã  Promise&lt;string&gt;  A promise that resolves to the JWE string.  See‚Äã  restore - Method to restore data from a JWE string.    ","version":"Next","tagName":"h3"},{"title":"restore()‚Äã","type":1,"pageTitle":"AgentBackup","url":"/docs/sdk-ts/sdk/overview/classes/AgentBackup#restore","content":" restore(jwe: string, options?: BackupOptions): Promise&lt;void&gt;  Defined in: src/edge-agent/Agent.Backup.ts:81  Decodes a JWE (JSON Web Encryption) string and restores the backup data to the store. If the JWE is compressed (Base64-encoded), it will attempt to decompress it first.  Parameters‚Äã  Parameter\tType\tDescriptionjwe\tstring\tThe JWE string containing the encrypted backup data. options?\tBackupOptions\tOptional settings for the backup.  Returns‚Äã  Promise&lt;void&gt;  A promise that resolves when the data is successfully restored.  See‚Äã  createJWE - Method to create a JWE from the stored backup data. ","version":"Next","tagName":"h3"},{"title":"AgentContext","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/AgentContext","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"AgentContext","url":"/docs/sdk-ts/sdk/overview/classes/AgentContext#extends","content":" Context&lt;{ Api: Api; Apollo: Apollo; Castor: Castor; Connections: ConnectionsManager; Events: EventsManager; Jobs: JobManager; JWT: JWT; Mercury: Mercury; Plugins: PluginManager; Pluto: Pluto; SDJWT: SDJWT; Seed: Seed; }&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"AgentContext","url":"/docs/sdk-ts/sdk/overview/classes/AgentContext#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"AgentContext","url":"/docs/sdk-ts/sdk/overview/classes/AgentContext#constructor","content":" new AgentContext(modules: { Api: Api; Apollo: Apollo; Castor: Castor; Connections: ConnectionsManager; Events: EventsManager; Jobs: JobManager; JWT: JWT; Mercury: Mercury; Plugins: PluginManager; Pluto: Pluto; SDJWT: SDJWT; Seed: Seed; }): AgentContext  Defined in: src/utils/tasks.ts:83  Parameters‚Äã  Parameter\tTypemodules\t{ Api: Api; Apollo: Apollo; Castor: Castor; Connections: ConnectionsManager; Events: EventsManager; Jobs: JobManager; JWT: JWT; Mercury: Mercury; Plugins: PluginManager; Pluto: Pluto; SDJWT: SDJWT; Seed: Seed; } modules.Api\tApi modules.Apollo\tApollo modules.Castor\tCastor modules.Connections\tConnectionsManager modules.Events\tEventsManager modules.Jobs\tJobManager modules.JWT\tJWT modules.Mercury\tMercury modules.Plugins\tPluginManager modules.Pluto\tPluto modules.SDJWT\tSDJWT modules.Seed\tSeed  Returns‚Äã  AgentContext  Inherited from‚Äã  Task.Context&lt;{ // Agent modules Connections: ConnectionsManager; Plugins: PluginManager; Events: EventsManager; Jobs: JobManager; // Building Blocks Api: Domain.Api; Apollo: Domain.Apollo; Castor: Domain.Castor; Mercury: Domain.Mercury; Pluto: Domain.Pluto; Seed: Domain.Seed; // internal modules JWT: JWT; SDJWT: SDJWT; }&gt;.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"AgentContext","url":"/docs/sdk-ts/sdk/overview/classes/AgentContext#properties","content":" Property\tModifier\tType\tInherited from\tDefined in Api\tpublic\tApi\tTask.Context.Api\tsrc/edge-agent/Context.ts:17 Apollo\tpublic\tApollo\tTask.Context.Apollo\tsrc/edge-agent/Context.ts:18 Castor\tpublic\tCastor\tTask.Context.Castor\tsrc/edge-agent/Context.ts:19 Connections\tpublic\tConnectionsManager\tTask.Context.Connections\tsrc/edge-agent/Context.ts:11 Events\tpublic\tEventsManager\tTask.Context.Events\tsrc/edge-agent/Context.ts:13 Jobs\tpublic\tJobManager\tTask.Context.Jobs\tsrc/edge-agent/Context.ts:14 JWT\tpublic\tJWT\tTask.Context.JWT\tsrc/edge-agent/Context.ts:25 logger\treadonly\tLogger\tTask.Context.logger\tsrc/utils/tasks.ts:36 Mercury\tpublic\tMercury\tTask.Context.Mercury\tsrc/edge-agent/Context.ts:20 Plugins\tpublic\tPluginManager\tTask.Context.Plugins\tsrc/edge-agent/Context.ts:12 Pluto\tpublic\tPluto\tTask.Context.Pluto\tsrc/edge-agent/Context.ts:21 SDJWT\tpublic\tSDJWT\tTask.Context.SDJWT\tsrc/edge-agent/Context.ts:26 Seed\tpublic\tSeed\tTask.Context.Seed\tsrc/edge-agent/Context.ts:22  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"AgentContext","url":"/docs/sdk-ts/sdk/overview/classes/AgentContext#methods","content":" ","version":"Next","tagName":"h2"},{"title":"extend()‚Äã","type":1,"pageTitle":"AgentContext","url":"/docs/sdk-ts/sdk/overview/classes/AgentContext#extend","content":" extend(deps: JsonObj): this  Defined in: src/utils/tasks.ts:69  Parameters‚Äã  Parameter\tTypedeps\tJsonObj  Returns‚Äã  this  Inherited from‚Äã  Task.Context.extend    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"AgentContext","url":"/docs/sdk-ts/sdk/overview/classes/AgentContext#run","content":" run&lt;T&gt;(task: Task&lt;T, any&gt;): Promise&lt;T&gt;  Defined in: src/utils/tasks.ts:55  Type Parameters‚Äã  Type ParameterT  Parameters‚Äã  Parameter\tTypetask\tTask&lt;T, any&gt;  Returns‚Äã  Promise&lt;T&gt;  Inherited from‚Äã  Task.Context.run ","version":"Next","tagName":"h3"},{"title":"Agent","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/Agent","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#extends","content":" Controller  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#constructor","content":" new Agent(apollo: Apollo, castor: Castor, pluto: Pluto, mercury: Mercury, seed: Seed, api: Api, options?: AgentOptions): Agent  Defined in: src/edge-agent/Agent.ts:61  Creates an instance of Agent.  Parameters‚Äã  Parameter\tTypeapollo\tApollo castor\tCastor pluto\tPluto mercury\tMercury seed\tSeed api\tApi options?\tAgentOptions  Returns‚Äã  Agent  Overrides‚Äã  Controller.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tInherited from\tDefined in api\treadonly\tApi\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:67 apollo\treadonly\tApollo\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:62 backup\tpublic\tAgentBackup\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:51 castor\treadonly\tCastor\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:63 connections\treadonly\tConnectionsManager\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:52 events\treadonly\tEventsManager\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:53 jobs\treadonly\tJobManager\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:54 mercury\treadonly\tMercury\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:65 plugins\treadonly\tPluginManager\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:55 pluto\treadonly\tPluto\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:64 seed\treadonly\tSeed\tundefined\t-\t-\tsrc/edge-agent/Agent.ts:66 state\tpublic\tState\tState.STOPPED\tcurrent status of the entity\tController.state\tsrc/domain/protocols/Startable.ts:42  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"currentMediatorDID‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#currentmediatordid","content":" Get Signature‚Äã  get currentMediatorDID(): DID | undefined  Defined in: src/edge-agent/Agent.ts:183  Deprecated‚Äã  Get current mediator DID if available or null  Returns‚Äã  DID | undefined  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#methods","content":" ","version":"Next","tagName":"h2"},{"title":"acceptDIDCommInvitation()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#acceptdidcomminvitation","content":" acceptDIDCommInvitation(invitation: OutOfBandInvitation, alias?: string): Promise&lt;void&gt;  Defined in: src/edge-agent/Agent.ts:366  Asyncronously accept a didcomm v2 invitation, will create a pair between the Agent its connecting with and the current owner's did  Parameters‚Äã  Parameter\tType\tDescriptioninvitation\tOutOfBandInvitation alias?\tstring\t-  Returns‚Äã  Promise&lt;void&gt;  Deprecated‚Äã  use acceptInvitation    ","version":"Next","tagName":"h3"},{"title":"acceptInvitation()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#acceptinvitation","content":" acceptInvitation(invitation: InvitationType, optionalAlias?: string): Promise&lt;void&gt;  Defined in: src/edge-agent/Agent.ts:288  Handle an invitation based on it's type  PrismOnboardingInvitation: creates a new connectionOutOfBandInvitation: no Attachment: creates a new connectionwith Attachment: stores / emits the attached message  Parameters‚Äã  Parameter\tType\tDescriptioninvitation\tInvitationType\tan OOB or PrismOnboarding invitation optionalAlias?\tstring\t-  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"addListener()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#addlistener","content":" addListener&lt;T&gt;(eventName: T, callback: EventCallback&lt;T&gt;): number  Defined in: src/edge-agent/Agent.ts:160  Add an event listener to get notified from an Event &quot;MESSAGE&quot;  Type Parameters‚Äã  Type ParameterT extends ListenerKey  Parameters‚Äã  Parameter\tType\tDescriptioneventName\tT callback\tEventCallback&lt;T&gt;\t  Returns‚Äã  number    ","version":"Next","tagName":"h3"},{"title":"createNewPeerDID()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#createnewpeerdid","content":" createNewPeerDID(services?: Service[], updateMediator?: boolean): Promise&lt;DID&gt;  Defined in: src/edge-agent/Agent.ts:243  Asyncronously Create a new PeerDID  Parameters‚Äã  Parameter\tType\tDefault value\tDescriptionservices?\tService[]\t[] updateMediator?\tboolean\ttrue\t  Returns‚Äã  Promise&lt;DID&gt;    ","version":"Next","tagName":"h3"},{"title":"createNewPrismDID()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#createnewprismdid","content":" createNewPrismDID(alias: string, services?: Service[], keyPathIndex?: number): Promise&lt;DID&gt;  Defined in: src/edge-agent/Agent.ts:226  Asyncronously create a new PrismDID  Parameters‚Äã  Parameter\tType\tDefault value\tDescriptionalias\tstring\tundefined services?\tService[]\t[] keyPathIndex?\tnumber\tundefined\t  Returns‚Äã  Promise&lt;DID&gt;    ","version":"Next","tagName":"h3"},{"title":"createPresentationForRequestProof()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#createpresentationforrequestproof","content":" createPresentationForRequestProof(request: RequestPresentation, credential: Credential): Promise&lt;Presentation&gt;  Defined in: src/edge-agent/Agent.ts:522  Asyncronously create a verifiablePresentation from a valid stored verifiableCredential This is used when the verified requests a specific verifiable credential, this will create the actual instance of the presentation which we can share with the verifier.  Parameters‚Äã  Parameter\tType\tDescriptionrequest\tRequestPresentation credential\tCredential\t  Returns‚Äã  Promise&lt;Presentation&gt;    ","version":"Next","tagName":"h3"},{"title":"handle()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#handle","content":" handle(message: Message): Promise&lt;any&gt;  Defined in: src/edge-agent/Agent.ts:426  Find and execute a task registered for the given Message.piuri  Parameters‚Äã  Parameter\tType\tDescriptionmessage\tMessage\t  Returns‚Äã  Promise&lt;any&gt;    ","version":"Next","tagName":"h3"},{"title":"handlePresentation()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#handlepresentation","content":" handlePresentation(presentation: Presentation): Promise&lt;boolean&gt;  Defined in: src/edge-agent/Agent.ts:568  Initiate the Presentation and presentationSubmission  Parameters‚Äã  Parameter\tType\tDescriptionpresentation\tPresentation\t  Returns‚Äã  Promise&lt;boolean&gt;    ","version":"Next","tagName":"h3"},{"title":"initiatePresentationRequest()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#initiatepresentationrequest","content":" initiatePresentationRequest&lt;T&gt;(type: T, toDID: DID, presentationClaims: PresentationClaims&lt;T&gt;): Promise&lt;RequestPresentation&gt;  Defined in: src/edge-agent/Agent.ts:555  Initiate a PresentationRequest from the SDK, to create oob Verification Requests  Type Parameters‚Äã  Type Parameter\tDefault typeT extends CredentialType\tJWT  Parameters‚Äã  Parameter\tType\tDescriptiontype\tT toDID\tDID presentationClaims\tPresentationClaims&lt;T&gt;\t  Returns‚Äã  Promise&lt;RequestPresentation&gt;  Example use-case: Send a Presentation Request for a JWT credential issued by a specific issuer   agent.initiatePresentationRequest( Domain.CredentialType.JWT, toDID, { issuer: Domain.DID.fromString(&quot;did:peer:12345&quot;), claims: {}} );   Example use-case: Send a Presentation Request for a JWT credential issued by a specific issuer and specific claims   agent.initiatePresentationRequest( Domain.CredentialType.JWT, toDID, { issuer: Domain.DID.fromString(&quot;did:peer:12345&quot;), claims: {email: {type: 'string', pattern:'email@email.com'}}} );     ","version":"Next","tagName":"h3"},{"title":"isCredentialRevoked()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#iscredentialrevoked","content":" isCredentialRevoked(credential: Credential): Promise&lt;boolean&gt;  Defined in: src/edge-agent/Agent.ts:442  Parameters‚Äã  Parameter\tType\tDescriptioncredential\tCredential\t  Returns‚Äã  Promise&lt;boolean&gt;    ","version":"Next","tagName":"h3"},{"title":"parseInvitation()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#parseinvitation","content":" parseInvitation(str: string): Promise&lt;InvitationType&gt;  Defined in: src/edge-agent/Agent.ts:271  Asyncronously parse an invitation from a valid json string  Parameters‚Äã  Parameter\tType\tDescriptionstr\tstring\t  Returns‚Äã  Promise&lt;InvitationType&gt;    ","version":"Next","tagName":"h3"},{"title":"parseOOBInvitation()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#parseoobinvitation","content":" parseOOBInvitation(url: URL): Promise&lt;OutOfBandInvitation&gt;  Defined in: src/edge-agent/Agent.ts:346  Asyncronously parse an out of band invitation from a URI as the oob come in format of valid URL  Parameters‚Äã  Parameter\tType\tDescriptionurl\tURL\t  Returns‚Äã  Promise&lt;OutOfBandInvitation&gt;    ","version":"Next","tagName":"h3"},{"title":"parsePrismInvitation()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#parseprisminvitation","content":" parsePrismInvitation(str: string): Promise&lt;PrismOnboardingInvitation&gt;  Defined in: src/edge-agent/Agent.ts:307  Asyncronously parse a prismOnboarding invitation from a string  Parameters‚Äã  Parameter\tType\tDescriptionstr\tstring\t  Returns‚Äã  Promise&lt;PrismOnboardingInvitation&gt;    ","version":"Next","tagName":"h3"},{"title":"prepareRequestCredentialWithIssuer()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#preparerequestcredentialwithissuer","content":" prepareRequestCredentialWithIssuer(offer: OfferCredential): Promise&lt;RequestCredential&gt;  Defined in: src/edge-agent/Agent.ts:489  Asyncronously prepare a request credential message from a valid offerCredential for now supporting w3c verifiable credentials offers.  Parameters‚Äã  Parameter\tType\tDescriptionoffer\tOfferCredential\t  Returns‚Äã  Promise&lt;RequestCredential&gt;    ","version":"Next","tagName":"h3"},{"title":"processIssuedCredentialMessage()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#processissuedcredentialmessage","content":" processIssuedCredentialMessage(issueCredential: IssueCredential): Promise&lt;Credential&gt;  Defined in: src/edge-agent/Agent.ts:504  Extract the verifiableCredential object from the Issue credential message asyncronously  Parameters‚Äã  Parameter\tType\tDescriptionissueCredential\tIssueCredential\t  Returns‚Äã  Promise&lt;Credential&gt;    ","version":"Next","tagName":"h3"},{"title":"removeListener()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#removelistener","content":" removeListener&lt;T&gt;(eventName: T, callback: EventCallback&lt;T&gt;): void  Defined in: src/edge-agent/Agent.ts:170  Remove event listener, used by stop procedure  Type Parameters‚Äã  Type ParameterT extends ListenerKey  Parameters‚Äã  Parameter\tType\tDescriptioneventName\tT callback\tEventCallback&lt;T&gt;\t  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"revealCredentialFields()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#revealcredentialfields","content":" revealCredentialFields(credential: Credential, fields: string[], linkSecret: string): Promise&lt;{ }&gt;  Defined in: src/edge-agent/Agent.ts:463  Parameters‚Äã  Parameter\tType\tDescriptioncredential\tCredential fields\tstring[]\t- linkSecret\tstring\t-  Returns‚Äã  Promise&lt;{ }&gt;  Deprecated‚Äã  This method can be used by holders in order to disclose the value of a Credential JWT are just encoded plainText Anoncreds will really need to be disclosed as the fields are encoded.    ","version":"Next","tagName":"h3"},{"title":"runTask()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#runtask","content":" runTask&lt;T&gt;(task: Task&lt;T&gt;): Promise&lt;T&gt;  Defined in: src/edge-agent/Agent.ts:195  run the given Task  Type Parameters‚Äã  Type ParameterT  Parameters‚Äã  Parameter\tType\tDescriptiontask\tTask&lt;T&gt;\t  Returns‚Äã  Promise&lt;T&gt;    ","version":"Next","tagName":"h3"},{"title":"send()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#send","content":" Call Signature‚Äã  send(message: ApiRequest): Promise&lt;ApiResponse&lt;unknown&gt; | undefined&gt;  Defined in: src/edge-agent/Agent.ts:413  Handle sending a Protocol  Parameters‚Äã  Parameter\tType\tDescriptionmessage\tApiRequest\t  Returns‚Äã  Promise&lt;ApiResponse&lt;unknown&gt; | undefined&gt;  Call Signature‚Äã  send(message: Message): Promise&lt;Message | undefined&gt;  Defined in: src/edge-agent/Agent.ts:414  Handle sending a Protocol  Parameters‚Äã  Parameter\tType\tDescriptionmessage\tMessage\t  Returns‚Äã  Promise&lt;Message | undefined&gt;    ","version":"Next","tagName":"h3"},{"title":"sendMessage()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#sendmessage","content":" sendMessage(message: ApiRequest | Message): Promise&lt;Message | undefined&gt;  Defined in: src/edge-agent/Agent.ts:402  Asyncronously send a didcomm Message  Parameters‚Äã  Parameter\tType\tDescriptionmessage\tApiRequest | Message\t  Returns‚Äã  Promise&lt;Message | undefined&gt;  Deprecated‚Äã  use send instead    ","version":"Next","tagName":"h3"},{"title":"signWith()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#signwith","content":" signWith(did: DID, message: Uint8Array): Promise&lt;Signature&gt;  Defined in: src/edge-agent/Agent.ts:259  Asyncronously sign a message with a DID  Parameters‚Äã  Parameter\tType\tDescriptiondid\tDID message\tUint8Array\t  Returns‚Äã  Promise&lt;Signature&gt;    ","version":"Next","tagName":"h3"},{"title":"start()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#start","content":" start(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:62  handle the startup of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt;  Inherited from‚Äã  Controller.start    ","version":"Next","tagName":"h3"},{"title":"startFetchingMessages()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#startfetchingmessages","content":" startFetchingMessages(period?: number): Promise&lt;void&gt;  Defined in: src/edge-agent/Agent.ts:381  Start the fetch messages long running job  sends a PickupRequest to all mediator connections  Parameters‚Äã  Parameter\tType\tDescriptionperiod?\tnumber\t  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"stop()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#stop","content":" stop(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:72  handle the teardown of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt;  Inherited from‚Äã  Controller.stop    ","version":"Next","tagName":"h3"},{"title":"stopFetchingMessages()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#stopfetchingmessages","content":" stopFetchingMessages(): void  Defined in: src/edge-agent/Agent.ts:390  Stop the fetch message long running job  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"verifiableCredentials()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#verifiablecredentials","content":" verifiableCredentials(): Promise&lt;Credential[]&gt;  Defined in: src/edge-agent/Agent.ts:478  Asyncronously get all verifiable credentials  Returns‚Äã  Promise&lt;Credential[]&gt;    ","version":"Next","tagName":"h3"},{"title":"initialize()‚Äã","type":1,"pageTitle":"Agent","url":"/docs/sdk-ts/sdk/overview/classes/Agent#initialize","content":" static initialize(params: { api?: Api; apollo?: Apollo; castor?: Castor; mediatorDID?: string | DID; mercury?: Mercury; options?: AgentOptions; pluto: Pluto; seed?: Seed; }): Agent  Defined in: src/edge-agent/Agent.ts:97  Convenience initializer for Agent allowing default instantiation, omitting all but the absolute necessary parameters  Parameters‚Äã  Parameter\tType\tDescriptionparams\t{ api?: Api; apollo?: Apollo; castor?: Castor; mediatorDID?: string | DID; mercury?: Mercury; options?: AgentOptions; pluto: Pluto; seed?: Seed; }\tdependencies object params.api?\tApi params.apollo?\tApollo params.castor?\tCastor params.mediatorDID?\tstring | DID\tdid of the mediator to be used params.mercury?\tMercury params.options?\tAgentOptions\t- params.pluto\tPluto\tstorage implementation params.seed?\tSeed\t  Returns‚Äã  Agent ","version":"Next","tagName":"h3"},{"title":"AnonCredsCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#extends","content":" Credential  ","version":"Next","tagName":"h2"},{"title":"Implements‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#implements","content":" StorableCredential  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#constructor","content":" new AnonCredsCredential(credential: CredentialType, isRevoked: boolean): AnonCredsCredential  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:30  Parameters‚Äã  Parameter\tType\tDefault valuecredential\tCredentialType\tundefined isRevoked\tboolean\tfalse  Returns‚Äã  AnonCredsCredential  Overrides‚Äã  Credential.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tOverrides\tInherited from\tDefined in credentialType\tpublic\tCredentialType\tCredentialType.AnonCreds\t-\tCredential.credentialType\t-\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:26 properties\tpublic\tMap&lt;AnonCredsCredentialProperties, any&gt;\tundefined\t-\tCredential.properties\t-\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:28 recoveryId\tpublic\tstring\tAnonCredsRecoveryId\t-\tCredential.recoveryId\t-\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:27 uuid\treadonly\tstring\tundefined\tUniversally Unique Identifier. should be unique across all items.\t-\tCredential.uuid\tsrc/domain/models/Credential.ts:15  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"claims‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#claims","content":" Get Signature‚Äã  get claims(): {[key: string]: any; }[]  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:64  Returns‚Äã  {[key: string]: any; }[]  Overrides‚Äã  Credential.claims    ","version":"Next","tagName":"h3"},{"title":"credentialDefinitionId‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#credentialdefinitionid","content":" Get Signature‚Äã  get credentialDefinitionId(): string  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:71  Returns‚Äã  string    ","version":"Next","tagName":"h3"},{"title":"id‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#id","content":" Get Signature‚Äã  get id(): string  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:49  Returns‚Äã  string  Overrides‚Äã  Credential.id    ","version":"Next","tagName":"h3"},{"title":"issuer‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#issuer","content":" Get Signature‚Äã  get issuer(): any  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:75  Returns‚Äã  any  Overrides‚Äã  Credential.issuer    ","version":"Next","tagName":"h3"},{"title":"revoked‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#revoked","content":" Get Signature‚Äã  get revoked(): any  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:87  Returns‚Äã  any    ","version":"Next","tagName":"h3"},{"title":"schemaId‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#schemaid","content":" Get Signature‚Äã  get schemaId(): string  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:79  Returns‚Äã  string    ","version":"Next","tagName":"h3"},{"title":"subject‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#subject","content":" Get Signature‚Äã  get subject(): any  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:83  Returns‚Äã  any  Overrides‚Äã  Credential.subject  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"getProperty()‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#getproperty","content":" getProperty(name: string): any  Defined in: src/domain/models/Credential.ts:17  Parameters‚Äã  Parameter\tTypename\tstring  Returns‚Äã  any  Inherited from‚Äã  Credential.getProperty    ","version":"Next","tagName":"h3"},{"title":"isProvable()‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#isprovable","content":" isProvable(): this is ProvableCredential  Defined in: src/domain/models/Credential.ts:21  Returns‚Äã  this is ProvableCredential  Inherited from‚Äã  Credential.isProvable    ","version":"Next","tagName":"h3"},{"title":"isRevoked()‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#isrevoked","content":" isRevoked(): boolean  Defined in: src/domain/models/Credential.ts:29  Returns‚Äã  boolean  Inherited from‚Äã  Credential.isRevoked    ","version":"Next","tagName":"h3"},{"title":"isStorable()‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#isstorable","content":" isStorable(): this is StorableCredential  Defined in: src/domain/models/Credential.ts:25  Returns‚Äã  this is StorableCredential  Inherited from‚Äã  Credential.isStorable    ","version":"Next","tagName":"h3"},{"title":"toJSON()‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#tojson","content":" toJSON(): CredentialType  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:105  Returns‚Äã  CredentialType    ","version":"Next","tagName":"h3"},{"title":"toStorable()‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#tostorable","content":" toStorable(): { credentialData: string; id: string; issuer: any; recoveryId: string; subject: any; validUntil: any; }  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:91  Returns‚Äã  { credentialData: string; id: string; issuer: any; recoveryId: string; subject: any; validUntil: any; }  Name\tType\tDefault value\tDefined incredentialData\tstring\tcredentialData\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:96 id\tstring\t-\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:97 issuer\tany\t-\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:98 recoveryId\tstring\t-\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:95 subject\tany\t-\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:99 validUntil\tany\t-\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:100  Implementation of‚Äã  StorableCredential.toStorable    ","version":"Next","tagName":"h3"},{"title":"fromJson()‚Äã","type":1,"pageTitle":"AnonCredsCredential","url":"/docs/sdk-ts/sdk/overview/classes/AnonCredsCredential#fromjson","content":" static fromJson(value: unknown): AnonCredsCredential  Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:115  Parameters‚Äã  Parameter\tTypevalue\tunknown  Returns‚Äã  AnonCredsCredential ","version":"Next","tagName":"h3"},{"title":"ApiImpl","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/ApiImpl","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"ApiImpl","url":"/docs/sdk-ts/sdk/overview/classes/ApiImpl#implements","content":" Api  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ApiImpl","url":"/docs/sdk-ts/sdk/overview/classes/ApiImpl#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ApiImpl","url":"/docs/sdk-ts/sdk/overview/classes/ApiImpl#constructor","content":" new ApiImpl(): FetchApi  Returns‚Äã  FetchApi  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"ApiImpl","url":"/docs/sdk-ts/sdk/overview/classes/ApiImpl#methods","content":" ","version":"Next","tagName":"h2"},{"title":"request()‚Äã","type":1,"pageTitle":"ApiImpl","url":"/docs/sdk-ts/sdk/overview/classes/ApiImpl#request","content":" request&lt;T&gt;(method: HttpMethod, urlStr: string, urlParameters: Map&lt;string, string&gt;, httpHeaders: Map&lt;string, string&gt;, body?: string | Record&lt;string, any&gt;): Promise&lt;ApiResponse&lt;T&gt;&gt;  Defined in: src/edge-agent/helpers/FetchApi.ts:7  make a request return an ApiResponse on any 2xx status throw ApiError otherwise  Type Parameters‚Äã  Type ParameterT  Parameters‚Äã  Parameter\tType\tDescriptionmethod\tHttpMethod\t- urlStr\tstring\t- urlParameters\tMap&lt;string, string&gt; httpHeaders\tMap&lt;string, string&gt; body?\tstring | Record&lt;string, any&gt;\t  Returns‚Äã  Promise&lt;ApiResponse&lt;T&gt;&gt;  Implementation of‚Äã  Api.request ","version":"Next","tagName":"h3"},{"title":"Apollo","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/Apollo","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#implements","content":" ApolloKeyRestoration  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#constructor","content":" new Apollo(): Apollo  Returns‚Äã  Apollo  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#properties","content":" Property\tModifier\tType\tDefault value\tDefined in Ed25519PrivateKey\tstatic\ttypeof Ed25519PrivateKey\tEd25519PrivateKey\tsrc/apollo/Apollo.ts:110 Secp256k1PrivateKey\tstatic\ttypeof Secp256k1PrivateKey\tSecp256k1PrivateKey\tsrc/apollo/Apollo.ts:109 X25519PrivateKey\tstatic\ttypeof X25519PrivateKey\tX25519PrivateKey\tsrc/apollo/Apollo.ts:111  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#methods","content":" ","version":"Next","tagName":"h2"},{"title":"createPrivateKey()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#createprivatekey","content":" createPrivateKey(parameters: {[name: string]: any; }): PrivateKey  Defined in: src/apollo/Apollo.ts:291  Creates a private key based on the current cryptographic abstraction  Parameters‚Äã  Parameter\tType\tDescriptionparameters\t{[name: string]: any; }\t  Returns‚Äã  PrivateKey  Examples‚Äã  Create an EC Key with secp256k1 curve   const privateKey = apollo.createPrivateKey({ curve: Curve.SECP256K1, seed: Buffer.from(seed.value).toString(&quot;hex&quot;), });   Create an EC Key with secp256k1 curve, but also specify a derivationPath   const privateKey = apollo.createPrivateKey({ curve: Curve.SECP256K1, seed: Buffer.from(seed.value).toString(&quot;hex&quot;), derivationPath: &quot;m/0'/0'/0'&quot; });   Create an EC Key with ed25519 curve, ED25519 keys do not use derivation, passing the seed or derivation path will make no effect. Calling this function just generates a new random privateKey for that curve   const privateKey = apollo.createPrivateKey({ curve: Curve.ED25519, });   Create an EC Key with X25519 curve, X25519 keys do not use derivation, passing the seed or derivation path will make no effect. Calling this function just generates a new random privateKey for that curve   const privateKey = apollo.createPrivateKey({ curve: Curve.X25519, });   Implementation of‚Äã  Apollo.createPrivateKey    ","version":"Next","tagName":"h3"},{"title":"createPublicKey()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#createpublickey","content":" createPublicKey(parameters: {[name: string]: any; }): PublicKey  Defined in: src/apollo/Apollo.ts:202  Creates a public key based on the current cryptographic abstraction  Parameters‚Äã  Parameter\tType\tDescriptionparameters\t{[name: string]: any; }\t  Returns‚Äã  PublicKey  Example‚Äã  Create an EC Key with secp256k1 curve   const privateKey = apollo.createPublicKey({ curve: Curve.SECP256K1, raw: Buffer.from(new Arra(64).fill(1)), });   Implementation of‚Äã  Apollo.createPublicKey    ","version":"Next","tagName":"h3"},{"title":"createRandomMnemonics()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#createrandommnemonics","content":" createRandomMnemonics(): MnemonicWordList  Defined in: src/apollo/Apollo.ts:125  Creates a random set of mnemonic phrases that can be used as a seed for generating a private key.  Returns‚Äã  MnemonicWordList  Example‚Äã  This function creates a random mnemonic phrase whose usage is as a seed for generating a private key.   const mnemonics = apollo.createRandomMnemonics();   Implementation of‚Äã  Apollo.createRandomMnemonics    ","version":"Next","tagName":"h3"},{"title":"createRandomSeed()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#createrandomseed","content":" createRandomSeed(passphrase?: string): SeedWords  Defined in: src/apollo/Apollo.ts:174  Creates a random seed and a corresponding set of mnemonic phrases.  Parameters‚Äã  Parameter\tType\tDescriptionpassphrase?\tstring\t  Returns‚Äã  SeedWords  Example‚Äã  This function creates a random mnemonic phrase and seed.   const {mnemonics, seed} = apollo.createRandomSeed();   Implementation of‚Äã  Apollo.createRandomSeed    ","version":"Next","tagName":"h3"},{"title":"createSeed()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#createseed","content":" createSeed(mnemonics: MnemonicWordList, passphrase?: string): Seed  Defined in: src/apollo/Apollo.ts:143  Takes in a set of mnemonics and a passphrase, and returns a seed object used to generate a private key.  Parameters‚Äã  Parameter\tType\tDescriptionmnemonics\tMnemonicWordList passphrase?\tstring\t  Returns‚Äã  Seed  Example‚Äã  This function takes mnemonics and passphrases and creates a seed object to generate a private key. It may throw an error if the mnemonics are invalid.   const seed = apollo.createSeed(mnemonics, &quot;my-secret-passphrase&quot;);   Implementation of‚Äã  Apollo.createSeed    ","version":"Next","tagName":"h3"},{"title":"restorePrivateKey()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#restoreprivatekey","content":" restorePrivateKey(key: StorableKey): PrivateKey  Defined in: src/apollo/Apollo.ts:405  Restores a PrivateKey from the given StorableKey  Parameters‚Äã  Parameter\tType\tDescriptionkey\tStorableKey\t  Returns‚Äã  PrivateKey  PrivateKey instance  Throws‚Äã  if the restoration process fails  Implementation of‚Äã  KeyRestoration.restorePrivateKey    ","version":"Next","tagName":"h3"},{"title":"restorePublicKey()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/classes/Apollo#restorepublickey","content":" restorePublicKey(key: StorableKey): PublicKey  Defined in: src/apollo/Apollo.ts:420  Restores a PublicKey from the given StorableKey  Parameters‚Äã  Parameter\tType\tDescriptionkey\tStorableKey\t  Returns‚Äã  PublicKey  PublicKey instance  Throws‚Äã  if the restoration process fails, this method throws an error  Implementation of‚Äã  KeyRestoration.restorePublicKey ","version":"Next","tagName":"h3"},{"title":"BackupManager","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/BackupManager","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"BackupManager","url":"/docs/sdk-ts/sdk/overview/classes/BackupManager#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"BackupManager","url":"/docs/sdk-ts/sdk/overview/classes/BackupManager#constructor","content":" new BackupManager(Pluto: Pluto, Repositories: { CredentialMetadata: CredentialMetadataRepository; Credentials: CredentialRepository; DIDKeyLinks: DIDKeyLinkRepository; DIDLinks: DIDLinkRepository; DIDs: DIDRepository; Keys: KeyRepository; LinkSecrets: LinkSecretRepository; Messages: MessageRepository; }): BackupManager  Defined in: src/pluto/backup/BackupManager.ts:14  Parameters‚Äã  Parameter\tTypePluto\tPluto Repositories\t{ CredentialMetadata: CredentialMetadataRepository; Credentials: CredentialRepository; DIDKeyLinks: DIDKeyLinkRepository; DIDLinks: DIDLinkRepository; DIDs: DIDRepository; Keys: KeyRepository; LinkSecrets: LinkSecretRepository; Messages: MessageRepository; } Repositories.CredentialMetadata\tCredentialMetadataRepository Repositories.Credentials\tCredentialRepository Repositories.DIDKeyLinks\tDIDKeyLinkRepository Repositories.DIDLinks\tDIDLinkRepository Repositories.DIDs\tDIDRepository Repositories.Keys\tKeyRepository Repositories.LinkSecrets\tLinkSecretRepository Repositories.Messages\tMessageRepository  Returns‚Äã  BackupManager  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"BackupManager","url":"/docs/sdk-ts/sdk/overview/classes/BackupManager#methods","content":" ","version":"Next","tagName":"h2"},{"title":"backup()‚Äã","type":1,"pageTitle":"BackupManager","url":"/docs/sdk-ts/sdk/overview/classes/BackupManager#backup","content":" backup(version?: &quot;0.0.1&quot;): Promise&lt;{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }&gt;  Defined in: src/pluto/backup/BackupManager.ts:25  convert stored data to JSON  Parameters‚Äã  Parameter\tType\tDescriptionversion?\t&quot;0.0.1&quot;\tbackup schema version  Returns‚Äã  Promise&lt;{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }&gt;    ","version":"Next","tagName":"h3"},{"title":"restore()‚Äã","type":1,"pageTitle":"BackupManager","url":"/docs/sdk-ts/sdk/overview/classes/BackupManager#restore","content":" restore(backup: { credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }): Promise&lt;void&gt;  Defined in: src/pluto/backup/BackupManager.ts:35  convert JSON to stored data  Parameters‚Äã  Parameter\tType\tDescriptionbackup\t{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; } backup.credentials\t{ data: string; recovery_id: string; }[]\t- backup.did_pairs\t{ alias: string; holder: string; recipient: string; }[]\t- backup.dids\t{ alias?: string; did: string; }[]\t- backup.keys\t{ did?: string; index?: number; key: string; recovery_id: string; }[]\t- backup.link_secret?\tstring\t- backup.mediators\t{ holder_did: string; mediator_did: string; routing_did: string; }[]\t- backup.messages\tstring[]\t- backup.version?\t&quot;0.0.1&quot;\t-  Returns‚Äã  Promise&lt;void&gt; ","version":"Next","tagName":"h3"},{"title":"CancellableTask","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/CancellableTask","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"CancellableTask","url":"/docs/sdk-ts/sdk/overview/classes/CancellableTask#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CancellableTask","url":"/docs/sdk-ts/sdk/overview/classes/CancellableTask#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CancellableTask","url":"/docs/sdk-ts/sdk/overview/classes/CancellableTask#constructor","content":" new CancellableTask&lt;T&gt;(task: Task&lt;T&gt;, repeatEvery?: number): CancellableTask&lt;T&gt;  Defined in: src/edge-agent/helpers/Task.ts:11  Parameters‚Äã  Parameter\tTypetask\tTask&lt;T&gt; repeatEvery?\tnumber  Returns‚Äã  CancellableTask&lt;T&gt;  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CancellableTask","url":"/docs/sdk-ts/sdk/overview/classes/CancellableTask#methods","content":" ","version":"Next","tagName":"h2"},{"title":"callback()‚Äã","type":1,"pageTitle":"CancellableTask","url":"/docs/sdk-ts/sdk/overview/classes/CancellableTask#callback","content":" callback(fn: (response: T) =&gt; void): Promise&lt;void&gt;  Defined in: src/edge-agent/helpers/Task.ts:64  Parameters‚Äã  Parameter\tTypefn\t(response: T) =&gt; void  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"cancel()‚Äã","type":1,"pageTitle":"CancellableTask","url":"/docs/sdk-ts/sdk/overview/classes/CancellableTask#cancel","content":" cancel(): void  Defined in: src/edge-agent/helpers/Task.ts:48  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"then()‚Äã","type":1,"pageTitle":"CancellableTask","url":"/docs/sdk-ts/sdk/overview/classes/CancellableTask#then","content":" then(): Promise&lt;T&gt;  Defined in: src/edge-agent/helpers/Task.ts:60  Returns‚Äã  Promise&lt;T&gt; ","version":"Next","tagName":"h3"},{"title":"ConnectionsManager","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#constructor","content":" new ConnectionsManager(): ConnectionsManager  Returns‚Äã  ConnectionsManager  ","version":"Next","tagName":"h3"},{"title":"Accessors‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"mediator‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#mediator","content":" Get Signature‚Äã  get mediator(): Nil | MediatorConnection  Defined in: src/edge-agent/connections/ConnectionsManager.ts:18  Returns‚Äã  Nil | MediatorConnection  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#methods","content":" ","version":"Next","tagName":"h2"},{"title":"add()‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#add","content":" add(connection: Connection): void  Defined in: src/edge-agent/connections/ConnectionsManager.ts:48  add a Connection  Parameters‚Äã  Parameter\tType\tDescriptionconnection\tConnection\t  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"addMediator()‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#addmediator","content":" addMediator(mediator: Connection): void  Defined in: src/edge-agent/connections/ConnectionsManager.ts:56  add a Connection and mark it as a Mediator  Parameters‚Äã  Parameter\tType\tDescriptionmediator\tConnection\t  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"find()‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#find","content":" find(uri: string): Connection | undefined  Defined in: src/edge-agent/connections/ConnectionsManager.ts:85  Search for a Connection by it's unique identifier  Parameters‚Äã  Parameter\tType\tDescriptionuri\tstring\t  Returns‚Äã  Connection | undefined    ","version":"Next","tagName":"h3"},{"title":"remove()‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#remove","content":" remove(connection: string | Connection): Promise&lt;void&gt;  Defined in: src/edge-agent/connections/ConnectionsManager.ts:69  Remove a Connection this but just means the connection will be removed from the current storage  Parameters‚Äã  Parameter\tType\tDescriptionconnection\tstring | Connection\t  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"stop()‚Äã","type":1,"pageTitle":"ConnectionsManager","url":"/docs/sdk-ts/sdk/overview/classes/ConnectionsManager#stop","content":" stop(): Promise&lt;void&gt;  Defined in: src/edge-agent/connections/ConnectionsManager.ts:35  close all active connections  Returns‚Äã  Promise&lt;void&gt; ","version":"Next","tagName":"h3"},{"title":"CreateOOBPresentationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest#extends","content":" Task&lt;string, CreateOOBPresentationRequestArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest#constructor","content":" new CreateOOBPresentationRequest(...args: [CreateOOBPresentationRequestArgs]): CreateOOBPresentationRequest  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[CreateOOBPresentationRequestArgs]\t  Returns‚Äã  CreateOOBPresentationRequest  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Accessors‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"attachments‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest#attachments","content":" Get Signature‚Äã  get attachments(): AttachmentDescriptor[]  Defined in: src/edge-agent/didcomm/CreateOOBPresentationRequest.ts:53  Gets the attachments for the out-of-band invitation.  Returns‚Äã  AttachmentDescriptor[]  Array containing the presentation request as an attachment descriptor    ","version":"Next","tagName":"h3"},{"title":"oobBody‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest#oobbody","content":" Get Signature‚Äã  get oobBody(): { accept: string[]; goal: string; goal_code: string; }  Defined in: src/edge-agent/didcomm/CreateOOBPresentationRequest.ts:40  Gets the body configuration for the out-of-band invitation.  Returns‚Äã  { accept: string[]; goal: string; goal_code: string; }  The OOB invitation body with goal code, goal description, and accepted protocols  Name\tType\tDefined inaccept\tstring[]\tsrc/edge-agent/didcomm/CreateOOBPresentationRequest.ts:44 goal\tstring\tsrc/edge-agent/didcomm/CreateOOBPresentationRequest.ts:43 goal_code\tstring\tsrc/edge-agent/didcomm/CreateOOBPresentationRequest.ts:42  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBPresentationRequest#run","content":" run(_ctx: AgentContext): Promise&lt;string&gt;  Defined in: src/edge-agent/didcomm/CreateOOBPresentationRequest.ts:74  Executes the task to create an out-of-band presentation request invitation.  This method validates the provided presentation request, generates a unique invitation ID, creates the OOB invitation structure, and returns it as a base64-encoded string.  Parameters‚Äã  Parameter\tType\tDescription_ctx\tAgentContext\tThe agent context (not used in current implementation)  Returns‚Äã  Promise&lt;string&gt;  A Promise that resolves to a base64-encoded OOB invitation string  Throws‚Äã  When the provided presentation request is invalid or not an instance of RequestPresentation  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"BaseRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"BaseRepository","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository#extended-by","content":" MapperRepositoryLinkRepository  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"BaseRepository","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository#type-parameters","content":" Type ParameterT extends Model  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"BaseRepository","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"BaseRepository","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository#constructor","content":" new BaseRepository&lt;T&gt;(store: Store, name: string): BaseRepository&lt;T&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:20  Parameters‚Äã  Parameter\tTypestore\tStore name\tstring  Returns‚Äã  BaseRepository&lt;T&gt;  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"BaseRepository","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"delete()‚Äã","type":1,"pageTitle":"BaseRepository","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"BaseRepository","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository#getmodels","content":" getModels(query?: Query&lt;T&gt;): Promise&lt;T[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;T&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;T[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"BaseRepository","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository#insert","content":" insert(model: T): Promise&lt;T&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:32  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tT\t  Returns‚Äã  Promise&lt;T&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"BaseRepository","url":"/docs/sdk-ts/sdk/overview/classes/BaseRepository#update","content":" update(model: T): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tT  Returns‚Äã  Promise&lt;void&gt; ","version":"Next","tagName":"h3"},{"title":"Castor","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/Castor","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#implements","content":" Castor  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#constructor","content":" new Castor(apollo: Apollo, extraResolvers: ExtraResolver[], prismResolverEndpoint: string): Castor  Defined in: src/castor/Castor.ts:52  Creates an instance of Castor as soon as a valid cryptographic interface is provided (Apollo).  Parameters‚Äã  Parameter\tType\tDefault value\tDescriptionapollo\tApollo\tundefined extraResolvers\tExtraResolver[]\t[] prismResolverEndpoint\tstring\t&quot;https://raw.githubusercontent.com/FabioPinheiro/prism-vdr/refs/heads/main/mainnet/diddoc/&quot;\t-  Returns‚Äã  Castor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#methods","content":" ","version":"Next","tagName":"h2"},{"title":"createPeerDID()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#createpeerdid","content":" createPeerDID(publicKeys: PublicKey[], services: Service[]): Promise&lt;DID&gt;  Defined in: src/castor/Castor.ts:241  Creates a DID for a peer (a device or server that acts as a DID subject) using given key agreement and authentication key pairs and a list of services.  Parameters‚Äã  Parameter\tType\tDescriptionpublicKeys\tPublicKey[] services\tService[]\t  Returns‚Äã  Promise&lt;DID&gt;  Example‚Äã  This function creates new peer DID, using a given key agreement, authentication key pairs, and a list of services. It may throw an error if the key pairs or services are invalid.  const peerDid = await castor.createPeerDID( [keyPairFromCurveEd25519, keyPairFromCurveX25519], [exampleService] );   Implementation of‚Äã  Castor.createPeerDID    ","version":"Next","tagName":"h3"},{"title":"createPrismDID()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#createprismdid","content":" createPrismDID(key: PublicKey | KeyPair, services?: Service[], authenticationKeys?: (PublicKey | KeyPair)[], issuanceKeys?: (PublicKey | KeyPair)[]): Promise&lt;DID&gt;  Defined in: src/castor/Castor.ts:165  Creates a DID for a prism (a device or server that acts as a DID owner and controller) using a given master public key and list of services.  Parameters‚Äã  Parameter\tType\tDefault value\tDescriptionkey\tPublicKey | KeyPair\tundefined services?\tService[]\tundefined authenticationKeys?\t(PublicKey | KeyPair)[]\t[] issuanceKeys?\t(PublicKey | KeyPair)[]\t[]\t  Returns‚Äã  Promise&lt;DID&gt;  Example‚Äã  This function creates a new prism DID, using a given master Public Key and a list of Services. The Public Key may be an individual Key or a KeyPair It may throw an error if the master Public Key or Services are invalid.  const exampleServiceEndpoint = new Domain.DIDDocument.Service(&quot;didcomm&quot;, [&quot;DIDCommMessaging&quot;], { uri: &quot;https://example.com/endpoint&quot;, accept: [&quot;didcomm/v2&quot;], routingKeys: [&quot;did:example:somemediator#somekey&quot;], }); const prismDid = await castor.createPrismDID( keyPairFromCurveSecp256K1.publicKey, [exampleServiceEndpoint] );   Implementation of‚Äã  Castor.createPrismDID    ","version":"Next","tagName":"h3"},{"title":"createPrismDIDAtalaObject()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#createprismdidatalaobject","content":" createPrismDIDAtalaObject(key: PrivateKey, did: DID): Promise&lt;Uint8Array&lt;ArrayBufferLike&gt;&gt;  Defined in: src/castor/Castor.ts:90  Creates a Prism DID Atala Object, a buffer contained the prism did create operation.  Parameters‚Äã  Parameter\tType\tDescriptionkey\tPrivateKey did\tDID\t  Returns‚Äã  Promise&lt;Uint8Array&lt;ArrayBufferLike&gt;&gt;    ","version":"Next","tagName":"h3"},{"title":"getEcnumbasis()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#getecnumbasis","content":" getEcnumbasis(did: DID, publicKey: PublicKey): string  Defined in: src/castor/Castor.ts:445  Returns ecnumbasis from a valid DID and its related publicKey  Parameters‚Äã  Parameter\tType\tDescriptiondid\tDID publicKey\tPublicKey\t  Returns‚Äã  string  Implementation of‚Äã  Castor.getEcnumbasis    ","version":"Next","tagName":"h3"},{"title":"parseDID()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#parsedid","content":" parseDID(did: string): DID  Defined in: src/castor/Castor.ts:80  Parses a string representation of a Decentralized Identifier (DID) into a DID object.  Parameters‚Äã  Parameter\tType\tDescriptiondid\tstring\t  Returns‚Äã  DID  Example‚Äã  This function takes a string representation of a DID and returns an instance of Domain.DID. It may throw an error if the string is not a valid DID.  const parsedPrismDid = castor.parseDID( &quot;did:prism:b6c0c33d701ac1b9a262a14454d1bbde3d127d697a76950963c5fd930605:Cj8KPRI7CgdtYXN0ZXIwEAFKLgoJc2VmsxEiECSTjyV7sUfCr_ArpN9rvCwR9fRMAhcsr_S7ZRiJk4p5k&quot; );   Implementation of‚Äã  Castor.parseDID    ","version":"Next","tagName":"h3"},{"title":"resolveDID()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#resolvedid","content":" resolveDID(didstr: string | DID): Promise&lt;DIDDocument&gt;  Defined in: src/castor/Castor.ts:266  Asynchronously resolves a DID to its corresponding DID Document. This function may throw an error if the DID is invalid or the document cannot be retrieved.Note: only prism and peer DID methods are currently supported!  Parameters‚Äã  Parameter\tType\tDescriptiondidstr\tstring | DID\t  Returns‚Äã  Promise&lt;DIDDocument&gt;  Example‚Äã  This function asynchronously resolves a DID to its corresponding DID Document. It may throw an error if the DID is invalid or the document is unretrievable.  const didDocument = await castor.resolveDID(&quot;did:prism:123456&quot;)   Implementation of‚Äã  Castor.resolveDID    ","version":"Next","tagName":"h3"},{"title":"verifySignature()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/classes/Castor#verifysignature","content":" verifySignature(did: DID, challenge: Uint8Array, signature: Uint8Array): Promise&lt;boolean&gt;  Defined in: src/castor/Castor.ts:336  Verifies the authenticity of a signature using the corresponding DID Document, challenge, and signature data. This function returns a boolean value indicating whether the signature is valid or not. This function may throw an error if the DID Document or signature data are invalid.  Parameters‚Äã  Parameter\tType\tDescriptiondid\tDID challenge\tUint8Array signature\tUint8Array\t  Returns‚Äã  Promise&lt;boolean&gt;  Example‚Äã  This function verifies the authenticity of a signature using given DID, challenge, and signature data. It returns a boolean value indicating whether the signature is valid or not. It may throw an error if the DID or signature data are invalid.  const message = &quot;data to sign&quot;; const messageBytes = new TextEncoder().encode(message); const {mnemonics, seed} = apollo.createRandomSeed(); const privateKey = apollo.createPublicKey({ type: KeyTypes.EC, curve: Curve.SECP256K1, seed: Buffer.from(seed.value).toString(&quot;hex&quot;), derivationPath: &quot;m/0'/0'/0'&quot; }); if (privateKey.isSignable()) { const signature = privateKey.sign(message); const did = castor.parseDID(&quot;did:prism:123456&quot;); const challenge = messageBytes const isValid = castor.verifySignature( castor.parseDID(&quot;did:prism:123456&quot;), challenge, // Uint8Array signature // Uint8Array ); }   Implementation of‚Äã  Castor.verifySignature ","version":"Next","tagName":"h3"},{"title":"CreateOOBOffer","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CreateOOBOffer","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer#extends","content":" Task&lt;string, CreateOOBOfferArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CreateOOBOffer","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CreateOOBOffer","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer#constructor","content":" new CreateOOBOffer(...args: [CreateOOBOfferArgs]): CreateOOBOffer  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[CreateOOBOfferArgs]\t  Returns‚Äã  CreateOOBOffer  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Accessors‚Äã","type":1,"pageTitle":"CreateOOBOffer","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"attachments‚Äã","type":1,"pageTitle":"CreateOOBOffer","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer#attachments","content":" Get Signature‚Äã  get attachments(): AttachmentDescriptor[]  Defined in: src/edge-agent/didcomm/CreateOOBOffer.ts:52  Gets the attachments for the out-of-band invitation.  Returns‚Äã  AttachmentDescriptor[]  Array containing the credential offer as an attachment descriptor    ","version":"Next","tagName":"h3"},{"title":"oobBody‚Äã","type":1,"pageTitle":"CreateOOBOffer","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer#oobbody","content":" Get Signature‚Äã  get oobBody(): { accept: string[]; goal: string; goal_code: string; }  Defined in: src/edge-agent/didcomm/CreateOOBOffer.ts:39  Gets the body configuration for the out-of-band invitation.  Returns‚Äã  { accept: string[]; goal: string; goal_code: string; }  The OOB invitation body with goal code, goal description, and accepted protocols  Name\tType\tDefined inaccept\tstring[]\tsrc/edge-agent/didcomm/CreateOOBOffer.ts:43 goal\tstring\tsrc/edge-agent/didcomm/CreateOOBOffer.ts:42 goal_code\tstring\tsrc/edge-agent/didcomm/CreateOOBOffer.ts:41  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CreateOOBOffer","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"CreateOOBOffer","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"CreateOOBOffer","url":"/docs/sdk-ts/sdk/overview/classes/CreateOOBOffer#run","content":" run(_ctx: AgentContext): Promise&lt;string&gt;  Defined in: src/edge-agent/didcomm/CreateOOBOffer.ts:73  Executes the task to create an out-of-band credential offer invitation.  This method validates the provided offer, generates a unique invitation ID, creates the OOB invitation structure, and returns it as a base64-encoded string.  Parameters‚Äã  Parameter\tType\tDescription_ctx\tAgentContext\tThe agent context (not used in current implementation)  Returns‚Äã  Promise&lt;string&gt;  A Promise that resolves to a base64-encoded OOB invitation string  Throws‚Äã  When the provided offer is invalid or not an instance of OfferCredential  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"CreatePresentation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentation","content":"","keywords":"","version":"Next"},{"title":"Deprecated‚Äã","type":1,"pageTitle":"CreatePresentation","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentation#deprecated","content":" Use CreatePresentation instead from @hyperledger/identus-sdk/plugins/oea  ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"CreatePresentation","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentation#extends","content":" Task&lt;Presentation, CreatePresentationArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CreatePresentation","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CreatePresentation","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentation#constructor","content":" new CreatePresentation(...args: [CreatePresentationArgs]): CreatePresentation  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[CreatePresentationArgs]\t  Returns‚Äã  CreatePresentation  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CreatePresentation","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"CreatePresentation","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentation#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"CreatePresentation","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentation#run","content":" run(ctx: Context): Promise&lt;Presentation&gt;  Defined in: src/plugins/internal/oea/tasks/CreatePresentation.ts:21  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;Presentation&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"CreatePresentationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentationRequest","content":"","keywords":"","version":"Next"},{"title":"Deprecated‚Äã","type":1,"pageTitle":"CreatePresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentationRequest#deprecated","content":" Use CreatePresentationRequest instead from @hyperledger/identus-sdk/plugins/oea  ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"CreatePresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentationRequest#extends","content":" Task&lt;RequestPresentation, CreatePresentationRequestArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CreatePresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentationRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CreatePresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentationRequest#constructor","content":" new CreatePresentationRequest(...args: [CreatePresentationRequestArgs]): CreatePresentationRequest  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[CreatePresentationRequestArgs]\t  Returns‚Äã  CreatePresentationRequest  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CreatePresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentationRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"CreatePresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentationRequest#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"CreatePresentationRequest","url":"/docs/sdk-ts/sdk/overview/classes/CreatePresentationRequest#run","content":" run(ctx: TaskContext): Promise&lt;RequestPresentation&gt;  Defined in: src/plugins/internal/oea/tasks/CreatePresentationRequest.ts:19  Parameters‚Äã  Parameter\tTypectx\tTaskContext  Returns‚Äã  Promise&lt;RequestPresentation&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"CreatePrismDID","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/CreatePrismDID","content":"","keywords":"","version":"Next"},{"title":"Param‚Äã","type":1,"pageTitle":"CreatePrismDID","url":"/docs/sdk-ts/sdk/overview/classes/CreatePrismDID#param","content":" specify the Curve used for the included AuthorizationKey  ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"CreatePrismDID","url":"/docs/sdk-ts/sdk/overview/classes/CreatePrismDID#extends","content":" Task&lt;DID, CreatePrismDIDArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CreatePrismDID","url":"/docs/sdk-ts/sdk/overview/classes/CreatePrismDID#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CreatePrismDID","url":"/docs/sdk-ts/sdk/overview/classes/CreatePrismDID#constructor","content":" new CreatePrismDID(...args: [CreatePrismDIDArgs]): CreatePrismDID  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[CreatePrismDIDArgs]\t  Returns‚Äã  CreatePrismDID  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CreatePrismDID","url":"/docs/sdk-ts/sdk/overview/classes/CreatePrismDID#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"CreatePrismDID","url":"/docs/sdk-ts/sdk/overview/classes/CreatePrismDID#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"CreatePrismDID","url":"/docs/sdk-ts/sdk/overview/classes/CreatePrismDID#run","content":" run(ctx: AgentContext): Promise&lt;DID&gt;  Defined in: src/edge-agent/didFunctions/CreatePrismDID.ts:28  Parameters‚Äã  Parameter\tTypectx\tAgentContext  Returns‚Äã  Promise&lt;DID&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"DIDCommWrapper","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/DIDCommWrapper","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"DIDCommWrapper","url":"/docs/sdk-ts/sdk/overview/classes/DIDCommWrapper#implements","content":" DIDCommProtocol  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIDCommWrapper","url":"/docs/sdk-ts/sdk/overview/classes/DIDCommWrapper#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIDCommWrapper","url":"/docs/sdk-ts/sdk/overview/classes/DIDCommWrapper#constructor","content":" new DIDCommWrapper(apollo: Apollo, castor: Castor, pluto: Pluto): DIDCommWrapper  Defined in: src/mercury/didcomm/Wrapper.ts:26  Parameters‚Äã  Parameter\tTypeapollo\tApollo castor\tCastor pluto\tPluto  Returns‚Äã  DIDCommWrapper  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DIDCommWrapper","url":"/docs/sdk-ts/sdk/overview/classes/DIDCommWrapper#properties","content":" Property\tModifier\tType\tDefined in apollo\treadonly\tApollo\tsrc/mercury/didcomm/Wrapper.ts:27 castor\treadonly\tCastor\tsrc/mercury/didcomm/Wrapper.ts:28 pluto\treadonly\tPluto\tsrc/mercury/didcomm/Wrapper.ts:29 didcomm\tstatic\t__module\tsrc/mercury/didcomm/Wrapper.ts:22  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIDCommWrapper","url":"/docs/sdk-ts/sdk/overview/classes/DIDCommWrapper#methods","content":" ","version":"Next","tagName":"h2"},{"title":"packEncrypted()‚Äã","type":1,"pageTitle":"DIDCommWrapper","url":"/docs/sdk-ts/sdk/overview/classes/DIDCommWrapper#packencrypted","content":" packEncrypted(message: Message, toDid: DID, fromDid?: DID): Promise&lt;string&gt;  Defined in: src/mercury/didcomm/Wrapper.ts:60  Parameters‚Äã  Parameter\tTypemessage\tMessage toDid\tDID fromDid?\tDID  Returns‚Äã  Promise&lt;string&gt;  Implementation of‚Äã  DIDCommProtocol.packEncrypted    ","version":"Next","tagName":"h3"},{"title":"unpack()‚Äã","type":1,"pageTitle":"DIDCommWrapper","url":"/docs/sdk-ts/sdk/overview/classes/DIDCommWrapper#unpack","content":" unpack(message: string): Promise&lt;Message&gt;  Defined in: src/mercury/didcomm/Wrapper.ts:102  Parameters‚Äã  Parameter\tTypemessage\tstring  Returns‚Äã  Promise&lt;Message&gt;  Implementation of‚Äã  DIDCommProtocol.unpack    ","version":"Next","tagName":"h3"},{"title":"getDIDComm()‚Äã","type":1,"pageTitle":"DIDCommWrapper","url":"/docs/sdk-ts/sdk/overview/classes/DIDCommWrapper#getdidcomm","content":" static getDIDComm(): Promise&lt;__module&gt;  Defined in: src/mercury/didcomm/Wrapper.ts:35  Returns‚Äã  Promise&lt;__module&gt; ","version":"Next","tagName":"h3"},{"title":"DIDKeyLinkRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/DIDKeyLinkRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DIDKeyLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDKeyLinkRepository#extends","content":" LinkRepository&lt;DIDKeyLink&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIDKeyLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDKeyLinkRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIDKeyLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDKeyLinkRepository#constructor","content":" new DIDKeyLinkRepository(store: Store): DIDKeyLinkRepository  Defined in: src/pluto/repositories/relationships/DIDKeyLinkRepository.ts:6  Parameters‚Äã  Parameter\tTypestore\tStore  Returns‚Äã  DIDKeyLinkRepository  Overrides‚Äã  LinkRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIDKeyLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDKeyLinkRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"delete()‚Äã","type":1,"pageTitle":"DIDKeyLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDKeyLinkRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  LinkRepository.delete    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"DIDKeyLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDKeyLinkRepository#getmodels","content":" getModels(query?: Query&lt;DIDKeyLink&gt;): Promise&lt;DIDKeyLink[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;DIDKeyLink&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;DIDKeyLink[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Inherited from‚Äã  LinkRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"DIDKeyLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDKeyLinkRepository#insert","content":" insert(model: OptionalId&lt;DIDKeyLink&gt;): Promise&lt;DIDKeyLink&gt;  Defined in: src/pluto/repositories/builders/LinkRepository.ts:12  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tOptionalId&lt;DIDKeyLink&gt;\t  Returns‚Äã  Promise&lt;DIDKeyLink&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  LinkRepository.insert    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"DIDKeyLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDKeyLinkRepository#update","content":" update(model: DIDKeyLink): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tDIDKeyLink  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  LinkRepository.update ","version":"Next","tagName":"h3"},{"title":"CredentialMetadataRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#extends","content":" MapperRepository&lt;CredentialMetadata, CredentialMetadata&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#constructor","content":" new CredentialMetadataRepository(store: Store): CredentialMetadataRepository  Defined in: src/pluto/repositories/CredentialMetadataRepository.ts:7  Parameters‚Äã  Parameter\tTypestore\tStore  Returns‚Äã  CredentialMetadataRepository  Overrides‚Äã  MapperRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"byUUID()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#byuuid","content":" byUUID(uuid: string): Promise&lt;CredentialMetadata | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:75  Utility fn for common use of find with uuid  Parameters‚Äã  Parameter\tType\tDescriptionuuid\tstring\t  Returns‚Äã  Promise&lt;CredentialMetadata | null&gt;  first found Domain instance or undefined  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.byUUID    ","version":"Next","tagName":"h3"},{"title":"delete()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.delete    ","version":"Next","tagName":"h3"},{"title":"find()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#find","content":" find(selector?: Partial&lt;CredentialMetadata&gt;): Promise&lt;CredentialMetadata[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:48  Search for instances based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;CredentialMetadata&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;CredentialMetadata[]&gt;  all found Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.find    ","version":"Next","tagName":"h3"},{"title":"findOne()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#findone","content":" findOne(selector?: Partial&lt;CredentialMetadata&gt;): Promise&lt;CredentialMetadata | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:61  Search for single instance based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;CredentialMetadata&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;CredentialMetadata | null&gt;  first found Domain instance or null  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.findOne    ","version":"Next","tagName":"h3"},{"title":"get()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#get","content":" get(query?: Query&lt;CredentialMetadata&gt;): Promise&lt;CredentialMetadata[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:36  Search the Store, mapping any found to Domain  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;CredentialMetadata&gt;\teither an object or array of objects with matchable properties  Returns‚Äã  Promise&lt;CredentialMetadata[]&gt;  Array of matched Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.get    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#getmodels","content":" getModels(query?: Query&lt;CredentialMetadata&gt;): Promise&lt;CredentialMetadata[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;CredentialMetadata&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;CredentialMetadata[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Inherited from‚Äã  MapperRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#insert","content":" insert(model: CredentialMetadata): Promise&lt;CredentialMetadata&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:32  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tCredentialMetadata\t  Returns‚Äã  Promise&lt;CredentialMetadata&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.insert    ","version":"Next","tagName":"h3"},{"title":"parseCredentialType()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#parsecredentialtype","content":" parseCredentialType(model: CredentialMetadata): CredentialType  Defined in: src/pluto/repositories/CredentialMetadataRepository.ts:28  Parameters‚Äã  Parameter\tTypemodel\tCredentialMetadata  Returns‚Äã  CredentialType    ","version":"Next","tagName":"h3"},{"title":"save()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#save","content":" save(domain: CredentialMetadata): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:89  Persist the Domain instance in the Store.  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tCredentialMetadata\tWill be mapped to relevant Model for persistance  Returns‚Äã  Promise&lt;void&gt;  See‚Äã  BaseRepository.insert  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.save    ","version":"Next","tagName":"h3"},{"title":"toDomain()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#todomain","content":" toDomain(model: CredentialMetadata): CredentialMetadata  Defined in: src/pluto/repositories/CredentialMetadataRepository.ts:11  Map from a Model to the Domain class  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tCredentialMetadata\tthe stored Model with a uuid  Returns‚Äã  CredentialMetadata  Domain with uuid set  Overrides‚Äã  MapperRepository.toDomain    ","version":"Next","tagName":"h3"},{"title":"toModel()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#tomodel","content":" toModel(domain: CredentialMetadata): CredentialMetadata  Defined in: src/pluto/repositories/CredentialMetadataRepository.ts:19  Map from a Domain class to a Model  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tCredentialMetadata\tmay be missing uuid  Returns‚Äã  CredentialMetadata  Model potentially without uuid  Overrides‚Äã  MapperRepository.toModel    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"CredentialMetadataRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialMetadataRepository#update","content":" update(model: CredentialMetadata): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tCredentialMetadata  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.update ","version":"Next","tagName":"h3"},{"title":"CredentialRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#extends","content":" MapperRepository&lt;Credential, Credential&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#constructor","content":" new CredentialRepository(store: Store): CredentialRepository  Defined in: src/pluto/repositories/CredentialRepository.ts:10  Parameters‚Äã  Parameter\tTypestore\tStore  Returns‚Äã  CredentialRepository  Overrides‚Äã  MapperRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"byUUID()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#byuuid","content":" byUUID(uuid: string): Promise&lt;Credential | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:75  Utility fn for common use of find with uuid  Parameters‚Äã  Parameter\tType\tDescriptionuuid\tstring\t  Returns‚Äã  Promise&lt;Credential | null&gt;  first found Domain instance or undefined  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.byUUID    ","version":"Next","tagName":"h3"},{"title":"delete()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.delete    ","version":"Next","tagName":"h3"},{"title":"find()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#find","content":" find(selector?: Partial&lt;Credential&gt;): Promise&lt;Credential[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:48  Search for instances based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;Credential&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;Credential[]&gt;  all found Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.find    ","version":"Next","tagName":"h3"},{"title":"findOne()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#findone","content":" findOne(selector?: Partial&lt;Credential&gt;): Promise&lt;Credential | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:61  Search for single instance based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;Credential&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;Credential | null&gt;  first found Domain instance or null  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.findOne    ","version":"Next","tagName":"h3"},{"title":"get()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#get","content":" get(query?: Query&lt;Credential&gt;): Promise&lt;Credential[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:36  Search the Store, mapping any found to Domain  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;Credential&gt;\teither an object or array of objects with matchable properties  Returns‚Äã  Promise&lt;Credential[]&gt;  Array of matched Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.get    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#getmodels","content":" getModels(query?: Query&lt;Credential&gt;): Promise&lt;Credential[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;Credential&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;Credential[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Inherited from‚Äã  MapperRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#insert","content":" insert(model: Credential): Promise&lt;Credential&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:32  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tCredential\t  Returns‚Äã  Promise&lt;Credential&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.insert    ","version":"Next","tagName":"h3"},{"title":"save()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#save","content":" save(domain: Credential): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:89  Persist the Domain instance in the Store.  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tCredential\tWill be mapped to relevant Model for persistance  Returns‚Äã  Promise&lt;void&gt;  See‚Äã  BaseRepository.insert  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.save    ","version":"Next","tagName":"h3"},{"title":"toDomain()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#todomain","content":" toDomain(model: Credential): Credential  Defined in: src/pluto/repositories/CredentialRepository.ts:14  Map from a Model to the Domain class  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tCredential\tthe stored Model with a uuid  Returns‚Äã  Credential  Domain with uuid set  Overrides‚Äã  MapperRepository.toDomain    ","version":"Next","tagName":"h3"},{"title":"toModel()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#tomodel","content":" toModel(credential: Credential): Credential  Defined in: src/pluto/repositories/CredentialRepository.ts:46  Map from a Domain class to a Model  Parameters‚Äã  Parameter\tTypecredential\tCredential  Returns‚Äã  Credential  Model potentially without uuid  Overrides‚Äã  MapperRepository.toModel    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"CredentialRepository","url":"/docs/sdk-ts/sdk/overview/classes/CredentialRepository#update","content":" update(model: Credential): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tCredential  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.update ","version":"Next","tagName":"h3"},{"title":"DIDLinkRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/DIDLinkRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DIDLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDLinkRepository#extends","content":" LinkRepository&lt;DIDLink&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIDLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDLinkRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIDLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDLinkRepository#constructor","content":" new DIDLinkRepository(store: Store): DIDLinkRepository  Defined in: src/pluto/repositories/relationships/DIDLinkRepository.ts:6  Parameters‚Äã  Parameter\tTypestore\tStore  Returns‚Äã  DIDLinkRepository  Overrides‚Äã  LinkRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIDLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDLinkRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"delete()‚Äã","type":1,"pageTitle":"DIDLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDLinkRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  LinkRepository.delete    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"DIDLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDLinkRepository#getmodels","content":" getModels(query?: Query&lt;DIDLink&gt;): Promise&lt;DIDLink[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;DIDLink&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;DIDLink[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Inherited from‚Äã  LinkRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"DIDLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDLinkRepository#insert","content":" insert(model: OptionalId&lt;DIDLink&gt;): Promise&lt;DIDLink&gt;  Defined in: src/pluto/repositories/builders/LinkRepository.ts:12  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tOptionalId&lt;DIDLink&gt;\t  Returns‚Äã  Promise&lt;DIDLink&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  LinkRepository.insert    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"DIDLinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDLinkRepository#update","content":" update(model: DIDLink): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tDIDLink  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  LinkRepository.update ","version":"Next","tagName":"h3"},{"title":"EventsManager","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/EventsManager","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"EventsManager","url":"/docs/sdk-ts/sdk/overview/classes/EventsManager#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"EventsManager","url":"/docs/sdk-ts/sdk/overview/classes/EventsManager#constructor","content":" new EventsManager(): EventsManager  Returns‚Äã  EventsManager  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"EventsManager","url":"/docs/sdk-ts/sdk/overview/classes/EventsManager#methods","content":" ","version":"Next","tagName":"h2"},{"title":"addListener()‚Äã","type":1,"pageTitle":"EventsManager","url":"/docs/sdk-ts/sdk/overview/classes/EventsManager#addlistener","content":" addListener&lt;T&gt;(eventName: T, callback: EventCallback&lt;T&gt;): number  Defined in: src/edge-agent/Agent.MessageEvents.ts:23  Just adds a new event listener by passing the event name and the callback function we want to be notified at  Type Parameters‚Äã  Type ParameterT extends ListenerKey  Parameters‚Äã  Parameter\tType\tDescriptioneventName\tT callback\tEventCallback&lt;T&gt;\t  Returns‚Äã  number    ","version":"Next","tagName":"h3"},{"title":"emit()‚Äã","type":1,"pageTitle":"EventsManager","url":"/docs/sdk-ts/sdk/overview/classes/EventsManager#emit","content":" emit(eventName: ListenerKey, data: any): void  Defined in: src/edge-agent/Agent.MessageEvents.ts:56  Emit some data to all the listeners of a specific event  Parameters‚Äã  Parameter\tType\tDescriptioneventName\tListenerKey data\tany\t  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"removeListener()‚Äã","type":1,"pageTitle":"EventsManager","url":"/docs/sdk-ts/sdk/overview/classes/EventsManager#removelistener","content":" removeListener&lt;T&gt;(eventName: T, callback: EventCallback&lt;T&gt;): void  Defined in: src/edge-agent/Agent.MessageEvents.ts:41  Remove an existing event listener, used when the Agent is stopping to make sure no memory leaks are produced  Type Parameters‚Äã  Type ParameterT extends ListenerKey  Parameters‚Äã  Parameter\tType\tDescriptioneventName\tT callback\tEventCallback&lt;T&gt;\t  Returns‚Äã  void ","version":"Next","tagName":"h3"},{"title":"JobManager","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/JobManager","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"JobManager","url":"/docs/sdk-ts/sdk/overview/classes/JobManager#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"JobManager","url":"/docs/sdk-ts/sdk/overview/classes/JobManager#constructor","content":" new JobManager(): JobManager  Returns‚Äã  JobManager  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"JobManager","url":"/docs/sdk-ts/sdk/overview/classes/JobManager#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tDefined in cancellables\tpublic\tCancellableTask&lt;any&gt;[]\t[]\tAn array with cancellable tasks, mainly used to store one or multiple didcomm connections in storage implementation at the same time. All of them can be cancelled despite they run asyncronously when the Edge agent stops\tsrc/edge-agent/connections/JobManager.ts:13 fetchMessages?\tpublic\tCancellableTask&lt;void&gt;\tundefined\tCancellable task used to listen for new messages, stopping the Agent should also stop this from running and destroy the instance of the task until agent is started again\tsrc/edge-agent/connections/JobManager.ts:21  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"JobManager","url":"/docs/sdk-ts/sdk/overview/classes/JobManager#methods","content":" ","version":"Next","tagName":"h2"},{"title":"stop()‚Äã","type":1,"pageTitle":"JobManager","url":"/docs/sdk-ts/sdk/overview/classes/JobManager#stop","content":" stop(): void  Defined in: src/edge-agent/connections/JobManager.ts:27  Stops all jobs  Returns‚Äã  void ","version":"Next","tagName":"h3"},{"title":"ForwardMessage","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/ForwardMessage","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ForwardMessage","url":"/docs/sdk-ts/sdk/overview/classes/ForwardMessage#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ForwardMessage","url":"/docs/sdk-ts/sdk/overview/classes/ForwardMessage#constructor","content":" new ForwardMessage(body: ForwardMessageBody, from: DID, to: DID, encryptedMessage: string, id: string): ForwardMessage  Defined in: src/mercury/forward/ForwardMessage.ts:11  Parameters‚Äã  Parameter\tTypebody\tForwardMessageBody from\tDID to\tDID encryptedMessage\tstring id\tstring  Returns‚Äã  ForwardMessage  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ForwardMessage","url":"/docs/sdk-ts/sdk/overview/classes/ForwardMessage#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body\tpublic\tForwardMessageBody\tundefined\tsrc/mercury/forward/ForwardMessage.ts:12 encryptedMessage\tpublic\tstring\tundefined\tsrc/mercury/forward/ForwardMessage.ts:15 from\tpublic\tDID\tundefined\tsrc/mercury/forward/ForwardMessage.ts:13 id\tpublic\tstring\tundefined\tsrc/mercury/forward/ForwardMessage.ts:16 to\tpublic\tDID\tundefined\tsrc/mercury/forward/ForwardMessage.ts:14 type\tstatic\tstring\t&quot;https://didcomm.org/routing/2.0/forward&quot;\tsrc/mercury/forward/ForwardMessage.ts:9  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ForwardMessage","url":"/docs/sdk-ts/sdk/overview/classes/ForwardMessage#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"ForwardMessage","url":"/docs/sdk-ts/sdk/overview/classes/ForwardMessage#makemessage","content":" makeMessage(): Message  Defined in: src/mercury/forward/ForwardMessage.ts:19  Returns‚Äã  Message ","version":"Next","tagName":"h3"},{"title":"DIDRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#extends","content":" MapperRepository&lt;DID, DID&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#constructor","content":" new DIDRepository(store: Store): DIDRepository  Defined in: src/pluto/repositories/DIDRepository.ts:7  Parameters‚Äã  Parameter\tTypestore\tStore  Returns‚Äã  DIDRepository  Overrides‚Äã  MapperRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"byUUID()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#byuuid","content":" byUUID(uuid: string): Promise&lt;DID | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:75  Utility fn for common use of find with uuid  Parameters‚Äã  Parameter\tType\tDescriptionuuid\tstring\t  Returns‚Äã  Promise&lt;DID | null&gt;  first found Domain instance or undefined  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.byUUID    ","version":"Next","tagName":"h3"},{"title":"delete()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.delete    ","version":"Next","tagName":"h3"},{"title":"find()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#find","content":" find(selector?: Partial&lt;DID&gt;): Promise&lt;DID[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:48  Search for instances based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;DID&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;DID[]&gt;  all found Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.find    ","version":"Next","tagName":"h3"},{"title":"findOne()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#findone","content":" findOne(selector?: Partial&lt;DID&gt;): Promise&lt;DID | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:61  Search for single instance based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;DID&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;DID | null&gt;  first found Domain instance or null  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.findOne    ","version":"Next","tagName":"h3"},{"title":"get()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#get","content":" get(query?: Query&lt;DID&gt;): Promise&lt;DID[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:36  Search the Store, mapping any found to Domain  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;DID&gt;\teither an object or array of objects with matchable properties  Returns‚Äã  Promise&lt;DID[]&gt;  Array of matched Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.get    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#getmodels","content":" getModels(query?: Query&lt;DID&gt;): Promise&lt;DID[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;DID&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;DID[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Inherited from‚Äã  MapperRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#insert","content":" insert(model: DID): Promise&lt;DID&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:32  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tDID\t  Returns‚Äã  Promise&lt;DID&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.insert    ","version":"Next","tagName":"h3"},{"title":"save()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#save","content":" save(domain: DID, alias?: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/DIDRepository.ts:11  Persist the Domain instance in the Store.  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tDID\tWill be mapped to relevant Model for persistance alias?\tstring\t-  Returns‚Äã  Promise&lt;void&gt;  See‚Äã  BaseRepository.insert  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Overrides‚Äã  MapperRepository.save    ","version":"Next","tagName":"h3"},{"title":"toDomain()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#todomain","content":" toDomain(model: DID): DID  Defined in: src/pluto/repositories/DIDRepository.ts:20  Map from a Model to the Domain class  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tDID\tthe stored Model with a uuid  Returns‚Äã  DID  Domain with uuid set  Overrides‚Äã  MapperRepository.toDomain    ","version":"Next","tagName":"h3"},{"title":"toModel()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#tomodel","content":" toModel(domain: DID, alias?: string): DID  Defined in: src/pluto/repositories/DIDRepository.ts:25  Map from a Domain class to a Model  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tDID\tmay be missing uuid alias?\tstring\t-  Returns‚Äã  DID  Model potentially without uuid  Overrides‚Äã  MapperRepository.toModel    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"DIDRepository","url":"/docs/sdk-ts/sdk/overview/classes/DIDRepository#update","content":" update(model: DID): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tDID  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.update ","version":"Next","tagName":"h3"},{"title":"JWT","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/JWT","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"JWT","url":"/docs/sdk-ts/sdk/overview/classes/JWT#extends","content":" Runner  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"JWT","url":"/docs/sdk-ts/sdk/overview/classes/JWT#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"JWT","url":"/docs/sdk-ts/sdk/overview/classes/JWT#constructor","content":" new JWT(): JWT  Returns‚Äã  JWT  Inherited from‚Äã  Runner.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"JWT","url":"/docs/sdk-ts/sdk/overview/classes/JWT#methods","content":" ","version":"Next","tagName":"h2"},{"title":"clone()‚Äã","type":1,"pageTitle":"JWT","url":"/docs/sdk-ts/sdk/overview/classes/JWT#clone","content":" clone(): JWT  Defined in: src/pollux/utils/jwt/JWT.ts:11  Returns‚Äã  JWT  Overrides‚Äã  Runner.clone    ","version":"Next","tagName":"h3"},{"title":"decode()‚Äã","type":1,"pageTitle":"JWT","url":"/docs/sdk-ts/sdk/overview/classes/JWT#decode","content":" decode(jws: string): Promise&lt;DecodedObj&gt;  Defined in: src/pollux/utils/jwt/JWT.ts:15  Parameters‚Äã  Parameter\tTypejws\tstring  Returns‚Äã  Promise&lt;DecodedObj&gt;    ","version":"Next","tagName":"h3"},{"title":"signWithDID()‚Äã","type":1,"pageTitle":"JWT","url":"/docs/sdk-ts/sdk/overview/classes/JWT#signwithdid","content":" signWithDID(did: DID, payload: Partial&lt;Payload&gt;, header?: Partial&lt;Header&gt;, privateKey?: PrivateKey): Promise&lt;string&gt;  Defined in: src/pollux/utils/jwt/JWT.ts:28  Creates a signed JWT from a DID and Key  Parameters‚Äã  Parameter\tType\tDescriptiondid\tDID payload\tPartial&lt;Payload&gt; header?\tPartial&lt;Header&gt; privateKey?\tPrivateKey\t  Returns‚Äã  Promise&lt;string&gt;    ","version":"Next","tagName":"h3"},{"title":"verify()‚Äã","type":1,"pageTitle":"JWT","url":"/docs/sdk-ts/sdk/overview/classes/JWT#verify","content":" verify(options: { holderDID?: DID; issuerDID: DID; jws: string; }): Promise&lt;boolean&gt;  Defined in: src/pollux/utils/jwt/JWT.ts:37  Parameters‚Äã  Parameter\tTypeoptions\t{ holderDID?: DID; issuerDID: DID; jws: string; } options.holderDID?\tDID options.issuerDID\tDID options.jws\tstring  Returns‚Äã  Promise&lt;boolean&gt;    ","version":"Next","tagName":"h3"},{"title":"withContext()‚Äã","type":1,"pageTitle":"JWT","url":"/docs/sdk-ts/sdk/overview/classes/JWT#withcontext","content":" withContext(ctx: Context): Runner  Defined in: src/utils/tasks.ts:103  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Runner  Inherited from‚Äã  Runner.withContext ","version":"Next","tagName":"h3"},{"title":"KeyRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#extends","content":" MapperRepository&lt;Key, PrivateKey&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#constructor","content":" new KeyRepository(store: Store, keyRestoration: KeyRestoration): KeyRepository  Defined in: src/pluto/repositories/KeyRepository.ts:8  Parameters‚Äã  Parameter\tTypestore\tStore keyRestoration\tKeyRestoration  Returns‚Äã  KeyRepository  Overrides‚Äã  MapperRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"byUUID()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#byuuid","content":" byUUID(uuid: string): Promise&lt;PrivateKey | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:75  Utility fn for common use of find with uuid  Parameters‚Äã  Parameter\tType\tDescriptionuuid\tstring\t  Returns‚Äã  Promise&lt;PrivateKey | null&gt;  first found Domain instance or undefined  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.byUUID    ","version":"Next","tagName":"h3"},{"title":"delete()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.delete    ","version":"Next","tagName":"h3"},{"title":"find()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#find","content":" find(selector?: Partial&lt;Key&gt;): Promise&lt;PrivateKey[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:48  Search for instances based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;Key&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;PrivateKey[]&gt;  all found Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.find    ","version":"Next","tagName":"h3"},{"title":"findOne()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#findone","content":" findOne(selector?: Partial&lt;Key&gt;): Promise&lt;PrivateKey | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:61  Search for single instance based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;Key&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;PrivateKey | null&gt;  first found Domain instance or null  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.findOne    ","version":"Next","tagName":"h3"},{"title":"get()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#get","content":" get(query?: Query&lt;Key&gt;): Promise&lt;PrivateKey[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:36  Search the Store, mapping any found to Domain  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;Key&gt;\teither an object or array of objects with matchable properties  Returns‚Äã  Promise&lt;PrivateKey[]&gt;  Array of matched Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.get    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#getmodels","content":" getModels(query?: Query&lt;Key&gt;): Promise&lt;Key[]&gt;  Defined in: src/pluto/repositories/KeyRepository.ts:15  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;Key&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;Key[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Overrides‚Äã  MapperRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#insert","content":" insert(model: Key): Promise&lt;Key&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:32  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tKey\t  Returns‚Äã  Promise&lt;Key&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.insert    ","version":"Next","tagName":"h3"},{"title":"save()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#save","content":" save(domain: PrivateKey): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:89  Persist the Domain instance in the Store.  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tPrivateKey\tWill be mapped to relevant Model for persistance  Returns‚Äã  Promise&lt;void&gt;  See‚Äã  BaseRepository.insert  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.save    ","version":"Next","tagName":"h3"},{"title":"toDomain()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#todomain","content":" toDomain(model: Key): PrivateKey  Defined in: src/pluto/repositories/KeyRepository.ts:22  Map from a Model to the Domain class  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tKey\tthe stored Model with a uuid  Returns‚Äã  PrivateKey  Domain with uuid set  Overrides‚Äã  MapperRepository.toDomain    ","version":"Next","tagName":"h3"},{"title":"toModel()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#tomodel","content":" toModel(domain: PrivateKey): Key  Defined in: src/pluto/repositories/KeyRepository.ts:35  Map from a Domain class to a Model  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tPrivateKey\tmay be missing uuid  Returns‚Äã  Key  Model potentially without uuid  Overrides‚Äã  MapperRepository.toModel    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"KeyRepository","url":"/docs/sdk-ts/sdk/overview/classes/KeyRepository#update","content":" update(model: Key): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tKey  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.update ","version":"Next","tagName":"h3"},{"title":"LinkRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#extends","content":" BaseRepository&lt;T&gt;  ","version":"Next","tagName":"h2"},{"title":"Extended by‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#extended-by","content":" DIDKeyLinkRepositoryDIDLinkRepository  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#type-parameters","content":" Type ParameterT extends Storable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#constructor","content":" new LinkRepository&lt;T&gt;(store: Store, name: string): LinkRepository&lt;T&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:20  Parameters‚Äã  Parameter\tTypestore\tStore name\tstring  Returns‚Äã  LinkRepository&lt;T&gt;  Inherited from‚Äã  BaseRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"delete()‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  BaseRepository.delete    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#getmodels","content":" getModels(query?: Query&lt;T&gt;): Promise&lt;T[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;T&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;T[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Inherited from‚Äã  BaseRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#insert","content":" insert(model: OptionalId&lt;T&gt;): Promise&lt;T&gt;  Defined in: src/pluto/repositories/builders/LinkRepository.ts:12  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tOptionalId&lt;T&gt;\t  Returns‚Äã  Promise&lt;T&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Overrides‚Äã  BaseRepository.insert    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"LinkRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkRepository#update","content":" update(model: T): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tT  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  BaseRepository.update ","version":"Next","tagName":"h3"},{"title":"LinkSecretRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#extends","content":" MapperRepository&lt;Key, LinkSecret&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#constructor","content":" new LinkSecretRepository(store: Store): LinkSecretRepository  Defined in: src/pluto/repositories/LinkSecretRepository.ts:11  Parameters‚Äã  Parameter\tTypestore\tStore  Returns‚Äã  LinkSecretRepository  Overrides‚Äã  MapperRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#properties","content":" Property\tType\tDescription\tOverrides\tDefined in baseModel\t{ recoveryId: string; }\tAllows setting of properties to be present in all Models sent to Store\tMapperRepository.baseModel\tsrc/pluto/repositories/LinkSecretRepository.ts:7 baseModel.recoveryId\tstring\t-\t-\tsrc/pluto/repositories/LinkSecretRepository.ts:8  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"byUUID()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#byuuid","content":" byUUID(uuid: string): Promise&lt;LinkSecret | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:75  Utility fn for common use of find with uuid  Parameters‚Äã  Parameter\tType\tDescriptionuuid\tstring\t  Returns‚Äã  Promise&lt;LinkSecret | null&gt;  first found Domain instance or undefined  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.byUUID    ","version":"Next","tagName":"h3"},{"title":"delete()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.delete    ","version":"Next","tagName":"h3"},{"title":"find()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#find","content":" find(selector?: Partial&lt;Key&gt;): Promise&lt;LinkSecret[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:48  Search for instances based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;Key&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;LinkSecret[]&gt;  all found Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.find    ","version":"Next","tagName":"h3"},{"title":"findOne()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#findone","content":" findOne(selector?: Partial&lt;Key&gt;): Promise&lt;LinkSecret | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:61  Search for single instance based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;Key&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;LinkSecret | null&gt;  first found Domain instance or null  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.findOne    ","version":"Next","tagName":"h3"},{"title":"get()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#get","content":" get(query?: Query&lt;Key&gt;): Promise&lt;LinkSecret[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:36  Search the Store, mapping any found to Domain  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;Key&gt;\teither an object or array of objects with matchable properties  Returns‚Äã  Promise&lt;LinkSecret[]&gt;  Array of matched Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.get    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#getmodels","content":" getModels(query?: Query&lt;Key&gt;): Promise&lt;Key[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;Key&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;Key[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Inherited from‚Äã  MapperRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#insert","content":" insert(model: Key): Promise&lt;Key&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:32  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tKey\t  Returns‚Äã  Promise&lt;Key&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.insert    ","version":"Next","tagName":"h3"},{"title":"save()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#save","content":" save(domain: LinkSecret): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:89  Persist the Domain instance in the Store.  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tLinkSecret\tWill be mapped to relevant Model for persistance  Returns‚Äã  Promise&lt;void&gt;  See‚Äã  BaseRepository.insert  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.save    ","version":"Next","tagName":"h3"},{"title":"toDomain()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#todomain","content":" toDomain(model: Key): LinkSecret  Defined in: src/pluto/repositories/LinkSecretRepository.ts:15  Map from a Model to the Domain class  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tKey\tthe stored Model with a uuid  Returns‚Äã  LinkSecret  Domain with uuid set  Overrides‚Äã  MapperRepository.toDomain    ","version":"Next","tagName":"h3"},{"title":"toModel()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#tomodel","content":" toModel(domain: LinkSecret): Key  Defined in: src/pluto/repositories/LinkSecretRepository.ts:22  Map from a Domain class to a Model  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tLinkSecret\tmay be missing uuid  Returns‚Äã  Key  Model potentially without uuid  Overrides‚Äã  MapperRepository.toModel    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"LinkSecretRepository","url":"/docs/sdk-ts/sdk/overview/classes/LinkSecretRepository#update","content":" update(model: Key): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tKey  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.update ","version":"Next","tagName":"h3"},{"title":"JWTCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#extends","content":" Credential  ","version":"Next","tagName":"h2"},{"title":"Implements‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#implements","content":" ProvableCredentialStorableCredentialStorable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#constructor","content":" new JWTCredential(payload: string, revoked?: boolean): JWTCredential  Defined in: src/pollux/models/JWTVerifiableCredential.ts:59  Parameters‚Äã  Parameter\tTypepayload\tstring revoked?\tboolean  Returns‚Äã  JWTCredential  Overrides‚Äã  Credential.constructor  ","version":"Next","tagName":"h3"},{"title":"Constructor‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#constructor-1","content":" new JWTCredential(payload: JWTCredentialPayload | JWTPresentationPayload, revoked?: boolean): JWTCredential  Defined in: src/pollux/models/JWTVerifiableCredential.ts:60  Parameters‚Äã  Parameter\tTypepayload\tJWTCredentialPayload | JWTPresentationPayload revoked?\tboolean  Returns‚Äã  JWTCredential  Overrides‚Äã  Credential.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tOverrides\tInherited from\tDefined in credentialType\tpublic\tCredentialType\tCredentialType.JWT\t-\tCredential.credentialType\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:55 properties\tpublic\tMap&lt;Claims | JWT_VC_PROPS | JWT_VP_PROPS, any&gt;\tundefined\t-\tCredential.properties\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:57 recoveryId\tpublic\tstring\tJWTVerifiableCredentialRecoveryId\t-\tCredential.recoveryId\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:56 uuid\treadonly\tstring\tundefined\tUniversally Unique Identifier. should be unique across all items.\t-\tStorable.uuid Credential.uuid\tsrc/domain/models/Credential.ts:15  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"audience‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#audience","content":" Get Signature‚Äã  get audience(): any  Defined in: src/pollux/models/JWTVerifiableCredential.ts:359  Returns‚Äã  any    ","version":"Next","tagName":"h3"},{"title":"claims‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#claims","content":" Get Signature‚Äã  get claims(): Record&lt;string, any&gt;[]  Defined in: src/pollux/models/JWTVerifiableCredential.ts:316  Returns‚Äã  Record&lt;string, any&gt;[]  Overrides‚Äã  Credential.claims    ","version":"Next","tagName":"h3"},{"title":"context‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#context","content":" Get Signature‚Äã  get context(): [&quot;https://www.w3.org/2018/credentials/v1&quot;] | [&quot;https://www.w3.org/2018/presentations/v1&quot;] | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:325  Returns‚Äã  [&quot;https://www.w3.org/2018/credentials/v1&quot;] | [&quot;https://www.w3.org/2018/presentations/v1&quot;] | undefined    ","version":"Next","tagName":"h3"},{"title":"credentialSchema‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#credentialschema","content":" Get Signature‚Äã  get credentialSchema(): { id: string; type: string; } | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:329  Returns‚Äã  { id: string; type: string; } | undefined    ","version":"Next","tagName":"h3"},{"title":"credentialStatus‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#credentialstatus","content":" Get Signature‚Äã  get credentialStatus(): unknown  Defined in: src/pollux/models/JWTVerifiableCredential.ts:333  Returns‚Äã  unknown    ","version":"Next","tagName":"h3"},{"title":"credentialSubject‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#credentialsubject","content":" Get Signature‚Äã  get credentialSubject(): Record&lt;string, any&gt; | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:337  Returns‚Äã  Record&lt;string, any&gt; | undefined    ","version":"Next","tagName":"h3"},{"title":"evidence‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#evidence","content":" Get Signature‚Äã  get evidence(): { id: string; type: string; } | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:341  Returns‚Äã  { id: string; type: string; } | undefined    ","version":"Next","tagName":"h3"},{"title":"expirationDate‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#expirationdate","content":" Get Signature‚Äã  get expirationDate(): string | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:345  Returns‚Äã  string | undefined    ","version":"Next","tagName":"h3"},{"title":"id‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#id","content":" Get Signature‚Äã  get id(): any  Defined in: src/pollux/models/JWTVerifiableCredential.ts:292  Returns‚Äã  any  Overrides‚Äã  Credential.id    ","version":"Next","tagName":"h3"},{"title":"isCredential‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#iscredential","content":" Get Signature‚Äã  get isCredential(): boolean  Defined in: src/pollux/models/JWTVerifiableCredential.ts:288  Returns‚Äã  boolean    ","version":"Next","tagName":"h3"},{"title":"issuanceDate‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#issuancedate","content":" Get Signature‚Äã  get issuanceDate(): string  Defined in: src/pollux/models/JWTVerifiableCredential.ts:352  Returns‚Äã  string    ","version":"Next","tagName":"h3"},{"title":"issuer‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#issuer","content":" Get Signature‚Äã  get issuer(): any  Defined in: src/pollux/models/JWTVerifiableCredential.ts:366  Returns‚Äã  any  Overrides‚Äã  Credential.issuer    ","version":"Next","tagName":"h3"},{"title":"refreshService‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#refreshservice","content":" Get Signature‚Äã  get refreshService(): { id: string; type: string; } | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:373  Returns‚Äã  { id: string; type: string; } | undefined    ","version":"Next","tagName":"h3"},{"title":"revoked‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#revoked","content":" Get Signature‚Äã  get revoked(): boolean | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:385  Returns‚Äã  boolean | undefined    ","version":"Next","tagName":"h3"},{"title":"subject‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#subject","content":" Get Signature‚Äã  get subject(): string  Defined in: src/pollux/models/JWTVerifiableCredential.ts:377  Returns‚Äã  string  Overrides‚Äã  Credential.subject    ","version":"Next","tagName":"h3"},{"title":"termsOfUse‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#termsofuse","content":" Get Signature‚Äã  get termsOfUse(): { id: string; type: string; } | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:393  Returns‚Äã  { id: string; type: string; } | undefined    ","version":"Next","tagName":"h3"},{"title":"type‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#type","content":" Get Signature‚Äã  get type(): [&quot;VerifiableCredential&quot;] | [&quot;VerifiablePresentation&quot;] | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:397  Returns‚Äã  [&quot;VerifiableCredential&quot;] | [&quot;VerifiablePresentation&quot;] | undefined    ","version":"Next","tagName":"h3"},{"title":"vc‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#vc","content":" Get Signature‚Äã  get vc(): W3CVerifiableCredential | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:300  Returns‚Äã  W3CVerifiableCredential | undefined    ","version":"Next","tagName":"h3"},{"title":"vp‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#vp","content":" Get Signature‚Äã  get vp(): W3CVerifiablePresentation | undefined  Defined in: src/pollux/models/JWTVerifiableCredential.ts:308  Returns‚Äã  W3CVerifiablePresentation | undefined  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"getProperty()‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#getproperty","content":" getProperty(name: string): any  Defined in: src/domain/models/Credential.ts:17  Parameters‚Äã  Parameter\tTypename\tstring  Returns‚Äã  any  Inherited from‚Äã  Credential.getProperty    ","version":"Next","tagName":"h3"},{"title":"isProvable()‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#isprovable","content":" isProvable(): this is ProvableCredential  Defined in: src/domain/models/Credential.ts:21  Returns‚Äã  this is ProvableCredential  Inherited from‚Äã  Credential.isProvable    ","version":"Next","tagName":"h3"},{"title":"isRevoked()‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#isrevoked","content":" isRevoked(): boolean  Defined in: src/domain/models/Credential.ts:29  Returns‚Äã  boolean  Inherited from‚Äã  Credential.isRevoked    ","version":"Next","tagName":"h3"},{"title":"isStorable()‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#isstorable","content":" isStorable(): this is StorableCredential  Defined in: src/domain/models/Credential.ts:25  Returns‚Äã  this is StorableCredential  Inherited from‚Äã  Credential.isStorable    ","version":"Next","tagName":"h3"},{"title":"presentation()‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#presentation","content":" presentation(): W3CVerifiablePresentation  Defined in: src/pollux/models/JWTVerifiableCredential.ts:401  Returns‚Äã  W3CVerifiablePresentation  Implementation of‚Äã  ProvableCredential.presentation    ","version":"Next","tagName":"h3"},{"title":"toStorable()‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#tostorable","content":" toStorable(): { availableClaims: string[]; credentialData: string; id: any; issuer: any; recoveryId: string; revoked: boolean | undefined; subject: any; validUntil: any; }  Defined in: src/pollux/models/JWTVerifiableCredential.ts:432  Returns‚Äã  { availableClaims: string[]; credentialData: string; id: any; issuer: any; recoveryId: string; revoked: boolean | undefined; subject: any; validUntil: any; }  Name\tType\tDefault value\tDefined inavailableClaims\tstring[]\tclaims\tsrc/pollux/models/JWTVerifiableCredential.ts:443 credentialData\tstring\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:439 id\tany\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:437 issuer\tany\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:440 recoveryId\tstring\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:438 revoked\tboolean | undefined\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:444 subject\tany\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:441 validUntil\tany\t-\tsrc/pollux/models/JWTVerifiableCredential.ts:442  Implementation of‚Äã  StorableCredential.toStorable    ","version":"Next","tagName":"h3"},{"title":"verifiableCredential()‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#verifiablecredential","content":" verifiableCredential(): W3CVerifiableCredential  Defined in: src/pollux/models/JWTVerifiableCredential.ts:418  Returns‚Äã  W3CVerifiableCredential  Implementation of‚Äã  ProvableCredential.verifiableCredential    ","version":"Next","tagName":"h3"},{"title":"fromJWS()‚Äã","type":1,"pageTitle":"JWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/JWTCredential#fromjws","content":" static fromJWS(jws: string, revoked?: boolean): JWTCredential  Defined in: src/pollux/models/JWTVerifiableCredential.ts:203  Parameters‚Äã  Parameter\tTypejws\tstring revoked?\tboolean  Returns‚Äã  JWTCredential ","version":"Next","tagName":"h3"},{"title":"MapperRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#extends","content":" BaseRepository&lt;T&gt;  ","version":"Next","tagName":"h2"},{"title":"Extended by‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#extended-by","content":" CredentialRepositoryCredentialMetadataRepositoryDIDRepositoryKeyRepositoryLinkSecretRepositoryMessageRepository  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#type-parameters","content":" Type ParameterT extends Model D extends Storable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#constructor","content":" new MapperRepository&lt;T, D&gt;(store: Store, name: string): MapperRepository&lt;T, D&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:20  Parameters‚Äã  Parameter\tTypestore\tStore name\tstring  Returns‚Äã  MapperRepository&lt;T, D&gt;  Inherited from‚Äã  BaseRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"byUUID()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#byuuid","content":" byUUID(uuid: string): Promise&lt;D | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:75  Utility fn for common use of find with uuid  Parameters‚Äã  Parameter\tType\tDescriptionuuid\tstring\t  Returns‚Äã  Promise&lt;D | null&gt;  first found Domain instance or undefined  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails    ","version":"Next","tagName":"h3"},{"title":"delete()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  BaseRepository.delete    ","version":"Next","tagName":"h3"},{"title":"find()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#find","content":" find(selector?: Partial&lt;T&gt;): Promise&lt;D[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:48  Search for instances based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;T&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;D[]&gt;  all found Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails    ","version":"Next","tagName":"h3"},{"title":"findOne()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#findone","content":" findOne(selector?: Partial&lt;T&gt;): Promise&lt;D | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:61  Search for single instance based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;T&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;D | null&gt;  first found Domain instance or null  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails    ","version":"Next","tagName":"h3"},{"title":"get()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#get","content":" get(query?: Query&lt;T&gt;): Promise&lt;D[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:36  Search the Store, mapping any found to Domain  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;T&gt;\teither an object or array of objects with matchable properties  Returns‚Äã  Promise&lt;D[]&gt;  Array of matched Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#getmodels","content":" getModels(query?: Query&lt;T&gt;): Promise&lt;T[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;T&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;T[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Inherited from‚Äã  BaseRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#insert","content":" insert(model: T): Promise&lt;T&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:32  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tT\t  Returns‚Äã  Promise&lt;T&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  BaseRepository.insert    ","version":"Next","tagName":"h3"},{"title":"save()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#save","content":" save(domain: D): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:89  Persist the Domain instance in the Store.  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tD\tWill be mapped to relevant Model for persistance  Returns‚Äã  Promise&lt;void&gt;  See‚Äã  BaseRepository.insert  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails    ","version":"Next","tagName":"h3"},{"title":"toDomain()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#todomain","content":" abstract toDomain(model: T): D  Defined in: src/pluto/repositories/builders/MapperRepository.ts:21  Map from a Model to the Domain class  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tT\tthe stored Model with a uuid  Returns‚Äã  D  Domain with uuid set    ","version":"Next","tagName":"h3"},{"title":"toModel()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#tomodel","content":" abstract toModel(domain: D): T  Defined in: src/pluto/repositories/builders/MapperRepository.ts:27  Map from a Domain class to a Model  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tD\tmay be missing uuid  Returns‚Äã  T  Model potentially without uuid    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"MapperRepository","url":"/docs/sdk-ts/sdk/overview/classes/MapperRepository#update","content":" update(model: T): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tT  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  BaseRepository.update ","version":"Next","tagName":"h3"},{"title":"Mercury","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/Mercury","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/classes/Mercury#implements","content":" Mercury  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/classes/Mercury#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/classes/Mercury#constructor","content":" new Mercury(castor: Castor, protocol: DIDCommProtocol, api: Api): Mercury  Defined in: src/mercury/Mercury.ts:27  Creates an instance of Mercury.  Parameters‚Äã  Parameter\tType\tDescriptioncastor\tCastor protocol\tDIDCommProtocol api\tApi\t  Returns‚Äã  Mercury  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/classes/Mercury#properties","content":" Property\tModifier\tType\tDefined in api\tpublic\tApi\tsrc/mercury/Mercury.ts:30 castor\tpublic\tCastor\tsrc/mercury/Mercury.ts:28 protocol\tpublic\tDIDCommProtocol\tsrc/mercury/Mercury.ts:29  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/classes/Mercury#methods","content":" ","version":"Next","tagName":"h2"},{"title":"packMessage()‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/classes/Mercury#packmessage","content":" packMessage(message: Message): Promise&lt;string&gt;  Defined in: src/mercury/Mercury.ts:40  Asynchronously packs a given message object into a string representation. This function may throw an error if the message object is invalid.  Parameters‚Äã  Parameter\tType\tDescriptionmessage\tMessage\t  Returns‚Äã  Promise&lt;string&gt;  Implementation of‚Äã  Mercury.packMessage    ","version":"Next","tagName":"h3"},{"title":"sendMessage()‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/classes/Mercury#sendmessage","content":" sendMessage&lt;T&gt;(message: Message): Promise&lt;T&gt;  Defined in: src/mercury/Mercury.ts:68  Asynchronously sends a given message and returns the response data.  Type Parameters‚Äã  Type Parameter\tDescriptionT\t  Parameters‚Äã  Parameter\tType\tDescriptionmessage\tMessage\t  Returns‚Äã  Promise&lt;T&gt;  Implementation of‚Äã  Mercury.sendMessage    ","version":"Next","tagName":"h3"},{"title":"sendMessageParseMessage()‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/classes/Mercury#sendmessageparsemessage","content":" sendMessageParseMessage(message: Message): Promise&lt;Message | undefined&gt;  Defined in: src/mercury/Mercury.ts:128  Asynchronously sends a given message and returns the response message object.  Parameters‚Äã  Parameter\tType\tDescriptionmessage\tMessage\t  Returns‚Äã  Promise&lt;Message | undefined&gt;  Implementation of‚Äã  Mercury.sendMessageParseMessage    ","version":"Next","tagName":"h3"},{"title":"unpackMessage()‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/classes/Mercury#unpackmessage","content":" unpackMessage(message: string): Promise&lt;Message&gt;  Defined in: src/mercury/Mercury.ts:56  Asynchronously unpacks a given string representation of a message into a message object. This function may throw an error if the string is not a valid message representation.  Parameters‚Äã  Parameter\tType\tDescriptionmessage\tstring\t  Returns‚Äã  Promise&lt;Message&gt;  Implementation of‚Äã  Mercury.unpackMessage ","version":"Next","tagName":"h3"},{"title":"MessageRepository","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#extends","content":" MapperRepository&lt;Message, Message&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#constructor","content":" new MessageRepository(store: Store): MessageRepository  Defined in: src/pluto/repositories/MessageRepository.ts:7  Parameters‚Äã  Parameter\tTypestore\tStore  Returns‚Äã  MessageRepository  Overrides‚Äã  MapperRepository.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#methods","content":" ","version":"Next","tagName":"h2"},{"title":"byUUID()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#byuuid","content":" byUUID(uuid: string): Promise&lt;Message | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:75  Utility fn for common use of find with uuid  Parameters‚Äã  Parameter\tType\tDescriptionuuid\tstring\t  Returns‚Äã  Promise&lt;Message | null&gt;  first found Domain instance or undefined  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.byUUID    ","version":"Next","tagName":"h3"},{"title":"delete()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#delete","content":" delete(uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:52  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.delete    ","version":"Next","tagName":"h3"},{"title":"find()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#find","content":" find(selector?: Partial&lt;Message&gt;): Promise&lt;Message[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:48  Search for instances based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;Message&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;Message[]&gt;  all found Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.find    ","version":"Next","tagName":"h3"},{"title":"findOne()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#findone","content":" findOne(selector?: Partial&lt;Message&gt;): Promise&lt;Message | null&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:61  Search for single instance based on given values  Parameters‚Äã  Parameter\tType\tDescriptionselector?\tPartial&lt;Message&gt;\tobject with matchable properties  Returns‚Äã  Promise&lt;Message | null&gt;  first found Domain instance or null  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.findOne    ","version":"Next","tagName":"h3"},{"title":"get()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#get","content":" get(query?: Query&lt;Message&gt;): Promise&lt;Message[]&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:36  Search the Store, mapping any found to Domain  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;Message&gt;\teither an object or array of objects with matchable properties  Returns‚Äã  Promise&lt;Message[]&gt;  Array of matched Domain instances  Throws‚Äã  Domain.PlutoError.StoreQueryFailed if the query fails  Inherited from‚Äã  MapperRepository.get    ","version":"Next","tagName":"h3"},{"title":"getModels()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#getmodels","content":" getModels(query?: Query&lt;Message&gt;): Promise&lt;Message[]&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:86  Search the Store for Models  Parameters‚Äã  Parameter\tType\tDescriptionquery?\tQuery&lt;Message&gt;\ta Query object, a set of values and operators defining the query  Returns‚Äã  Promise&lt;Message[]&gt;  Array of matched Models  See‚Äã  ../types.ts  Examples‚Äã  search for a model with uuid and name   repo.getModels({ selector: { uuid: &quot;1&quot;, name: &quot;eg&quot; }})   search for models with uuid of 1 or 2   repo.getModels({ selector: { $or: [{ uuid: &quot;1&quot; }, { uuid: &quot;2&quot; }] }})   search for all models   repo.getModels()   Throws‚Äã  Domain.Models if the query fails  Inherited from‚Äã  MapperRepository.getModels    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#insert","content":" insert(model: Message): Promise&lt;Message&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:32  Persist the Model in the Store.  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tMessage\t  Returns‚Äã  Promise&lt;Message&gt;  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.insert    ","version":"Next","tagName":"h3"},{"title":"save()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#save","content":" save(domain: Message): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/MapperRepository.ts:89  Persist the Domain instance in the Store.  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tMessage\tWill be mapped to relevant Model for persistance  Returns‚Äã  Promise&lt;void&gt;  See‚Äã  BaseRepository.insert  Throws‚Äã  Domain.PlutoError.StoreInsertError if insert fails  Inherited from‚Äã  MapperRepository.save    ","version":"Next","tagName":"h3"},{"title":"toDomain()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#todomain","content":" toDomain(model: Message): Message  Defined in: src/pluto/repositories/MessageRepository.ts:11  Map from a Model to the Domain class  Parameters‚Äã  Parameter\tType\tDescriptionmodel\tMessage\tthe stored Model with a uuid  Returns‚Äã  Message  Domain with uuid set  Overrides‚Äã  MapperRepository.toDomain    ","version":"Next","tagName":"h3"},{"title":"toModel()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#tomodel","content":" toModel(domain: Message): Message  Defined in: src/pluto/repositories/MessageRepository.ts:16  Map from a Domain class to a Model  Parameters‚Äã  Parameter\tType\tDescriptiondomain\tMessage\tmay be missing uuid  Returns‚Äã  Message  Model potentially without uuid  Overrides‚Äã  MapperRepository.toModel    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"MessageRepository","url":"/docs/sdk-ts/sdk/overview/classes/MessageRepository#update","content":" update(model: Message): Promise&lt;void&gt;  Defined in: src/pluto/repositories/builders/BaseRepository.ts:43  Parameters‚Äã  Parameter\tTypemodel\tMessage  Returns‚Äã  Promise&lt;void&gt;  Inherited from‚Äã  MapperRepository.update ","version":"Next","tagName":"h3"},{"title":"PKInstance","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/PKInstance","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"PKInstance","url":"/docs/sdk-ts/sdk/overview/classes/PKInstance#extends","content":" Task&lt;PublicKey | undefined, PKInstanceArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PKInstance","url":"/docs/sdk-ts/sdk/overview/classes/PKInstance#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PKInstance","url":"/docs/sdk-ts/sdk/overview/classes/PKInstance#constructor","content":" new PKInstance(...args: [PKInstanceArgs]): PKInstance  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[PKInstanceArgs]\t  Returns‚Äã  PKInstance  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"PKInstance","url":"/docs/sdk-ts/sdk/overview/classes/PKInstance#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"PKInstance","url":"/docs/sdk-ts/sdk/overview/classes/PKInstance#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"PKInstance","url":"/docs/sdk-ts/sdk/overview/classes/PKInstance#run","content":" run(ctx: AgentContext): Promise&lt;PublicKey | undefined&gt;  Defined in: src/pollux/utils/jwt/PKInstance.ts:11  Parameters‚Äã  Parameter\tTypectx\tAgentContext  Returns‚Äã  Promise&lt;PublicKey | undefined&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"PeerDIDService","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/PeerDIDService","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PeerDIDService","url":"/docs/sdk-ts/sdk/overview/classes/PeerDIDService#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PeerDIDService","url":"/docs/sdk-ts/sdk/overview/classes/PeerDIDService#constructor","content":" new PeerDIDService(type: string, serviceEndpoint: string, routingKeys?: string[], accept?: string[]): PeerDIDService  Defined in: src/peer-did/PeerDID.ts:53  Parameters‚Äã  Parameter\tTypetype\tstring serviceEndpoint\tstring routingKeys?\tstring[] accept?\tstring[]  Returns‚Äã  PeerDIDService  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"PeerDIDService","url":"/docs/sdk-ts/sdk/overview/classes/PeerDIDService#properties","content":" Property\tModifier\tType\tDefault value\tDefined in accept?\treadonly\tstring[]\tundefined\tsrc/peer-did/PeerDID.ts:51 routingKeys?\treadonly\tstring[]\tundefined\tsrc/peer-did/PeerDID.ts:50 serviceEndpoint\treadonly\tstring\tundefined\tsrc/peer-did/PeerDID.ts:49 type\treadonly\tstring\tundefined\tsrc/peer-did/PeerDID.ts:48 CodingKeys\treadonly\t{ accept: string; routingKeys: string; serviceEndpoint: string; type: string; }\tundefined\tsrc/peer-did/PeerDID.ts:68 CodingKeys.accept\tpublic\tstring\t&quot;a&quot;\tsrc/peer-did/PeerDID.ts:72 CodingKeys.routingKeys\tpublic\tstring\t&quot;r&quot;\tsrc/peer-did/PeerDID.ts:71 CodingKeys.serviceEndpoint\tpublic\tstring\t&quot;s&quot;\tsrc/peer-did/PeerDID.ts:70 CodingKeys.type\tpublic\tstring\t&quot;t&quot;\tsrc/peer-did/PeerDID.ts:69 DIDCommMessagingEncodedKey\treadonly\t&quot;dm&quot;\t&quot;dm&quot;\tsrc/peer-did/PeerDID.ts:66 DIDCommMessagingKey\treadonly\t&quot;DIDCommMessaging&quot;\t&quot;DIDCommMessaging&quot;\tsrc/peer-did/PeerDID.ts:65  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"PeerDIDService","url":"/docs/sdk-ts/sdk/overview/classes/PeerDIDService#methods","content":" ","version":"Next","tagName":"h2"},{"title":"encode()‚Äã","type":1,"pageTitle":"PeerDIDService","url":"/docs/sdk-ts/sdk/overview/classes/PeerDIDService#encode","content":" encode(): PeerDIDEncoded  Defined in: src/peer-did/PeerDID.ts:75  Returns‚Äã  PeerDIDEncoded    ","version":"Next","tagName":"h3"},{"title":"decode()‚Äã","type":1,"pageTitle":"PeerDIDService","url":"/docs/sdk-ts/sdk/overview/classes/PeerDIDService#decode","content":" static decode(encoded: PeerDIDEncoded): PeerDIDService  Defined in: src/peer-did/PeerDID.ts:89  Parameters‚Äã  Parameter\tTypeencoded\tPeerDIDEncoded  Returns‚Äã  PeerDIDService ","version":"Next","tagName":"h3"},{"title":"PeerDID","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/PeerDID","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PeerDID","url":"/docs/sdk-ts/sdk/overview/classes/PeerDID#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PeerDID","url":"/docs/sdk-ts/sdk/overview/classes/PeerDID#constructor","content":" new PeerDID(did: DID, privateKeys: PrivateKey[]): PeerDID  Defined in: src/peer-did/PeerDID.ts:31  Parameters‚Äã  Parameter\tType\tDefault valuedid\tDID\tundefined privateKeys\tPrivateKey[]\t[]  Returns‚Äã  PeerDID  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"PeerDID","url":"/docs/sdk-ts/sdk/overview/classes/PeerDID#properties","content":" Property\tModifier\tType\tDefault value\tDefined in did\treadonly\tDID\tundefined\tsrc/peer-did/PeerDID.ts:32 privateKeys\treadonly\tPrivateKey[]\t[]\tsrc/peer-did/PeerDID.ts:33 ","version":"Next","tagName":"h2"},{"title":"Plugin","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/Plugin","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Plugin","url":"/docs/sdk-ts/sdk/overview/classes/Plugin#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Plugin","url":"/docs/sdk-ts/sdk/overview/classes/Plugin#constructor","content":" new Plugin(): Plugin  Returns‚Äã  Plugin  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Plugin","url":"/docs/sdk-ts/sdk/overview/classes/Plugin#properties","content":" Property\tModifier\tType\tDefined in modules\treadonly\tMap&lt;string, any&gt;\tsrc/plugins/Plugin.ts:13 tasks\treadonly\tMap&lt;string, Ctor&lt;Task&lt;any, unknown&gt;&gt;&gt;\tsrc/plugins/Plugin.ts:14  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Plugin","url":"/docs/sdk-ts/sdk/overview/classes/Plugin#methods","content":" ","version":"Next","tagName":"h2"},{"title":"addModule()‚Äã","type":1,"pageTitle":"Plugin","url":"/docs/sdk-ts/sdk/overview/classes/Plugin#addmodule","content":" addModule(key: string, module: any): this  Defined in: src/plugins/Plugin.ts:17  Parameters‚Äã  Parameter\tTypekey\tstring module\tany  Returns‚Äã  this    ","version":"Next","tagName":"h3"},{"title":"register()‚Äã","type":1,"pageTitle":"Plugin","url":"/docs/sdk-ts/sdk/overview/classes/Plugin#register","content":" register(pids: Arrayable&lt;string&gt;, task: Ctor&lt;Task&lt;any, unknown&gt;&gt;): this  Defined in: src/plugins/Plugin.ts:25  Parameters‚Äã  Parameter\tTypepids\tArrayable&lt;string&gt; task\tCtor&lt;Task&lt;any, unknown&gt;&gt;  Returns‚Äã  this ","version":"Next","tagName":"h3"},{"title":"PluginManager","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/PluginManager","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PluginManager","url":"/docs/sdk-ts/sdk/overview/classes/PluginManager#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PluginManager","url":"/docs/sdk-ts/sdk/overview/classes/PluginManager#constructor","content":" new PluginManager(): PluginManager  Returns‚Äã  PluginManager  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"PluginManager","url":"/docs/sdk-ts/sdk/overview/classes/PluginManager#methods","content":" ","version":"Next","tagName":"h2"},{"title":"findProtocol()‚Äã","type":1,"pageTitle":"PluginManager","url":"/docs/sdk-ts/sdk/overview/classes/PluginManager#findprotocol","content":" findProtocol(type: string, id: string): Ctor&lt;Task&lt;any, unknown&gt;&gt; | null  Defined in: src/plugins/PluginManager.ts:19  Parameters‚Äã  Parameter\tTypetype\tstring id\tstring  Returns‚Äã  Ctor&lt;Task&lt;any, unknown&gt;&gt; | null    ","version":"Next","tagName":"h3"},{"title":"getModules()‚Äã","type":1,"pageTitle":"PluginManager","url":"/docs/sdk-ts/sdk/overview/classes/PluginManager#getmodules","content":" getModules(): {[k: string]: any; }  Defined in: src/plugins/PluginManager.ts:11  Returns‚Äã  {[k: string]: any; }    ","version":"Next","tagName":"h3"},{"title":"register()‚Äã","type":1,"pageTitle":"PluginManager","url":"/docs/sdk-ts/sdk/overview/classes/PluginManager#register","content":" register(plugin: Plugin): void  Defined in: src/plugins/PluginManager.ts:7  Parameters‚Äã  Parameter\tTypeplugin\tPlugin  Returns‚Äã  void ","version":"Next","tagName":"h3"},{"title":"RunProtocol","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/RunProtocol","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"RunProtocol","url":"/docs/sdk-ts/sdk/overview/classes/RunProtocol#extends","content":" Task&lt;any, RunProtocolArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"RunProtocol","url":"/docs/sdk-ts/sdk/overview/classes/RunProtocol#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RunProtocol","url":"/docs/sdk-ts/sdk/overview/classes/RunProtocol#constructor","content":" new RunProtocol(...args: [RunProtocolArgs]): RunProtocol  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[RunProtocolArgs]\t  Returns‚Äã  RunProtocol  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"RunProtocol","url":"/docs/sdk-ts/sdk/overview/classes/RunProtocol#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"RunProtocol","url":"/docs/sdk-ts/sdk/overview/classes/RunProtocol#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"RunProtocol","url":"/docs/sdk-ts/sdk/overview/classes/RunProtocol#run","content":" run(ctx: AgentContext): Promise&lt;any&gt;  Defined in: src/edge-agent/helpers/RunProtocol.ts:78  Parameters‚Äã  Parameter\tTypectx\tAgentContext  Returns‚Äã  Promise&lt;any&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"SDJWT","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#extends","content":" Runner  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#constructor","content":" new SDJWT(): SDJWT  Returns‚Äã  SDJWT  Inherited from‚Äã  Runner.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#methods","content":" ","version":"Next","tagName":"h2"},{"title":"clone()‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#clone","content":" clone(): SDJWT  Defined in: src/pollux/utils/jwt/SDJWT.ts:29  Returns‚Äã  SDJWT  Overrides‚Äã  Runner.clone    ","version":"Next","tagName":"h3"},{"title":"createPresentationFor()‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#createpresentationfor","content":" createPresentationFor&lt;T&gt;(options: { jws: string; presentationFrame?: PFrame&lt;T&gt;; privateKey: PrivateKey; }): Promise&lt;string&gt;  Defined in: src/pollux/utils/jwt/SDJWT.ts:97  Type Parameters‚Äã  Type ParameterT extends SdJwtVcPayload  Parameters‚Äã  Parameter\tTypeoptions\t{ jws: string; presentationFrame?: PFrame&lt;T&gt;; privateKey: PrivateKey; } options.jws\tstring options.presentationFrame?\tPFrame&lt;T&gt; options.privateKey\tPrivateKey  Returns‚Äã  Promise&lt;string&gt;    ","version":"Next","tagName":"h3"},{"title":"decode()‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#decode","content":" decode(jws: string): DecodedSDJwt  Defined in: src/pollux/utils/jwt/SDJWT.ts:33  Parameters‚Äã  Parameter\tTypejws\tstring  Returns‚Äã  DecodedSDJwt    ","version":"Next","tagName":"h3"},{"title":"getPKConfig()‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#getpkconfig","content":" getPKConfig(publicKey: PublicKey): SDJWTVCConfig  Defined in: src/pollux/utils/jwt/SDJWT.ts:117  Parameters‚Äã  Parameter\tTypepublicKey\tPublicKey  Returns‚Äã  SDJWTVCConfig    ","version":"Next","tagName":"h3"},{"title":"getSKConfig()‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#getskconfig","content":" getSKConfig(privateKey: PrivateKey): SDJWTVCConfig  Defined in: src/pollux/utils/jwt/SDJWT.ts:151  Parameters‚Äã  Parameter\tTypeprivateKey\tPrivateKey  Returns‚Äã  SDJWTVCConfig    ","version":"Next","tagName":"h3"},{"title":"reveal()‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#reveal","content":" reveal(disclosedPayload: Record&lt;string, unknown&gt;, disclosures: Disclosure&lt;unknown&gt;[]): Promise&lt;unknown&gt;  Defined in: src/pollux/utils/jwt/SDJWT.ts:106  Parameters‚Äã  Parameter\tTypedisclosedPayload\tRecord&lt;string, unknown&gt; disclosures\tDisclosure&lt;unknown&gt;[]  Returns‚Äã  Promise&lt;unknown&gt;    ","version":"Next","tagName":"h3"},{"title":"sign()‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#sign","content":" sign&lt;E&gt;(options: { disclosureFrame: DisclosureFrame&lt;E&gt;; issuerDID: DID; kid?: string; payload: E; privateKey?: PrivateKey; }): Promise&lt;string&gt;  Defined in: src/pollux/utils/jwt/SDJWT.ts:37  Type Parameters‚Äã  Type ParameterE extends SdJwtVcPayload  Parameters‚Äã  Parameter\tTypeoptions\t{ disclosureFrame: DisclosureFrame&lt;E&gt;; issuerDID: DID; kid?: string; payload: E; privateKey?: PrivateKey; } options.disclosureFrame\tDisclosureFrame&lt;E&gt; options.issuerDID\tDID options.kid?\tstring options.payload\tE options.privateKey?\tPrivateKey  Returns‚Äã  Promise&lt;string&gt;    ","version":"Next","tagName":"h3"},{"title":"verify()‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#verify","content":" verify(options: { issuerDID: DID; jws: string; requiredClaimKeys?: string[]; requiredKeyBindings?: boolean; }): Promise&lt;boolean&gt;  Defined in: src/pollux/utils/jwt/SDJWT.ts:53  Parameters‚Äã  Parameter\tTypeoptions\t{ issuerDID: DID; jws: string; requiredClaimKeys?: string[]; requiredKeyBindings?: boolean; } options.issuerDID\tDID options.jws\tstring options.requiredClaimKeys?\tstring[] options.requiredKeyBindings?\tboolean  Returns‚Äã  Promise&lt;boolean&gt;    ","version":"Next","tagName":"h3"},{"title":"withContext()‚Äã","type":1,"pageTitle":"SDJWT","url":"/docs/sdk-ts/sdk/overview/classes/SDJWT#withcontext","content":" withContext(ctx: Context): Runner  Defined in: src/utils/tasks.ts:103  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Runner  Inherited from‚Äã  Runner.withContext ","version":"Next","tagName":"h3"},{"title":"AnonCredsCredentialProperties","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/enumerations/AnonCredsCredentialProperties","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"AnonCredsCredentialProperties","url":"/docs/sdk-ts/sdk/overview/enumerations/AnonCredsCredentialProperties#enumeration-members","content":" Enumeration Member\tValue\tDefined in credentialDefinitionId\t&quot;cred_def_id&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:14 exp\t&quot;exp&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:12 iss\t&quot;iss&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:9 jti\t&quot;jti&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:10 revoked\t&quot;revoked&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:18 schemaId\t&quot;schema_id&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:13 signature\t&quot;signature&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:15 signatureCorrectnessProof\t&quot;signature_correctness_proof&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:16 sub\t&quot;sub&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:11 values\t&quot;values&quot;\tsrc/pollux/models/AnonCredsVerifiableCredential.ts:17 ","version":"Next","tagName":"h2"},{"title":"SDJWTCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#extends","content":" Credential  ","version":"Next","tagName":"h2"},{"title":"Implements‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#implements","content":" ProvableCredentialStorableCredentialStorable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#constructor","content":" new SDJWTCredential(object: SDJwt, claims: Record&lt;string, any&gt;[], revoked?: boolean): SDJWTCredential  Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:51  Parameters‚Äã  Parameter\tTypeobject\tSDJwt claims\tRecord&lt;string, any&gt;[] revoked?\tboolean  Returns‚Äã  SDJWTCredential  Overrides‚Äã  Credential.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tOverrides\tDefined in claims\tpublic\tRecord&lt;string, any&gt;[]\t[]\t-\tCredential.claims\tsrc/pollux/models/SDJWTVerifiableCredential.ts:48 core\tpublic\tSDJwt\tundefined\t-\t-\tsrc/pollux/models/SDJWTVerifiableCredential.ts:49 credentialType\tpublic\tCredentialType\tCredentialType.SDJWT\t-\tCredential.credentialType\tsrc/pollux/models/SDJWTVerifiableCredential.ts:30 properties\tpublic\tMap&lt;Claims | SDJWT_VP_PROPS, any&gt;\tundefined\t-\tCredential.properties\tsrc/pollux/models/SDJWTVerifiableCredential.ts:47 recoveryId\tpublic\tstring\tSDJWTVerifiableCredentialRecoveryId\t-\tCredential.recoveryId\tsrc/pollux/models/SDJWTVerifiableCredential.ts:31 uuid\tpublic\tstring\tundefined\tUniversally Unique Identifier. should be unique across all items.\tStorable.uuid Credential.uuid\tsrc/pollux/models/SDJWTVerifiableCredential.ts:46  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"id‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#id","content":" Get Signature‚Äã  get id(): any  Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:33  Returns‚Äã  any  Overrides‚Äã  Credential.id    ","version":"Next","tagName":"h3"},{"title":"issuer‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#issuer","content":" Get Signature‚Äã  get issuer(): any  Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:37  Returns‚Äã  any  Overrides‚Äã  Credential.issuer    ","version":"Next","tagName":"h3"},{"title":"revoked‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#revoked","content":" Get Signature‚Äã  get revoked(): boolean | undefined  Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:149  Returns‚Äã  boolean | undefined    ","version":"Next","tagName":"h3"},{"title":"subject‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#subject","content":" Get Signature‚Äã  get subject(): any  Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:41  Returns‚Äã  any  Overrides‚Äã  Credential.subject  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"getProperty()‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#getproperty","content":" getProperty(name: string): any  Defined in: src/domain/models/Credential.ts:17  Parameters‚Äã  Parameter\tTypename\tstring  Returns‚Äã  any  Inherited from‚Äã  Credential.getProperty    ","version":"Next","tagName":"h3"},{"title":"isProvable()‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#isprovable","content":" isProvable(): this is ProvableCredential  Defined in: src/domain/models/Credential.ts:21  Returns‚Äã  this is ProvableCredential  Inherited from‚Äã  Credential.isProvable    ","version":"Next","tagName":"h3"},{"title":"isRevoked()‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#isrevoked","content":" isRevoked(): boolean  Defined in: src/domain/models/Credential.ts:29  Returns‚Äã  boolean  Inherited from‚Äã  Credential.isRevoked    ","version":"Next","tagName":"h3"},{"title":"isStorable()‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#isstorable","content":" isStorable(): this is StorableCredential  Defined in: src/domain/models/Credential.ts:25  Returns‚Äã  this is StorableCredential  Inherited from‚Äã  Credential.isStorable    ","version":"Next","tagName":"h3"},{"title":"presentation()‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#presentation","content":" presentation(): W3CVerifiablePresentation  Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:135  Returns‚Äã  W3CVerifiablePresentation  Implementation of‚Äã  ProvableCredential.presentation    ","version":"Next","tagName":"h3"},{"title":"toStorable()‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#tostorable","content":" toStorable(): { availableClaims?: string[]; credentialCreated?: string; credentialData: string; credentialSchema?: string; credentialUpdated?: string; id: string; issuer?: string; recoveryId: string; revoked?: boolean; subject?: string; validUntil?: number; }  Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:153  Returns‚Äã  { availableClaims?: string[]; credentialCreated?: string; credentialData: string; credentialSchema?: string; credentialUpdated?: string; id: string; issuer?: string; recoveryId: string; revoked?: boolean; subject?: string; validUntil?: number; }  Name\tType\tDefined inavailableClaims?\tstring[]\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 credentialCreated?\tstring\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 credentialData\tstring\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 credentialSchema?\tstring\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 credentialUpdated?\tstring\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 id\tstring\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 issuer?\tstring\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 recoveryId\tstring\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 revoked?\tboolean\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 subject?\tstring\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153 validUntil?\tnumber\tsrc/pollux/models/SDJWTVerifiableCredential.ts:153  Implementation of‚Äã  StorableCredential.toStorable    ","version":"Next","tagName":"h3"},{"title":"verifiableCredential()‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#verifiablecredential","content":" verifiableCredential(): unknown  Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:131  Returns‚Äã  unknown  Implementation of‚Äã  ProvableCredential.verifiableCredential    ","version":"Next","tagName":"h3"},{"title":"fromJWS()‚Äã","type":1,"pageTitle":"SDJWTCredential","url":"/docs/sdk-ts/sdk/overview/classes/SDJWTCredential#fromjws","content":" static fromJWS&lt;E&gt;(jws: string, revoked: boolean): SDJWTCredential  Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:169  Type Parameters‚Äã  Type Parameter\tDefault typeE extends Record&lt;string, any&gt;\tRecord&lt;string, any&gt;  Parameters‚Äã  Parameter\tType\tDefault valuejws\tstring\tundefined revoked\tboolean\tfalse  Returns‚Äã  SDJWTCredential ","version":"Next","tagName":"h3"},{"title":"JWT_VP_PROPS","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/enumerations/JWT_VP_PROPS","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"JWT_VP_PROPS","url":"/docs/sdk-ts/sdk/overview/enumerations/JWT_VP_PROPS#enumeration-members","content":" Enumeration Member\tValue\tDefined in nonce\t&quot;nonce&quot;\tsrc/pollux/models/JWTVerifiableCredential.ts:22 vp\t&quot;vp&quot;\tsrc/pollux/models/JWTVerifiableCredential.ts:23 ","version":"Next","tagName":"h2"},{"title":"ListenerKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/enumerations/ListenerKey","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"ListenerKey","url":"/docs/sdk-ts/sdk/overview/enumerations/ListenerKey#enumeration-members","content":" Enumeration Member\tValue\tDefined in CONNECTION\t&quot;connection&quot;\tsrc/edge-agent/types/index.ts:62 MESSAGE\t&quot;message&quot;\tsrc/edge-agent/types/index.ts:61 REVOKE\t&quot;revoke&quot;\tsrc/edge-agent/types/index.ts:63 ","version":"Next","tagName":"h2"},{"title":"Pluto","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/classes/Pluto","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#extends","content":" Controller  ","version":"Next","tagName":"h2"},{"title":"Implements‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#implements","content":" Pluto  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#constructor","content":" new Pluto(store: Store, keyRestoration: KeyRestoration): Pluto  Defined in: src/pluto/Pluto.ts:199  Parameters‚Äã  Parameter\tTypestore\tStore keyRestoration\tKeyRestoration  Returns‚Äã  Pluto  Overrides‚Äã  Controller.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tInherited from\tDefined in BackupMgr\tpublic\tBackupManager\tundefined\t-\t-\tsrc/pluto/Pluto.ts:196 state\tpublic\tState\tState.STOPPED\tcurrent status of the entity\tPluto.state Controller.state\tsrc/domain/protocols/Startable.ts:42  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#methods","content":" ","version":"Next","tagName":"h2"},{"title":"backup()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#backup","content":" backup(version?: &quot;0.0.1&quot;): Promise&lt;{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }&gt;  Defined in: src/pluto/Pluto.ts:221  Backups *  Parameters‚Äã  Parameter\tTypeversion?\t&quot;0.0.1&quot;  Returns‚Äã  Promise&lt;{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }&gt;  Implementation of‚Äã  Pluto.backup    ","version":"Next","tagName":"h3"},{"title":"deleteMessage()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#deletemessage","content":" deleteMessage(id: string): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:229  Delete a previously stored messages  Parameters‚Äã  Parameter\tTypeid\tstring  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.deleteMessage    ","version":"Next","tagName":"h3"},{"title":"getAllCredentials()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getallcredentials","content":" getAllCredentials(): Promise&lt;Credential[]&gt;  Defined in: src/pluto/Pluto.ts:243  Retrieve all the stored credentials  Returns‚Äã  Promise&lt;Credential[]&gt;  Implementation of‚Äã  Pluto.getAllCredentials    ","version":"Next","tagName":"h3"},{"title":"getAllDidPairs()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getalldidpairs","content":" getAllDidPairs(): Promise&lt;DIDPair[]&gt;  Defined in: src/pluto/Pluto.ts:436  Retrieve all stored DID pairs (DIDComm connections).  Returns‚Äã  Promise&lt;DIDPair[]&gt;  Implementation of‚Äã  Pluto.getAllDidPairs    ","version":"Next","tagName":"h3"},{"title":"getAllMediators()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getallmediators","content":" getAllMediators(): Promise&lt;Mediator[]&gt;  Defined in: src/pluto/Pluto.ts:488  Mediators *  Returns‚Äã  Promise&lt;Mediator[]&gt;  Implementation of‚Äã  Pluto.getAllMediators    ","version":"Next","tagName":"h3"},{"title":"getAllMessages()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getallmessages","content":" getAllMessages(): Promise&lt;Message[]&gt;  Defined in: src/pluto/Pluto.ts:417  Retrieve all stored DIDComm messages.  Returns‚Äã  Promise&lt;Message[]&gt;  Implementation of‚Äã  Pluto.getAllMessages    ","version":"Next","tagName":"h3"},{"title":"getAllPeerDIDs()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getallpeerdids","content":" getAllPeerDIDs(): Promise&lt;PeerDID[]&gt;  Defined in: src/pluto/Pluto.ts:359  Retrieve all stored Peer DIDs.  Returns‚Äã  Promise&lt;PeerDID[]&gt;  Implementation of‚Äã  Pluto.getAllPeerDIDs    ","version":"Next","tagName":"h3"},{"title":"getAllPrismDIDs()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getallprismdids","content":" getAllPrismDIDs(): Promise&lt;PrismDID[]&gt;  Defined in: src/pluto/Pluto.ts:321  Retrieve all stored PRISM DIDs.  Returns‚Äã  Promise&lt;PrismDID[]&gt;  Implementation of‚Äã  Pluto.getAllPrismDIDs    ","version":"Next","tagName":"h3"},{"title":"getCredentialMetadata()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getcredentialmetadata","content":" getCredentialMetadata(name: string): Promise&lt;CredentialMetadata | null&gt;  Defined in: src/pluto/Pluto.ts:264  Fetch the Credential Metadata by its name  Parameters‚Äã  Parameter\tType\tDescriptionname\tstring\t  Returns‚Äã  Promise&lt;CredentialMetadata | null&gt;  Implementation of‚Äã  Pluto.getCredentialMetadata    ","version":"Next","tagName":"h3"},{"title":"getDIDPrivateKeysByDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getdidprivatekeysbydid","content":" getDIDPrivateKeysByDID(did: DID): Promise&lt;PrivateKey[]&gt;  Defined in: src/pluto/Pluto.ts:286  Retrieve available private keys for a given DID.  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  Promise&lt;PrivateKey[]&gt;  Implementation of‚Äã  Pluto.getDIDPrivateKeysByDID    ","version":"Next","tagName":"h3"},{"title":"getLinkSecret()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getlinksecret","content":" getLinkSecret(name: string): Promise&lt;LinkSecret | null&gt;  Defined in: src/pluto/Pluto.ts:275  Retrieve the stored link secret by its name  Parameters‚Äã  Parameter\tType\tDefault valuename\tstring\tDomain.LinkSecret.defaultName  Returns‚Äã  Promise&lt;LinkSecret | null&gt;  Implementation of‚Äã  Pluto.getLinkSecret    ","version":"Next","tagName":"h3"},{"title":"getMessage()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getmessage","content":" getMessage(id: string): Promise&lt;Message | null&gt;  Defined in: src/pluto/Pluto.ts:413  Retrieve a DIDComm message by ID.  Parameters‚Äã  Parameter\tTypeid\tstring  Returns‚Äã  Promise&lt;Message | null&gt;  Implementation of‚Äã  Pluto.getMessage    ","version":"Next","tagName":"h3"},{"title":"getPairByDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getpairbydid","content":" getPairByDID(did: DID): Promise&lt;DIDPair | null&gt;  Defined in: src/pluto/Pluto.ts:444  Retrieve a DID pair containing a given DID as either host or receiver.  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  Promise&lt;DIDPair | null&gt;  Implementation of‚Äã  Pluto.getPairByDID    ","version":"Next","tagName":"h3"},{"title":"getPairByName()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#getpairbyname","content":" getPairByName(alias: string): Promise&lt;DIDPair | null&gt;  Defined in: src/pluto/Pluto.ts:461  Retrieve a DID pair by a given pair name.  Parameters‚Äã  Parameter\tTypealias\tstring  Returns‚Äã  Promise&lt;DIDPair | null&gt;  Implementation of‚Äã  Pluto.getPairByName    ","version":"Next","tagName":"h3"},{"title":"restore()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#restore","content":" restore(backup: { credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:225  load the given data into the store  Parameters‚Äã  Parameter\tType\tDescriptionbackup\t{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; } backup.credentials\t{ data: string; recovery_id: string; }[]\t- backup.did_pairs\t{ alias: string; holder: string; recipient: string; }[]\t- backup.dids\t{ alias?: string; did: string; }[]\t- backup.keys\t{ did?: string; index?: number; key: string; recovery_id: string; }[]\t- backup.link_secret?\tstring\t- backup.mediators\t{ holder_did: string; mediator_did: string; routing_did: string; }[]\t- backup.messages\tstring[]\t- backup.version?\t&quot;0.0.1&quot;\t-  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.restore    ","version":"Next","tagName":"h3"},{"title":"revokeCredential()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#revokecredential","content":" revokeCredential(credential: Credential): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:248  Revoke a Credential  Parameters‚Äã  Parameter\tTypecredential\tCredential  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.revokeCredential    ","version":"Next","tagName":"h3"},{"title":"start()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#start","content":" start(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:62  handle the startup of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt;  Implementation of‚Äã  Pluto.start  Inherited from‚Äã  Controller.start    ","version":"Next","tagName":"h3"},{"title":"stop()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#stop","content":" stop(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:72  handle the teardown of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt;  Implementation of‚Äã  Pluto.stop  Inherited from‚Äã  Controller.stop    ","version":"Next","tagName":"h3"},{"title":"storeCredential()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storecredential","content":" storeCredential(credential: Credential): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:239  Credentials *  Parameters‚Äã  Parameter\tTypecredential\tCredential  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storeCredential    ","version":"Next","tagName":"h3"},{"title":"storeCredentialMetadata()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storecredentialmetadata","content":" storeCredentialMetadata(metadata: CredentialMetadata): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:260  Credential Metadata *  Parameters‚Äã  Parameter\tTypemetadata\tCredentialMetadata  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storeCredentialMetadata    ","version":"Next","tagName":"h3"},{"title":"storeDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storedid","content":" storeDID(did: DID, keys?: Arrayable&lt;PrivateKey&gt;, alias?: string): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:296  DIDs *  Parameters‚Äã  Parameter\tTypedid\tDID keys?\tArrayable&lt;PrivateKey&gt; alias?\tstring  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storeDID    ","version":"Next","tagName":"h3"},{"title":"storeDIDPair()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storedidpair","content":" storeDIDPair(host: DID, receiver: DID, alias: string): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:424  DID Pairs *  Parameters‚Äã  Parameter\tTypehost\tDID receiver\tDID alias\tstring  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storeDIDPair    ","version":"Next","tagName":"h3"},{"title":"storeLinkSecret()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storelinksecret","content":" storeLinkSecret(linkSecret: LinkSecret): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:271  LinkSecret *  Parameters‚Äã  Parameter\tTypelinkSecret\tLinkSecret  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storeLinkSecret    ","version":"Next","tagName":"h3"},{"title":"storeMediator()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storemediator","content":" storeMediator(mediator: Mediator): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:524  Store a mediator information.  Parameters‚Äã  Parameter\tTypemediator\tMediator  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storeMediator    ","version":"Next","tagName":"h3"},{"title":"storeMessage()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storemessage","content":" storeMessage(message: Message): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:403  Messages *  Parameters‚Äã  Parameter\tTypemessage\tMessage  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storeMessage    ","version":"Next","tagName":"h3"},{"title":"storeMessages()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storemessages","content":" storeMessages(messages: Message[]): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:407  Store an array of DIDComm messages  Parameters‚Äã  Parameter\tTypemessages\tMessage[]  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storeMessages    ","version":"Next","tagName":"h3"},{"title":"storePeerDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storepeerdid","content":" storePeerDID(did: DID, privateKeys: PrivateKey[]): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:351  Peer DIDs *  Parameters‚Äã  Parameter\tTypedid\tDID privateKeys\tPrivateKey[]  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storePeerDID    ","version":"Next","tagName":"h3"},{"title":"storePrismDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storeprismdid","content":" storePrismDID(did: DID, privateKey: PrivateKey, alias?: string): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:310  Prism DIDs *  Parameters‚Äã  Parameter\tTypedid\tDID privateKey\tPrivateKey alias?\tstring  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storePrismDID    ","version":"Next","tagName":"h3"},{"title":"storePrivateKey()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/classes/Pluto#storeprivatekey","content":" storePrivateKey(privateKey: PrivateKey): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:282  PrivateKeys *  Parameters‚Äã  Parameter\tTypeprivateKey\tPrivateKey  Returns‚Äã  Promise&lt;void&gt;  Implementation of‚Äã  Pluto.storePrivateKey ","version":"Next","tagName":"h3"},{"title":"SDJWT_VP_PROPS","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/enumerations/SDJWT_VP_PROPS","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"SDJWT_VP_PROPS","url":"/docs/sdk-ts/sdk/overview/enumerations/SDJWT_VP_PROPS#enumeration-members","content":" Enumeration Member\tValue\tDefined in _sd\t&quot;_sd&quot;\tsrc/pollux/models/SDJWTVerifiableCredential.ts:24 _sd_alg\t&quot;_sd_alg&quot;\tsrc/pollux/models/SDJWTVerifiableCredential.ts:23 disclosures\t&quot;disclosures&quot;\tsrc/pollux/models/SDJWTVerifiableCredential.ts:25 revoked\t&quot;revoked&quot;\tsrc/pollux/models/SDJWTVerifiableCredential.ts:22 vct\t&quot;vct&quot;\tsrc/pollux/models/SDJWTVerifiableCredential.ts:21 ","version":"Next","tagName":"h2"},{"title":"JWT_VC_PROPS","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/enumerations/JWT_VC_PROPS","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"JWT_VC_PROPS","url":"/docs/sdk-ts/sdk/overview/enumerations/JWT_VC_PROPS#enumeration-members","content":" Enumeration Member\tValue\tDefined in revoked\t&quot;revoked&quot;\tsrc/pollux/models/JWTVerifiableCredential.ts:18 vc\t&quot;vc&quot;\tsrc/pollux/models/JWTVerifiableCredential.ts:17 ","version":"Next","tagName":"h2"},{"title":"makeCollections","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/functions/makeCollections","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"makeCollections","url":"/docs/sdk-ts/sdk/overview/functions/makeCollections#parameters","content":" Parameter\tTypeadditional\tCollectionList  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"makeCollections","url":"/docs/sdk-ts/sdk/overview/functions/makeCollections#returns","content":" { credential-metadata: { schema: TypedSchema&lt;CredentialMetadata&gt;; }; credentials: { migrationStrategies: MigrationStrategies; schema: TypedSchema&lt;Credential&gt;; }; did-link: { schema: TypedSchema&lt;DIDLink&gt;; }; didkey-link: { schema: TypedSchema&lt;DIDKeyLink&gt;; }; dids: { schema: TypedSchema&lt;DID&gt;; }; keys: { schema: TypedSchema&lt;Key&gt;; }; messages: { schema: TypedSchema&lt;Message&gt;; }; }  Name\tType\tDefault value\tDefined incredential-metadata\t{ schema: TypedSchema&lt;CredentialMetadata&gt;; }\t-\tsrc/pluto/collections/index.ts:19 credential-metadata.schema\tTypedSchema&lt;CredentialMetadata&gt;\tModels.CredentialMetadataSchema\tsrc/pluto/collections/index.ts:19 credentials\t{ migrationStrategies: MigrationStrategies; schema: TypedSchema&lt;Credential&gt;; }\t-\tsrc/pluto/collections/index.ts:18 credentials.migrationStrategies\tMigrationStrategies\tModels.CredentialMigration\tsrc/pluto/collections/index.ts:18 credentials.schema\tTypedSchema&lt;Credential&gt;\tModels.CredentialSchema\tsrc/pluto/collections/index.ts:18 did-link\t{ schema: TypedSchema&lt;DIDLink&gt;; }\t-\tsrc/pluto/collections/index.ts:21 did-link.schema\tTypedSchema&lt;DIDLink&gt;\tModels.DIDLinkSchema\tsrc/pluto/collections/index.ts:21 didkey-link\t{ schema: TypedSchema&lt;DIDKeyLink&gt;; }\t-\tsrc/pluto/collections/index.ts:20 didkey-link.schema\tTypedSchema&lt;DIDKeyLink&gt;\tModels.DIDKeyLinkSchema\tsrc/pluto/collections/index.ts:20 dids\t{ schema: TypedSchema&lt;DID&gt;; }\t-\tsrc/pluto/collections/index.ts:22 dids.schema\tTypedSchema&lt;DID&gt;\tModels.DIDSchema\tsrc/pluto/collections/index.ts:22 keys\t{ schema: TypedSchema&lt;Key&gt;; }\t-\tsrc/pluto/collections/index.ts:23 keys.schema\tTypedSchema&lt;Key&gt;\tModels.KeySchema\tsrc/pluto/collections/index.ts:23 messages\t{ schema: TypedSchema&lt;Message&gt;; }\t-\tsrc/pluto/collections/index.ts:24 messages.schema\tTypedSchema&lt;Message&gt;\tModels.MessageSchema\tsrc/pluto/collections/index.ts:24 ","version":"Next","tagName":"h2"},{"title":"Args_RequestCredentialJWT","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/Args_RequestCredentialJWT","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Args_RequestCredentialJWT","url":"/docs/sdk-ts/sdk/overview/interfaces/Args_RequestCredentialJWT#properties","content":" Property\tType\tDefined in claims\t{ name: string; type: string; value: string; }[]\tsrc/edge-agent/helpers/RunProtocol.ts:27 format\tJWT\tsrc/edge-agent/helpers/RunProtocol.ts:26 holderDID\tDID\tsrc/edge-agent/helpers/RunProtocol.ts:24 issuerDID\tDID\tsrc/edge-agent/helpers/RunProtocol.ts:23 message\tMessage\tsrc/edge-agent/helpers/RunProtocol.ts:25 ","version":"Next","tagName":"h2"},{"title":"Args_RequestCredentialSDJWT","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/Args_RequestCredentialSDJWT","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Args_RequestCredentialSDJWT","url":"/docs/sdk-ts/sdk/overview/interfaces/Args_RequestCredentialSDJWT#properties","content":" Property\tType\tDefined in claims\t{ name: string; type: string; value: string; }[]\tsrc/edge-agent/helpers/RunProtocol.ts:35 disclosureFrame?\tNonNever&lt;{[key: string]: undefined; cnf?: undefined; exp?: undefined; iat?: undefined; iss?: undefined; nbf?: undefined; status?: undefined; sub?: undefined; vct?: undefined; } &amp; SD&lt;SdJwtVcPayload&gt; &amp; DECOY&gt;\tsrc/edge-agent/helpers/RunProtocol.ts:36 format\tSDJWT\tsrc/edge-agent/helpers/RunProtocol.ts:34 holderDID\tDID\tsrc/edge-agent/helpers/RunProtocol.ts:32 issuerDID\tDID\tsrc/edge-agent/helpers/RunProtocol.ts:31 message\tMessage\tsrc/edge-agent/helpers/RunProtocol.ts:33 ","version":"Next","tagName":"h2"},{"title":"repositoryFactory","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/functions/repositoryFactory","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"repositoryFactory","url":"/docs/sdk-ts/sdk/overview/functions/repositoryFactory#parameters","content":" Parameter\tType\tDescriptionstore\tStore keyRestoration\tKeyRestoration\t  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"repositoryFactory","url":"/docs/sdk-ts/sdk/overview/functions/repositoryFactory#returns","content":" { CredentialMetadata: CredentialMetadataRepository; Credentials: CredentialRepository; DIDKeyLinks: DIDKeyLinkRepository; DIDLinks: DIDLinkRepository; DIDs: DIDRepository; Keys: KeyRepository; LinkSecrets: LinkSecretRepository; Messages: MessageRepository; }  list of instantiated Repostitories  Name\tType\tDefined inCredentialMetadata\tCredentialMetadataRepository\tsrc/pluto/repositories/builders/factory.ts:23 Credentials\tCredentialRepository\tsrc/pluto/repositories/builders/factory.ts:22 DIDKeyLinks\tDIDKeyLinkRepository\tsrc/pluto/repositories/builders/factory.ts:28 DIDLinks\tDIDLinkRepository\tsrc/pluto/repositories/builders/factory.ts:29 DIDs\tDIDRepository\tsrc/pluto/repositories/builders/factory.ts:24 Keys\tKeyRepository\tsrc/pluto/repositories/builders/factory.ts:25 LinkSecrets\tLinkSecretRepository\tsrc/pluto/repositories/builders/factory.ts:26 Messages\tMessageRepository\tsrc/pluto/repositories/builders/factory.ts:27 ","version":"Next","tagName":"h2"},{"title":"schemaFactory","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/functions/schemaFactory","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"schemaFactory","url":"/docs/sdk-ts/sdk/overview/functions/schemaFactory#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"schemaFactory","url":"/docs/sdk-ts/sdk/overview/functions/schemaFactory#parameters","content":" Parameter\tType\tDescriptiongenerator\t(schema: SchemaGenerator&lt;T&gt;) =&gt; void\t  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"schemaFactory","url":"/docs/sdk-ts/sdk/overview/functions/schemaFactory#returns","content":" TypedSchema&lt;T&gt; ","version":"Next","tagName":"h2"},{"title":"CreateOOBOfferArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/CreateOOBOfferArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CreateOOBOfferArgs","url":"/docs/sdk-ts/sdk/overview/interfaces/CreateOOBOfferArgs#properties","content":" Property\tType\tDescription\tDefined in accept?\tstring[]\tOptional array of accepted protocols (defaults to [&quot;didcomm/v2&quot;])\tsrc/edge-agent/didcomm/CreateOOBOffer.ts:21 baseUrl?\tstring\tOptional base URL for the invitation (deprecated, not used in current implementation)\tsrc/edge-agent/didcomm/CreateOOBOffer.ts:13 from\tDID\tThe DID of the issuer creating the offer\tsrc/edge-agent/didcomm/CreateOOBOffer.ts:15 goal?\tstring\tOptional human-readable goal description (defaults to &quot;Issue Credential&quot;)\tsrc/edge-agent/didcomm/CreateOOBOffer.ts:19 goalCode?\tstring\tOptional goal code for the invitation (defaults to &quot;issue-vc&quot;)\tsrc/edge-agent/didcomm/CreateOOBOffer.ts:17 offer\tOfferCredential\tThe credential offer to include in the invitation\tsrc/edge-agent/didcomm/CreateOOBOffer.ts:23 ","version":"Next","tagName":"h2"},{"title":"Connection","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/Connection","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Connection","url":"/docs/sdk-ts/sdk/overview/interfaces/Connection#properties","content":" Property\tType\tDescription\tDefined in close?\t() =&gt; Promise&lt;void&gt;\thandle any desired teardown\tsrc/edge-agent/connections/Connection.ts:29 receive?\t(protocol: any, ctx: any) =&gt; Promise&lt;void&gt;\tcalled when a Message is received from this connection\tsrc/edge-agent/connections/Connection.ts:25 send\t(protocol: any, ctx: any) =&gt; Promise&lt;any&gt;\thandle delivering a Message to the connected entity\tsrc/edge-agent/connections/Connection.ts:21 state\tState\tcurrent condition of the connection\tsrc/edge-agent/connections/Connection.ts:17 uri\tstring\tunique identifer for the connection\tsrc/edge-agent/connections/Connection.ts:13 ","version":"Next","tagName":"h2"},{"title":"CreatePresentationArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/CreatePresentationArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CreatePresentationArgs","url":"/docs/sdk-ts/sdk/overview/interfaces/CreatePresentationArgs#properties","content":" Property\tType\tDefined in credential\tCredential\tsrc/plugins/internal/oea/tasks/CreatePresentation.ts:16 request\tRequestPresentation\tsrc/plugins/internal/oea/tasks/CreatePresentation.ts:17 ","version":"Next","tagName":"h2"},{"title":"CreateOOBPresentationRequestArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/CreateOOBPresentationRequestArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CreateOOBPresentationRequestArgs","url":"/docs/sdk-ts/sdk/overview/interfaces/CreateOOBPresentationRequestArgs#properties","content":" Property\tType\tDescription\tDefined in accept?\tstring[]\tOptional array of accepted protocols (defaults to [&quot;didcomm/v2&quot;])\tsrc/edge-agent/didcomm/CreateOOBPresentationRequest.ts:22 baseUrl?\tstring\tOptional base URL for the invitation (deprecated, not used in current implementation)\tsrc/edge-agent/didcomm/CreateOOBPresentationRequest.ts:14 from\tDID\tThe DID of the verifier creating the presentation request\tsrc/edge-agent/didcomm/CreateOOBPresentationRequest.ts:16 goal?\tstring\tOptional human-readable goal description (defaults to &quot;Request Presentation&quot;)\tsrc/edge-agent/didcomm/CreateOOBPresentationRequest.ts:20 goalCode?\tstring\tOptional goal code for the invitation (defaults to &quot;verify-credential&quot;)\tsrc/edge-agent/didcomm/CreateOOBPresentationRequest.ts:18 presentationRequest\tRequestPresentation\tThe presentation request to include in the invitation\tsrc/edge-agent/didcomm/CreateOOBPresentationRequest.ts:24 ","version":"Next","tagName":"h2"},{"title":"CreatePresentationRequestArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/CreatePresentationRequestArgs","content":"","keywords":"","version":"Next"},{"title":"Deprecated‚Äã","type":1,"pageTitle":"CreatePresentationRequestArgs","url":"/docs/sdk-ts/sdk/overview/interfaces/CreatePresentationRequestArgs#deprecated","content":" Use CreatePresentationRequestArgs instead from @hyperledger/identus-sdk/plugins/oea  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"CreatePresentationRequestArgs","url":"/docs/sdk-ts/sdk/overview/interfaces/CreatePresentationRequestArgs#properties","content":" Property\tType\tDefined in claims\tJWTPresentationClaims | SDJWTPresentationClaims | Claims\tsrc/plugins/internal/oea/tasks/CreatePresentationRequest.ts:15 toDID\tDID\tsrc/plugins/internal/oea/tasks/CreatePresentationRequest.ts:14 type\tCredentialType\tsrc/plugins/internal/oea/tasks/CreatePresentationRequest.ts:13 ","version":"Next","tagName":"h2"},{"title":"Credential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/Credential","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/interfaces/Credential#extends","content":" Model  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/interfaces/Credential#properties","content":" Property\tType\tDescription\tInherited from\tDefined in credentialCreated?\tstring\t-\t-\tsrc/pluto/models/Credential.ts:29 credentialSchema?\tstring\t-\t-\tsrc/pluto/models/Credential.ts:31 credentialUpdated?\tstring\t-\t-\tsrc/pluto/models/Credential.ts:30 dataJson\tstring\tStringified JSON values\t-\tsrc/pluto/models/Credential.ts:24 id\tstring\t-\t-\tsrc/pluto/models/Credential.ts:35 issuer?\tstring\t-\t-\tsrc/pluto/models/Credential.ts:27 recoveryId\tstring\tIdentifier for recovery\t-\tsrc/pluto/models/Credential.ts:20 revoked?\tboolean\t-\t-\tsrc/pluto/models/Credential.ts:33 subject?\tstring\t-\t-\tsrc/pluto/models/Credential.ts:28 uuid\tstring\tUniversally Unique Identifier. should be unique across all items.\tModel.uuid\tsrc/domain/buildingBlocks/Pluto.ts:23 validUntil?\tnumber\t-\t-\tsrc/pluto/models/Credential.ts:32 ","version":"Next","tagName":"h2"},{"title":"CreatePrismDIDArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/CreatePrismDIDArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CreatePrismDIDArgs","url":"/docs/sdk-ts/sdk/overview/interfaces/CreatePrismDIDArgs#properties","content":" Property\tType\tDefined in alias?\tstring\tsrc/edge-agent/didFunctions/CreatePrismDID.ts:14 authenticationKeyCurve?\tCurve\tsrc/edge-agent/didFunctions/CreatePrismDID.ts:12 keyPathIndex?\tnumber\tsrc/edge-agent/didFunctions/CreatePrismDID.ts:15 services?\tService[]\tsrc/edge-agent/didFunctions/CreatePrismDID.ts:13 ","version":"Next","tagName":"h2"},{"title":"CredentialMetadata","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/CredentialMetadata","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CredentialMetadata","url":"/docs/sdk-ts/sdk/overview/interfaces/CredentialMetadata#extends","content":" Model  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"CredentialMetadata","url":"/docs/sdk-ts/sdk/overview/interfaces/CredentialMetadata#properties","content":" Property\tType\tDescription\tInherited from\tDefined in dataJson\tstring\tStringified JSON values\t-\tsrc/pluto/models/CredentialMetadata.ts:17 name\tstring\tIdentifier for retrieval\t-\tsrc/pluto/models/CredentialMetadata.ts:21 recoveryId\tstring\tIdentifier for recovery\t-\tsrc/pluto/models/CredentialMetadata.ts:13 uuid\tstring\tUniversally Unique Identifier. should be unique across all items.\tModel.uuid\tsrc/domain/buildingBlocks/Pluto.ts:23 ","version":"Next","tagName":"h2"},{"title":"DID","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/DID","content":"","keywords":"","version":"Next"},{"title":"See‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/interfaces/DID#see","content":" Domain.DID  ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/interfaces/DID#extends","content":" Model  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/interfaces/DID#properties","content":" Property\tType\tDescription\tInherited from\tDefined in alias?\tstring\tOptional name\t-\tsrc/pluto/models/DID.ts:21 method\tstring\t-\t-\tsrc/pluto/models/DID.ts:16 schema\tstring\t-\t-\tsrc/pluto/models/DID.ts:15 uuid\tstring\tUniversally Unique Identifier. should be unique across all items.\tModel.uuid\tsrc/domain/buildingBlocks/Pluto.ts:23 ","version":"Next","tagName":"h2"},{"title":"DIDKeyLink","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDKeyLink","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DIDKeyLink","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDKeyLink#extends","content":" Model  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"DIDKeyLink","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDKeyLink#properties","content":" Property\tType\tDescription\tInherited from\tDefined in alias?\tstring\tOptional name for the relationship\t-\tsrc/pluto/models/relationships/DIDKeyLink.ts:21 didId\tstring\tUUID of DID\t-\tsrc/pluto/models/relationships/DIDKeyLink.ts:13 keyId\tstring\tUUID of Key\t-\tsrc/pluto/models/relationships/DIDKeyLink.ts:17 uuid\tstring\tUniversally Unique Identifier. should be unique across all items.\tModel.uuid\tsrc/domain/buildingBlocks/Pluto.ts:23 ","version":"Next","tagName":"h2"},{"title":"DIDLink","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDLink","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DIDLink","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDLink#extends","content":" Model  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"DIDLink","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDLink#properties","content":" Property\tType\tDescription\tInherited from\tDefined in alias?\tstring\tOptional name for the relationship\t-\tsrc/pluto/models/relationships/DIDLink.ts:26 hostId\tstring\tUUID of the host DID\t-\tsrc/pluto/models/relationships/DIDLink.ts:18 role\tnumber\tRelationship of the DIDs See DIDLink.role enum\t-\tsrc/pluto/models/relationships/DIDLink.ts:14 targetId\tstring\tUUID of the target DID\t-\tsrc/pluto/models/relationships/DIDLink.ts:22 uuid\tstring\tUniversally Unique Identifier. should be unique across all items.\tModel.uuid\tsrc/domain/buildingBlocks/Pluto.ts:23 ","version":"Next","tagName":"h2"},{"title":"IArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/IArgs","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"IArgs","url":"/docs/sdk-ts/sdk/overview/interfaces/IArgs#type-parameters","content":" Type ParameterT extends string D extends JsonObj  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"IArgs","url":"/docs/sdk-ts/sdk/overview/interfaces/IArgs#properties","content":" Property\tType\tDefined in data\tD\tsrc/edge-agent/helpers/RunProtocol.ts:20 pid\tstring\tsrc/edge-agent/helpers/RunProtocol.ts:18 type\tT\tsrc/edge-agent/helpers/RunProtocol.ts:16 ","version":"Next","tagName":"h2"},{"title":"ForwardMessageBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/ForwardMessageBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"ForwardMessageBody","url":"/docs/sdk-ts/sdk/overview/interfaces/ForwardMessageBody#properties","content":" Property\tType\tDefined in next\tstring\tsrc/mercury/forward/ForwardMessage.ts:5 ","version":"Next","tagName":"h2"},{"title":"DIDCommProtocol","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDCommProtocol","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIDCommProtocol","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDCommProtocol#methods","content":" ","version":"Next","tagName":"h2"},{"title":"packEncrypted()‚Äã","type":1,"pageTitle":"DIDCommProtocol","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDCommProtocol#packencrypted","content":" packEncrypted(message: Message, to: DID, from?: DID): Promise&lt;string&gt;  Defined in: src/mercury/DIDCommProtocol.ts:4  Parameters‚Äã  Parameter\tTypemessage\tMessage to\tDID from?\tDID  Returns‚Äã  Promise&lt;string&gt;    ","version":"Next","tagName":"h3"},{"title":"unpack()‚Äã","type":1,"pageTitle":"DIDCommProtocol","url":"/docs/sdk-ts/sdk/overview/interfaces/DIDCommProtocol#unpack","content":" unpack(message: string): Promise&lt;Message&gt;  Defined in: src/mercury/DIDCommProtocol.ts:14  Parameters‚Äã  Parameter\tTypemessage\tstring  Returns‚Äã  Promise&lt;Message&gt; ","version":"Next","tagName":"h3"},{"title":"IRestoreTask","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/IRestoreTask","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"IRestoreTask","url":"/docs/sdk-ts/sdk/overview/interfaces/IRestoreTask#methods","content":" ","version":"Next","tagName":"h2"},{"title":"run()‚Äã","type":1,"pageTitle":"IRestoreTask","url":"/docs/sdk-ts/sdk/overview/interfaces/IRestoreTask#run","content":" run(): Promise&lt;void&gt;  Defined in: src/pluto/backup/versions/interfaces.ts:8  Returns‚Äã  Promise&lt;void&gt; ","version":"Next","tagName":"h3"},{"title":"IBackupTask","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/IBackupTask","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"IBackupTask","url":"/docs/sdk-ts/sdk/overview/interfaces/IBackupTask#methods","content":" ","version":"Next","tagName":"h2"},{"title":"run()‚Äã","type":1,"pageTitle":"IBackupTask","url":"/docs/sdk-ts/sdk/overview/interfaces/IBackupTask#run","content":" run(): Promise&lt;{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }&gt;  Defined in: src/pluto/backup/versions/interfaces.ts:4  Returns‚Äã  Promise&lt;{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }&gt; ","version":"Next","tagName":"h3"},{"title":"JWTPresentationPayload","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/JWTPresentationPayload","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"JWTPresentationPayload","url":"/docs/sdk-ts/sdk/overview/interfaces/JWTPresentationPayload#properties","content":" Property\tType\tDefined in aud?\tstring | string[]\tsrc/pollux/models/JWTVerifiableCredential.ts:42 exp?\tnumber\tsrc/pollux/models/JWTVerifiableCredential.ts:44 iat?\tnumber\tsrc/pollux/models/JWTVerifiableCredential.ts:40 iss?\tstring\tsrc/pollux/models/JWTVerifiableCredential.ts:39 jti?\tstring\tsrc/pollux/models/JWTVerifiableCredential.ts:41 nbf?\tnumber\tsrc/pollux/models/JWTVerifiableCredential.ts:43 nonce?\tstring\tsrc/pollux/models/JWTVerifiableCredential.ts:45 vp\tW3CVerifiablePresentation\tsrc/pollux/models/JWTVerifiableCredential.ts:46 ","version":"Next","tagName":"h2"},{"title":"Message","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/Message","content":"","keywords":"","version":"Next"},{"title":"See‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/interfaces/Message#see","content":" Domain.Message  ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/interfaces/Message#extends","content":" Model  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/interfaces/Message#properties","content":" Property\tType\tDescription\tInherited from\tDefined in createdTime\tnumber\t-\t-\tsrc/pluto/models/Message.ts:19 dataJson\tstring\tStringified JSON values\t-\tsrc/pluto/models/Message.ts:15 from?\tstring\t-\t-\tsrc/pluto/models/Message.ts:22 id\tstring\t-\t-\tsrc/pluto/models/Message.ts:18 isReceived\tnumber\t-\t-\tsrc/pluto/models/Message.ts:24 piuri\tstring\t-\t-\tsrc/pluto/models/Message.ts:21 thid?\tstring\t-\t-\tsrc/pluto/models/Message.ts:20 to?\tstring\t-\t-\tsrc/pluto/models/Message.ts:23 uuid\tstring\tUniversally Unique Identifier. should be unique across all items.\tModel.uuid\tsrc/domain/buildingBlocks/Pluto.ts:23 ","version":"Next","tagName":"h2"},{"title":"JWTCredentialPayload","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/JWTCredentialPayload","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"JWTCredentialPayload","url":"/docs/sdk-ts/sdk/overview/interfaces/JWTCredentialPayload#properties","content":" Property\tType\tDefined in aud?\tstring | string[]\tsrc/pollux/models/JWTVerifiableCredential.ts:33 exp?\tnumber\tsrc/pollux/models/JWTVerifiableCredential.ts:31 iat?\tnumber\tsrc/pollux/models/JWTVerifiableCredential.ts:28 iss\tstring\tsrc/pollux/models/JWTVerifiableCredential.ts:27 jti?\tstring\tsrc/pollux/models/JWTVerifiableCredential.ts:29 nbf?\tnumber\tsrc/pollux/models/JWTVerifiableCredential.ts:30 revoked?\tboolean\tsrc/pollux/models/JWTVerifiableCredential.ts:34 sub\tstring\tsrc/pollux/models/JWTVerifiableCredential.ts:32 vc\tW3CVerifiableCredential\tsrc/pollux/models/JWTVerifiableCredential.ts:35 ","version":"Next","tagName":"h2"},{"title":"Key","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/Key","content":"","keywords":"","version":"Next"},{"title":"See‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/interfaces/Key#see","content":" Domain.KeyDomain.StorableKey  ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/interfaces/Key#extends","content":" Model  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/interfaces/Key#properties","content":" Property\tType\tDescription\tInherited from\tDefined in alias?\tstring\tOptional name\t-\tsrc/pluto/models/Key.ts:21 index?\tnumber\t-\t-\tsrc/pluto/models/Key.ts:22 rawHex\tstring\tHex encoded Key.raw\t-\tsrc/pluto/models/Key.ts:17 recoveryId\tstring\t-\t-\tsrc/pluto/models/Key.ts:13 uuid\tstring\tUniversally Unique Identifier. should be unique across all items.\tModel.uuid\tsrc/domain/buildingBlocks/Pluto.ts:23 ","version":"Next","tagName":"h2"},{"title":"PeerDIDEncoded","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/PeerDIDEncoded","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PeerDIDEncoded","url":"/docs/sdk-ts/sdk/overview/interfaces/PeerDIDEncoded#properties","content":" Property\tType\tDefined in s\t{ a?: string[]; r?: string[]; uri: string; }\tsrc/peer-did/PeerDID.ts:23 s.a?\tstring[]\tsrc/peer-did/PeerDID.ts:26 s.r?\tstring[]\tsrc/peer-did/PeerDID.ts:25 s.uri\tstring\tsrc/peer-did/PeerDID.ts:24 t\tstring\tsrc/peer-did/PeerDID.ts:22 ","version":"Next","tagName":"h2"},{"title":"QueryOperators","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/QueryOperators","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"QueryOperators","url":"/docs/sdk-ts/sdk/overview/interfaces/QueryOperators#type-parameters","content":" Type ParameterPathValueType  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"QueryOperators","url":"/docs/sdk-ts/sdk/overview/interfaces/QueryOperators#properties","content":" Property\tType\tDefined in $elemMatch?\tQuerySelector&lt;PathValueType&gt;\tsrc/pluto/types.ts:42 $eq?\tPathValueType\tsrc/pluto/types.ts:27 $exists?\tboolean\tsrc/pluto/types.ts:37 $gt?\tPathValueType\tsrc/pluto/types.ts:28 $gte?\tPathValueType\tsrc/pluto/types.ts:29 $in?\tPathValueType[]\tsrc/pluto/types.ts:33 $lt?\tPathValueType\tsrc/pluto/types.ts:30 $lte?\tPathValueType\tsrc/pluto/types.ts:31 $mod?\tnumber\tsrc/pluto/types.ts:39 $ne?\tPathValueType\tsrc/pluto/types.ts:32 $nin?\tPathValueType[]\tsrc/pluto/types.ts:34 $not?\tPathValueType\tsrc/pluto/types.ts:40 $options?\tstring\tsrc/pluto/types.ts:36 $regex?\tstring | RegExp\tsrc/pluto/types.ts:35 $size?\tnumber\tsrc/pluto/types.ts:41 $type?\t&quot;string&quot; | &quot;number&quot; | &quot;boolean&quot; | &quot;object&quot; | &quot;null&quot; | &quot;array&quot;\tsrc/pluto/types.ts:38 ","version":"Next","tagName":"h2"},{"title":"Payload","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/Payload","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Payload","url":"/docs/sdk-ts/sdk/overview/interfaces/Payload#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"Payload","url":"/docs/sdk-ts/sdk/overview/interfaces/Payload#properties","content":" Property\tType\tDefined in data\tT\tsrc/domain/protocols/Payload.ts:12 pid\tstring\tsrc/domain/protocols/Payload.ts:10 ","version":"Next","tagName":"h2"},{"title":"PKInstanceArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/PKInstanceArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PKInstanceArgs","url":"/docs/sdk-ts/sdk/overview/interfaces/PKInstanceArgs#properties","content":" Property\tType\tDefined in verificationMethod\tVerificationMethod\tsrc/pollux/utils/jwt/PKInstance.ts:8 ","version":"Next","tagName":"h2"},{"title":"SchemaGenerator","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/interfaces/SchemaGenerator","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"SchemaGenerator","url":"/docs/sdk-ts/sdk/overview/interfaces/SchemaGenerator#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"SchemaGenerator","url":"/docs/sdk-ts/sdk/overview/interfaces/SchemaGenerator#methods","content":" ","version":"Next","tagName":"h2"},{"title":"addProperty()‚Äã","type":1,"pageTitle":"SchemaGenerator","url":"/docs/sdk-ts/sdk/overview/interfaces/SchemaGenerator#addproperty","content":" Call Signature‚Äã  addProperty&lt;P&gt;(type: P, key: KeysFor&lt;T, P&gt;, opts?: any): void  Defined in: src/pluto/models/Schema.ts:68  Type Parameters‚Äã  Type ParameterP extends PropertyTypes  Parameters‚Äã  Parameter\tTypetype\tP key\tKeysFor&lt;T, P&gt; opts?\tany  Returns‚Äã  void  Call Signature‚Äã  addProperty(type: PropertyTypes, key: string, opts?: any): void  Defined in: src/pluto/models/Schema.ts:69  Parameters‚Äã  Parameter\tTypetype\tPropertyTypes key\tstring opts?\tany  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"setEncrypted()‚Äã","type":1,"pageTitle":"SchemaGenerator","url":"/docs/sdk-ts/sdk/overview/interfaces/SchemaGenerator#setencrypted","content":" setEncrypted&lt;K&gt;(...keys: K[]): K[]  Defined in: src/pluto/models/Schema.ts:70  Type Parameters‚Äã  Type ParameterK extends string  Parameters‚Äã  Parameter\tType...keys\tK[]  Returns‚Äã  K[]    ","version":"Next","tagName":"h3"},{"title":"setRequired()‚Äã","type":1,"pageTitle":"SchemaGenerator","url":"/docs/sdk-ts/sdk/overview/interfaces/SchemaGenerator#setrequired","content":" setRequired(...keys: StringKeys&lt;T&gt;[]): void  Defined in: src/pluto/models/Schema.ts:71  Parameters‚Äã  Parameter\tType...keys\tStringKeys&lt;T&gt;[]  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"setVersion()‚Äã","type":1,"pageTitle":"SchemaGenerator","url":"/docs/sdk-ts/sdk/overview/interfaces/SchemaGenerator#setversion","content":" setVersion(version: number): void  Defined in: src/pluto/models/Schema.ts:72  Parameters‚Äã  Parameter\tTypeversion\tnumber  Returns‚Äã  void ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Connection/","content":"","keywords":"","version":"Next"},{"title":"Enumerations‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Connection/#enumerations","content":" Enumeration\tDescriptionState\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Connection/#type-aliases","content":" Type Alias\tDescriptionProtocol\t- ","version":"Next","tagName":"h2"},{"title":"State","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Connection/enumerations/State","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"State","url":"/docs/sdk-ts/sdk/overview/namespaces/Connection/enumerations/State#enumeration-members","content":" Enumeration Member\tValue\tDefined in BROKEN\t6\tsrc/edge-agent/connections/Connection.ts:50 CLOSED\t5\tsrc/edge-agent/connections/Connection.ts:48 DENIED\t3\tsrc/edge-agent/connections/Connection.ts:44 GRANTED\t4\tsrc/edge-agent/connections/Connection.ts:46 NEW\t1\tsrc/edge-agent/connections/Connection.ts:40 REQUESTED\t2\tsrc/edge-agent/connections/Connection.ts:42 UNKNOWN\t0\tsrc/edge-agent/connections/Connection.ts:38 ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/DIDLink/","content":"","keywords":"","version":"Next"},{"title":"Enumerations‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/DIDLink/#enumerations","content":" Enumeration\tDescriptionrole\tEnum for Role values - unknown : value could not be mapped - pair : DIDPair - mediator : Mediator connection, DID for mediator - routing : Mediator connection, routing DID returned ","version":"Next","tagName":"h2"},{"title":"Protocol","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Connection/type-aliases/Protocol","content":"Protocol @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Connection / Protocol Type Alias: Protocol Protocol = Message | ApiRequest | any Defined in: src/edge-agent/connections/Connection.ts:34","keywords":"","version":"Next"},{"title":"role","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/DIDLink/enumerations/role","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"role","url":"/docs/sdk-ts/sdk/overview/namespaces/DIDLink/enumerations/role#enumeration-members","content":" Enumeration Member\tValue\tDefined in mediator\t2\tsrc/pluto/models/relationships/DIDLink.ts:44 pair\t1\tsrc/pluto/models/relationships/DIDLink.ts:43 routing\t3\tsrc/pluto/models/relationships/DIDLink.ts:45 unknown\t0\tsrc/pluto/models/relationships/DIDLink.ts:42 ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/","content":"","keywords":"","version":"Next"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/#namespaces","content":" Namespace\tDescriptionAgentError\t- ApolloError\t- Backup\t- CastorError\t- CommonError\t- DIDDocument\t- ExportableKey\tDeclaration merge to contain key conversion functions ImportableKey\t- JWK\tJWK definitions based on https://www.iana.org/assignments/jose/jose.xhtml JWT\t- MercuryError\t- Message\t- Models\t- PEM\t- Pluto\t- PlutoError\t- PolluxError\t- Protocols\t- Schema\t- Startable\tDefine controls for managing entity lifecycle. StorableKey\t-  ","version":"Next","tagName":"h2"},{"title":"Enumerations‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/#enumerations","content":" Enumeration\tDescriptionCredentialType\t- Curve\t- JWT_ALG\t- KeyProperties\t- KeyTypes\t- MessageDirection\t-  ","version":"Next","tagName":"h2"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/#classes","content":" Class\tDescriptionApiError\t- ApiRequest\t- ApiResponse\t- AttachmentDescriptor\t- Credential\tStorable define properties a Domain object must implement to be compatible with Pluto CredentialMetadata\tStorable define properties a Domain object must implement to be compatible with Pluto DerivableKey\t- DID\tStorable define properties a Domain object must implement to be compatible with Pluto DIDDocument\t- DIDPair\t- DIDResolver\t- DIDUrl\t- Key\t- KeyPair\t- LinkSecret\tStorable define properties a Domain object must implement to be compatible with Pluto Message\tStorable define properties a Domain object must implement to be compatible with Pluto PrismDID\t- PrivateKey\tStorable define properties a Domain object must implement to be compatible with Pluto PublicKey\t- SignableKey\t- VerifiableKey\t-  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/#interfaces","content":" Interface\tDescriptionApi\tApi Dependency Apollo\t- AttachmentBase64\t- AttachmentHeader\t- AttachmentJws\t- AttachmentJwsData\t- AttachmentLinkData\t- Castor\t- KeyCurve\t- KeyRestoration\tKeyRestoration protocol defines methods for verifying and restoring cryptographic keys from raw data. Mediator\t- Mercury\t- Options\tFactory options to customise export / import functions Pluto\tPluto is a storage interface describing storage requirements of the edge agents which will be implemented using this SDK. Implement this interface using your preferred underlying storage technology, most appropriate for your use case. ProvableCredential\t- Seed\t- SeedWords\t- Signature\t- StorableCredential\t- StorableKey\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/#type-aliases","content":" Type Alias\tDescriptionAttachmentData\t- AttachmentJsonData\t- Claim\t- ExportableKey\tExportableKey defines the formats a crypographic key can be converted to Default is all HttpMethod\t- JsonString\t- JWK\tJWK MnemonicWordList\t- PresentationClaims\t- Schema\t- W3CVerifiableCredential\t- W3CVerifiablePresentation\t- W3CVerifiablePresentationProof\t-  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/#variables","content":" Variable\tDescriptioncredential\t- did\t- didpair\t- key\t- linksecret\t- mediator\t- message\t- Schema\t- ","version":"Next","tagName":"h2"},{"title":"ApiRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiRequest","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"ApiRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiRequest#extended-by","content":" CredentialRequestTokenRequest  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ApiRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ApiRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiRequest#constructor","content":" new ApiRequest(url: URL): ApiRequest  Defined in: src/domain/models/Api.ts:42  Parameters‚Äã  Parameter\tTypeurl\tURL  Returns‚Äã  ApiRequest  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ApiRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiRequest#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body?\tpublic\tstring | JsonObj\tundefined\tsrc/domain/models/Api.ts:40 headers\treadonly\tHeaders\tundefined\tsrc/domain/models/Api.ts:37 method\tpublic\tHttpMethod\t&quot;GET&quot;\tsrc/domain/models/Api.ts:39 params\treadonly\tURLSearchParams\tundefined\tsrc/domain/models/Api.ts:38 url\treadonly\tURL\tundefined\tsrc/domain/models/Api.ts:42 ","version":"Next","tagName":"h2"},{"title":"ApiError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"ApiError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ApiError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ApiError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiError#constructor","content":" new ApiError(status: number, statusText: string, body: any): ApiError  Defined in: src/domain/models/Api.ts:63  Parameters‚Äã  Parameter\tTypestatus\tnumber statusText\tstring body\tany  Returns‚Äã  ApiError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ApiError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in body\treadonly\tany\t-\t-\tsrc/domain/models/Api.ts:66 cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 status\treadonly\tnumber\t-\t-\tsrc/domain/models/Api.ts:64 statusText\treadonly\tstring\t-\t-\tsrc/domain/models/Api.ts:65 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ApiError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"ApiError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"ApiError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"ApiResponse","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiResponse","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"ApiResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiResponse#type-parameters","content":" Type Parameter\tDefault typeT\tunknown  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ApiResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiResponse#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ApiResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiResponse#constructor","content":" new ApiResponse&lt;T&gt;(body: T, status: number, statusText: string, headersInit: Record&lt;string, any&gt;): ApiResponse&lt;T&gt;  Defined in: src/domain/models/Api.ts:48  Parameters‚Äã  Parameter\tType\tDefault valuebody\tT\tundefined status\tnumber\tundefined statusText\tstring\t&quot;OK&quot; headersInit\tRecord&lt;string, any&gt;\t{}  Returns‚Äã  ApiResponse&lt;T&gt;  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ApiResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiResponse#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body\treadonly\tT\tundefined\tsrc/domain/models/Api.ts:49 headers\treadonly\tHeaders\tundefined\tsrc/domain/models/Api.ts:46 status\treadonly\tnumber\tundefined\tsrc/domain/models/Api.ts:50 statusText\treadonly\tstring\t&quot;OK&quot;\tsrc/domain/models/Api.ts:51  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"ApiResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiResponse#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"httpStatus‚Äã","type":1,"pageTitle":"ApiResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/ApiResponse#httpstatus","content":" Get Signature‚Äã  get httpStatus(): number  Defined in: src/domain/models/Api.ts:57  Returns‚Äã  number ","version":"Next","tagName":"h3"},{"title":"Credential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#extended-by","content":" AnonCredsCredentialJWTCredentialSDJWTCredential  ","version":"Next","tagName":"h2"},{"title":"Implements‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#implements","content":" Storable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#constructor","content":" new Credential(): Credential  Returns‚Äã  Credential  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#properties","content":" Property\tModifier\tType\tDescription\tDefined in claims\tabstract\tClaim[]\t-\tsrc/domain/models/Credential.ts:12 credentialType\tabstract\tCredentialType\t-\tsrc/domain/models/Credential.ts:7 id\tabstract\tstring\t-\tsrc/domain/models/Credential.ts:9 issuer\tabstract\tstring\t-\tsrc/domain/models/Credential.ts:10 properties\tabstract\tMap&lt;string, any&gt;\t-\tsrc/domain/models/Credential.ts:13 recoveryId\tabstract\tstring\t-\tsrc/domain/models/Credential.ts:8 subject\tabstract\tstring\t-\tsrc/domain/models/Credential.ts:11 uuid\treadonly\tstring\tUniversally Unique Identifier. should be unique across all items.\tsrc/domain/models/Credential.ts:15  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"getProperty()‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#getproperty","content":" getProperty(name: string): any  Defined in: src/domain/models/Credential.ts:17  Parameters‚Äã  Parameter\tTypename\tstring  Returns‚Äã  any    ","version":"Next","tagName":"h3"},{"title":"isProvable()‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#isprovable","content":" isProvable(): this is ProvableCredential  Defined in: src/domain/models/Credential.ts:21  Returns‚Äã  this is ProvableCredential    ","version":"Next","tagName":"h3"},{"title":"isRevoked()‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#isrevoked","content":" isRevoked(): boolean  Defined in: src/domain/models/Credential.ts:29  Returns‚Äã  boolean    ","version":"Next","tagName":"h3"},{"title":"isStorable()‚Äã","type":1,"pageTitle":"Credential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Credential#isstorable","content":" isStorable(): this is StorableCredential  Defined in: src/domain/models/Credential.ts:25  Returns‚Äã  this is StorableCredential ","version":"Next","tagName":"h3"},{"title":"AttachmentDescriptor","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/AttachmentDescriptor","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"AttachmentDescriptor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/AttachmentDescriptor#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"AttachmentDescriptor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/AttachmentDescriptor#constructor","content":" new AttachmentDescriptor(data: AttachmentData, mediaType?: string, id?: string, filename?: string[], format?: string, lastModTime?: string, byteCount?: number, description?: string): AttachmentDescriptor  Defined in: src/domain/models/MessageAttachment.ts:41  Parameters‚Äã  Parameter\tTypedata\tAttachmentData mediaType?\tstring id?\tstring filename?\tstring[] format?\tstring lastModTime?\tstring byteCount?\tnumber description?\tstring  Returns‚Äã  AttachmentDescriptor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"AttachmentDescriptor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/AttachmentDescriptor#properties","content":" Property\tModifier\tType\tDefined in byteCount?\treadonly\tnumber\tsrc/domain/models/MessageAttachment.ts:48 data\treadonly\tAttachmentData\tsrc/domain/models/MessageAttachment.ts:42 description?\treadonly\tstring\tsrc/domain/models/MessageAttachment.ts:49 filename?\treadonly\tstring[]\tsrc/domain/models/MessageAttachment.ts:45 format?\treadonly\tstring\tsrc/domain/models/MessageAttachment.ts:46 id\treadonly\tstring\tsrc/domain/models/MessageAttachment.ts:44 lastModTime?\treadonly\tstring\tsrc/domain/models/MessageAttachment.ts:47 mediaType?\treadonly\tstring\tsrc/domain/models/MessageAttachment.ts:43  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"AttachmentDescriptor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/AttachmentDescriptor#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"payload‚Äã","type":1,"pageTitle":"AttachmentDescriptor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/AttachmentDescriptor#payload","content":" Get Signature‚Äã  get payload(): any  Defined in: src/domain/models/MessageAttachment.ts:52  Returns‚Äã  any  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"AttachmentDescriptor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/AttachmentDescriptor#methods","content":" ","version":"Next","tagName":"h2"},{"title":"build()‚Äã","type":1,"pageTitle":"AttachmentDescriptor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/AttachmentDescriptor#build","content":" static build&lt;T&gt;(payload: T, id: string, mediaType: string, filename?: string[], format?: string, lastModTime?: string, byteCount?: number, description?: string): AttachmentDescriptor  Defined in: src/domain/models/MessageAttachment.ts:56  Type Parameters‚Äã  Type ParameterT  Parameters‚Äã  Parameter\tType\tDefault valuepayload\tT\tundefined id\tstring\t... mediaType\tstring\t&quot;application/json&quot; filename?\tstring[]\tundefined format?\tstring\tundefined lastModTime?\tstring\tundefined byteCount?\tnumber\tundefined description?\tstring\tundefined  Returns‚Äã  AttachmentDescriptor ","version":"Next","tagName":"h3"},{"title":"CredentialMetadata","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/CredentialMetadata","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"CredentialMetadata","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/CredentialMetadata#implements","content":" Storable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CredentialMetadata","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/CredentialMetadata#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CredentialMetadata","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/CredentialMetadata#constructor","content":" new CredentialMetadata(type: CredentialType, name: string, json: Record&lt;string, any&gt;): CredentialMetadata  Defined in: src/domain/models/CredentialMetadata.ts:7  Parameters‚Äã  Parameter\tTypetype\tCredentialType name\tstring json\tRecord&lt;string, any&gt;  Returns‚Äã  CredentialMetadata  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CredentialMetadata","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/CredentialMetadata#properties","content":" Property\tModifier\tType\tDescription\tDefined in name\treadonly\tstring\t-\tsrc/domain/models/CredentialMetadata.ts:9 type\treadonly\tCredentialType\t-\tsrc/domain/models/CredentialMetadata.ts:8 uuid\treadonly\tstring\tUniversally Unique Identifier. should be unique across all items.\tsrc/domain/models/CredentialMetadata.ts:5  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CredentialMetadata","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/CredentialMetadata#methods","content":" ","version":"Next","tagName":"h2"},{"title":"isType()‚Äã","type":1,"pageTitle":"CredentialMetadata","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/CredentialMetadata#istype","content":" isType(type: CredentialType): boolean  Defined in: src/domain/models/CredentialMetadata.ts:19  Check the CredentialType of this Metadata  Parameters‚Äã  Parameter\tType\tDescriptiontype\tCredentialType\t  Returns‚Äã  boolean    ","version":"Next","tagName":"h3"},{"title":"toJSON()‚Äã","type":1,"pageTitle":"CredentialMetadata","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/CredentialMetadata#tojson","content":" toJSON(): Record&lt;string, any&gt;  Defined in: src/domain/models/CredentialMetadata.ts:28  Get the raw CredentialMetadata JSON  Returns‚Äã  Record&lt;string, any&gt;  JSON ","version":"Next","tagName":"h3"},{"title":"DIDDocument","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#constructor","content":" new DIDDocument(id: DID, coreProperties: CoreProperty[]): DIDDocument  Defined in: src/domain/models/DIDDocument.ts:6  Parameters‚Äã  Parameter\tTypeid\tDID coreProperties\tCoreProperty[]  Returns‚Äã  DIDDocument  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#properties","content":" Property\tModifier\tType\tDefined in coreProperties\tpublic\tCoreProperty[]\tsrc/domain/models/DIDDocument.ts:8 id\tpublic\tDID\tsrc/domain/models/DIDDocument.ts:7  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"assertionMethod‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#assertionmethod","content":" Get Signature‚Äã  get assertionMethod(): VerificationMethod[]  Defined in: src/domain/models/DIDDocument.ts:39  Returns‚Äã  VerificationMethod[]    ","version":"Next","tagName":"h3"},{"title":"authentication‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#authentication","content":" Get Signature‚Äã  get authentication(): VerificationMethod[]  Defined in: src/domain/models/DIDDocument.ts:17  Returns‚Äã  VerificationMethod[]    ","version":"Next","tagName":"h3"},{"title":"capabilityDelegation‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#capabilitydelegation","content":" Get Signature‚Äã  get capabilityDelegation(): VerificationMethod[]  Defined in: src/domain/models/DIDDocument.ts:32  Returns‚Äã  VerificationMethod[]    ","version":"Next","tagName":"h3"},{"title":"capabilityInvocation‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#capabilityinvocation","content":" Get Signature‚Äã  get capabilityInvocation(): VerificationMethod[]  Defined in: src/domain/models/DIDDocument.ts:25  Returns‚Äã  VerificationMethod[]    ","version":"Next","tagName":"h3"},{"title":"keyAgreement‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#keyagreement","content":" Get Signature‚Äã  get keyAgreement(): VerificationMethod[]  Defined in: src/domain/models/DIDDocument.ts:46  Returns‚Äã  VerificationMethod[]    ","version":"Next","tagName":"h3"},{"title":"services‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#services","content":" Get Signature‚Äã  get services(): Service[]  Defined in: src/domain/models/DIDDocument.ts:11  Returns‚Äã  Service[]    ","version":"Next","tagName":"h3"},{"title":"verificationMethods‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#verificationmethods","content":" Get Signature‚Äã  get verificationMethods(): VerificationMethod[]  Defined in: src/domain/models/DIDDocument.ts:54  Returns‚Äã  VerificationMethod[]  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#methods","content":" ","version":"Next","tagName":"h2"},{"title":"cloneWithNewDID()‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#clonewithnewdid","content":" static cloneWithNewDID(doc: DIDDocument, newDid: DID): DIDDocument  Defined in: src/domain/models/DIDDocument.ts:190  Parameters‚Äã  Parameter\tTypedoc\tDIDDocument newDid\tDID  Returns‚Äã  DIDDocument    ","version":"Next","tagName":"h3"},{"title":"fromJSON()‚Äã","type":1,"pageTitle":"DIDDocument","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDDocument#fromjson","content":" static fromJSON(didDocumentJson: any): DIDDocument  Defined in: src/domain/models/DIDDocument.ts:62  Parameters‚Äã  Parameter\tTypedidDocumentJson\tany  Returns‚Äã  DIDDocument ","version":"Next","tagName":"h3"},{"title":"DerivableKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DerivableKey","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DerivableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DerivableKey#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DerivableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DerivableKey#constructor","content":" new DerivableKey(): DerivableKey  Returns‚Äã  DerivableKey  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"DerivableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DerivableKey#methods","content":" ","version":"Next","tagName":"h2"},{"title":"derive()‚Äã","type":1,"pageTitle":"DerivableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DerivableKey#derive","content":" abstract derive(derivationPath: string): PrivateKey  Defined in: src/domain/models/keyManagement/DerivableKey.ts:4  Parameters‚Äã  Parameter\tTypederivationPath\tstring  Returns‚Äã  PrivateKey ","version":"Next","tagName":"h3"},{"title":"DIDPair","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDPair","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIDPair","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDPair#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIDPair","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDPair#constructor","content":" new DIDPair(host: DID, receiver: DID, name: string): DIDPair  Defined in: src/domain/models/DIDPair.ts:4  Parameters‚Äã  Parameter\tTypehost\tDID receiver\tDID name\tstring  Returns‚Äã  DIDPair  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DIDPair","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDPair#properties","content":" Property\tModifier\tType\tDefined in host\treadonly\tDID\tsrc/domain/models/DIDPair.ts:5 name\treadonly\tstring\tsrc/domain/models/DIDPair.ts:7 receiver\treadonly\tDID\tsrc/domain/models/DIDPair.ts:6 ","version":"Next","tagName":"h2"},{"title":"DID","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#implements","content":" Storable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#constructor","content":" new DID(schema: string, method: string, methodId: string): DID  Defined in: src/domain/models/DID.ts:10  Parameters‚Äã  Parameter\tTypeschema\tstring method\tstring methodId\tstring  Returns‚Äã  DID  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#properties","content":" Property\tModifier\tType\tDescription\tDefined in method\treadonly\tstring\t-\tsrc/domain/models/DID.ts:7 methodId\treadonly\tstring\t-\tsrc/domain/models/DID.ts:8 schema\treadonly\tstring\t-\tsrc/domain/models/DID.ts:6 uuid\treadonly\tstring\tUniversally Unique Identifier. should be unique across all items.\tsrc/domain/models/DID.ts:5  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#methods","content":" ","version":"Next","tagName":"h2"},{"title":"toString()‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#tostring","content":" toString(): string  Defined in: src/domain/models/DID.ts:17  Returns a string representation of an object.  Returns‚Äã  string    ","version":"Next","tagName":"h3"},{"title":"from()‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#from","content":" static from(value: unknown): DID  Defined in: src/domain/models/DID.ts:26  parse value into a DID  Parameters‚Äã  Parameter\tType\tDescriptionvalue\tunknown\tsome representation of a DID  Returns‚Äã  DID    ","version":"Next","tagName":"h3"},{"title":"fromString()‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#fromstring","content":" static fromString(text: string): DID  Defined in: src/domain/models/DID.ts:47  Parameters‚Äã  Parameter\tTypetext\tstring  Returns‚Äã  DID    ","version":"Next","tagName":"h3"},{"title":"getMethodFromString()‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#getmethodfromstring","content":" static getMethodFromString(text: string): string | undefined  Defined in: src/domain/models/DID.ts:70  Parameters‚Äã  Parameter\tTypetext\tstring  Returns‚Äã  string | undefined    ","version":"Next","tagName":"h3"},{"title":"getMethodIdFromString()‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#getmethodidfromstring","content":" static getMethodIdFromString(text: string): string  Defined in: src/domain/models/DID.ts:75  Parameters‚Äã  Parameter\tTypetext\tstring  Returns‚Äã  string    ","version":"Next","tagName":"h3"},{"title":"getSchemaFromString()‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#getschemafromstring","content":" static getSchemaFromString(text: string): string | undefined  Defined in: src/domain/models/DID.ts:65  Parameters‚Äã  Parameter\tTypetext\tstring  Returns‚Äã  string | undefined    ","version":"Next","tagName":"h3"},{"title":"replaceDID()‚Äã","type":1,"pageTitle":"DID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DID#replacedid","content":" static replaceDID(oldStr: string, did: DID): string  Defined in: src/domain/models/DID.ts:81  replace with a new DID  Parameters‚Äã  Parameter\tTypeoldStr\tstring did\tDID  Returns‚Äã  string ","version":"Next","tagName":"h3"},{"title":"DIDUrl","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDUrl","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIDUrl","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDUrl#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIDUrl","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDUrl#constructor","content":" new DIDUrl(did: DID, path: string[], parameters: Map&lt;string, string&gt;, fragment: string): DIDUrl  Defined in: src/domain/models/DIDUrl.ts:9  Parameters‚Äã  Parameter\tType\tDefault valuedid\tDID\tundefined path\tstring[]\t[] parameters\tMap&lt;string, string&gt;\t... fragment\tstring\t&quot;&quot;  Returns‚Äã  DIDUrl  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DIDUrl","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDUrl#properties","content":" Property\tType\tDefined in did\tDID\tsrc/domain/models/DIDUrl.ts:4 fragment\tstring\tsrc/domain/models/DIDUrl.ts:7 parameters\tMap&lt;string, string&gt;\tsrc/domain/models/DIDUrl.ts:6 path\tstring[]\tsrc/domain/models/DIDUrl.ts:5  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIDUrl","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDUrl#methods","content":" ","version":"Next","tagName":"h2"},{"title":"fragmentString()‚Äã","type":1,"pageTitle":"DIDUrl","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDUrl#fragmentstring","content":" fragmentString(): string  Defined in: src/domain/models/DIDUrl.ts:35  Returns‚Äã  string    ","version":"Next","tagName":"h3"},{"title":"pathString()‚Äã","type":1,"pageTitle":"DIDUrl","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDUrl#pathstring","content":" pathString(): string  Defined in: src/domain/models/DIDUrl.ts:25  Returns‚Äã  string    ","version":"Next","tagName":"h3"},{"title":"queryString()‚Äã","type":1,"pageTitle":"DIDUrl","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDUrl#querystring","content":" queryString(): string  Defined in: src/domain/models/DIDUrl.ts:29  Returns‚Äã  string    ","version":"Next","tagName":"h3"},{"title":"string()‚Äã","type":1,"pageTitle":"DIDUrl","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDUrl#string","content":" string(): string  Defined in: src/domain/models/DIDUrl.ts:21  Returns‚Äã  string ","version":"Next","tagName":"h3"},{"title":"Key","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#extended-by","content":" PrivateKeyPublicKey  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#constructor","content":" new Key(): Key  Returns‚Äã  Key  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#properties","content":" Property\tModifier\tType\tDefined in keySpecification\tabstract\tMap&lt;string, string&gt;\tsrc/domain/models/keyManagement/Key.ts:13 raw\tabstract\tUint8Array\tsrc/domain/models/keyManagement/Key.ts:15 size\tabstract\tnumber\tsrc/domain/models/keyManagement/Key.ts:14 to\tabstract\t{ Buffer: () =&gt; Buffer; String: (encoding?: BufferEncoding) =&gt; string; }\tsrc/domain/models/keyManagement/Key.ts:16 to.Buffer\tpublic\t() =&gt; Buffer\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:31 to.String\tpublic\t(encoding?: BufferEncoding) =&gt; string\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:32 type\tabstract\tKeyTypes\tsrc/domain/models/keyManagement/Key.ts:12  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"alg‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#alg","content":" Get Signature‚Äã  get alg(): JWT_ALG  Defined in: src/domain/models/keyManagement/Key.ts:25  Returns‚Äã  JWT_ALG    ","version":"Next","tagName":"h3"},{"title":"curve‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#curve","content":" Get Signature‚Äã  get curve(): string  Defined in: src/domain/models/keyManagement/Key.ts:20  Returns‚Äã  string  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#methods","content":" ","version":"Next","tagName":"h2"},{"title":"canVerify()‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#canverify","content":" canVerify(): this is VerifiableKey  Defined in: src/domain/models/keyManagement/Key.ts:53  Returns‚Äã  this is VerifiableKey    ","version":"Next","tagName":"h3"},{"title":"getEncoded()‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#getencoded","content":" abstract getEncoded(): Uint8Array  Defined in: src/domain/models/keyManagement/Key.ts:18  Returns‚Äã  Uint8Array    ","version":"Next","tagName":"h3"},{"title":"getProperty()‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#getproperty","content":" getProperty(name: string): string | undefined  Defined in: src/domain/models/keyManagement/Key.ts:57  Parameters‚Äã  Parameter\tTypename\tstring  Returns‚Äã  string | undefined    ","version":"Next","tagName":"h3"},{"title":"isCurve()‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#iscurve","content":" isCurve&lt;T&gt;(curve: string): this is T  Defined in: src/domain/models/keyManagement/Key.ts:61  Type Parameters‚Äã  Type ParameterT  Parameters‚Äã  Parameter\tTypecurve\tstring  Returns‚Äã  this is T    ","version":"Next","tagName":"h3"},{"title":"isDerivable()‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#isderivable","content":" isDerivable(): this is DerivableKey  Defined in: src/domain/models/keyManagement/Key.ts:37  Returns‚Äã  this is DerivableKey    ","version":"Next","tagName":"h3"},{"title":"isExportable()‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#isexportable","content":" isExportable(): this is All  Defined in: src/domain/models/keyManagement/Key.ts:41  Returns‚Äã  this is All    ","version":"Next","tagName":"h3"},{"title":"isSignable()‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#issignable","content":" isSignable(): this is SignableKey  Defined in: src/domain/models/keyManagement/Key.ts:45  Returns‚Äã  this is SignableKey    ","version":"Next","tagName":"h3"},{"title":"isStorable()‚Äã","type":1,"pageTitle":"Key","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Key#isstorable","content":" isStorable(): this is StorableKey  Defined in: src/domain/models/keyManagement/Key.ts:49  Returns‚Äã  this is StorableKey ","version":"Next","tagName":"h3"},{"title":"LinkSecret","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/LinkSecret","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"LinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/LinkSecret#implements","content":" Storable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"LinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/LinkSecret#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"LinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/LinkSecret#constructor","content":" new LinkSecret(secret: string, name: string): LinkSecret  Defined in: src/domain/models/LinkSecret.ts:8  Parameters‚Äã  Parameter\tType\tDefault valuesecret\tstring\tundefined name\tstring\tLinkSecret.defaultName  Returns‚Äã  LinkSecret  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"LinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/LinkSecret#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tDefined in name\treadonly\tstring\tLinkSecret.defaultName\t-\tsrc/domain/models/LinkSecret.ts:10 secret\treadonly\tstring\tundefined\t-\tsrc/domain/models/LinkSecret.ts:9 uuid\treadonly\tstring\tundefined\tUniversally Unique Identifier. should be unique across all items.\tsrc/domain/models/LinkSecret.ts:6 defaultName\tstatic\tstring\t&quot;default&quot;\t-\tsrc/domain/models/LinkSecret.ts:4 ","version":"Next","tagName":"h2"},{"title":"DIDResolver","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDResolver","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIDResolver","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDResolver#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIDResolver","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDResolver#constructor","content":" new DIDResolver(): DIDResolver  Returns‚Äã  DIDResolver  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DIDResolver","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDResolver#properties","content":" Property\tModifier\tType\tDefined in method\tabstract\tstring\tsrc/domain/models/DIDResolver.ts:4  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIDResolver","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDResolver#methods","content":" ","version":"Next","tagName":"h2"},{"title":"resolve()‚Äã","type":1,"pageTitle":"DIDResolver","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/DIDResolver#resolve","content":" abstract resolve(didString: string): Promise&lt;DIDDocument&gt;  Defined in: src/domain/models/DIDResolver.ts:5  Parameters‚Äã  Parameter\tTypedidString\tstring  Returns‚Äã  Promise&lt;DIDDocument&gt; ","version":"Next","tagName":"h3"},{"title":"KeyPair","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/KeyPair","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"KeyPair","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/KeyPair#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"KeyPair","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/KeyPair#constructor","content":" new KeyPair(): KeyPair  Returns‚Äã  KeyPair  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"KeyPair","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/KeyPair#properties","content":" Property\tModifier\tType\tDefined in privateKey\tabstract\tPrivateKey\tsrc/domain/models/KeyPair.ts:10 publicKey\tabstract\tPublicKey\tsrc/domain/models/KeyPair.ts:9  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"KeyPair","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/KeyPair#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"curve‚Äã","type":1,"pageTitle":"KeyPair","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/KeyPair#curve","content":" Get Signature‚Äã  get curve(): string  Defined in: src/domain/models/KeyPair.ts:5  Returns‚Äã  string ","version":"Next","tagName":"h3"},{"title":"PrismDID","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrismDID","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PrismDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrismDID#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PrismDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrismDID#constructor","content":" new PrismDID(did: DID, privateKey: PrivateKey, alias?: string): PrismDID  Defined in: src/domain/models/PrismDID.ts:6  Parameters‚Äã  Parameter\tTypedid\tDID privateKey\tPrivateKey alias?\tstring  Returns‚Äã  PrismDID  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"PrismDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrismDID#properties","content":" Property\tModifier\tType\tDefined in alias?\treadonly\tstring\tsrc/domain/models/PrismDID.ts:9 did\treadonly\tDID\tsrc/domain/models/PrismDID.ts:7 privateKey\treadonly\tPrivateKey\tsrc/domain/models/PrismDID.ts:8  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"PrismDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrismDID#methods","content":" ","version":"Next","tagName":"h2"},{"title":"parseMethodId()‚Äã","type":1,"pageTitle":"PrismDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrismDID#parsemethodid","content":" static parseMethodId(value: string | string[]): string  Defined in: src/domain/models/PrismDID.ts:12  Parameters‚Äã  Parameter\tTypevalue\tstring | string[]  Returns‚Äã  string ","version":"Next","tagName":"h3"},{"title":"Message","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Message","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Message#implements","content":" Storable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Message#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Message#constructor","content":" new Message(body: string | JsonObj, id: string, piuri: string, from?: DID, to?: DID, attachments?: AttachmentDescriptor[], thid?: string, extraHeaders?: JsonObj, createdTime?: number, expiresTimePlus?: number, ack?: string[], direction?: MessageDirection, fromPrior?: string, pthid?: string): Message  Defined in: src/domain/models/Message.ts:24  Parameters‚Äã  Parameter\tType\tDefault valuebody\tstring | JsonObj\tundefined id\tstring\t... piuri\tstring\tundefined from?\tDID\tundefined to?\tDID\tundefined attachments?\tAttachmentDescriptor[]\t[] thid?\tstring\tundefined extraHeaders?\tJsonObj\t{} createdTime?\tnumber\t... expiresTimePlus?\tnumber\t... ack?\tstring[]\t[] direction?\tMessageDirection\tMessageDirection.RECEIVED fromPrior?\tstring\tundefined pthid?\tstring\tundefined  Returns‚Äã  Message  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Message#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tDefined in ack\treadonly\tstring[]\t[]\t-\tsrc/domain/models/Message.ts:35 attachments\treadonly\tAttachmentDescriptor[]\t[]\t-\tsrc/domain/models/Message.ts:30 body\treadonly\tJsonObj\tundefined\t-\tsrc/domain/models/Message.ts:22 createdTime\treadonly\tnumber\tundefined\t-\tsrc/domain/models/Message.ts:33 direction\tpublic\tMessageDirection\tMessageDirection.RECEIVED\t-\tsrc/domain/models/Message.ts:36 expiresTimePlus\treadonly\tnumber\tundefined\t-\tsrc/domain/models/Message.ts:34 extraHeaders\treadonly\tJsonObj\t{}\t-\tsrc/domain/models/Message.ts:32 from?\treadonly\tDID\tundefined\t-\tsrc/domain/models/Message.ts:28 fromPrior?\treadonly\tstring\tundefined\t-\tsrc/domain/models/Message.ts:37 id\treadonly\tstring\tundefined\t-\tsrc/domain/models/Message.ts:26 piuri\treadonly\tstring\tundefined\t-\tsrc/domain/models/Message.ts:27 pthid?\treadonly\tstring\tundefined\t-\tsrc/domain/models/Message.ts:38 thid?\treadonly\tstring\tundefined\t-\tsrc/domain/models/Message.ts:31 to?\treadonly\tDID\tundefined\t-\tsrc/domain/models/Message.ts:29 uuid\tpublic\tstring\tundefined\tUniversally Unique Identifier. should be unique across all items.\tsrc/domain/models/Message.ts:21  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Message#methods","content":" ","version":"Next","tagName":"h2"},{"title":"fromJson()‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Message#fromjson","content":" static fromJson(jsonString: any): Message  Defined in: src/domain/models/Message.ts:44  Parameters‚Äã  Parameter\tTypejsonString\tany  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"isBase64Attachment()‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Message#isbase64attachment","content":" static isBase64Attachment(data: any): data is AttachmentBase64  Defined in: src/domain/models/Message.ts:140  Parameters‚Äã  Parameter\tTypedata\tany  Returns‚Äã  data is AttachmentBase64    ","version":"Next","tagName":"h3"},{"title":"isJsonAttachment()‚Äã","type":1,"pageTitle":"Message","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/Message#isjsonattachment","content":" static isJsonAttachment(data: any): data is AttachmentJsonData  Defined in: src/domain/models/Message.ts:144  Parameters‚Äã  Parameter\tTypedata\tany  Returns‚Äã  data is AttachmentJsonData ","version":"Next","tagName":"h3"},{"title":"PrivateKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#extends","content":" Key  ","version":"Next","tagName":"h2"},{"title":"Implements‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#implements","content":" Storable  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#constructor","content":" new PrivateKey(): PrivateKey  Returns‚Äã  PrivateKey  Inherited from‚Äã  Key.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in keySpecification\tabstract\tMap&lt;string, string&gt;\t-\tKey.keySpecification\tsrc/domain/models/keyManagement/Key.ts:13 raw\tabstract\tUint8Array\t-\tKey.raw\tsrc/domain/models/keyManagement/Key.ts:15 size\tabstract\tnumber\t-\tKey.size\tsrc/domain/models/keyManagement/Key.ts:14 to\tabstract\t{ Buffer: () =&gt; Buffer; String: (encoding?: BufferEncoding) =&gt; string; }\t-\tKey.to\tsrc/domain/models/keyManagement/Key.ts:16 to.Buffer\tpublic\t() =&gt; Buffer\t-\t-\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:31 to.String\tpublic\t(encoding?: BufferEncoding) =&gt; string\t-\t-\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:32 type\tabstract\tKeyTypes\t-\tKey.type\tsrc/domain/models/keyManagement/Key.ts:12 uuid\treadonly\tstring\tUniversally Unique Identifier. should be unique across all items.\t-\tsrc/domain/models/keyManagement/PrivateKey.ts:9  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"alg‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#alg","content":" Get Signature‚Äã  get alg(): JWT_ALG  Defined in: src/domain/models/keyManagement/Key.ts:25  Returns‚Äã  JWT_ALG  Inherited from‚Äã  Key.alg    ","version":"Next","tagName":"h3"},{"title":"curve‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#curve","content":" Get Signature‚Äã  get curve(): string  Defined in: src/domain/models/keyManagement/PrivateKey.ts:11  Returns‚Äã  string  Overrides‚Äã  Key.curve    ","version":"Next","tagName":"h3"},{"title":"index‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#index","content":" Get Signature‚Äã  get index(): number | undefined  Defined in: src/domain/models/keyManagement/PrivateKey.ts:23  Derivation index. The index of the key in the derivation path. Only applicable for HD keys  Returns‚Äã  number | undefined    ","version":"Next","tagName":"h3"},{"title":"value‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#value","content":" Get Signature‚Äã  get value(): Uint8Array&lt;ArrayBuffer&gt;  Defined in: src/domain/models/keyManagement/PrivateKey.ts:30  Returns‚Äã  Uint8Array&lt;ArrayBuffer&gt;  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#methods","content":" ","version":"Next","tagName":"h2"},{"title":"canVerify()‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#canverify","content":" canVerify(): this is VerifiableKey  Defined in: src/domain/models/keyManagement/Key.ts:53  Returns‚Äã  this is VerifiableKey  Inherited from‚Äã  Key.canVerify    ","version":"Next","tagName":"h3"},{"title":"getEncoded()‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#getencoded","content":" abstract getEncoded(): Uint8Array  Defined in: src/domain/models/keyManagement/Key.ts:18  Returns‚Äã  Uint8Array  Inherited from‚Äã  Key.getEncoded    ","version":"Next","tagName":"h3"},{"title":"getProperty()‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#getproperty","content":" getProperty(name: string): string | undefined  Defined in: src/domain/models/keyManagement/Key.ts:57  Parameters‚Äã  Parameter\tTypename\tstring  Returns‚Äã  string | undefined  Inherited from‚Äã  Key.getProperty    ","version":"Next","tagName":"h3"},{"title":"isCurve()‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#iscurve","content":" isCurve&lt;T&gt;(curve: string): this is T  Defined in: src/domain/models/keyManagement/Key.ts:61  Type Parameters‚Äã  Type ParameterT  Parameters‚Äã  Parameter\tTypecurve\tstring  Returns‚Äã  this is T  Inherited from‚Äã  Key.isCurve    ","version":"Next","tagName":"h3"},{"title":"isDerivable()‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#isderivable","content":" isDerivable(): this is DerivableKey  Defined in: src/domain/models/keyManagement/Key.ts:37  Returns‚Äã  this is DerivableKey  Inherited from‚Äã  Key.isDerivable    ","version":"Next","tagName":"h3"},{"title":"isExportable()‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#isexportable","content":" isExportable(): this is All  Defined in: src/domain/models/keyManagement/Key.ts:41  Returns‚Äã  this is All  Inherited from‚Äã  Key.isExportable    ","version":"Next","tagName":"h3"},{"title":"isSignable()‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#issignable","content":" isSignable(): this is SignableKey  Defined in: src/domain/models/keyManagement/Key.ts:45  Returns‚Äã  this is SignableKey  Inherited from‚Äã  Key.isSignable    ","version":"Next","tagName":"h3"},{"title":"isStorable()‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#isstorable","content":" isStorable(): this is StorableKey  Defined in: src/domain/models/keyManagement/Key.ts:49  Returns‚Äã  this is StorableKey  Inherited from‚Äã  Key.isStorable    ","version":"Next","tagName":"h3"},{"title":"publicKey()‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PrivateKey#publickey","content":" abstract publicKey(): PublicKey  Defined in: src/domain/models/keyManagement/PrivateKey.ts:7  Returns‚Äã  PublicKey ","version":"Next","tagName":"h3"},{"title":"PublicKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#extends","content":" Key  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#constructor","content":" new PublicKey(): PublicKey  Returns‚Äã  PublicKey  Inherited from‚Äã  Key.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#properties","content":" Property\tModifier\tType\tInherited from\tDefined in keySpecification\tabstract\tMap&lt;string, string&gt;\tKey.keySpecification\tsrc/domain/models/keyManagement/Key.ts:13 raw\tabstract\tUint8Array\tKey.raw\tsrc/domain/models/keyManagement/Key.ts:15 size\tabstract\tnumber\tKey.size\tsrc/domain/models/keyManagement/Key.ts:14 to\tabstract\t{ Buffer: () =&gt; Buffer; String: (encoding?: BufferEncoding) =&gt; string; }\tKey.to\tsrc/domain/models/keyManagement/Key.ts:16 to.Buffer\tpublic\t() =&gt; Buffer\t-\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:31 to.String\tpublic\t(encoding?: BufferEncoding) =&gt; string\t-\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:32 type\tabstract\tKeyTypes\tKey.type\tsrc/domain/models/keyManagement/Key.ts:12  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"alg‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#alg","content":" Get Signature‚Äã  get alg(): JWT_ALG  Defined in: src/domain/models/keyManagement/Key.ts:25  Returns‚Äã  JWT_ALG  Inherited from‚Äã  Key.alg    ","version":"Next","tagName":"h3"},{"title":"curve‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#curve","content":" Get Signature‚Äã  get curve(): string  Defined in: src/domain/models/keyManagement/Key.ts:20  Returns‚Äã  string  Inherited from‚Äã  Key.curve    ","version":"Next","tagName":"h3"},{"title":"value‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#value","content":" Get Signature‚Äã  get value(): Uint8Array&lt;ArrayBufferLike&gt;  Defined in: src/domain/models/keyManagement/PublicKey.ts:4  Returns‚Äã  Uint8Array&lt;ArrayBufferLike&gt;  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#methods","content":" ","version":"Next","tagName":"h2"},{"title":"canVerify()‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#canverify","content":" canVerify(): this is VerifiableKey  Defined in: src/domain/models/keyManagement/Key.ts:53  Returns‚Äã  this is VerifiableKey  Inherited from‚Äã  Key.canVerify    ","version":"Next","tagName":"h3"},{"title":"getEncoded()‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#getencoded","content":" abstract getEncoded(): Uint8Array  Defined in: src/domain/models/keyManagement/Key.ts:18  Returns‚Äã  Uint8Array  Inherited from‚Äã  Key.getEncoded    ","version":"Next","tagName":"h3"},{"title":"getProperty()‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#getproperty","content":" getProperty(name: string): string | undefined  Defined in: src/domain/models/keyManagement/Key.ts:57  Parameters‚Äã  Parameter\tTypename\tstring  Returns‚Äã  string | undefined  Inherited from‚Äã  Key.getProperty    ","version":"Next","tagName":"h3"},{"title":"isCurve()‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#iscurve","content":" isCurve&lt;T&gt;(curve: string): this is T  Defined in: src/domain/models/keyManagement/Key.ts:61  Type Parameters‚Äã  Type ParameterT  Parameters‚Äã  Parameter\tTypecurve\tstring  Returns‚Äã  this is T  Inherited from‚Äã  Key.isCurve    ","version":"Next","tagName":"h3"},{"title":"isDerivable()‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#isderivable","content":" isDerivable(): this is DerivableKey  Defined in: src/domain/models/keyManagement/Key.ts:37  Returns‚Äã  this is DerivableKey  Inherited from‚Äã  Key.isDerivable    ","version":"Next","tagName":"h3"},{"title":"isExportable()‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#isexportable","content":" isExportable(): this is All  Defined in: src/domain/models/keyManagement/Key.ts:41  Returns‚Äã  this is All  Inherited from‚Äã  Key.isExportable    ","version":"Next","tagName":"h3"},{"title":"isSignable()‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#issignable","content":" isSignable(): this is SignableKey  Defined in: src/domain/models/keyManagement/Key.ts:45  Returns‚Äã  this is SignableKey  Inherited from‚Äã  Key.isSignable    ","version":"Next","tagName":"h3"},{"title":"isStorable()‚Äã","type":1,"pageTitle":"PublicKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/PublicKey#isstorable","content":" isStorable(): this is StorableKey  Defined in: src/domain/models/keyManagement/Key.ts:49  Returns‚Äã  this is StorableKey  Inherited from‚Äã  Key.isStorable ","version":"Next","tagName":"h3"},{"title":"SignableKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/SignableKey","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"SignableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/SignableKey#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"SignableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/SignableKey#constructor","content":" new SignableKey(): SignableKey  Returns‚Äã  SignableKey  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"SignableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/SignableKey#methods","content":" ","version":"Next","tagName":"h2"},{"title":"sign()‚Äã","type":1,"pageTitle":"SignableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/SignableKey#sign","content":" abstract sign(message: Buffer): Buffer  Defined in: src/domain/models/keyManagement/SignableKey.ts:2  Parameters‚Äã  Parameter\tTypemessage\tBuffer  Returns‚Äã  Buffer ","version":"Next","tagName":"h3"},{"title":"VerifiableKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/VerifiableKey","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"VerifiableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/VerifiableKey#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"VerifiableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/VerifiableKey#constructor","content":" new VerifiableKey(): VerifiableKey  Returns‚Äã  VerifiableKey  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"VerifiableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/VerifiableKey#methods","content":" ","version":"Next","tagName":"h2"},{"title":"verify()‚Äã","type":1,"pageTitle":"VerifiableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/classes/VerifiableKey#verify","content":" abstract verify(message: Buffer, signature: Buffer): boolean  Defined in: src/domain/models/keyManagement/VerifiableKey.ts:2  Parameters‚Äã  Parameter\tTypemessage\tBuffer signature\tBuffer  Returns‚Äã  boolean ","version":"Next","tagName":"h3"},{"title":"JWT_ALG","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/JWT_ALG","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"JWT_ALG","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/JWT_ALG#enumeration-members","content":" Enumeration Member\tValue\tDefined in EdDSA\t&quot;EdDSA&quot;\tsrc/domain/models/VerifiableCredential.ts:14 ES256K\t&quot;ES256K&quot;\tsrc/domain/models/VerifiableCredential.ts:13 unknown\t&quot;unknown&quot;\tsrc/domain/models/VerifiableCredential.ts:15 ","version":"Next","tagName":"h2"},{"title":"CredentialType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/CredentialType","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"CredentialType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/CredentialType#enumeration-members","content":" Enumeration Member\tValue\tDefined in AnonCreds\t&quot;AnonCreds&quot;\tsrc/domain/models/VerifiableCredential.ts:22 JWT\t&quot;prism/jwt&quot;\tsrc/domain/models/VerifiableCredential.ts:19 SDJWT\t&quot;vc+sd-jwt&quot;\tsrc/domain/models/VerifiableCredential.ts:20 Unknown\t&quot;Unknown&quot;\tsrc/domain/models/VerifiableCredential.ts:23 W3C\t&quot;w3c&quot;\tsrc/domain/models/VerifiableCredential.ts:21 ","version":"Next","tagName":"h2"},{"title":"KeyProperties","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/KeyProperties","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"KeyProperties","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/KeyProperties#enumeration-members","content":" Enumeration Member\tValue\tDescription\tDefined in algorithm\t&quot;algorithm&quot;\tThe 'algorithm' corresponds to the cryptographic algorithm associated with the key.\tsrc/domain/models/KeyProperties.ts:5 chainCode\t&quot;chainCode&quot;\tThe 'chainCode' used for key derivation. hex encoded value. const chainCode = Buffer.from(props[KeyProperties.chainCode], &quot;hex&quot;);\tsrc/domain/models/KeyProperties.ts:30 curve\t&quot;curve&quot;\tThe 'curve' represents the elliptic curve used for an elliptic-curve key.\tsrc/domain/models/KeyProperties.ts:10 curvePointX\t&quot;curvePoint.x&quot;\tThe 'curvePointX' represents the x-coordinate of a curve point for an elliptic-curve key.\tsrc/domain/models/KeyProperties.ts:46 curvePointY\t&quot;curvePoint.y&quot;\tThe 'curvePointY' represents the y-coordinate of a curve point for an elliptic-curve key.\tsrc/domain/models/KeyProperties.ts:51 derivationPath\t&quot;derivationPath&quot;\tThe 'derivationPath' refers to the path used to derive a key in a hierarchical deterministic (HD) key generation scheme.\tsrc/domain/models/KeyProperties.ts:40 derivationSchema\t&quot;derivationSchema&quot;\tThe 'derivationSchema' corresponds to derivationSchema used.\tsrc/domain/models/KeyProperties.ts:20 index\t&quot;index&quot;\t-\tsrc/domain/models/KeyProperties.ts:41 rawKey\t&quot;raw&quot;\tThe 'rawKey' refers to the raw binary form of the key.\tsrc/domain/models/KeyProperties.ts:35 seed\t&quot;seed&quot;\tThe 'seed' corresponds to the seed value from which a key is derived.\tsrc/domain/models/KeyProperties.ts:15 ","version":"Next","tagName":"h2"},{"title":"Curve","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/Curve","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"Curve","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/Curve#enumeration-members","content":" Enumeration Member\tValue\tDefined in ED25519\t&quot;Ed25519&quot;\tsrc/domain/models/keyManagement/Curve.ts:3 SECP256K1\t&quot;secp256k1&quot;\tsrc/domain/models/keyManagement/Curve.ts:4 X25519\t&quot;X25519&quot;\tsrc/domain/models/keyManagement/Curve.ts:2 ","version":"Next","tagName":"h2"},{"title":"KeyTypes","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/KeyTypes","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"KeyTypes","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/KeyTypes#enumeration-members","content":" Enumeration Member\tValue\tDefined in Curve25519\t&quot;Curve25519&quot;\tsrc/domain/models/keyManagement/KeyTypes.ts:3 EC\t&quot;EC&quot;\tsrc/domain/models/keyManagement/KeyTypes.ts:2 unknown\t&quot;unknown&quot;\tsrc/domain/models/keyManagement/KeyTypes.ts:4 ","version":"Next","tagName":"h2"},{"title":"Api","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Api","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"Api","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Api#methods","content":" ","version":"Next","tagName":"h2"},{"title":"request()‚Äã","type":1,"pageTitle":"Api","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Api#request","content":" request&lt;T&gt;(httpMethod: HttpMethod, url: string, urlParameters?: Map&lt;string, string&gt;, httpHeaders?: Map&lt;string, string&gt;, body?: string | Record&lt;string, any&gt;): Promise&lt;ApiResponse&lt;T&gt;&gt;  Defined in: src/domain/models/Api.ts:27  make a request return an ApiResponse on any 2xx status throw ApiError otherwise  Type Parameters‚Äã  Type ParameterT  Parameters‚Äã  Parameter\tType\tDescriptionhttpMethod\tHttpMethod url\tstring urlParameters?\tMap&lt;string, string&gt; httpHeaders?\tMap&lt;string, string&gt; body?\tstring | Record&lt;string, any&gt;\t  Returns‚Äã  Promise&lt;ApiResponse&lt;T&gt;&gt; ","version":"Next","tagName":"h3"},{"title":"AttachmentBase64","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentBase64","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"AttachmentBase64","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentBase64#properties","content":" Property\tType\tDefined in base64\tstring\tsrc/domain/models/MessageAttachment.ts:20 ","version":"Next","tagName":"h2"},{"title":"MessageDirection","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/MessageDirection","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"MessageDirection","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/enumerations/MessageDirection#enumeration-members","content":" Enumeration Member\tValue\tDefined in RECEIVED\t1\tsrc/domain/models/Message.ts:17 SENT\t0\tsrc/domain/models/Message.ts:16 ","version":"Next","tagName":"h2"},{"title":"AttachmentHeader","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentHeader","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"AttachmentHeader","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentHeader#properties","content":" Property\tType\tDefined in children\tstring\tsrc/domain/models/MessageAttachment.ts:5 ","version":"Next","tagName":"h2"},{"title":"AttachmentJws","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentJws","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"AttachmentJws","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentJws#properties","content":" Property\tType\tDefined in header\tAttachmentHeader\tsrc/domain/models/MessageAttachment.ts:9 protectedStr\tstring\tsrc/domain/models/MessageAttachment.ts:10 signature\tstring\tsrc/domain/models/MessageAttachment.ts:11 ","version":"Next","tagName":"h2"},{"title":"Apollo","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Apollo","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Apollo#methods","content":" ","version":"Next","tagName":"h2"},{"title":"createPrivateKey()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Apollo#createprivatekey","content":" createPrivateKey(parameters: {[name: string]: any; }): PrivateKey  Defined in: src/domain/buildingBlocks/Apollo.ts:10  Parameters‚Äã  Parameter\tTypeparameters\t{[name: string]: any; }  Returns‚Äã  PrivateKey    ","version":"Next","tagName":"h3"},{"title":"createPublicKey()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Apollo#createpublickey","content":" createPublicKey(parameters: {[name: string]: any; }): PublicKey  Defined in: src/domain/buildingBlocks/Apollo.ts:13  Parameters‚Äã  Parameter\tTypeparameters\t{[name: string]: any; }  Returns‚Äã  PublicKey    ","version":"Next","tagName":"h3"},{"title":"createRandomMnemonics()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Apollo#createrandommnemonics","content":" createRandomMnemonics(): MnemonicWordList  Defined in: src/domain/buildingBlocks/Apollo.ts:7  Returns‚Äã  MnemonicWordList    ","version":"Next","tagName":"h3"},{"title":"createRandomSeed()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Apollo#createrandomseed","content":" createRandomSeed(passphrase?: string): SeedWords  Defined in: src/domain/buildingBlocks/Apollo.ts:9  Parameters‚Äã  Parameter\tTypepassphrase?\tstring  Returns‚Äã  SeedWords    ","version":"Next","tagName":"h3"},{"title":"createSeed()‚Äã","type":1,"pageTitle":"Apollo","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Apollo#createseed","content":" createSeed(mnemonics: MnemonicWordList, passphrase: string): Seed  Defined in: src/domain/buildingBlocks/Apollo.ts:8  Parameters‚Äã  Parameter\tTypemnemonics\tMnemonicWordList passphrase\tstring  Returns‚Äã  Seed ","version":"Next","tagName":"h3"},{"title":"AttachmentJwsData","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentJwsData","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"AttachmentJwsData","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentJwsData#properties","content":" Property\tType\tDefined in base64\tstring\tsrc/domain/models/MessageAttachment.ts:15 jws\tAttachmentJws\tsrc/domain/models/MessageAttachment.ts:16 ","version":"Next","tagName":"h2"},{"title":"AttachmentLinkData","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentLinkData","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"AttachmentLinkData","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/AttachmentLinkData#properties","content":" Property\tType\tDefined in hash\tstring\tsrc/domain/models/MessageAttachment.ts:25 links\tstring[]\tsrc/domain/models/MessageAttachment.ts:24 ","version":"Next","tagName":"h2"},{"title":"Castor","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Castor","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Castor#methods","content":" ","version":"Next","tagName":"h2"},{"title":"createPeerDID()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Castor#createpeerdid","content":" createPeerDID(publicKeys: PublicKey[], services: Service[]): Promise&lt;DID&gt;  Defined in: src/domain/buildingBlocks/Castor.ts:11  Parameters‚Äã  Parameter\tTypepublicKeys\tPublicKey[] services\tService[]  Returns‚Äã  Promise&lt;DID&gt;    ","version":"Next","tagName":"h3"},{"title":"createPrismDID()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Castor#createprismdid","content":" createPrismDID(masterPublicKey: PublicKey, services?: Service[], authenticationKeys?: (PublicKey | KeyPair)[]): Promise&lt;DID&gt;  Defined in: src/domain/buildingBlocks/Castor.ts:6  Parameters‚Äã  Parameter\tTypemasterPublicKey\tPublicKey services?\tService[] authenticationKeys?\t(PublicKey | KeyPair)[]  Returns‚Äã  Promise&lt;DID&gt;    ","version":"Next","tagName":"h3"},{"title":"getEcnumbasis()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Castor#getecnumbasis","content":" getEcnumbasis(did: DID, publicKey: PublicKey): string  Defined in: src/domain/buildingBlocks/Castor.ts:21  Parameters‚Äã  Parameter\tTypedid\tDID publicKey\tPublicKey  Returns‚Äã  string    ","version":"Next","tagName":"h3"},{"title":"parseDID()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Castor#parsedid","content":" parseDID(did: string): DID  Defined in: src/domain/buildingBlocks/Castor.ts:5  Parameters‚Äã  Parameter\tTypedid\tstring  Returns‚Äã  DID    ","version":"Next","tagName":"h3"},{"title":"resolveDID()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Castor#resolvedid","content":" resolveDID(did: string | DID): Promise&lt;DIDDocument&gt;  Defined in: src/domain/buildingBlocks/Castor.ts:15  Parameters‚Äã  Parameter\tTypedid\tstring | DID  Returns‚Äã  Promise&lt;DIDDocument&gt;    ","version":"Next","tagName":"h3"},{"title":"verifySignature()‚Äã","type":1,"pageTitle":"Castor","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Castor#verifysignature","content":" verifySignature(did: DID, challenge: Uint8Array, signature: Uint8Array): Promise&lt;boolean&gt;  Defined in: src/domain/buildingBlocks/Castor.ts:16  Parameters‚Äã  Parameter\tTypedid\tDID challenge\tUint8Array signature\tUint8Array  Returns‚Äã  Promise&lt;boolean&gt; ","version":"Next","tagName":"h3"},{"title":"KeyRestoration","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/KeyRestoration","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"KeyRestoration","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/KeyRestoration#methods","content":" ","version":"Next","tagName":"h2"},{"title":"restorePrivateKey()‚Äã","type":1,"pageTitle":"KeyRestoration","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/KeyRestoration#restoreprivatekey","content":" restorePrivateKey(key: StorableKey): PrivateKey  Defined in: src/domain/protocols/KeyRestoration.ts:14  Restores a PrivateKey from the given StorableKey  Parameters‚Äã  Parameter\tType\tDescriptionkey\tStorableKey\t  Returns‚Äã  PrivateKey  PrivateKey instance  Throws‚Äã  if the restoration process fails    ","version":"Next","tagName":"h3"},{"title":"restorePublicKey()‚Äã","type":1,"pageTitle":"KeyRestoration","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/KeyRestoration#restorepublickey","content":" restorePublicKey(key: StorableKey): PublicKey  Defined in: src/domain/protocols/KeyRestoration.ts:23  Restores a PublicKey from the given StorableKey  Parameters‚Äã  Parameter\tType\tDescriptionkey\tStorableKey\t  Returns‚Äã  PublicKey  PublicKey instance  Throws‚Äã  if the restoration process fails, this method throws an error ","version":"Next","tagName":"h3"},{"title":"KeyCurve","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/KeyCurve","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"KeyCurve","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/KeyCurve#properties","content":" Property\tType\tDefined in curve\tCurve\tsrc/domain/models/keyManagement/KeyCurve.ts:4 index?\tnumber\tsrc/domain/models/keyManagement/KeyCurve.ts:5 ","version":"Next","tagName":"h2"},{"title":"Mediator","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Mediator","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Mediator","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Mediator#properties","content":" Property\tType\tDefined in hostDID\tDID\tsrc/domain/models/Mediator.ts:4 mediatorDID\tDID\tsrc/domain/models/Mediator.ts:6 routingDID\tDID\tsrc/domain/models/Mediator.ts:5 ","version":"Next","tagName":"h2"},{"title":"Mercury","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Mercury","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Mercury#methods","content":" ","version":"Next","tagName":"h2"},{"title":"packMessage()‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Mercury#packmessage","content":" packMessage(message: Message): Promise&lt;string&gt;  Defined in: src/domain/buildingBlocks/Mercury.ts:4  Parameters‚Äã  Parameter\tTypemessage\tMessage  Returns‚Äã  Promise&lt;string&gt;    ","version":"Next","tagName":"h3"},{"title":"sendMessage()‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Mercury#sendmessage","content":" sendMessage(message: Message): Promise&lt;Uint8Array&lt;ArrayBufferLike&gt;&gt;  Defined in: src/domain/buildingBlocks/Mercury.ts:6  Parameters‚Äã  Parameter\tTypemessage\tMessage  Returns‚Äã  Promise&lt;Uint8Array&lt;ArrayBufferLike&gt;&gt;    ","version":"Next","tagName":"h3"},{"title":"sendMessageParseMessage()‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Mercury#sendmessageparsemessage","content":" sendMessageParseMessage(message: Message): Promise&lt;Message | undefined&gt;  Defined in: src/domain/buildingBlocks/Mercury.ts:7  Parameters‚Äã  Parameter\tTypemessage\tMessage  Returns‚Äã  Promise&lt;Message | undefined&gt;    ","version":"Next","tagName":"h3"},{"title":"unpackMessage()‚Äã","type":1,"pageTitle":"Mercury","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Mercury#unpackmessage","content":" unpackMessage(message: string): Promise&lt;Message&gt;  Defined in: src/domain/buildingBlocks/Mercury.ts:5  Parameters‚Äã  Parameter\tTypemessage\tstring  Returns‚Äã  Promise&lt;Message&gt; ","version":"Next","tagName":"h3"},{"title":"ProvableCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/ProvableCredential","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"ProvableCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/ProvableCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"presentation()‚Äã","type":1,"pageTitle":"ProvableCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/ProvableCredential#presentation","content":" presentation(): unknown  Defined in: src/domain/models/Credential.ts:36  Returns‚Äã  unknown    ","version":"Next","tagName":"h3"},{"title":"verifiableCredential()‚Äã","type":1,"pageTitle":"ProvableCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/ProvableCredential#verifiablecredential","content":" verifiableCredential(): unknown  Defined in: src/domain/models/Credential.ts:37  Returns‚Äã  unknown ","version":"Next","tagName":"h3"},{"title":"Seed","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Seed","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Seed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Seed#properties","content":" Property\tType\tDefined in value\tUint8Array\tsrc/domain/models/Seed.ts:2 ","version":"Next","tagName":"h2"},{"title":"SeedWords","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/SeedWords","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"SeedWords","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/SeedWords#properties","content":" Property\tType\tDefined in mnemonics\tMnemonicWordList\tsrc/domain/models/SeedWords.ts:5 seed\tSeed\tsrc/domain/models/SeedWords.ts:6 ","version":"Next","tagName":"h2"},{"title":"Options","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Options","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Options","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Options#properties","content":" Property\tType\tDefined in pemLabel\tstring\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:20 ","version":"Next","tagName":"h2"},{"title":"Signature","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Signature","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Signature","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Signature#properties","content":" Property\tType\tDefined in value\tUint8Array\tsrc/domain/models/Signature.ts:2 ","version":"Next","tagName":"h2"},{"title":"Pluto","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#extends","content":" IController  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#properties","content":" Property\tType\tDescription\tInherited from\tDefined in state\tState\tcurrent status of the entity\tIController.state\tsrc/domain/protocols/Startable.ts:22  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#methods","content":" ","version":"Next","tagName":"h2"},{"title":"backup()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#backup","content":" backup(version?: &quot;0.0.1&quot;): Promise&lt;{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:40  create a Backup object from the stored data  Parameters‚Äã  Parameter\tTypeversion?\t&quot;0.0.1&quot;  Returns‚Äã  Promise&lt;{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }&gt;    ","version":"Next","tagName":"h3"},{"title":"deleteMessage()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#deletemessage","content":" deleteMessage(uuid: string): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:175  Delete a previously stored messages  Parameters‚Äã  Parameter\tTypeuuid\tstring  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"getAllCredentials()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getallcredentials","content":" getAllCredentials(): Promise&lt;Credential[]&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:155  Retrieve all the stored credentials  Returns‚Äã  Promise&lt;Credential[]&gt;    ","version":"Next","tagName":"h3"},{"title":"getAllDidPairs()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getalldidpairs","content":" getAllDidPairs(): Promise&lt;DIDPair[]&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:125  Retrieve all stored DID pairs (DIDComm connections).  Returns‚Äã  Promise&lt;DIDPair[]&gt;    ","version":"Next","tagName":"h3"},{"title":"getAllMediators()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getallmediators","content":" getAllMediators(): Promise&lt;Mediator[]&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:150  Retrieve all stored mediators.  Returns‚Äã  Promise&lt;Mediator[]&gt;    ","version":"Next","tagName":"h3"},{"title":"getAllMessages()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getallmessages","content":" getAllMessages(): Promise&lt;Message[]&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:140  Retrieve all stored DIDComm messages.  Returns‚Äã  Promise&lt;Message[]&gt;    ","version":"Next","tagName":"h3"},{"title":"getAllPeerDIDs()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getallpeerdids","content":" getAllPeerDIDs(): Promise&lt;PeerDID[]&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:115  Retrieve all stored Peer DIDs.  Returns‚Äã  Promise&lt;PeerDID[]&gt;    ","version":"Next","tagName":"h3"},{"title":"getAllPrismDIDs()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getallprismdids","content":" getAllPrismDIDs(): Promise&lt;PrismDID[]&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:110  Retrieve all stored PRISM DIDs.  Returns‚Äã  Promise&lt;PrismDID[]&gt;    ","version":"Next","tagName":"h3"},{"title":"getCredentialMetadata()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getcredentialmetadata","content":" getCredentialMetadata(name: string): Promise&lt;CredentialMetadata | null&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:57  Fetch the Credential Metadata by its name  Parameters‚Äã  Parameter\tType\tDescriptionname\tstring\t  Returns‚Äã  Promise&lt;CredentialMetadata | null&gt;    ","version":"Next","tagName":"h3"},{"title":"getDIDPrivateKeysByDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getdidprivatekeysbydid","content":" getDIDPrivateKeysByDID(did: DID): Promise&lt;PrivateKey[]&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:120  Retrieve available private keys for a given DID.  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  Promise&lt;PrivateKey[]&gt;    ","version":"Next","tagName":"h3"},{"title":"getLinkSecret()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getlinksecret","content":" getLinkSecret(name?: string): Promise&lt;LinkSecret | null&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:160  Retrieve the stored link secret by its name  Parameters‚Äã  Parameter\tTypename?\tstring  Returns‚Äã  Promise&lt;LinkSecret | null&gt;    ","version":"Next","tagName":"h3"},{"title":"getMessage()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getmessage","content":" getMessage(id: string): Promise&lt;Message | null&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:145  Retrieve a DIDComm message by ID.  Parameters‚Äã  Parameter\tTypeid\tstring  Returns‚Äã  Promise&lt;Message | null&gt;    ","version":"Next","tagName":"h3"},{"title":"getPairByDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getpairbydid","content":" getPairByDID(did: DID): Promise&lt;DIDPair | null&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:130  Retrieve a DID pair containing a given DID as either host or receiver.  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  Promise&lt;DIDPair | null&gt;    ","version":"Next","tagName":"h3"},{"title":"getPairByName()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#getpairbyname","content":" getPairByName(name: string): Promise&lt;DIDPair | null&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:135  Retrieve a DID pair by a given pair name.  Parameters‚Äã  Parameter\tTypename\tstring  Returns‚Äã  Promise&lt;DIDPair | null&gt;    ","version":"Next","tagName":"h3"},{"title":"restore()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#restore","content":" restore(backup: { credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; }): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:46  load the given data into the store  Parameters‚Äã  Parameter\tType\tDescriptionbackup\t{ credentials: { data: string; recovery_id: string; }[]; did_pairs: { alias: string; holder: string; recipient: string; }[]; dids: { alias?: string; did: string; }[]; keys: { did?: string; index?: number; key: string; recovery_id: string; }[]; link_secret?: string; mediators: { holder_did: string; mediator_did: string; routing_did: string; }[]; messages: string[]; version?: &quot;0.0.1&quot;; } backup.credentials\t{ data: string; recovery_id: string; }[]\t- backup.did_pairs\t{ alias: string; holder: string; recipient: string; }[]\t- backup.dids\t{ alias?: string; did: string; }[]\t- backup.keys\t{ did?: string; index?: number; key: string; recovery_id: string; }[]\t- backup.link_secret?\tstring\t- backup.mediators\t{ holder_did: string; mediator_did: string; routing_did: string; }[]\t- backup.messages\tstring[]\t- backup.version?\t&quot;0.0.1&quot;\t-  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"revokeCredential()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#revokecredential","content":" revokeCredential(credential: Credential): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:170  Revoke a Credential  Parameters‚Äã  Parameter\tTypecredential\tCredential  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"start()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#start","content":" start(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:30  handle the startup of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt;  Inherited from‚Äã  IController.start    ","version":"Next","tagName":"h3"},{"title":"stop()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#stop","content":" stop(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:38  handle the teardown of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt;  Inherited from‚Äã  IController.stop    ","version":"Next","tagName":"h3"},{"title":"storeCredential()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storecredential","content":" storeCredential(credential: Credential): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:105  Store a Credential into the Database  Parameters‚Äã  Parameter\tTypecredential\tCredential  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"storeCredentialMetadata()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storecredentialmetadata","content":" storeCredentialMetadata(metadata: CredentialMetadata): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:51  Store the Credential Metadata  Parameters‚Äã  Parameter\tTypemetadata\tCredentialMetadata  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"storeDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storedid","content":" storeDID(did: DID, keys?: Arrayable&lt;PrivateKey&gt;, alias?: string): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:63  Store a DID with optional private key(s) and alias  Parameters‚Äã  Parameter\tTypedid\tDID keys?\tArrayable&lt;PrivateKey&gt; alias?\tstring  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"storeDIDPair()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storedidpair","content":" storeDIDPair(host: DID, receiver: DID, name: string): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:80  Store a named pair of DIDs representing a DIDComm connection.  Parameters‚Äã  Parameter\tTypehost\tDID receiver\tDID name\tstring  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"storeLinkSecret()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storelinksecret","content":" storeLinkSecret(linkSecret: LinkSecret): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:165  Store a new linkSecret  Parameters‚Äã  Parameter\tTypelinkSecret\tLinkSecret  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"storeMediator()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storemediator","content":" storeMediator(mediator: Mediator): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:100  Store a mediator information.  Parameters‚Äã  Parameter\tTypemediator\tMediator  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"storeMessage()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storemessage","content":" storeMessage(message: Message): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:85  Store a DIDComm message.  Parameters‚Äã  Parameter\tTypemessage\tMessage  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"storeMessages()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storemessages","content":" storeMessages(messages: Message[]): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:90  Store an array of DIDComm messages  Parameters‚Äã  Parameter\tTypemessages\tMessage[]  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"storePeerDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storepeerdid","content":" storePeerDID(did: DID, privateKeys: PrivateKey[]): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:75  Store a Peer DID and an array of its privateKeys.  Parameters‚Äã  Parameter\tTypedid\tDID privateKeys\tPrivateKey[]  Returns‚Äã  Promise&lt;void&gt;  Deprecated‚Äã  use storeDID instead    ","version":"Next","tagName":"h3"},{"title":"storePrismDID()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storeprismdid","content":" storePrismDID(did: DID, privateKey: PrivateKey, alias?: string): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:69  Store a PRISM DID and its private key with given metadata.  Parameters‚Äã  Parameter\tTypedid\tDID privateKey\tPrivateKey alias?\tstring  Returns‚Äã  Promise&lt;void&gt;  Deprecated‚Äã  use storeDID instead    ","version":"Next","tagName":"h3"},{"title":"storePrivateKey()‚Äã","type":1,"pageTitle":"Pluto","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/Pluto#storeprivatekey","content":" storePrivateKey(privateKey: PrivateKey): Promise&lt;void&gt;  Defined in: src/domain/buildingBlocks/Pluto.ts:95  Store a list of private keys with its metadata and a reference to the DID it belongs to.  Parameters‚Äã  Parameter\tTypeprivateKey\tPrivateKey  Returns‚Äã  Promise&lt;void&gt; ","version":"Next","tagName":"h3"},{"title":"StorableCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/StorableCredential","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"StorableCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/StorableCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"toStorable()‚Äã","type":1,"pageTitle":"StorableCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/StorableCredential#tostorable","content":" toStorable(): { availableClaims?: string[]; credentialCreated?: string; credentialData: string; credentialSchema?: string; credentialUpdated?: string; id: string; issuer?: string; recoveryId: string; revoked?: boolean; subject?: string; validUntil?: number; }  Defined in: src/domain/models/Credential.ts:41  Returns‚Äã  { availableClaims?: string[]; credentialCreated?: string; credentialData: string; credentialSchema?: string; credentialUpdated?: string; id: string; issuer?: string; recoveryId: string; revoked?: boolean; subject?: string; validUntil?: number; }  Name\tType\tDefined inavailableClaims?\tstring[]\tsrc/domain/models/Credential.ts:52 credentialCreated?\tstring\tsrc/domain/models/Credential.ts:47 credentialData\tstring\tsrc/domain/models/Credential.ts:44 credentialSchema?\tstring\tsrc/domain/models/Credential.ts:49 credentialUpdated?\tstring\tsrc/domain/models/Credential.ts:48 id\tstring\tsrc/domain/models/Credential.ts:42 issuer?\tstring\tsrc/domain/models/Credential.ts:45 recoveryId\tstring\tsrc/domain/models/Credential.ts:43 revoked?\tboolean\tsrc/domain/models/Credential.ts:51 subject?\tstring\tsrc/domain/models/Credential.ts:46 validUntil?\tnumber\tsrc/domain/models/Credential.ts:50 ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/#classes","content":" Class\tDescriptionBackupVersionError\t- CannotFindDIDKeyPairIndex\t- CannotFindDIDPrivateKey\t- CannotFindLinkSecret\t- FailedToOnboardError\t- InvalidBasicMessageBodyError\t- InvalidCredentialBodyError\t- InvalidCredentialFormats\t- InvalidIssueCredentialBodyError\t- InvalidIssueCredentialMessageError\t- InvalidMediationGrantBodyError\t- InvalidMediationGrantMessageError\t- InvalidMessageError\t- InvalidOfferCredentialBodyError\t- InvalidOfferCredentialMessageError\t- InvalidPickupDeliveryMessageError\t- InvalidPresentationBodyError\t- InvalidPresentationMessageError\t- InvalidProblemReportBodyError\t- InvalidProposeCredentialBodyError\t- InvalidProposedCredentialMessageError\t- InvalidProposePresentationBodyError\t- InvalidProposePresentationMessageError\t- InvalidRequestCredentialBodyError\t- InvalidRequestCredentialMessageError\t- InvalidRequestPresentationBodyError\t- InvalidRequestPresentationMessageError\t- InvalidStepError\t- InvalidURLError\t- InvitationHasNoFromDIDError\t- InvitationIsInvalidError\t- KeyNotExportableError\t- MediationRequestFailedError\t- NoConnectionOpenError\t- NoHandshakeResponseError\t- NoMediatorAvailableError\t- NoValidServiceEndpointError\t- OfferDoesntProvideEnoughInformation\t- UnhandledCredential\t- UnhandledPresentationRequest\t- UnknownCredentialBodyError\t- UnknownInvitationTypeError\t- UnknownPrismOnboardingTypeError\t- UnsupportedAttachmentType\t- ","version":"Next","tagName":"h2"},{"title":"StorableKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/StorableKey","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"StorableKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/interfaces/StorableKey#properties","content":" Property\tType\tDefined in index?\tnumber\tsrc/domain/models/keyManagement/StorableKey.ts:5 raw\tUint8Array\tsrc/domain/models/keyManagement/StorableKey.ts:4 recoveryId\tstring\tsrc/domain/models/keyManagement/StorableKey.ts:3 ","version":"Next","tagName":"h2"},{"title":"CannotFindDIDKeyPairIndex","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDKeyPairIndex","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CannotFindDIDKeyPairIndex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDKeyPairIndex#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CannotFindDIDKeyPairIndex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDKeyPairIndex#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CannotFindDIDKeyPairIndex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDKeyPairIndex#constructor","content":" new CannotFindDIDKeyPairIndex(message: string): CannotFindDIDKeyPairIndex  Defined in: src/domain/models/errors/Agent.ts:14  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;Can't find DID keypair index&quot;  Returns‚Äã  CannotFindDIDKeyPairIndex  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CannotFindDIDKeyPairIndex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDKeyPairIndex#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CannotFindDIDKeyPairIndex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDKeyPairIndex#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"CannotFindDIDKeyPairIndex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDKeyPairIndex#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"CannotFindDIDKeyPairIndex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDKeyPairIndex#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"CannotFindDIDPrivateKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDPrivateKey","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CannotFindDIDPrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDPrivateKey#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CannotFindDIDPrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDPrivateKey#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CannotFindDIDPrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDPrivateKey#constructor","content":" new CannotFindDIDPrivateKey(message: string): CannotFindDIDPrivateKey  Defined in: src/domain/models/errors/Agent.ts:20  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;Can't find Private key&quot;  Returns‚Äã  CannotFindDIDPrivateKey  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CannotFindDIDPrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDPrivateKey#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CannotFindDIDPrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDPrivateKey#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"CannotFindDIDPrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDPrivateKey#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"CannotFindDIDPrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindDIDPrivateKey#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"BackupVersionError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/BackupVersionError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"BackupVersionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/BackupVersionError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"BackupVersionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/BackupVersionError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"BackupVersionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/BackupVersionError#constructor","content":" new BackupVersionError(): BackupVersionError  Defined in: src/domain/models/errors/Agent.ts:240  Returns‚Äã  BackupVersionError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"BackupVersionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/BackupVersionError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"BackupVersionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/BackupVersionError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"BackupVersionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/BackupVersionError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"BackupVersionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/BackupVersionError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"CannotFindLinkSecret","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindLinkSecret","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CannotFindLinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindLinkSecret#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CannotFindLinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindLinkSecret#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CannotFindLinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindLinkSecret#constructor","content":" new CannotFindLinkSecret(message: string): CannotFindLinkSecret  Defined in: src/domain/models/errors/Agent.ts:26  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;Cannot find link secret&quot;  Returns‚Äã  CannotFindLinkSecret  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CannotFindLinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindLinkSecret#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CannotFindLinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindLinkSecret#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"CannotFindLinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindLinkSecret#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"CannotFindLinkSecret","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/CannotFindLinkSecret#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"FailedToOnboardError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/FailedToOnboardError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"FailedToOnboardError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/FailedToOnboardError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"FailedToOnboardError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/FailedToOnboardError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"FailedToOnboardError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/FailedToOnboardError#constructor","content":" new FailedToOnboardError(message?: string): FailedToOnboardError  Defined in: src/domain/models/errors/Agent.ts:73  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  FailedToOnboardError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"FailedToOnboardError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/FailedToOnboardError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"FailedToOnboardError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/FailedToOnboardError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"FailedToOnboardError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/FailedToOnboardError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"FailedToOnboardError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/FailedToOnboardError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidBasicMessageBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidBasicMessageBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidBasicMessageBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidBasicMessageBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidBasicMessageBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidBasicMessageBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidBasicMessageBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidBasicMessageBodyError#constructor","content":" new InvalidBasicMessageBodyError(message?: string): InvalidBasicMessageBodyError  Defined in: src/domain/models/errors/Agent.ts:155  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidBasicMessageBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidBasicMessageBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidBasicMessageBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidBasicMessageBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidBasicMessageBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidBasicMessageBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidBasicMessageBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidBasicMessageBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidBasicMessageBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidCredentialFormats","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialFormats","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidCredentialFormats","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialFormats#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidCredentialFormats","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialFormats#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidCredentialFormats","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialFormats#constructor","content":" new InvalidCredentialFormats(): InvalidCredentialFormats  Defined in: src/domain/models/errors/Agent.ts:193  Returns‚Äã  InvalidCredentialFormats  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidCredentialFormats","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialFormats#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidCredentialFormats","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialFormats#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialFormats","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialFormats#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialFormats","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialFormats#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidCredentialBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialBodyError#constructor","content":" new InvalidCredentialBodyError(message?: string): InvalidCredentialBodyError  Defined in: src/domain/models/errors/Agent.ts:130  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidCredentialBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidCredentialBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidIssueCredentialBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidIssueCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidIssueCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidIssueCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialBodyError#constructor","content":" new InvalidIssueCredentialBodyError(message?: string): InvalidIssueCredentialBodyError  Defined in: src/domain/models/errors/Agent.ts:135  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidIssueCredentialBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidIssueCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidIssueCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidIssueCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidIssueCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidIssueCredentialMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidIssueCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidIssueCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidIssueCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialMessageError#constructor","content":" new InvalidIssueCredentialMessageError(message?: string): InvalidIssueCredentialMessageError  Defined in: src/domain/models/errors/Agent.ts:99  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidIssueCredentialMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidIssueCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidIssueCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidIssueCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidIssueCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidIssueCredentialMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidMediationGrantBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidMediationGrantBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidMediationGrantBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidMediationGrantBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantBodyError#constructor","content":" new InvalidMediationGrantBodyError(message?: string): InvalidMediationGrantBodyError  Defined in: src/domain/models/errors/Agent.ts:181  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidMediationGrantBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidMediationGrantBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidMediationGrantBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidMediationGrantBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidMediationGrantBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMessageError#constructor","content":" new InvalidMessageError(message: string): InvalidMessageError  Defined in: src/domain/models/errors/Agent.ts:8  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;Invalid Message&quot;  Returns‚Äã  InvalidMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidOfferCredentialBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidOfferCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidOfferCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidOfferCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialBodyError#constructor","content":" new InvalidOfferCredentialBodyError(message?: string): InvalidOfferCredentialBodyError  Defined in: src/domain/models/errors/Agent.ts:175  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidOfferCredentialBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidOfferCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidOfferCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidOfferCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidOfferCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidMediationGrantMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidMediationGrantMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidMediationGrantMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidMediationGrantMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantMessageError#constructor","content":" new InvalidMediationGrantMessageError(message?: string): InvalidMediationGrantMessageError  Defined in: src/domain/models/errors/Agent.ts:124  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidMediationGrantMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidMediationGrantMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidMediationGrantMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidMediationGrantMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidMediationGrantMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidMediationGrantMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidOfferCredentialMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidOfferCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidOfferCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidOfferCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialMessageError#constructor","content":" new InvalidOfferCredentialMessageError(message?: string): InvalidOfferCredentialMessageError  Defined in: src/domain/models/errors/Agent.ts:88  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidOfferCredentialMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidOfferCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidOfferCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidOfferCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidOfferCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidOfferCredentialMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidPickupDeliveryMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPickupDeliveryMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidPickupDeliveryMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPickupDeliveryMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidPickupDeliveryMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPickupDeliveryMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidPickupDeliveryMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPickupDeliveryMessageError#constructor","content":" new InvalidPickupDeliveryMessageError(): InvalidPickupDeliveryMessageError  Defined in: src/domain/models/errors/Agent.ts:78  Returns‚Äã  InvalidPickupDeliveryMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidPickupDeliveryMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPickupDeliveryMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidPickupDeliveryMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPickupDeliveryMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidPickupDeliveryMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPickupDeliveryMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidPickupDeliveryMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPickupDeliveryMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidPresentationBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationBodyError#constructor","content":" new InvalidPresentationBodyError(message?: string): InvalidPresentationBodyError  Defined in: src/domain/models/errors/Agent.ts:160  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidPresentationBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidProblemReportBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProblemReportBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidProblemReportBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProblemReportBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidProblemReportBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProblemReportBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidProblemReportBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProblemReportBodyError#constructor","content":" new InvalidProblemReportBodyError(message?: string): InvalidProblemReportBodyError  Defined in: src/domain/models/errors/Agent.ts:165  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidProblemReportBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidProblemReportBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProblemReportBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidProblemReportBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProblemReportBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidProblemReportBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProblemReportBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidProblemReportBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProblemReportBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidPresentationMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationMessageError#constructor","content":" new InvalidPresentationMessageError(message?: string): InvalidPresentationMessageError  Defined in: src/domain/models/errors/Agent.ts:109  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidPresentationMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidPresentationMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidProposeCredentialBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposeCredentialBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidProposeCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposeCredentialBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidProposeCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposeCredentialBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidProposeCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposeCredentialBodyError#constructor","content":" new InvalidProposeCredentialBodyError(message?: string): InvalidProposeCredentialBodyError  Defined in: src/domain/models/errors/Agent.ts:170  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidProposeCredentialBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidProposeCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposeCredentialBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidProposeCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposeCredentialBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidProposeCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposeCredentialBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidProposeCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposeCredentialBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidProposedCredentialMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposedCredentialMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidProposedCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposedCredentialMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidProposedCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposedCredentialMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidProposedCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposedCredentialMessageError#constructor","content":" new InvalidProposedCredentialMessageError(message?: string): InvalidProposedCredentialMessageError  Defined in: src/domain/models/errors/Agent.ts:94  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidProposedCredentialMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidProposedCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposedCredentialMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidProposedCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposedCredentialMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidProposedCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposedCredentialMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidProposedCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposedCredentialMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidProposePresentationBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidProposePresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidProposePresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidProposePresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationBodyError#constructor","content":" new InvalidProposePresentationBodyError(message?: string): InvalidProposePresentationBodyError  Defined in: src/domain/models/errors/Agent.ts:150  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidProposePresentationBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidProposePresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidProposePresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidProposePresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidProposePresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidProposePresentationMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidProposePresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidProposePresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidProposePresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationMessageError#constructor","content":" new InvalidProposePresentationMessageError(message?: string): InvalidProposePresentationMessageError  Defined in: src/domain/models/errors/Agent.ts:119  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidProposePresentationMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidProposePresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidProposePresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"InvalidRequestCredentialBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidRequestCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidRequestCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidRequestCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialBodyError#constructor","content":" new InvalidRequestCredentialBodyError(message?: string): InvalidRequestCredentialBodyError  Defined in: src/domain/models/errors/Agent.ts:140  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidRequestCredentialBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidRequestCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidRequestCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidRequestCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidRequestCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidProposePresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidProposePresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidProposePresentationMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidRequestCredentialMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidRequestCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidRequestCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidRequestCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialMessageError#constructor","content":" new InvalidRequestCredentialMessageError(message?: string): InvalidRequestCredentialMessageError  Defined in: src/domain/models/errors/Agent.ts:104  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidRequestCredentialMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidRequestCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidRequestCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidRequestCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidRequestCredentialMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestCredentialMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidRequestPresentationMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidRequestPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidRequestPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidRequestPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationMessageError#constructor","content":" new InvalidRequestPresentationMessageError(message?: string): InvalidRequestPresentationMessageError  Defined in: src/domain/models/errors/Agent.ts:114  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidRequestPresentationMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidRequestPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidRequestPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidRequestPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidRequestPresentationMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidRequestPresentationBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidRequestPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidRequestPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidRequestPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationBodyError#constructor","content":" new InvalidRequestPresentationBodyError(message?: string): InvalidRequestPresentationBodyError  Defined in: src/domain/models/errors/Agent.ts:145  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidRequestPresentationBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidRequestPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidRequestPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidRequestPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidRequestPresentationBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidRequestPresentationBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidStepError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidStepError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidStepError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidStepError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidStepError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidStepError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidStepError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidStepError#constructor","content":" new InvalidStepError(message?: string): InvalidStepError  Defined in: src/domain/models/errors/Agent.ts:209  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidStepError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidStepError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidStepError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidStepError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidStepError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidStepError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidStepError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidStepError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidStepError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidURLError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidURLError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidURLError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidURLError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidURLError#constructor","content":" new InvalidURLError(message: string): InvalidURLError  Defined in: src/domain/models/errors/Agent.ts:2  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;Invalid URL&quot;  Returns‚Äã  InvalidURLError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidURLError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidURLError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidURLError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvalidURLError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvitationHasNoFromDIDError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationHasNoFromDIDError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvitationHasNoFromDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationHasNoFromDIDError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvitationHasNoFromDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationHasNoFromDIDError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvitationHasNoFromDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationHasNoFromDIDError#constructor","content":" new InvitationHasNoFromDIDError(message: string): InvitationHasNoFromDIDError  Defined in: src/domain/models/errors/Agent.ts:32  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;Invalid Invitation fromDID&quot;  Returns‚Äã  InvitationHasNoFromDIDError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvitationHasNoFromDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationHasNoFromDIDError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvitationHasNoFromDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationHasNoFromDIDError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvitationHasNoFromDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationHasNoFromDIDError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvitationHasNoFromDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationHasNoFromDIDError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvitationIsInvalidError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationIsInvalidError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvitationIsInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationIsInvalidError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvitationIsInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationIsInvalidError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvitationIsInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationIsInvalidError#constructor","content":" new InvitationIsInvalidError(message: string): InvitationIsInvalidError  Defined in: src/domain/models/errors/Agent.ts:44  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;Invalid invitation&quot;  Returns‚Äã  InvitationIsInvalidError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvitationIsInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationIsInvalidError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvitationIsInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationIsInvalidError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvitationIsInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationIsInvalidError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvitationIsInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/InvitationIsInvalidError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"KeyNotExportableError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/KeyNotExportableError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"KeyNotExportableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/KeyNotExportableError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"KeyNotExportableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/KeyNotExportableError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"KeyNotExportableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/KeyNotExportableError#constructor","content":" new KeyNotExportableError(): KeyNotExportableError  Defined in: src/domain/models/errors/Agent.ts:234  Returns‚Äã  KeyNotExportableError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"KeyNotExportableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/KeyNotExportableError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"KeyNotExportableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/KeyNotExportableError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"KeyNotExportableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/KeyNotExportableError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"KeyNotExportableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/KeyNotExportableError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"MediationRequestFailedError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/MediationRequestFailedError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MediationRequestFailedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/MediationRequestFailedError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MediationRequestFailedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/MediationRequestFailedError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MediationRequestFailedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/MediationRequestFailedError#constructor","content":" new MediationRequestFailedError(message?: string): MediationRequestFailedError  Defined in: src/domain/models/errors/Agent.ts:204  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  MediationRequestFailedError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MediationRequestFailedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/MediationRequestFailedError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"MediationRequestFailedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/MediationRequestFailedError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"MediationRequestFailedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/MediationRequestFailedError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"MediationRequestFailedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/MediationRequestFailedError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"NoConnectionOpenError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoConnectionOpenError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NoConnectionOpenError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoConnectionOpenError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NoConnectionOpenError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoConnectionOpenError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NoConnectionOpenError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoConnectionOpenError#constructor","content":" new NoConnectionOpenError(message: string): NoConnectionOpenError  Defined in: src/domain/models/errors/Agent.ts:50  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;No Connection Open&quot;  Returns‚Äã  NoConnectionOpenError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NoConnectionOpenError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoConnectionOpenError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NoConnectionOpenError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoConnectionOpenError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NoConnectionOpenError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoConnectionOpenError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NoConnectionOpenError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoConnectionOpenError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"NoHandshakeResponseError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoHandshakeResponseError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NoHandshakeResponseError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoHandshakeResponseError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NoHandshakeResponseError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoHandshakeResponseError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NoHandshakeResponseError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoHandshakeResponseError#constructor","content":" new NoHandshakeResponseError(message: string): NoHandshakeResponseError  Defined in: src/domain/models/errors/Agent.ts:56  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;No Handshake Response&quot;  Returns‚Äã  NoHandshakeResponseError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NoHandshakeResponseError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoHandshakeResponseError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NoHandshakeResponseError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoHandshakeResponseError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NoHandshakeResponseError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoHandshakeResponseError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NoHandshakeResponseError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoHandshakeResponseError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"NoValidServiceEndpointError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoValidServiceEndpointError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NoValidServiceEndpointError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoValidServiceEndpointError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NoValidServiceEndpointError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoValidServiceEndpointError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NoValidServiceEndpointError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoValidServiceEndpointError#constructor","content":" new NoValidServiceEndpointError(message: string): NoValidServiceEndpointError  Defined in: src/domain/models/errors/Agent.ts:38  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;No Valid Service Endpoint&quot;  Returns‚Äã  NoValidServiceEndpointError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NoValidServiceEndpointError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoValidServiceEndpointError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NoValidServiceEndpointError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoValidServiceEndpointError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NoValidServiceEndpointError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoValidServiceEndpointError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NoValidServiceEndpointError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoValidServiceEndpointError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"NoMediatorAvailableError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoMediatorAvailableError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NoMediatorAvailableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoMediatorAvailableError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NoMediatorAvailableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoMediatorAvailableError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NoMediatorAvailableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoMediatorAvailableError#constructor","content":" new NoMediatorAvailableError(message?: string): NoMediatorAvailableError  Defined in: src/domain/models/errors/Agent.ts:198  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  NoMediatorAvailableError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NoMediatorAvailableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoMediatorAvailableError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NoMediatorAvailableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoMediatorAvailableError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NoMediatorAvailableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoMediatorAvailableError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NoMediatorAvailableError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/NoMediatorAvailableError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"OfferDoesntProvideEnoughInformation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/OfferDoesntProvideEnoughInformation","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"OfferDoesntProvideEnoughInformation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/OfferDoesntProvideEnoughInformation#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"OfferDoesntProvideEnoughInformation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/OfferDoesntProvideEnoughInformation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"OfferDoesntProvideEnoughInformation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/OfferDoesntProvideEnoughInformation#constructor","content":" new OfferDoesntProvideEnoughInformation(): OfferDoesntProvideEnoughInformation  Defined in: src/domain/models/errors/Agent.ts:83  Returns‚Äã  OfferDoesntProvideEnoughInformation  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"OfferDoesntProvideEnoughInformation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/OfferDoesntProvideEnoughInformation#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"OfferDoesntProvideEnoughInformation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/OfferDoesntProvideEnoughInformation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"OfferDoesntProvideEnoughInformation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/OfferDoesntProvideEnoughInformation#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"OfferDoesntProvideEnoughInformation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/OfferDoesntProvideEnoughInformation#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"UnhandledCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledCredential","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnhandledCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledCredential#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnhandledCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledCredential#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnhandledCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledCredential#constructor","content":" new UnhandledCredential(message?: string): UnhandledCredential  Defined in: src/domain/models/errors/Agent.ts:222  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  UnhandledCredential  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnhandledCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledCredential#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnhandledCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnhandledCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledCredential#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnhandledCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledCredential#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"UnhandledPresentationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledPresentationRequest","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnhandledPresentationRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledPresentationRequest#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnhandledPresentationRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledPresentationRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnhandledPresentationRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledPresentationRequest#constructor","content":" new UnhandledPresentationRequest(message?: string): UnhandledPresentationRequest  Defined in: src/domain/models/errors/Agent.ts:228  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  UnhandledPresentationRequest  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnhandledPresentationRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledPresentationRequest#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnhandledPresentationRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledPresentationRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnhandledPresentationRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledPresentationRequest#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnhandledPresentationRequest","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnhandledPresentationRequest#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"UnknownCredentialBodyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownCredentialBodyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnknownCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownCredentialBodyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnknownCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownCredentialBodyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnknownCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownCredentialBodyError#constructor","content":" new UnknownCredentialBodyError(): UnknownCredentialBodyError  Defined in: src/domain/models/errors/Agent.ts:187  Returns‚Äã  UnknownCredentialBodyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnknownCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownCredentialBodyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnknownCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownCredentialBodyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnknownCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownCredentialBodyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnknownCredentialBodyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownCredentialBodyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"UnknownInvitationTypeError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownInvitationTypeError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnknownInvitationTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownInvitationTypeError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnknownInvitationTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownInvitationTypeError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnknownInvitationTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownInvitationTypeError#constructor","content":" new UnknownInvitationTypeError(message: string): UnknownInvitationTypeError  Defined in: src/domain/models/errors/Agent.ts:62  Parameters‚Äã  Parameter\tType\tDefault valuemessage\tstring\t&quot;Unknown Invitation Type&quot;  Returns‚Äã  UnknownInvitationTypeError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnknownInvitationTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownInvitationTypeError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnknownInvitationTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownInvitationTypeError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnknownInvitationTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownInvitationTypeError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnknownInvitationTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownInvitationTypeError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"UnsupportedAttachmentType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnsupportedAttachmentType","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnsupportedAttachmentType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnsupportedAttachmentType#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnsupportedAttachmentType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnsupportedAttachmentType#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnsupportedAttachmentType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnsupportedAttachmentType#constructor","content":" new UnsupportedAttachmentType(message?: string): UnsupportedAttachmentType  Defined in: src/domain/models/errors/Agent.ts:216  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  UnsupportedAttachmentType  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnsupportedAttachmentType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnsupportedAttachmentType#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnsupportedAttachmentType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnsupportedAttachmentType#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnsupportedAttachmentType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnsupportedAttachmentType#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnsupportedAttachmentType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnsupportedAttachmentType#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"UnknownPrismOnboardingTypeError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownPrismOnboardingTypeError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnknownPrismOnboardingTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownPrismOnboardingTypeError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnknownPrismOnboardingTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownPrismOnboardingTypeError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnknownPrismOnboardingTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownPrismOnboardingTypeError#constructor","content":" new UnknownPrismOnboardingTypeError(): UnknownPrismOnboardingTypeError  Defined in: src/domain/models/errors/Agent.ts:68  Returns‚Äã  UnknownPrismOnboardingTypeError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnknownPrismOnboardingTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownPrismOnboardingTypeError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnknownPrismOnboardingTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownPrismOnboardingTypeError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnknownPrismOnboardingTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownPrismOnboardingTypeError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnknownPrismOnboardingTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/AgentError/classes/UnknownPrismOnboardingTypeError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/#classes","content":" Class\tDescriptionApolloLibError\tthrown when Apollo library returns unexpected result CouldNotParseMessageString\t// ?? InvalidDerivationPath\tthrown when failing to create a DerivationPath InvalidKeyCurve\tthrown when given Key Curve is not supported InvalidKeyType\tthrown when give Key Type is not supported KeyInitializationError\tthrown when failing to create a key KeyRestoratonFailed\tthrown when Key recovery fails during restoration attempt MissingKeyParameters\tthrown when expected parameter is missing for Key operation MnemonicLengthError\tthrown when the number of Mnemonic words is different to expected MnemonicWordError\tthrown when at least one Mnemonic word does not match in the wordlist ","version":"Next","tagName":"h2"},{"title":"ApolloLibError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/ApolloLibError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"ApolloLibError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/ApolloLibError#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ApolloLibError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/ApolloLibError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ApolloLibError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/ApolloLibError#constructor","content":" new ApolloLibError(message: string): ApolloLibError  Defined in: src/domain/models/errors/Apollo.ts:101  Parameters‚Äã  Parameter\tTypemessage\tstring  Returns‚Äã  ApolloLibError  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ApolloLibError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/ApolloLibError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ApolloLibError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/ApolloLibError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"ApolloLibError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/ApolloLibError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"ApolloLibError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/ApolloLibError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"CouldNotParseMessageString","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/CouldNotParseMessageString","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CouldNotParseMessageString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/CouldNotParseMessageString#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CouldNotParseMessageString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/CouldNotParseMessageString#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CouldNotParseMessageString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/CouldNotParseMessageString#constructor","content":" new CouldNotParseMessageString(): CouldNotParseMessageString  Defined in: src/domain/models/errors/Apollo.ts:25  Returns‚Äã  CouldNotParseMessageString  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CouldNotParseMessageString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/CouldNotParseMessageString#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CouldNotParseMessageString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/CouldNotParseMessageString#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"CouldNotParseMessageString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/CouldNotParseMessageString#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"CouldNotParseMessageString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/CouldNotParseMessageString#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidDerivationPath","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidDerivationPath","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidDerivationPath","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidDerivationPath#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidDerivationPath","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidDerivationPath#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidDerivationPath","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidDerivationPath#constructor","content":" new InvalidDerivationPath(message: string): InvalidDerivationPath  Defined in: src/domain/models/errors/Apollo.ts:92  Parameters‚Äã  Parameter\tTypemessage\tstring  Returns‚Äã  InvalidDerivationPath  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidDerivationPath","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidDerivationPath#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidDerivationPath","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidDerivationPath#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidDerivationPath","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidDerivationPath#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidDerivationPath","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidDerivationPath#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidKeyType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyType","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidKeyType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyType#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidKeyType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyType#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidKeyType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyType#constructor","content":" new InvalidKeyType(keyType?: string, options?: KeyTypes[]): InvalidKeyType  Defined in: src/domain/models/errors/Apollo.ts:66  Parameters‚Äã  Parameter\tTypekeyType?\tstring options?\tKeyTypes[]  Returns‚Äã  InvalidKeyType  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidKeyType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyType#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidKeyType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyType#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidKeyType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyType#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidKeyType","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyType#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidKeyCurve","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyCurve","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidKeyCurve","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyCurve#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidKeyCurve","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyCurve#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidKeyCurve","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyCurve#constructor","content":" new InvalidKeyCurve(keyCurve?: string, options?: Curve[]): InvalidKeyCurve  Defined in: src/domain/models/errors/Apollo.ts:56  Parameters‚Äã  Parameter\tTypekeyCurve?\tstring options?\tCurve[]  Returns‚Äã  InvalidKeyCurve  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidKeyCurve","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyCurve#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidKeyCurve","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyCurve#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidKeyCurve","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyCurve#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidKeyCurve","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/InvalidKeyCurve#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"KeyInitializationError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyInitializationError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"KeyInitializationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyInitializationError#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"KeyInitializationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyInitializationError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"KeyInitializationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyInitializationError#constructor","content":" new KeyInitializationError(message: string): KeyInitializationError  Defined in: src/domain/models/errors/Apollo.ts:85  Parameters‚Äã  Parameter\tTypemessage\tstring  Returns‚Äã  KeyInitializationError  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"KeyInitializationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyInitializationError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"KeyInitializationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyInitializationError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"KeyInitializationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyInitializationError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"KeyInitializationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyInitializationError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"KeyRestoratonFailed","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyRestoratonFailed","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"KeyRestoratonFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyRestoratonFailed#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"KeyRestoratonFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyRestoratonFailed#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"KeyRestoratonFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyRestoratonFailed#constructor","content":" new KeyRestoratonFailed(key?: StorableKey): KeyRestoratonFailed  Defined in: src/domain/models/errors/Apollo.ts:47  Parameters‚Äã  Parameter\tTypekey?\tStorableKey  Returns‚Äã  KeyRestoratonFailed  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"KeyRestoratonFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyRestoratonFailed#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"KeyRestoratonFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyRestoratonFailed#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"KeyRestoratonFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyRestoratonFailed#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"KeyRestoratonFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/KeyRestoratonFailed#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"MissingKeyParameters","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MissingKeyParameters","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MissingKeyParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MissingKeyParameters#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MissingKeyParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MissingKeyParameters#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MissingKeyParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MissingKeyParameters#constructor","content":" new MissingKeyParameters(...missing: string[]): MissingKeyParameters  Defined in: src/domain/models/errors/Apollo.ts:76  Parameters‚Äã  Parameter\tType...missing\tstring[]  Returns‚Äã  MissingKeyParameters  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MissingKeyParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MissingKeyParameters#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"MissingKeyParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MissingKeyParameters#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"MissingKeyParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MissingKeyParameters#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"MissingKeyParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MissingKeyParameters#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"MnemonicLengthError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicLengthError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MnemonicLengthError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicLengthError#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MnemonicLengthError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicLengthError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MnemonicLengthError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicLengthError#constructor","content":" new MnemonicLengthError(): MnemonicLengthError  Defined in: src/domain/models/errors/Apollo.ts:18  Returns‚Äã  MnemonicLengthError  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MnemonicLengthError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicLengthError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"MnemonicLengthError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicLengthError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"MnemonicLengthError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicLengthError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"MnemonicLengthError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicLengthError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"Schema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Backup/type-aliases/Schema","content":"Schema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Backup / Schema Type Alias: Schema Schema = Schema Defined in: src/domain/backup/index.ts:6 All supported backup schemas","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Backup/","content":"","keywords":"","version":"Next"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Backup/#type-aliases","content":" Type Alias\tDescriptionSchema\tAll supported backup schemas Version\t-  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Backup/#variables","content":" Variable\tDescriptiondefaultVersion\t- versions\t-  ","version":"Next","tagName":"h2"},{"title":"References‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Backup/#references","content":" ","version":"Next","tagName":"h2"},{"title":"v0_0_1‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Backup/#v0_0_1","content":" Renames and re-exports Schema ","version":"Next","tagName":"h3"},{"title":"MnemonicWordError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicWordError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MnemonicWordError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicWordError#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MnemonicWordError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicWordError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MnemonicWordError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicWordError#constructor","content":" new MnemonicWordError(words?: string[]): MnemonicWordError  Defined in: src/domain/models/errors/Apollo.ts:9  Parameters‚Äã  Parameter\tTypewords?\tstring[]  Returns‚Äã  MnemonicWordError  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MnemonicWordError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicWordError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"MnemonicWordError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicWordError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"MnemonicWordError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicWordError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"MnemonicWordError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ApolloError/classes/MnemonicWordError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"Version","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Backup/type-aliases/Version","content":"Version @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Backup / Version Type Alias: Version Version = &quot;0.0.1&quot; Defined in: src/domain/backup/index.ts:7","keywords":"","version":"Next"},{"title":"defaultVersion","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Backup/variables/defaultVersion","content":"defaultVersion @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Backup / defaultVersion Variable: defaultVersion const defaultVersion: &quot;0.0.1&quot; = &quot;0.0.1&quot; Defined in: src/domain/backup/index.ts:9","keywords":"","version":"Next"},{"title":"versions","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Backup/variables/versions","content":"versions @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Backup / versions Variable: versions const versions: Version[] Defined in: src/domain/backup/index.ts:11","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/#classes","content":" Class\tDescriptionExpectedCompressedKey\t- InitialStateOfDIDChanged\t- InvalidDIDString\t- InvalidJWKKeysError\t- InvalidKeyError\t- InvalidLongFormDID\t- InvalidPeerDIDError\t- InvalidPublicKeyEncoding\t- MethodIdIsDoesNotSatisfyRegex\t- NotPossibleToResolveDID\t- ","version":"Next","tagName":"h2"},{"title":"ExpectedCompressedKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/ExpectedCompressedKey","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"ExpectedCompressedKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/ExpectedCompressedKey#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ExpectedCompressedKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/ExpectedCompressedKey#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ExpectedCompressedKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/ExpectedCompressedKey#constructor","content":" new ExpectedCompressedKey(message?: string): ExpectedCompressedKey  Defined in: src/domain/models/errors/Castor.ts:20  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  ExpectedCompressedKey  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ExpectedCompressedKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/ExpectedCompressedKey#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ExpectedCompressedKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/ExpectedCompressedKey#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"ExpectedCompressedKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/ExpectedCompressedKey#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"ExpectedCompressedKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/ExpectedCompressedKey#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidDIDString","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidDIDString","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidDIDString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidDIDString#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidDIDString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidDIDString#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidDIDString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidDIDString#constructor","content":" new InvalidDIDString(message?: string): InvalidDIDString  Defined in: src/domain/models/errors/Castor.ts:26  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidDIDString  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidDIDString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidDIDString#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidDIDString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidDIDString#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidDIDString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidDIDString#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidDIDString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidDIDString#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InitialStateOfDIDChanged","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InitialStateOfDIDChanged","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InitialStateOfDIDChanged","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InitialStateOfDIDChanged#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InitialStateOfDIDChanged","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InitialStateOfDIDChanged#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InitialStateOfDIDChanged","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InitialStateOfDIDChanged#constructor","content":" new InitialStateOfDIDChanged(message?: string): InitialStateOfDIDChanged  Defined in: src/domain/models/errors/Castor.ts:32  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InitialStateOfDIDChanged  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InitialStateOfDIDChanged","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InitialStateOfDIDChanged#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InitialStateOfDIDChanged","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InitialStateOfDIDChanged#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InitialStateOfDIDChanged","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InitialStateOfDIDChanged#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InitialStateOfDIDChanged","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InitialStateOfDIDChanged#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidJWKKeysError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidJWKKeysError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidJWKKeysError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidJWKKeysError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidJWKKeysError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidJWKKeysError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidJWKKeysError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidJWKKeysError#constructor","content":" new InvalidJWKKeysError(message?: string): InvalidJWKKeysError  Defined in: src/domain/models/errors/Castor.ts:44  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidJWKKeysError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidJWKKeysError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidJWKKeysError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidJWKKeysError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidJWKKeysError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidJWKKeysError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidJWKKeysError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidJWKKeysError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidJWKKeysError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidKeyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidKeyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidKeyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidKeyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidKeyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidKeyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidKeyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidKeyError#constructor","content":" new InvalidKeyError(message?: string): InvalidKeyError  Defined in: src/domain/models/errors/Castor.ts:50  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidKeyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidKeyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidKeyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidKeyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidKeyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidKeyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidKeyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidKeyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidKeyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidLongFormDID","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidLongFormDID","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidLongFormDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidLongFormDID#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidLongFormDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidLongFormDID#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidLongFormDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidLongFormDID#constructor","content":" new InvalidLongFormDID(message?: string): InvalidLongFormDID  Defined in: src/domain/models/errors/Castor.ts:2  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidLongFormDID  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidLongFormDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidLongFormDID#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidLongFormDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidLongFormDID#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidLongFormDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidLongFormDID#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidLongFormDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidLongFormDID#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidPeerDIDError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPeerDIDError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidPeerDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPeerDIDError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidPeerDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPeerDIDError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidPeerDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPeerDIDError#constructor","content":" new InvalidPeerDIDError(message?: string): InvalidPeerDIDError  Defined in: src/domain/models/errors/Castor.ts:56  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidPeerDIDError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidPeerDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPeerDIDError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidPeerDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPeerDIDError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidPeerDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPeerDIDError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidPeerDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPeerDIDError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"MethodIdIsDoesNotSatisfyRegex","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/MethodIdIsDoesNotSatisfyRegex","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MethodIdIsDoesNotSatisfyRegex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/MethodIdIsDoesNotSatisfyRegex#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MethodIdIsDoesNotSatisfyRegex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/MethodIdIsDoesNotSatisfyRegex#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MethodIdIsDoesNotSatisfyRegex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/MethodIdIsDoesNotSatisfyRegex#constructor","content":" new MethodIdIsDoesNotSatisfyRegex(message?: string): MethodIdIsDoesNotSatisfyRegex  Defined in: src/domain/models/errors/Castor.ts:8  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  MethodIdIsDoesNotSatisfyRegex  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MethodIdIsDoesNotSatisfyRegex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/MethodIdIsDoesNotSatisfyRegex#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"MethodIdIsDoesNotSatisfyRegex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/MethodIdIsDoesNotSatisfyRegex#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"MethodIdIsDoesNotSatisfyRegex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/MethodIdIsDoesNotSatisfyRegex#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"MethodIdIsDoesNotSatisfyRegex","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/MethodIdIsDoesNotSatisfyRegex#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidPublicKeyEncoding","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPublicKeyEncoding","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidPublicKeyEncoding","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPublicKeyEncoding#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidPublicKeyEncoding","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPublicKeyEncoding#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidPublicKeyEncoding","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPublicKeyEncoding#constructor","content":" new InvalidPublicKeyEncoding(message?: string): InvalidPublicKeyEncoding  Defined in: src/domain/models/errors/Castor.ts:14  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidPublicKeyEncoding  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidPublicKeyEncoding","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPublicKeyEncoding#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidPublicKeyEncoding","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPublicKeyEncoding#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidPublicKeyEncoding","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPublicKeyEncoding#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidPublicKeyEncoding","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/InvalidPublicKeyEncoding#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"NotPossibleToResolveDID","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/NotPossibleToResolveDID","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NotPossibleToResolveDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/NotPossibleToResolveDID#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NotPossibleToResolveDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/NotPossibleToResolveDID#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NotPossibleToResolveDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/NotPossibleToResolveDID#constructor","content":" new NotPossibleToResolveDID(message?: string): NotPossibleToResolveDID  Defined in: src/domain/models/errors/Castor.ts:38  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  NotPossibleToResolveDID  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NotPossibleToResolveDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/NotPossibleToResolveDID#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NotPossibleToResolveDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/NotPossibleToResolveDID#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NotPossibleToResolveDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/NotPossibleToResolveDID#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NotPossibleToResolveDID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CastorError/classes/NotPossibleToResolveDID#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/#classes","content":" Class\tDescriptionExpectError\t- SDKError\t- UnknownError\t- ValidationError\t- ","version":"Next","tagName":"h2"},{"title":"ExpectError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ExpectError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"ExpectError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ExpectError#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ExpectError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ExpectError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ExpectError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ExpectError#constructor","content":" new ExpectError(msg?: string): ExpectError  Defined in: src/domain/models/errors/Common.ts:13  Parameters‚Äã  Parameter\tTypemsg?\tstring  Returns‚Äã  ExpectError  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ExpectError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ExpectError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ExpectError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ExpectError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"ExpectError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ExpectError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"ExpectError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ExpectError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"SDKError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/SDKError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"SDKError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/SDKError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Extended by‚Äã","type":1,"pageTitle":"SDKError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/SDKError#extended-by","content":" MnemonicWordErrorMnemonicLengthErrorCouldNotParseMessageStringKeyRestoratonFailedInvalidKeyCurveInvalidKeyTypeMissingKeyParametersKeyInitializationErrorInvalidDerivationPathApolloLibErrorUnknownErrorExpectErrorValidationErrorInvalidJWKParametersInvalidJWK  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"SDKError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/SDKError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"SDKError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/SDKError#constructor","content":" new SDKError(code: number, message: string): SDKError  Defined in: src/domain/models/errors/Common.ts:2  Parameters‚Äã  Parameter\tTypecode\tnumber message\tstring  Returns‚Äã  SDKError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"UnknownError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/UnknownError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnknownError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/UnknownError#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnknownError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/UnknownError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnknownError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/UnknownError#constructor","content":" new UnknownError(): UnknownError  Defined in: src/domain/models/errors/Common.ts:9  Returns‚Äã  UnknownError  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnknownError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/UnknownError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnknownError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/UnknownError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnknownError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/UnknownError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnknownError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/UnknownError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"SDKError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/SDKError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"SDKError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/SDKError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"SDKError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/SDKError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"SDKError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/SDKError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"ValidationError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ValidationError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"ValidationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ValidationError#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ValidationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ValidationError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ValidationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ValidationError#constructor","content":" new ValidationError(errors?: string[]): ValidationError  Defined in: src/domain/models/errors/Common.ts:17  Parameters‚Äã  Parameter\tTypeerrors?\tstring[]  Returns‚Äã  ValidationError  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ValidationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ValidationError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 errors?\treadonly\tstring[]\t-\t-\tsrc/domain/models/errors/Common.ts:17 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ValidationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ValidationError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"ValidationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ValidationError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"ValidationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/CommonError/classes/ValidationError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/","content":"","keywords":"","version":"Next"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/#namespaces","content":" Namespace\tDescriptionVerificationMethod\t-  ","version":"Next","tagName":"h2"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/#classes","content":" Class\tDescriptionAlsoKnownAs\t- AssertionMethod\t- Authentication\t- CapabilityDelegation\t- CapabilityInvocation\t- Controller\t- KeyAgreement\t- Service\t- ServiceEndpoint\t- Services\t- VerificationMethod\t- VerificationMethods\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/#type-aliases","content":" Type Alias\tDescriptionCoreProperty\t- ","version":"Next","tagName":"h2"},{"title":"AlsoKnownAs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AlsoKnownAs","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"AlsoKnownAs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AlsoKnownAs#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"AlsoKnownAs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AlsoKnownAs#constructor","content":" new AlsoKnownAs(values: string[]): AlsoKnownAs  Defined in: src/domain/models/DIDDocument.ts:292  Parameters‚Äã  Parameter\tTypevalues\tstring[]  Returns‚Äã  AlsoKnownAs  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"AlsoKnownAs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AlsoKnownAs#properties","content":" Property\tModifier\tType\tDefined in values\tpublic\tstring[]\tsrc/domain/models/DIDDocument.ts:292 ","version":"Next","tagName":"h2"},{"title":"Authentication","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Authentication","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"Authentication","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Authentication#extends","content":" VerificationMethodGroup  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Authentication","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Authentication#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Authentication","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Authentication#constructor","content":" new Authentication(urls: string[], verificationMethods: VerificationMethod[]): Authentication  Defined in: src/domain/models/DIDDocument.ts:339  Parameters‚Äã  Parameter\tType\tDefault valueurls\tstring[]\t[] verificationMethods\tVerificationMethod[]\t[]  Returns‚Äã  Authentication  Inherited from‚Äã  VerificationMethodGroup.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Authentication","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Authentication#properties","content":" Property\tModifier\tType\tDefault value\tInherited from\tDefined in urls\tpublic\tstring[]\t[]\tVerificationMethodGroup.urls\tsrc/domain/models/DIDDocument.ts:340 verificationMethods\tpublic\tVerificationMethod[]\t[]\tVerificationMethodGroup.verificationMethods\tsrc/domain/models/DIDDocument.ts:341  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Authentication","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Authentication#methods","content":" ","version":"Next","tagName":"h2"},{"title":"add()‚Äã","type":1,"pageTitle":"Authentication","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Authentication#add","content":" add(method: VerificationMethod): void  Defined in: src/domain/models/DIDDocument.ts:344  Parameters‚Äã  Parameter\tTypemethod\tVerificationMethod  Returns‚Äã  void  Inherited from‚Äã  VerificationMethodGroup.add    ","version":"Next","tagName":"h3"},{"title":"cloneWithNewDID()‚Äã","type":1,"pageTitle":"Authentication","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Authentication#clonewithnewdid","content":" cloneWithNewDID(did: DID): Authentication  Defined in: src/domain/models/DIDDocument.ts:359  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  Authentication  Overrides‚Äã  VerificationMethodGroup.cloneWithNewDID ","version":"Next","tagName":"h3"},{"title":"AssertionMethod","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AssertionMethod","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"AssertionMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AssertionMethod#extends","content":" VerificationMethodGroup  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"AssertionMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AssertionMethod#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"AssertionMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AssertionMethod#constructor","content":" new AssertionMethod(urls: string[], verificationMethods: VerificationMethod[]): AssertionMethod  Defined in: src/domain/models/DIDDocument.ts:339  Parameters‚Äã  Parameter\tType\tDefault valueurls\tstring[]\t[] verificationMethods\tVerificationMethod[]\t[]  Returns‚Äã  AssertionMethod  Inherited from‚Äã  VerificationMethodGroup.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"AssertionMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AssertionMethod#properties","content":" Property\tModifier\tType\tDefault value\tInherited from\tDefined in urls\tpublic\tstring[]\t[]\tVerificationMethodGroup.urls\tsrc/domain/models/DIDDocument.ts:340 verificationMethods\tpublic\tVerificationMethod[]\t[]\tVerificationMethodGroup.verificationMethods\tsrc/domain/models/DIDDocument.ts:341  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"AssertionMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AssertionMethod#methods","content":" ","version":"Next","tagName":"h2"},{"title":"add()‚Äã","type":1,"pageTitle":"AssertionMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AssertionMethod#add","content":" add(method: VerificationMethod): void  Defined in: src/domain/models/DIDDocument.ts:344  Parameters‚Äã  Parameter\tTypemethod\tVerificationMethod  Returns‚Äã  void  Inherited from‚Äã  VerificationMethodGroup.add    ","version":"Next","tagName":"h3"},{"title":"cloneWithNewDID()‚Äã","type":1,"pageTitle":"AssertionMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/AssertionMethod#clonewithnewdid","content":" cloneWithNewDID(did: DID): Authentication  Defined in: src/domain/models/DIDDocument.ts:365  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  Authentication  Overrides‚Äã  VerificationMethodGroup.cloneWithNewDID ","version":"Next","tagName":"h3"},{"title":"CapabilityDelegation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityDelegation","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CapabilityDelegation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityDelegation#extends","content":" VerificationMethodGroup  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CapabilityDelegation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityDelegation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CapabilityDelegation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityDelegation#constructor","content":" new CapabilityDelegation(urls: string[], verificationMethods: VerificationMethod[]): CapabilityDelegation  Defined in: src/domain/models/DIDDocument.ts:339  Parameters‚Äã  Parameter\tType\tDefault valueurls\tstring[]\t[] verificationMethods\tVerificationMethod[]\t[]  Returns‚Äã  CapabilityDelegation  Inherited from‚Äã  VerificationMethodGroup.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CapabilityDelegation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityDelegation#properties","content":" Property\tModifier\tType\tDefault value\tInherited from\tDefined in urls\tpublic\tstring[]\t[]\tVerificationMethodGroup.urls\tsrc/domain/models/DIDDocument.ts:340 verificationMethods\tpublic\tVerificationMethod[]\t[]\tVerificationMethodGroup.verificationMethods\tsrc/domain/models/DIDDocument.ts:341  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CapabilityDelegation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityDelegation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"add()‚Äã","type":1,"pageTitle":"CapabilityDelegation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityDelegation#add","content":" add(method: VerificationMethod): void  Defined in: src/domain/models/DIDDocument.ts:344  Parameters‚Äã  Parameter\tTypemethod\tVerificationMethod  Returns‚Äã  void  Inherited from‚Äã  VerificationMethodGroup.add    ","version":"Next","tagName":"h3"},{"title":"cloneWithNewDID()‚Äã","type":1,"pageTitle":"CapabilityDelegation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityDelegation#clonewithnewdid","content":" cloneWithNewDID(did: DID): Authentication  Defined in: src/domain/models/DIDDocument.ts:383  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  Authentication  Overrides‚Äã  VerificationMethodGroup.cloneWithNewDID ","version":"Next","tagName":"h3"},{"title":"KeyAgreement","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/KeyAgreement","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"KeyAgreement","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/KeyAgreement#extends","content":" VerificationMethodGroup  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"KeyAgreement","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/KeyAgreement#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"KeyAgreement","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/KeyAgreement#constructor","content":" new KeyAgreement(urls: string[], verificationMethods: VerificationMethod[]): KeyAgreement  Defined in: src/domain/models/DIDDocument.ts:339  Parameters‚Äã  Parameter\tType\tDefault valueurls\tstring[]\t[] verificationMethods\tVerificationMethod[]\t[]  Returns‚Äã  KeyAgreement  Inherited from‚Äã  VerificationMethodGroup.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"KeyAgreement","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/KeyAgreement#properties","content":" Property\tModifier\tType\tDefault value\tInherited from\tDefined in urls\tpublic\tstring[]\t[]\tVerificationMethodGroup.urls\tsrc/domain/models/DIDDocument.ts:340 verificationMethods\tpublic\tVerificationMethod[]\t[]\tVerificationMethodGroup.verificationMethods\tsrc/domain/models/DIDDocument.ts:341  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"KeyAgreement","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/KeyAgreement#methods","content":" ","version":"Next","tagName":"h2"},{"title":"add()‚Äã","type":1,"pageTitle":"KeyAgreement","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/KeyAgreement#add","content":" add(method: VerificationMethod): void  Defined in: src/domain/models/DIDDocument.ts:344  Parameters‚Äã  Parameter\tTypemethod\tVerificationMethod  Returns‚Äã  void  Inherited from‚Äã  VerificationMethodGroup.add    ","version":"Next","tagName":"h3"},{"title":"cloneWithNewDID()‚Äã","type":1,"pageTitle":"KeyAgreement","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/KeyAgreement#clonewithnewdid","content":" cloneWithNewDID(did: DID): Authentication  Defined in: src/domain/models/DIDDocument.ts:371  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  Authentication  Overrides‚Äã  VerificationMethodGroup.cloneWithNewDID ","version":"Next","tagName":"h3"},{"title":"Controller","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Controller","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Controller#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Controller#constructor","content":" new Controller(values: DID[]): Controller  Defined in: src/domain/models/DIDDocument.ts:296  Parameters‚Äã  Parameter\tTypevalues\tDID[]  Returns‚Äã  Controller  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Controller#properties","content":" Property\tModifier\tType\tDefined in values\tpublic\tDID[]\tsrc/domain/models/DIDDocument.ts:296 ","version":"Next","tagName":"h2"},{"title":"Service","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Service","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Service","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Service#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Service","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Service#constructor","content":" new Service(id: string, type: string[], endpoint: string | ServiceEndpoint): Service  Defined in: src/domain/models/DIDDocument.ts:312  Parameters‚Äã  Parameter\tTypeid\tstring type\tstring[] endpoint\tstring | ServiceEndpoint  Returns‚Äã  Service  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Service","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Service#properties","content":" Property\tModifier\tType\tDefined in id\tpublic\tstring\tsrc/domain/models/DIDDocument.ts:313 serviceEndpoint\tpublic\tServiceEndpoint\tsrc/domain/models/DIDDocument.ts:310 type\tpublic\tstring[]\tsrc/domain/models/DIDDocument.ts:314  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"Service","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Service#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"isDIDCommMessaging‚Äã","type":1,"pageTitle":"Service","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Service#isdidcommmessaging","content":" Get Signature‚Äã  get isDIDCommMessaging(): boolean  Defined in: src/domain/models/DIDDocument.ts:320  Returns‚Äã  boolean ","version":"Next","tagName":"h3"},{"title":"CapabilityInvocation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityInvocation","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CapabilityInvocation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityInvocation#extends","content":" VerificationMethodGroup  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CapabilityInvocation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityInvocation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CapabilityInvocation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityInvocation#constructor","content":" new CapabilityInvocation(urls: string[], verificationMethods: VerificationMethod[]): CapabilityInvocation  Defined in: src/domain/models/DIDDocument.ts:339  Parameters‚Äã  Parameter\tType\tDefault valueurls\tstring[]\t[] verificationMethods\tVerificationMethod[]\t[]  Returns‚Äã  CapabilityInvocation  Inherited from‚Äã  VerificationMethodGroup.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CapabilityInvocation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityInvocation#properties","content":" Property\tModifier\tType\tDefault value\tInherited from\tDefined in urls\tpublic\tstring[]\t[]\tVerificationMethodGroup.urls\tsrc/domain/models/DIDDocument.ts:340 verificationMethods\tpublic\tVerificationMethod[]\t[]\tVerificationMethodGroup.verificationMethods\tsrc/domain/models/DIDDocument.ts:341  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CapabilityInvocation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityInvocation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"add()‚Äã","type":1,"pageTitle":"CapabilityInvocation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityInvocation#add","content":" add(method: VerificationMethod): void  Defined in: src/domain/models/DIDDocument.ts:344  Parameters‚Äã  Parameter\tTypemethod\tVerificationMethod  Returns‚Äã  void  Inherited from‚Äã  VerificationMethodGroup.add    ","version":"Next","tagName":"h3"},{"title":"cloneWithNewDID()‚Äã","type":1,"pageTitle":"CapabilityInvocation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/CapabilityInvocation#clonewithnewdid","content":" cloneWithNewDID(did: DID): Authentication  Defined in: src/domain/models/DIDDocument.ts:377  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  Authentication  Overrides‚Äã  VerificationMethodGroup.cloneWithNewDID ","version":"Next","tagName":"h3"},{"title":"ServiceEndpoint","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/ServiceEndpoint","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ServiceEndpoint","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/ServiceEndpoint#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ServiceEndpoint","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/ServiceEndpoint#constructor","content":" new ServiceEndpoint(uri: string, accept: string[], routingKeys: string[]): ServiceEndpoint  Defined in: src/domain/models/DIDDocument.ts:326  Parameters‚Äã  Parameter\tType\tDefault valueuri\tstring\tundefined accept\tstring[]\t[] routingKeys\tstring[]\t[]  Returns‚Äã  ServiceEndpoint  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ServiceEndpoint","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/ServiceEndpoint#properties","content":" Property\tModifier\tType\tDefault value\tDefined in accept\tpublic\tstring[]\t[]\tsrc/domain/models/DIDDocument.ts:328 routingKeys\tpublic\tstring[]\t[]\tsrc/domain/models/DIDDocument.ts:329 uri\tpublic\tstring\tundefined\tsrc/domain/models/DIDDocument.ts:327 ","version":"Next","tagName":"h2"},{"title":"Services","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Services","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Services","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Services#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Services","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Services#constructor","content":" new Services(values: Service[]): Services  Defined in: src/domain/models/DIDDocument.ts:334  Parameters‚Äã  Parameter\tType\tDefault valuevalues\tService[]\t[]  Returns‚Äã  Services  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Services","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/Services#properties","content":" Property\tModifier\tType\tDefault value\tDefined in values\tpublic\tService[]\t[]\tsrc/domain/models/DIDDocument.ts:334 ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/namespaces/VerificationMethod/","content":"","keywords":"","version":"Next"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/namespaces/VerificationMethod/#type-aliases","content":" Type Alias\tDescriptionType\t- ","version":"Next","tagName":"h2"},{"title":"Type","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/namespaces/VerificationMethod/type-aliases/Type","content":"Type @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / DIDDocument / VerificationMethod / Type Type Alias: Type Type = &quot;JsonWebKey2020&quot; | &quot;Ed25519VerificationKey2018&quot; | &quot;Ed25519VerificationKey2020&quot; | &quot;X25519KeyAgreementKey2019&quot; | &quot;X25519KeyAgreementKey2020&quot; | &quot;EcdsaSecp256k1VerificationKey2019&quot; Defined in: src/domain/models/DIDDocument.ts:282","keywords":"","version":"Next"},{"title":"VerificationMethods","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethods","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"VerificationMethods","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethods#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"VerificationMethods","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethods#constructor","content":" new VerificationMethods(values: VerificationMethod[]): VerificationMethods  Defined in: src/domain/models/DIDDocument.ts:300  Parameters‚Äã  Parameter\tType\tDefault valuevalues\tVerificationMethod[]\t[]  Returns‚Äã  VerificationMethods  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"VerificationMethods","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethods#properties","content":" Property\tModifier\tType\tDefault value\tDefined in values\tpublic\tVerificationMethod[]\t[]\tsrc/domain/models/DIDDocument.ts:301  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"VerificationMethods","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethods#methods","content":" ","version":"Next","tagName":"h2"},{"title":"cloneWithNewDID()‚Äã","type":1,"pageTitle":"VerificationMethods","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethods#clonewithnewdid","content":" cloneWithNewDID(did: DID): VerificationMethods  Defined in: src/domain/models/DIDDocument.ts:303  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  VerificationMethods ","version":"Next","tagName":"h3"},{"title":"CoreProperty","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/type-aliases/CoreProperty","content":"CoreProperty @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / DIDDocument / CoreProperty Type Alias: CoreProperty CoreProperty = Service | AlsoKnownAs | Controller | VerificationMethods | Services | Authentication | AssertionMethod | KeyAgreement | CapabilityInvocation | CapabilityDelegation Defined in: src/domain/models/DIDDocument.ts:235","keywords":"","version":"Next"},{"title":"VerificationMethod","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethod","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"VerificationMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethod#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"VerificationMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethod#constructor","content":" new VerificationMethod(id: string, controller: string, type: Type, publicKeyJwk?: JWK, publicKeyMultibase?: string): VerificationMethod  Defined in: src/domain/models/DIDDocument.ts:248  Parameters‚Äã  Parameter\tTypeid\tstring controller\tstring type\tType publicKeyJwk?\tJWK publicKeyMultibase?\tstring  Returns‚Äã  VerificationMethod  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"VerificationMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethod#properties","content":" Property\tModifier\tType\tDefined in controller\tpublic\tstring\tsrc/domain/models/DIDDocument.ts:250 id\tpublic\tstring\tsrc/domain/models/DIDDocument.ts:249 publicKeyJwk?\tpublic\tJWK\tsrc/domain/models/DIDDocument.ts:252 publicKeyMultibase?\tpublic\tstring\tsrc/domain/models/DIDDocument.ts:253 type\tpublic\tType\tsrc/domain/models/DIDDocument.ts:251  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"VerificationMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethod#methods","content":" ","version":"Next","tagName":"h2"},{"title":"cloneWithNewId()‚Äã","type":1,"pageTitle":"VerificationMethod","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/DIDDocument/classes/VerificationMethod#clonewithnewid","content":" cloneWithNewId(did: DID): VerificationMethod  Defined in: src/domain/models/DIDDocument.ts:256  Parameters‚Äã  Parameter\tTypedid\tDID  Returns‚Äã  VerificationMethod ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/","content":"","keywords":"","version":"Next"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/#interfaces","content":" Interface\tDescriptionCommon\t- JWK\t- PEM\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/#type-aliases","content":" Type Alias\tDescriptionAll\t-  ","version":"Next","tagName":"h2"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/#functions","content":" Function\tDescriptionfactory\tfactory to create Key property with desired functions which allow converting the Key raw into different formats ","version":"Next","tagName":"h2"},{"title":"factory","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/functions/factory","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"factory","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/functions/factory#parameters","content":" Parameter\tType\tDescriptionkey\tPublicKey | PrivateKey opts\tOptions\t  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"factory","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/functions/factory#returns","content":" { Buffer: () =&gt; Buffer&lt;ArrayBufferLike&gt;; Hex: () =&gt; string; JWK: (base?: Base) =&gt; JWK; PEM: () =&gt; string; String: (encoding?: BufferEncoding) =&gt; string; }  object with exportable functions  Name\tType\tDefined inBuffer()\t() =&gt; Buffer&lt;ArrayBufferLike&gt;\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:57 Hex()\t() =&gt; string\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:59 JWK()\t(base?: Base) =&gt; JWK\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:60 PEM()\t() =&gt; string\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:61 String()\t(encoding?: BufferEncoding) =&gt; string\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:62 ","version":"Next","tagName":"h2"},{"title":"PEM","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/interfaces/PEM","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PEM","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/interfaces/PEM#properties","content":" Property\tType\tDefined in to\t{ PEM: () =&gt; string; }\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:43 to.PEM\t() =&gt; string\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:44 ","version":"Next","tagName":"h2"},{"title":"JWK","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/interfaces/JWK","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"JWK","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/interfaces/JWK#properties","content":" Property\tType\tDefined in to\t{ JWK: (base?: Base) =&gt; JWK; }\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:37 to.JWK\t(base?: Base) =&gt; JWK\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:38 ","version":"Next","tagName":"h2"},{"title":"Common","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/interfaces/Common","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Common","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/interfaces/Common#properties","content":" Property\tType\tDefined in to\t{ Buffer: () =&gt; Buffer; String: (encoding?: BufferEncoding) =&gt; string; }\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:30 to.Buffer\t() =&gt; Buffer\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:31 to.String\t(encoding?: BufferEncoding) =&gt; string\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:32 ","version":"Next","tagName":"h2"},{"title":"All","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ExportableKey/type-aliases/All","content":"All @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / ExportableKey / All Type Alias: All All = Common &amp; JWK &amp; PEM Defined in: src/domain/models/keyManagement/exportable/ExportableKey.ts:27","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ImportableKey/","content":"","keywords":"","version":"Next"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ImportableKey/#functions","content":" Function\tDescriptionfactory\tfactory to create Key property with desired functions allows creation of a given Key through different data types ","version":"Next","tagName":"h2"},{"title":"factory","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ImportableKey/functions/factory","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"factory","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ImportableKey/functions/factory#type-parameters","content":" Type ParameterT extends Key  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"factory","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ImportableKey/functions/factory#parameters","content":" Parameter\tType\tDescriptionctor\t(bytes: any) =&gt; T\tthe Key Class opts\tOptions\t  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"factory","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/ImportableKey/functions/factory#returns","content":" { Buffer: (value: Buffer) =&gt; T; Hex: (value: string) =&gt; T; PEM: (value: string) =&gt; T; String: (value: string, encoding?: BufferEncoding) =&gt; T; }  object with importable functions  Name\tType\tDefined inBuffer()\t(value: Buffer) =&gt; T\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:84 Hex()\t(value: string) =&gt; T\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:86 PEM()\t(value: string) =&gt; T\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:87 String()\t(value: string, encoding?: BufferEncoding) =&gt; T\tsrc/domain/models/keyManagement/exportable/ExportableKey.ts:88 ","version":"Next","tagName":"h2"},{"title":"fromKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/functions/fromKey","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"fromKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/functions/fromKey#parameters","content":" Parameter\tType\tDescriptionkey\tPublicKey | PrivateKey base\tBase\tset of JWK properties to be added  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"fromKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/functions/fromKey#returns","content":" JWK ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/","content":"","keywords":"","version":"Next"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/#interfaces","content":" Interface\tDescriptionBase\t- EC\t- OCT\t- OKP\t- RSA\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/#type-aliases","content":" Type Alias\tDescriptionkey_ops\t-  ","version":"Next","tagName":"h2"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/#functions","content":" Function\tDescriptionfromKey\tcreate a JWK from a given Key ","version":"Next","tagName":"h2"},{"title":"Base","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/Base","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"Base","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/Base#extended-by","content":" ECOCTOKPRSA  ","version":"Next","tagName":"h2"},{"title":"Indexable‚Äã","type":1,"pageTitle":"Base","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/Base#indexable","content":" [propName: string]: unknown  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"Base","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/Base#properties","content":" Property\tType\tDefined in alg?\tstring\tsrc/domain/models/keyManagement/exportable/JWK.ts:31 ext?\tboolean\tsrc/domain/models/keyManagement/exportable/JWK.ts:33 key_ops?\tkey_ops[]\tsrc/domain/models/keyManagement/exportable/JWK.ts:35 kid?\tstring\tsrc/domain/models/keyManagement/exportable/JWK.ts:37 kty?\tstring\tsrc/domain/models/keyManagement/exportable/JWK.ts:39 use?\t&quot;sig&quot; | &quot;enc&quot;\tsrc/domain/models/keyManagement/exportable/JWK.ts:41 x5c?\tstring[]\tsrc/domain/models/keyManagement/exportable/JWK.ts:43 x5t?\tstring\tsrc/domain/models/keyManagement/exportable/JWK.ts:45 x5t#S256?\tstring\tsrc/domain/models/keyManagement/exportable/JWK.ts:47 x5u?\tstring\tsrc/domain/models/keyManagement/exportable/JWK.ts:49 ","version":"Next","tagName":"h2"},{"title":"EC","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/EC","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"EC","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/EC#extends","content":" Base  ","version":"Next","tagName":"h2"},{"title":"Indexable‚Äã","type":1,"pageTitle":"EC","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/EC#indexable","content":" [propName: string]: unknown  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"EC","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/EC#properties","content":" Property\tType\tOverrides\tInherited from\tDefined in alg?\tstring\t-\tBase.alg\tsrc/domain/models/keyManagement/exportable/JWK.ts:31 crv\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:58 d?\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:60 ext?\tboolean\t-\tBase.ext\tsrc/domain/models/keyManagement/exportable/JWK.ts:33 key_ops?\tkey_ops[]\t-\tBase.key_ops\tsrc/domain/models/keyManagement/exportable/JWK.ts:35 kid?\tstring\t-\tBase.kid\tsrc/domain/models/keyManagement/exportable/JWK.ts:37 kty\t&quot;EC&quot;\tBase.kty\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:56 use?\t&quot;sig&quot; | &quot;enc&quot;\t-\tBase.use\tsrc/domain/models/keyManagement/exportable/JWK.ts:41 x?\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:62 x5c?\tstring[]\t-\tBase.x5c\tsrc/domain/models/keyManagement/exportable/JWK.ts:43 x5t?\tstring\t-\tBase.x5t\tsrc/domain/models/keyManagement/exportable/JWK.ts:45 x5t#S256?\tstring\t-\tBase.x5t#S256\tsrc/domain/models/keyManagement/exportable/JWK.ts:47 x5u?\tstring\t-\tBase.x5u\tsrc/domain/models/keyManagement/exportable/JWK.ts:49 y?\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:64 ","version":"Next","tagName":"h2"},{"title":"OCT","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/OCT","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"OCT","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/OCT#extends","content":" Base  ","version":"Next","tagName":"h2"},{"title":"Indexable‚Äã","type":1,"pageTitle":"OCT","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/OCT#indexable","content":" [propName: string]: unknown  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"OCT","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/OCT#properties","content":" Property\tType\tOverrides\tInherited from\tDefined in alg?\tstring\t-\tBase.alg\tsrc/domain/models/keyManagement/exportable/JWK.ts:31 ext?\tboolean\t-\tBase.ext\tsrc/domain/models/keyManagement/exportable/JWK.ts:33 k\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:71 key_ops?\tkey_ops[]\t-\tBase.key_ops\tsrc/domain/models/keyManagement/exportable/JWK.ts:35 kid?\tstring\t-\tBase.kid\tsrc/domain/models/keyManagement/exportable/JWK.ts:37 kty\t&quot;oct&quot;\tBase.kty\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:69 use?\t&quot;sig&quot; | &quot;enc&quot;\t-\tBase.use\tsrc/domain/models/keyManagement/exportable/JWK.ts:41 x5c?\tstring[]\t-\tBase.x5c\tsrc/domain/models/keyManagement/exportable/JWK.ts:43 x5t?\tstring\t-\tBase.x5t\tsrc/domain/models/keyManagement/exportable/JWK.ts:45 x5t#S256?\tstring\t-\tBase.x5t#S256\tsrc/domain/models/keyManagement/exportable/JWK.ts:47 x5u?\tstring\t-\tBase.x5u\tsrc/domain/models/keyManagement/exportable/JWK.ts:49 ","version":"Next","tagName":"h2"},{"title":"OKP","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/OKP","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"OKP","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/OKP#extends","content":" Base  ","version":"Next","tagName":"h2"},{"title":"Indexable‚Äã","type":1,"pageTitle":"OKP","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/OKP#indexable","content":" [propName: string]: unknown  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"OKP","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/OKP#properties","content":" Property\tType\tOverrides\tInherited from\tDefined in alg?\tstring\t-\tBase.alg\tsrc/domain/models/keyManagement/exportable/JWK.ts:31 crv\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:78 d?\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:80 ext?\tboolean\t-\tBase.ext\tsrc/domain/models/keyManagement/exportable/JWK.ts:33 key_ops?\tkey_ops[]\t-\tBase.key_ops\tsrc/domain/models/keyManagement/exportable/JWK.ts:35 kid?\tstring\t-\tBase.kid\tsrc/domain/models/keyManagement/exportable/JWK.ts:37 kty\t&quot;OKP&quot;\tBase.kty\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:76 use?\t&quot;sig&quot; | &quot;enc&quot;\t-\tBase.use\tsrc/domain/models/keyManagement/exportable/JWK.ts:41 x\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:82 x5c?\tstring[]\t-\tBase.x5c\tsrc/domain/models/keyManagement/exportable/JWK.ts:43 x5t?\tstring\t-\tBase.x5t\tsrc/domain/models/keyManagement/exportable/JWK.ts:45 x5t#S256?\tstring\t-\tBase.x5t#S256\tsrc/domain/models/keyManagement/exportable/JWK.ts:47 x5u?\tstring\t-\tBase.x5u\tsrc/domain/models/keyManagement/exportable/JWK.ts:49 ","version":"Next","tagName":"h2"},{"title":"RSA","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/RSA","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"RSA","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/RSA#extends","content":" Base  ","version":"Next","tagName":"h2"},{"title":"Indexable‚Äã","type":1,"pageTitle":"RSA","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/RSA#indexable","content":" [propName: string]: unknown  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"RSA","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/interfaces/RSA#properties","content":" Property\tType\tOverrides\tInherited from\tDefined in alg?\tstring\t-\tBase.alg\tsrc/domain/models/keyManagement/exportable/JWK.ts:31 d\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:88 dp\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:89 dq\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:90 e\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:91 ext?\tboolean\t-\tBase.ext\tsrc/domain/models/keyManagement/exportable/JWK.ts:33 key_ops?\tkey_ops[]\t-\tBase.key_ops\tsrc/domain/models/keyManagement/exportable/JWK.ts:35 kid?\tstring\t-\tBase.kid\tsrc/domain/models/keyManagement/exportable/JWK.ts:37 kty\t&quot;RSA&quot;\tBase.kty\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:87 n\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:92 oth\t{ d?: string; r?: string; t?: string; }[]\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:93 p\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:98 q\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:99 qi\tstring\t-\t-\tsrc/domain/models/keyManagement/exportable/JWK.ts:100 use?\t&quot;sig&quot; | &quot;enc&quot;\t-\tBase.use\tsrc/domain/models/keyManagement/exportable/JWK.ts:41 x5c?\tstring[]\t-\tBase.x5c\tsrc/domain/models/keyManagement/exportable/JWK.ts:43 x5t?\tstring\t-\tBase.x5t\tsrc/domain/models/keyManagement/exportable/JWK.ts:45 x5t#S256?\tstring\t-\tBase.x5t#S256\tsrc/domain/models/keyManagement/exportable/JWK.ts:47 x5u?\tstring\t-\tBase.x5u\tsrc/domain/models/keyManagement/exportable/JWK.ts:49 ","version":"Next","tagName":"h2"},{"title":"key_ops","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWK/type-aliases/key_ops","content":"key_ops @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / JWK / key_ops Type Alias: key_ops key_ops = &quot;sign&quot; | &quot;verify&quot; | &quot;encrypt&quot; | &quot;decrypt&quot; | &quot;wrapKey&quot; | &quot;unwrapKey&quot; | &quot;deriveKey&quot; | &quot;deriveBits&quot; Defined in: src/domain/models/keyManagement/exportable/JWK.ts:18","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/","content":"","keywords":"","version":"Next"},{"title":"Enumerations‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/#enumerations","content":" Enumeration\tDescriptionClaims\t-  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/#interfaces","content":" Interface\tDescriptionDecodedObj\t- Header\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/#type-aliases","content":" Type Alias\tDescriptionPayload\t-  ","version":"Next","tagName":"h2"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/#functions","content":" Function\tDescriptiondecode\tdecode a JWT into its parts TODO move this to JWT component - needs removing from JWTCredential first ","version":"Next","tagName":"h2"},{"title":"Claims","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/enumerations/Claims","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"Claims","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/enumerations/Claims#enumeration-members","content":" Enumeration Member\tValue\tDefined in aud\t&quot;aud&quot;\tsrc/domain/utils/JWT.ts:26 exp\t&quot;exp&quot;\tsrc/domain/utils/JWT.ts:28 iat\t&quot;iat&quot;\tsrc/domain/utils/JWT.ts:29 iss\t&quot;iss&quot;\tsrc/domain/utils/JWT.ts:24 jti\t&quot;jti&quot;\tsrc/domain/utils/JWT.ts:30 nbf\t&quot;nbf&quot;\tsrc/domain/utils/JWT.ts:27 sub\t&quot;sub&quot;\tsrc/domain/utils/JWT.ts:25 ","version":"Next","tagName":"h2"},{"title":"decode","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/functions/decode","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"decode","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/functions/decode#parameters","content":" Parameter\tType\tDescriptionjws\tstring\t  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"decode","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/functions/decode#returns","content":" DecodedObj ","version":"Next","tagName":"h2"},{"title":"DecodedObj","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/interfaces/DecodedObj","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"DecodedObj","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/interfaces/DecodedObj#properties","content":" Property\tType\tDefined in data\tstring\tsrc/domain/utils/JWT.ts:20 header\tHeader\tsrc/domain/utils/JWT.ts:17 payload\tJWTPayload\tsrc/domain/utils/JWT.ts:18 signature\tstring\tsrc/domain/utils/JWT.ts:19 ","version":"Next","tagName":"h2"},{"title":"Header","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/interfaces/Header","content":"","keywords":"","version":"Next"},{"title":"Indexable‚Äã","type":1,"pageTitle":"Header","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/interfaces/Header#indexable","content":" [key: string]: any  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"Header","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/interfaces/Header#properties","content":" Property\tType\tDefined in alg\tstring\tsrc/domain/utils/JWT.ts:10 typ\tstring\tsrc/domain/utils/JWT.ts:9 ","version":"Next","tagName":"h2"},{"title":"Payload","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/JWT/type-aliases/Payload","content":"Payload @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / JWT / Payload Type Alias: Payload Payload = JWTPayload Defined in: src/domain/utils/JWT.ts:14","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/#classes","content":" Class\tDescriptionCouldNotResolveDIDError\t- DidCommError\t- FromFieldNotSetError\t- InvalidURLError\t- MessageAttachmentWithoutIDError\t- MessageInvalidBodyDataError\t- NoDIDReceiverSetError\t- NoRecipientDIDSetError\t- NoSenderDIDSetError\t- NoValidServiceFoundError\t- UnknownAttachmentDataError\t- UnknownPackingMessageError\t- UrlSessionError\t- ","version":"Next","tagName":"h2"},{"title":"CouldNotResolveDIDError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/CouldNotResolveDIDError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CouldNotResolveDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/CouldNotResolveDIDError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CouldNotResolveDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/CouldNotResolveDIDError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CouldNotResolveDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/CouldNotResolveDIDError#constructor","content":" new CouldNotResolveDIDError(message?: string): CouldNotResolveDIDError  Defined in: src/domain/models/errors/Mercury.ts:62  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  CouldNotResolveDIDError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CouldNotResolveDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/CouldNotResolveDIDError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CouldNotResolveDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/CouldNotResolveDIDError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"CouldNotResolveDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/CouldNotResolveDIDError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"CouldNotResolveDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/CouldNotResolveDIDError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"DidCommError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/DidCommError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DidCommError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/DidCommError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DidCommError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/DidCommError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DidCommError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/DidCommError#constructor","content":" new DidCommError(message?: string): DidCommError  Defined in: src/domain/models/errors/Mercury.ts:68  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  DidCommError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DidCommError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/DidCommError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DidCommError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/DidCommError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"DidCommError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/DidCommError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"DidCommError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/DidCommError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"FromFieldNotSetError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/FromFieldNotSetError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"FromFieldNotSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/FromFieldNotSetError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"FromFieldNotSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/FromFieldNotSetError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"FromFieldNotSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/FromFieldNotSetError#constructor","content":" new FromFieldNotSetError(message?: string): FromFieldNotSetError  Defined in: src/domain/models/errors/Mercury.ts:32  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  FromFieldNotSetError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"FromFieldNotSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/FromFieldNotSetError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"FromFieldNotSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/FromFieldNotSetError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"FromFieldNotSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/FromFieldNotSetError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"FromFieldNotSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/FromFieldNotSetError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidURLError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/InvalidURLError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/InvalidURLError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/InvalidURLError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/InvalidURLError#constructor","content":" new InvalidURLError(message?: string): InvalidURLError  Defined in: src/domain/models/errors/Mercury.ts:2  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidURLError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/InvalidURLError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/InvalidURLError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/InvalidURLError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidURLError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/InvalidURLError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"MessageAttachmentWithoutIDError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageAttachmentWithoutIDError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MessageAttachmentWithoutIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageAttachmentWithoutIDError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MessageAttachmentWithoutIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageAttachmentWithoutIDError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MessageAttachmentWithoutIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageAttachmentWithoutIDError#constructor","content":" new MessageAttachmentWithoutIDError(message?: string): MessageAttachmentWithoutIDError  Defined in: src/domain/models/errors/Mercury.ts:44  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  MessageAttachmentWithoutIDError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MessageAttachmentWithoutIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageAttachmentWithoutIDError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"MessageAttachmentWithoutIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageAttachmentWithoutIDError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"MessageAttachmentWithoutIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageAttachmentWithoutIDError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"MessageAttachmentWithoutIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageAttachmentWithoutIDError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"MessageInvalidBodyDataError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageInvalidBodyDataError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MessageInvalidBodyDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageInvalidBodyDataError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MessageInvalidBodyDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageInvalidBodyDataError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MessageInvalidBodyDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageInvalidBodyDataError#constructor","content":" new MessageInvalidBodyDataError(message?: string): MessageInvalidBodyDataError  Defined in: src/domain/models/errors/Mercury.ts:50  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  MessageInvalidBodyDataError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MessageInvalidBodyDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageInvalidBodyDataError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"NoDIDReceiverSetError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoDIDReceiverSetError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NoDIDReceiverSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoDIDReceiverSetError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NoDIDReceiverSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoDIDReceiverSetError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NoDIDReceiverSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoDIDReceiverSetError#constructor","content":" new NoDIDReceiverSetError(message?: string): NoDIDReceiverSetError  Defined in: src/domain/models/errors/Mercury.ts:20  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  NoDIDReceiverSetError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NoDIDReceiverSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoDIDReceiverSetError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NoDIDReceiverSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoDIDReceiverSetError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NoDIDReceiverSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoDIDReceiverSetError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NoDIDReceiverSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoDIDReceiverSetError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"MessageInvalidBodyDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageInvalidBodyDataError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"MessageInvalidBodyDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageInvalidBodyDataError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"MessageInvalidBodyDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/MessageInvalidBodyDataError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"NoRecipientDIDSetError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoRecipientDIDSetError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NoRecipientDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoRecipientDIDSetError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NoRecipientDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoRecipientDIDSetError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NoRecipientDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoRecipientDIDSetError#constructor","content":" new NoRecipientDIDSetError(message?: string): NoRecipientDIDSetError  Defined in: src/domain/models/errors/Mercury.ts:14  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  NoRecipientDIDSetError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NoRecipientDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoRecipientDIDSetError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NoRecipientDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoRecipientDIDSetError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NoRecipientDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoRecipientDIDSetError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NoRecipientDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoRecipientDIDSetError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"NoSenderDIDSetError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoSenderDIDSetError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NoSenderDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoSenderDIDSetError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NoSenderDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoSenderDIDSetError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NoSenderDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoSenderDIDSetError#constructor","content":" new NoSenderDIDSetError(message?: string): NoSenderDIDSetError  Defined in: src/domain/models/errors/Mercury.ts:8  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  NoSenderDIDSetError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NoSenderDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoSenderDIDSetError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NoSenderDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoSenderDIDSetError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NoSenderDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoSenderDIDSetError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NoSenderDIDSetError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoSenderDIDSetError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"NoValidServiceFoundError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoValidServiceFoundError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NoValidServiceFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoValidServiceFoundError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NoValidServiceFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoValidServiceFoundError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NoValidServiceFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoValidServiceFoundError#constructor","content":" new NoValidServiceFoundError(message?: string): NoValidServiceFoundError  Defined in: src/domain/models/errors/Mercury.ts:26  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  NoValidServiceFoundError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NoValidServiceFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoValidServiceFoundError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NoValidServiceFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoValidServiceFoundError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NoValidServiceFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoValidServiceFoundError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NoValidServiceFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/NoValidServiceFoundError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"UnknownAttachmentDataError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownAttachmentDataError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnknownAttachmentDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownAttachmentDataError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnknownAttachmentDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownAttachmentDataError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnknownAttachmentDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownAttachmentDataError#constructor","content":" new UnknownAttachmentDataError(message?: string): UnknownAttachmentDataError  Defined in: src/domain/models/errors/Mercury.ts:38  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  UnknownAttachmentDataError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnknownAttachmentDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownAttachmentDataError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnknownAttachmentDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownAttachmentDataError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnknownAttachmentDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownAttachmentDataError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnknownAttachmentDataError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownAttachmentDataError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"UnknownPackingMessageError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownPackingMessageError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnknownPackingMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownPackingMessageError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnknownPackingMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownPackingMessageError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnknownPackingMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownPackingMessageError#constructor","content":" new UnknownPackingMessageError(message?: string): UnknownPackingMessageError  Defined in: src/domain/models/errors/Mercury.ts:56  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  UnknownPackingMessageError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnknownPackingMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownPackingMessageError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnknownPackingMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownPackingMessageError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnknownPackingMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownPackingMessageError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnknownPackingMessageError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UnknownPackingMessageError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Message/","content":"","keywords":"","version":"Next"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Message/#namespaces","content":" Namespace\tDescriptionAttachment\t- ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Message/namespaces/Attachment/","content":"","keywords":"","version":"Next"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Message/namespaces/Attachment/#functions","content":" Function\tDescriptionextractJSON\tGet the presumed JSON from the attachment ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/","content":"","keywords":"","version":"Next"},{"title":"References‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#references","content":" ","version":"Next","tagName":"h2"},{"title":"Credential‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#credential","content":" Re-exports Credential    ","version":"Next","tagName":"h3"},{"title":"CredentialMetadata‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#credentialmetadata","content":" Re-exports CredentialMetadata    ","version":"Next","tagName":"h3"},{"title":"CredentialMetadataSchema‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#credentialmetadataschema","content":" Re-exports CredentialMetadataSchema    ","version":"Next","tagName":"h3"},{"title":"CredentialMigration‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#credentialmigration","content":" Re-exports CredentialMigration    ","version":"Next","tagName":"h3"},{"title":"CredentialSchema‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#credentialschema","content":" Re-exports CredentialSchema    ","version":"Next","tagName":"h3"},{"title":"DID‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#did","content":" Re-exports DID    ","version":"Next","tagName":"h3"},{"title":"DIDKeyLink‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#didkeylink","content":" Re-exports DIDKeyLink    ","version":"Next","tagName":"h3"},{"title":"DIDKeyLinkSchema‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#didkeylinkschema","content":" Re-exports DIDKeyLinkSchema    ","version":"Next","tagName":"h3"},{"title":"DIDLink‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#didlink","content":" Re-exports DIDLink    ","version":"Next","tagName":"h3"},{"title":"DIDLinkSchema‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#didlinkschema","content":" Re-exports DIDLinkSchema    ","version":"Next","tagName":"h3"},{"title":"DIDSchema‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#didschema","content":" Re-exports DIDSchema    ","version":"Next","tagName":"h3"},{"title":"Key‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#key","content":" Re-exports Key    ","version":"Next","tagName":"h3"},{"title":"KeySchema‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#keyschema","content":" Re-exports KeySchema    ","version":"Next","tagName":"h3"},{"title":"Message‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#message","content":" Re-exports Message    ","version":"Next","tagName":"h3"},{"title":"MessageSchema‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#messageschema","content":" Re-exports MessageSchema    ","version":"Next","tagName":"h3"},{"title":"Model‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Models/#model","content":" Re-exports Model ","version":"Next","tagName":"h3"},{"title":"UrlSessionError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UrlSessionError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UrlSessionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UrlSessionError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UrlSessionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UrlSessionError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UrlSessionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UrlSessionError#constructor","content":" new UrlSessionError(message?: string, statusCode?: number, error?: Error): UrlSessionError  Defined in: src/domain/models/errors/Mercury.ts:77  Parameters‚Äã  Parameter\tTypemessage?\tstring statusCode?\tnumber error?\tError  Returns‚Äã  UrlSessionError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UrlSessionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UrlSessionError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 error?\tpublic\tError\t-\t-\tsrc/domain/models/errors/Mercury.ts:75 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 statusCode\tpublic\tnumber\t-\t-\tsrc/domain/models/errors/Mercury.ts:74 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UrlSessionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UrlSessionError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UrlSessionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UrlSessionError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UrlSessionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/MercuryError/classes/UrlSessionError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"extractJSON","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Message/namespaces/Attachment/functions/extractJSON","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"extractJSON","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Message/namespaces/Attachment/functions/extractJSON#parameters","content":" Parameter\tType\tDescriptionattachment\tAttachmentDescriptor\t  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"extractJSON","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Message/namespaces/Attachment/functions/extractJSON#returns","content":" any ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PEM/","content":"","keywords":"","version":"Next"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PEM/#functions","content":" Function\tDescriptionfromKey\tcreate a PEM from a Key toRaw\tcreate a Uint8Array from a PEM ","version":"Next","tagName":"h2"},{"title":"fromKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PEM/functions/fromKey","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"fromKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PEM/functions/fromKey#parameters","content":" Parameter\tType\tDescriptionkey\tKey\tCryptographic key label\tstring\tPEM header / footer label  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"fromKey","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PEM/functions/fromKey#returns","content":" string ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Pluto/","content":"","keywords":"","version":"Next"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Pluto/#interfaces","content":" Interface\tDescriptionStorable\tStorable define properties a Domain object must implement to be compatible with Pluto  ","version":"Next","tagName":"h2"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Pluto/#functions","content":" Function\tDescriptionmakeUUID\t- ","version":"Next","tagName":"h2"},{"title":"toRaw","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PEM/functions/toRaw","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"toRaw","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PEM/functions/toRaw#parameters","content":" Parameter\tType\tDescriptionpem\tstring label\tstring\texpected header / footer label  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"toRaw","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PEM/functions/toRaw#returns","content":" Buffer ","version":"Next","tagName":"h2"},{"title":"makeUUID","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Pluto/functions/makeUUID","content":"","keywords":"","version":"Next"},{"title":"Returns‚Äã","type":1,"pageTitle":"makeUUID","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Pluto/functions/makeUUID#returns","content":" string ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/#classes","content":" Class\tDescriptionBackupNotFoundError\t- CredentialNotStorable\t- DatabaseConnectionError\t- DatabaseContextError\t- DatabaseServiceAlreadyRunning\t- DidPairIsNotPersistedError\t- HolderDIDAlreadyPairingError\t- InvalidCredentialJsonError\t- InvalidHolderDIDNotPersistedError\t- MessageMissingFromOrToDIDError\t- PrivateKeyNotStorable\t- RestoreCredentialInvalidError\t- RestoreJWKInvalidError\t- RestoreKeyInvalidError\t- RestoreNotFoundError\t- StoreDeleteError\t- StoreInsertError\t- StoreNotEmptyError\t- StoreQueryFailed\t- StoreUpdateError\t- UnknownCredentialTypeError\t- ","version":"Next","tagName":"h2"},{"title":"Storable","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Pluto/interfaces/Storable","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Storable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Pluto/interfaces/Storable#properties","content":" Property\tType\tDescription\tDefined in uuid\tstring\tUniversally Unique Identifier. should be unique across all items.\tsrc/domain/buildingBlocks/Pluto.ts:23 ","version":"Next","tagName":"h2"},{"title":"BackupNotFoundError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/BackupNotFoundError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"BackupNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/BackupNotFoundError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"BackupNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/BackupNotFoundError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"BackupNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/BackupNotFoundError#constructor","content":" new BackupNotFoundError(): BackupNotFoundError  Defined in: src/domain/models/errors/Pluto.ts:110  Returns‚Äã  BackupNotFoundError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"BackupNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/BackupNotFoundError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"BackupNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/BackupNotFoundError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"BackupNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/BackupNotFoundError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"BackupNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/BackupNotFoundError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"CredentialNotStorable","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/CredentialNotStorable","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CredentialNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/CredentialNotStorable#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CredentialNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/CredentialNotStorable#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CredentialNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/CredentialNotStorable#constructor","content":" new CredentialNotStorable(message?: string): CredentialNotStorable  Defined in: src/domain/models/errors/Pluto.ts:44  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  CredentialNotStorable  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CredentialNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/CredentialNotStorable#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CredentialNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/CredentialNotStorable#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"CredentialNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/CredentialNotStorable#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"CredentialNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/CredentialNotStorable#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"DatabaseConnectionError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseConnectionError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DatabaseConnectionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseConnectionError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DatabaseConnectionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseConnectionError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DatabaseConnectionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseConnectionError#constructor","content":" new DatabaseConnectionError(message?: string): DatabaseConnectionError  Defined in: src/domain/models/errors/Pluto.ts:2  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  DatabaseConnectionError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DatabaseConnectionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseConnectionError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DatabaseConnectionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseConnectionError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"DatabaseConnectionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseConnectionError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"DatabaseConnectionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseConnectionError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"DatabaseServiceAlreadyRunning","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseServiceAlreadyRunning","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DatabaseServiceAlreadyRunning","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseServiceAlreadyRunning#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DatabaseServiceAlreadyRunning","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseServiceAlreadyRunning#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DatabaseServiceAlreadyRunning","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseServiceAlreadyRunning#constructor","content":" new DatabaseServiceAlreadyRunning(message?: string): DatabaseServiceAlreadyRunning  Defined in: src/domain/models/errors/Pluto.ts:14  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  DatabaseServiceAlreadyRunning  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DatabaseServiceAlreadyRunning","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseServiceAlreadyRunning#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DatabaseServiceAlreadyRunning","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseServiceAlreadyRunning#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"DatabaseServiceAlreadyRunning","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseServiceAlreadyRunning#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"DatabaseServiceAlreadyRunning","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseServiceAlreadyRunning#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"DatabaseContextError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseContextError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DatabaseContextError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseContextError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DatabaseContextError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseContextError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DatabaseContextError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseContextError#constructor","content":" new DatabaseContextError(message?: string): DatabaseContextError  Defined in: src/domain/models/errors/Pluto.ts:8  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  DatabaseContextError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DatabaseContextError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseContextError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DatabaseContextError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseContextError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"DatabaseContextError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseContextError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"DatabaseContextError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DatabaseContextError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"HolderDIDAlreadyPairingError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/HolderDIDAlreadyPairingError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"HolderDIDAlreadyPairingError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/HolderDIDAlreadyPairingError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"HolderDIDAlreadyPairingError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/HolderDIDAlreadyPairingError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"HolderDIDAlreadyPairingError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/HolderDIDAlreadyPairingError#constructor","content":" new HolderDIDAlreadyPairingError(message?: string): HolderDIDAlreadyPairingError  Defined in: src/domain/models/errors/Pluto.ts:86  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  HolderDIDAlreadyPairingError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"HolderDIDAlreadyPairingError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/HolderDIDAlreadyPairingError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"HolderDIDAlreadyPairingError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/HolderDIDAlreadyPairingError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"HolderDIDAlreadyPairingError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/HolderDIDAlreadyPairingError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"HolderDIDAlreadyPairingError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/HolderDIDAlreadyPairingError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"DidPairIsNotPersistedError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DidPairIsNotPersistedError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DidPairIsNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DidPairIsNotPersistedError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DidPairIsNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DidPairIsNotPersistedError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DidPairIsNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DidPairIsNotPersistedError#constructor","content":" new DidPairIsNotPersistedError(message?: string): DidPairIsNotPersistedError  Defined in: src/domain/models/errors/Pluto.ts:80  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  DidPairIsNotPersistedError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DidPairIsNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DidPairIsNotPersistedError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DidPairIsNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DidPairIsNotPersistedError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"DidPairIsNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DidPairIsNotPersistedError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"DidPairIsNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/DidPairIsNotPersistedError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidCredentialJsonError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidCredentialJsonError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidCredentialJsonError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidCredentialJsonError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidCredentialJsonError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidCredentialJsonError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidCredentialJsonError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidCredentialJsonError#constructor","content":" new InvalidCredentialJsonError(message?: string): InvalidCredentialJsonError  Defined in: src/domain/models/errors/Pluto.ts:56  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidCredentialJsonError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidCredentialJsonError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidCredentialJsonError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidCredentialJsonError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidCredentialJsonError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialJsonError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidCredentialJsonError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialJsonError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidCredentialJsonError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"MessageMissingFromOrToDIDError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/MessageMissingFromOrToDIDError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MessageMissingFromOrToDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/MessageMissingFromOrToDIDError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MessageMissingFromOrToDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/MessageMissingFromOrToDIDError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MessageMissingFromOrToDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/MessageMissingFromOrToDIDError#constructor","content":" new MessageMissingFromOrToDIDError(message?: string): MessageMissingFromOrToDIDError  Defined in: src/domain/models/errors/Pluto.ts:74  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  MessageMissingFromOrToDIDError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MessageMissingFromOrToDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/MessageMissingFromOrToDIDError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"MessageMissingFromOrToDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/MessageMissingFromOrToDIDError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"MessageMissingFromOrToDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/MessageMissingFromOrToDIDError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"MessageMissingFromOrToDIDError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/MessageMissingFromOrToDIDError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"PrivateKeyNotStorable","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/PrivateKeyNotStorable","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"PrivateKeyNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/PrivateKeyNotStorable#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PrivateKeyNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/PrivateKeyNotStorable#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PrivateKeyNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/PrivateKeyNotStorable#constructor","content":" new PrivateKeyNotStorable(message?: string): PrivateKeyNotStorable  Defined in: src/domain/models/errors/Pluto.ts:62  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  PrivateKeyNotStorable  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"PrivateKeyNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/PrivateKeyNotStorable#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"PrivateKeyNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/PrivateKeyNotStorable#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"PrivateKeyNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/PrivateKeyNotStorable#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"PrivateKeyNotStorable","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/PrivateKeyNotStorable#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidHolderDIDNotPersistedError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidHolderDIDNotPersistedError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidHolderDIDNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidHolderDIDNotPersistedError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidHolderDIDNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidHolderDIDNotPersistedError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidHolderDIDNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidHolderDIDNotPersistedError#constructor","content":" new InvalidHolderDIDNotPersistedError(message?: string): InvalidHolderDIDNotPersistedError  Defined in: src/domain/models/errors/Pluto.ts:68  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidHolderDIDNotPersistedError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidHolderDIDNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidHolderDIDNotPersistedError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidHolderDIDNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidHolderDIDNotPersistedError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidHolderDIDNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidHolderDIDNotPersistedError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidHolderDIDNotPersistedError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/InvalidHolderDIDNotPersistedError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"RestoreCredentialInvalidError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreCredentialInvalidError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"RestoreCredentialInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreCredentialInvalidError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"RestoreCredentialInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreCredentialInvalidError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RestoreCredentialInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreCredentialInvalidError#constructor","content":" new RestoreCredentialInvalidError(): RestoreCredentialInvalidError  Defined in: src/domain/models/errors/Pluto.ts:92  Returns‚Äã  RestoreCredentialInvalidError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"RestoreCredentialInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreCredentialInvalidError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"RestoreCredentialInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreCredentialInvalidError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"RestoreCredentialInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreCredentialInvalidError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"RestoreCredentialInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreCredentialInvalidError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"RestoreJWKInvalidError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreJWKInvalidError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"RestoreJWKInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreJWKInvalidError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"RestoreJWKInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreJWKInvalidError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RestoreJWKInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreJWKInvalidError#constructor","content":" new RestoreJWKInvalidError(): RestoreJWKInvalidError  Defined in: src/domain/models/errors/Pluto.ts:98  Returns‚Äã  RestoreJWKInvalidError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"RestoreJWKInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreJWKInvalidError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"RestoreJWKInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreJWKInvalidError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"RestoreJWKInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreJWKInvalidError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"RestoreJWKInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreJWKInvalidError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"RestoreKeyInvalidError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreKeyInvalidError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"RestoreKeyInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreKeyInvalidError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"RestoreKeyInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreKeyInvalidError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RestoreKeyInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreKeyInvalidError#constructor","content":" new RestoreKeyInvalidError(): RestoreKeyInvalidError  Defined in: src/domain/models/errors/Pluto.ts:104  Returns‚Äã  RestoreKeyInvalidError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"RestoreKeyInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreKeyInvalidError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"RestoreKeyInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreKeyInvalidError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"RestoreKeyInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreKeyInvalidError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"RestoreKeyInvalidError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreKeyInvalidError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"RestoreNotFoundError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreNotFoundError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"RestoreNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreNotFoundError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"RestoreNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreNotFoundError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RestoreNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreNotFoundError#constructor","content":" new RestoreNotFoundError(): RestoreNotFoundError  Defined in: src/domain/models/errors/Pluto.ts:116  Returns‚Äã  RestoreNotFoundError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"RestoreNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreNotFoundError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"RestoreNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreNotFoundError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"RestoreNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreNotFoundError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"RestoreNotFoundError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/RestoreNotFoundError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"StoreDeleteError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreDeleteError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"StoreDeleteError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreDeleteError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"StoreDeleteError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreDeleteError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"StoreDeleteError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreDeleteError#constructor","content":" new StoreDeleteError(message?: string): StoreDeleteError  Defined in: src/domain/models/errors/Pluto.ts:38  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  StoreDeleteError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"StoreDeleteError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreDeleteError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"StoreDeleteError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreDeleteError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"StoreDeleteError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreDeleteError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"StoreDeleteError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreDeleteError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"StoreInsertError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreInsertError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"StoreInsertError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreInsertError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"StoreInsertError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreInsertError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"StoreInsertError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreInsertError#constructor","content":" new StoreInsertError(message?: string): StoreInsertError  Defined in: src/domain/models/errors/Pluto.ts:20  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  StoreInsertError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"StoreInsertError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreInsertError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"StoreInsertError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreInsertError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"StoreInsertError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreInsertError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"StoreInsertError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreInsertError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"StoreNotEmptyError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreNotEmptyError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"StoreNotEmptyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreNotEmptyError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"StoreNotEmptyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreNotEmptyError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"StoreNotEmptyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreNotEmptyError#constructor","content":" new StoreNotEmptyError(): StoreNotEmptyError  Defined in: src/domain/models/errors/Pluto.ts:122  Returns‚Äã  StoreNotEmptyError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"StoreNotEmptyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreNotEmptyError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"StoreNotEmptyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreNotEmptyError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"StoreNotEmptyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreNotEmptyError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"StoreNotEmptyError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreNotEmptyError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"StoreQueryFailed","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreQueryFailed","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"StoreQueryFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreQueryFailed#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"StoreQueryFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreQueryFailed#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"StoreQueryFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreQueryFailed#constructor","content":" new StoreQueryFailed(message?: string): StoreQueryFailed  Defined in: src/domain/models/errors/Pluto.ts:26  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  StoreQueryFailed  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"StoreQueryFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreQueryFailed#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"StoreQueryFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreQueryFailed#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"StoreQueryFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreQueryFailed#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"StoreQueryFailed","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreQueryFailed#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"StoreUpdateError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreUpdateError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"StoreUpdateError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreUpdateError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"StoreUpdateError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreUpdateError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"StoreUpdateError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreUpdateError#constructor","content":" new StoreUpdateError(message?: string): StoreUpdateError  Defined in: src/domain/models/errors/Pluto.ts:32  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  StoreUpdateError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"StoreUpdateError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreUpdateError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"StoreUpdateError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreUpdateError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"StoreUpdateError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreUpdateError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"StoreUpdateError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/StoreUpdateError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/#classes","content":" Class\tDescriptionCredentialRevocationTypeInvalid\t- CredentialTypeNotSupported\t- InvalidCredentialError\t- InvalidCredentialStatus\t- InvalidDescriptorFormatError\t- InvalidJWK\t- InvalidJWKParameters\t- InvalidJWTString\t- InvalidPresentationDefinitionError\t- InvalidPresentationError\t- InvalidPresentationProofArgs\t- InvalidRevocationStatusResponse\t- InvalidRevocationStatusResponseSignature\t- InvalidVerifyCredentialError\t- InvalidVerifyFormatError\t- NoDomainOrChallengeFound\t- RevocationError\tgeneral Revocation error, message should contain details ","version":"Next","tagName":"h2"},{"title":"UnknownCredentialTypeError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/UnknownCredentialTypeError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"UnknownCredentialTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/UnknownCredentialTypeError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"UnknownCredentialTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/UnknownCredentialTypeError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"UnknownCredentialTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/UnknownCredentialTypeError#constructor","content":" new UnknownCredentialTypeError(message?: string): UnknownCredentialTypeError  Defined in: src/domain/models/errors/Pluto.ts:50  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  UnknownCredentialTypeError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"UnknownCredentialTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/UnknownCredentialTypeError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"UnknownCredentialTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/UnknownCredentialTypeError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"UnknownCredentialTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/UnknownCredentialTypeError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"UnknownCredentialTypeError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PlutoError/classes/UnknownCredentialTypeError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"CredentialRevocationTypeInvalid","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialRevocationTypeInvalid","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CredentialRevocationTypeInvalid","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialRevocationTypeInvalid#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CredentialRevocationTypeInvalid","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialRevocationTypeInvalid#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CredentialRevocationTypeInvalid","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialRevocationTypeInvalid#constructor","content":" new CredentialRevocationTypeInvalid(message?: string): CredentialRevocationTypeInvalid  Defined in: src/domain/models/errors/Pollux.ts:39  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  CredentialRevocationTypeInvalid  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CredentialRevocationTypeInvalid","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialRevocationTypeInvalid#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CredentialRevocationTypeInvalid","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialRevocationTypeInvalid#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"CredentialRevocationTypeInvalid","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialRevocationTypeInvalid#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"CredentialRevocationTypeInvalid","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialRevocationTypeInvalid#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"CredentialTypeNotSupported","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialTypeNotSupported","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CredentialTypeNotSupported","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialTypeNotSupported#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CredentialTypeNotSupported","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialTypeNotSupported#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CredentialTypeNotSupported","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialTypeNotSupported#constructor","content":" new CredentialTypeNotSupported(message?: string): CredentialTypeNotSupported  Defined in: src/domain/models/errors/Pollux.ts:63  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  CredentialTypeNotSupported  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CredentialTypeNotSupported","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialTypeNotSupported#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"CredentialTypeNotSupported","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialTypeNotSupported#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"CredentialTypeNotSupported","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialTypeNotSupported#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"CredentialTypeNotSupported","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/CredentialTypeNotSupported#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidCredentialError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialError#constructor","content":" new InvalidCredentialError(message?: string): InvalidCredentialError  Defined in: src/domain/models/errors/Pollux.ts:4  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidCredentialError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidDescriptorFormatError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidDescriptorFormatError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidDescriptorFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidDescriptorFormatError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidDescriptorFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidDescriptorFormatError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidDescriptorFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidDescriptorFormatError#constructor","content":" new InvalidDescriptorFormatError(message?: string): InvalidDescriptorFormatError  Defined in: src/domain/models/errors/Pollux.ts:99  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidDescriptorFormatError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidDescriptorFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidDescriptorFormatError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidDescriptorFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidDescriptorFormatError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidDescriptorFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidDescriptorFormatError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidDescriptorFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidDescriptorFormatError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidJWKParameters","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWKParameters","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidJWKParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWKParameters#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidJWKParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWKParameters#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidJWKParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWKParameters#constructor","content":" new InvalidJWKParameters(parameters: string | string[], message?: string): InvalidJWKParameters  Defined in: src/domain/models/errors/Pollux.ts:23  Parameters‚Äã  Parameter\tTypeparameters\tstring | string[] message?\tstring  Returns‚Äã  InvalidJWKParameters  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidJWKParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWKParameters#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidJWKParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWKParameters#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidJWKParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWKParameters#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidJWKParameters","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWKParameters#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidCredentialStatus","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialStatus","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidCredentialStatus","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialStatus#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidCredentialStatus","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialStatus#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidCredentialStatus","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialStatus#constructor","content":" new InvalidCredentialStatus(message?: string): InvalidCredentialStatus  Defined in: src/domain/models/errors/Pollux.ts:45  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidCredentialStatus  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidCredentialStatus","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialStatus#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidCredentialStatus","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialStatus#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialStatus","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialStatus#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidCredentialStatus","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidCredentialStatus#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidJWK","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWK","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidJWK","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWK#extends","content":" SDKError  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidJWK","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWK#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidJWK","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWK#constructor","content":" new InvalidJWK(message: string): InvalidJWK  Defined in: src/domain/models/errors/Pollux.ts:31  Parameters‚Äã  Parameter\tTypemessage\tstring  Returns‚Äã  InvalidJWK  Overrides‚Äã  SDKError.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidJWK","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWK#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tSDKError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tSDKError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tSDKError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tSDKError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tSDKError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidJWK","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWK#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidJWK","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWK#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  SDKError.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidJWK","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWK#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  SDKError.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidJWTString","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWTString","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidJWTString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWTString#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidJWTString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWTString#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidJWTString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWTString#constructor","content":" new InvalidJWTString(message?: string): InvalidJWTString  Defined in: src/domain/models/errors/Pollux.ts:10  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidJWTString  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidJWTString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWTString#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidJWTString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWTString#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidJWTString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWTString#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidJWTString","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidJWTString#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidPresentationDefinitionError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationDefinitionError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidPresentationDefinitionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationDefinitionError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidPresentationDefinitionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationDefinitionError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidPresentationDefinitionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationDefinitionError#constructor","content":" new InvalidPresentationDefinitionError(message?: string): InvalidPresentationDefinitionError  Defined in: src/domain/models/errors/Pollux.ts:69  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidPresentationDefinitionError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidPresentationDefinitionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationDefinitionError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidPresentationDefinitionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationDefinitionError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationDefinitionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationDefinitionError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationDefinitionError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationDefinitionError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidPresentationError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidPresentationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidPresentationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidPresentationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationError#constructor","content":" new InvalidPresentationError(message?: string): InvalidPresentationError  Defined in: src/domain/models/errors/Pollux.ts:93  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidPresentationError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidPresentationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidPresentationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidPresentationProofArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationProofArgs","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidPresentationProofArgs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationProofArgs#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidPresentationProofArgs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationProofArgs#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidPresentationProofArgs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationProofArgs#constructor","content":" new InvalidPresentationProofArgs(message?: string): InvalidPresentationProofArgs  Defined in: src/domain/models/errors/Pollux.ts:16  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidPresentationProofArgs  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidPresentationProofArgs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationProofArgs#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidPresentationProofArgs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationProofArgs#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationProofArgs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationProofArgs#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidPresentationProofArgs","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidPresentationProofArgs#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidRevocationStatusResponse","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponse","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponse#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponse#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponse#constructor","content":" new InvalidRevocationStatusResponse(message?: string): InvalidRevocationStatusResponse  Defined in: src/domain/models/errors/Pollux.ts:51  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidRevocationStatusResponse  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponse#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponse#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponse#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponse","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponse#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidRevocationStatusResponseSignature","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponseSignature","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponseSignature","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponseSignature#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponseSignature","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponseSignature#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponseSignature","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponseSignature#constructor","content":" new InvalidRevocationStatusResponseSignature(message?: string): InvalidRevocationStatusResponseSignature  Defined in: src/domain/models/errors/Pollux.ts:57  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  InvalidRevocationStatusResponseSignature  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponseSignature","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponseSignature#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponseSignature","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponseSignature#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponseSignature","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponseSignature#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidRevocationStatusResponseSignature","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidRevocationStatusResponseSignature#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidVerifyCredentialError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyCredentialError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidVerifyCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyCredentialError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidVerifyCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyCredentialError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidVerifyCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyCredentialError#constructor","content":" new InvalidVerifyCredentialError(credentialId: string, reason: string): InvalidVerifyCredentialError  Defined in: src/domain/models/errors/Pollux.ts:87  Parameters‚Äã  Parameter\tTypecredentialId\tstring reason\tstring  Returns‚Äã  InvalidVerifyCredentialError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidVerifyCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyCredentialError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 reason\tpublic\tstring\t-\t-\tsrc/domain/models/errors/Pollux.ts:87 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidVerifyCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyCredentialError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidVerifyCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyCredentialError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidVerifyCredentialError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyCredentialError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"InvalidVerifyFormatError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyFormatError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"InvalidVerifyFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyFormatError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"InvalidVerifyFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyFormatError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"InvalidVerifyFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyFormatError#constructor","content":" new InvalidVerifyFormatError(reason: string): InvalidVerifyFormatError  Defined in: src/domain/models/errors/Pollux.ts:81  Parameters‚Äã  Parameter\tTypereason\tstring  Returns‚Äã  InvalidVerifyFormatError  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"InvalidVerifyFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyFormatError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 reason\tpublic\tstring\t-\t-\tsrc/domain/models/errors/Pollux.ts:81 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"InvalidVerifyFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyFormatError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"InvalidVerifyFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyFormatError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"InvalidVerifyFormatError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/InvalidVerifyFormatError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Protocols/","content":"","keywords":"","version":"Next"},{"title":"References‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Protocols/#references","content":" ","version":"Next","tagName":"h2"},{"title":"KeyRestoration‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Protocols/#keyrestoration","content":" Re-exports KeyRestoration    ","version":"Next","tagName":"h3"},{"title":"Startable‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Protocols/#startable","content":" Re-exports Startable ","version":"Next","tagName":"h3"},{"title":"NoDomainOrChallengeFound","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/NoDomainOrChallengeFound","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"NoDomainOrChallengeFound","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/NoDomainOrChallengeFound#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"NoDomainOrChallengeFound","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/NoDomainOrChallengeFound#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"NoDomainOrChallengeFound","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/NoDomainOrChallengeFound#constructor","content":" new NoDomainOrChallengeFound(message?: string): NoDomainOrChallengeFound  Defined in: src/domain/models/errors/Pollux.ts:75  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  NoDomainOrChallengeFound  Overrides‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"NoDomainOrChallengeFound","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/NoDomainOrChallengeFound#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"NoDomainOrChallengeFound","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/NoDomainOrChallengeFound#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"NoDomainOrChallengeFound","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/NoDomainOrChallengeFound#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"NoDomainOrChallengeFound","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/NoDomainOrChallengeFound#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Schema/","content":"","keywords":"","version":"Next"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Schema/#type-aliases","content":" Type Alias\tDescriptionCredential\t- DID\t- DIDPair\t- Key\t- LinkSecret\t- Mediator\t- Message\t- ","version":"Next","tagName":"h2"},{"title":"Credential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Schema/type-aliases/Credential","content":"Credential @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Schema / Credential Type Alias: Credential Credential = TB.Static&lt;typeof credential&gt; Defined in: src/domain/backup/v0_0_1.ts:53","keywords":"","version":"Next"},{"title":"RevocationError","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/RevocationError","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"RevocationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/RevocationError#extends","content":" Error  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"RevocationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/RevocationError#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RevocationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/RevocationError#constructor","content":" new RevocationError(message?: string): RevocationError  Defined in: node_modules/typescript/lib/lib.es5.d.ts:1082  Parameters‚Äã  Parameter\tTypemessage?\tstring  Returns‚Äã  RevocationError  Inherited from‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RevocationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/RevocationError#constructor-1","content":" new RevocationError(message?: string, options?: ErrorOptions): RevocationError  Defined in: node_modules/typescript/lib/lib.es5.d.ts:1082  Parameters‚Äã  Parameter\tTypemessage?\tstring options?\tErrorOptions  Returns‚Äã  RevocationError  Inherited from‚Äã  Error.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"RevocationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/RevocationError#properties","content":" Property\tModifier\tType\tDescription\tInherited from\tDefined in cause?\tpublic\tunknown\t-\tError.cause\tnode_modules/typescript/lib/lib.es2022.error.d.ts:26 message\tpublic\tstring\t-\tError.message\tnode_modules/typescript/lib/lib.es5.d.ts:1077 name\tpublic\tstring\t-\tError.name\tnode_modules/typescript/lib/lib.es5.d.ts:1076 stack?\tpublic\tstring\t-\tError.stack\tnode_modules/typescript/lib/lib.es5.d.ts:1078 stackTraceLimit\tstatic\tnumber\tThe Error.stackTraceLimit property specifies the number of stack frames collected by a stack trace (whether generated by new Error().stack or Error.captureStackTrace(obj)). The default value is 10 but may be set to any valid JavaScript number. Changes will affect any stack trace captured after the value has been changed. If set to a non-number value, or set to a negative number, stack traces will not capture any frames.\tError.stackTraceLimit\tnode_modules/@types/node/globals.d.ts:161  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"RevocationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/RevocationError#methods","content":" ","version":"Next","tagName":"h2"},{"title":"captureStackTrace()‚Äã","type":1,"pageTitle":"RevocationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/RevocationError#capturestacktrace","content":" static captureStackTrace(targetObject: object, constructorOpt?: Function): void  Defined in: node_modules/@types/node/globals.d.ts:145  Creates a .stack property on targetObject, which when accessed returns a string representing the location in the code at whichError.captureStackTrace() was called.  const myObject = {}; Error.captureStackTrace(myObject); myObject.stack; // Similar to `new Error().stack`   The first line of the trace will be prefixed with${myObject.name}: ${myObject.message}.  The optional constructorOpt argument accepts a function. If given, all frames above constructorOpt, including constructorOpt, will be omitted from the generated stack trace.  The constructorOpt argument is useful for hiding implementation details of error generation from the user. For instance:  function a() { b(); } function b() { c(); } function c() { // Create an error without stack trace to avoid calculating the stack trace twice. const { stackTraceLimit } = Error; Error.stackTraceLimit = 0; const error = new Error(); Error.stackTraceLimit = stackTraceLimit; // Capture the stack trace above function b Error.captureStackTrace(error, b); // Neither function c, nor b is included in the stack trace throw error; } a();   Parameters‚Äã  Parameter\tTypetargetObject\tobject constructorOpt?\tFunction  Returns‚Äã  void  Inherited from‚Äã  Error.captureStackTrace    ","version":"Next","tagName":"h3"},{"title":"prepareStackTrace()‚Äã","type":1,"pageTitle":"RevocationError","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/PolluxError/classes/RevocationError#preparestacktrace","content":" static prepareStackTrace(err: Error, stackTraces: CallSite[]): any  Defined in: node_modules/@types/node/globals.d.ts:149  Parameters‚Äã  Parameter\tTypeerr\tError stackTraces\tCallSite[]  Returns‚Äã  any  See‚Äã  https://v8.dev/docs/stack-trace-api#customizing-stack-traces  Inherited from‚Äã  Error.prepareStackTrace ","version":"Next","tagName":"h3"},{"title":"DIDPair","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Schema/type-aliases/DIDPair","content":"DIDPair @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Schema / DIDPair Type Alias: DIDPair DIDPair = TB.Static&lt;typeof didpair&gt; Defined in: src/domain/backup/v0_0_1.ts:55","keywords":"","version":"Next"},{"title":"DID","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Schema/type-aliases/DID","content":"DID @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Schema / DID Type Alias: DID DID = TB.Static&lt;typeof did&gt; Defined in: src/domain/backup/v0_0_1.ts:54","keywords":"","version":"Next"},{"title":"LinkSecret","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Schema/type-aliases/LinkSecret","content":"LinkSecret @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Schema / LinkSecret Type Alias: LinkSecret LinkSecret = TB.Static&lt;typeof linksecret&gt; | undefined Defined in: src/domain/backup/v0_0_1.ts:59","keywords":"","version":"Next"},{"title":"Key","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Schema/type-aliases/Key","content":"Key @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Schema / Key Type Alias: Key Key = TB.Static&lt;typeof key&gt; Defined in: src/domain/backup/v0_0_1.ts:56","keywords":"","version":"Next"},{"title":"Mediator","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Schema/type-aliases/Mediator","content":"Mediator @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Schema / Mediator Type Alias: Mediator Mediator = TB.Static&lt;typeof mediator&gt; Defined in: src/domain/backup/v0_0_1.ts:57","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/","content":"","keywords":"","version":"Next"},{"title":"Enumerations‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/#enumerations","content":" Enumeration\tDescriptionState\tstates for a Startable entity  ","version":"Next","tagName":"h2"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/#classes","content":" Class\tDescriptionController\tdefine the structure of a Startable entity  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/#interfaces","content":" Interface\tDescriptionIController\tdefine the structure of a Startable entity ","version":"Next","tagName":"h2"},{"title":"Message","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Schema/type-aliases/Message","content":"Message @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Schema / Message Type Alias: Message Message = TB.Static&lt;typeof message&gt; Defined in: src/domain/backup/v0_0_1.ts:58","keywords":"","version":"Next"},{"title":"Controller","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/classes/Controller","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/classes/Controller#extended-by","content":" PlutoAgent  ","version":"Next","tagName":"h2"},{"title":"Implements‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/classes/Controller#implements","content":" IController  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/classes/Controller#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/classes/Controller#constructor","content":" new Controller(): Controller  Returns‚Äã  Controller  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/classes/Controller#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tDefined in state\tpublic\tState\tState.STOPPED\tcurrent status of the entity\tsrc/domain/protocols/Startable.ts:42  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/classes/Controller#methods","content":" ","version":"Next","tagName":"h2"},{"title":"start()‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/classes/Controller#start","content":" start(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:62  handle the startup of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt;  Implementation of‚Äã  IController.start    ","version":"Next","tagName":"h3"},{"title":"stop()‚Äã","type":1,"pageTitle":"Controller","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/classes/Controller#stop","content":" stop(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:72  handle the teardown of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt;  Implementation of‚Äã  IController.stop ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/","content":"","keywords":"","version":"Next"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/#namespaces","content":" Namespace\tDescriptionRecoveryId\t-  ","version":"Next","tagName":"h2"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/#functions","content":" Function\tDescriptionrecoveryId\tFactory for RecoveryId. Nomenclature: - algorithm first - arbitrary suffixes for customisation - separated by &quot;+&quot; ","version":"Next","tagName":"h2"},{"title":"State","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/enumerations/State","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"State","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/enumerations/State#enumeration-members","content":" Enumeration Member\tValue\tDefined in RUNNING\t&quot;running&quot;\tsrc/domain/protocols/Startable.ts:11 STARTING\t&quot;starting&quot;\tsrc/domain/protocols/Startable.ts:10 STOPPED\t&quot;stopped&quot;\tsrc/domain/protocols/Startable.ts:9 STOPPING\t&quot;stopping&quot;\tsrc/domain/protocols/Startable.ts:12 ","version":"Next","tagName":"h2"},{"title":"recoveryId","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/functions/recoveryId","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"recoveryId","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/functions/recoveryId#parameters","content":" Parameter\tType\tDescriptionalgorithm\talgorithm ...suffix\tprivacy[]\t  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"recoveryId","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/functions/recoveryId#returns","content":" string ","version":"Next","tagName":"h2"},{"title":"IController","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/interfaces/IController","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"IController","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/interfaces/IController#extended-by","content":" Pluto  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"IController","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/interfaces/IController#properties","content":" Property\tType\tDescription\tDefined in state\tState\tcurrent status of the entity\tsrc/domain/protocols/Startable.ts:22  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"IController","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/interfaces/IController#methods","content":" ","version":"Next","tagName":"h2"},{"title":"start()‚Äã","type":1,"pageTitle":"IController","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/interfaces/IController#start","content":" start(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:30  handle the startup of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt;    ","version":"Next","tagName":"h3"},{"title":"stop()‚Äã","type":1,"pageTitle":"IController","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/Startable/interfaces/IController#stop","content":" stop(): Promise&lt;State&gt;  Defined in: src/domain/protocols/Startable.ts:38  handle the teardown of an entity  updates state according to lifecycle  Returns‚Äã  Promise&lt;State&gt; ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/namespaces/RecoveryId/","content":"","keywords":"","version":"Next"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/namespaces/RecoveryId/#type-aliases","content":" Type Alias\tDescriptionalgorithm\t- privacy\t- suffix\t- ","version":"Next","tagName":"h2"},{"title":"privacy","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/namespaces/RecoveryId/type-aliases/privacy","content":"privacy @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / StorableKey / RecoveryId / privacy Type Alias: privacy privacy = &quot;pub&quot; | &quot;priv&quot; Defined in: src/domain/models/keyManagement/StorableKey.ts:12","keywords":"","version":"Next"},{"title":"algorithm","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/namespaces/RecoveryId/type-aliases/algorithm","content":"algorithm @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / StorableKey / RecoveryId / algorithm Type Alias: algorithm algorithm = &quot;secp256k1&quot; | &quot;x25519&quot; | &quot;ed25519&quot; Defined in: src/domain/models/keyManagement/StorableKey.ts:10","keywords":"","version":"Next"},{"title":"suffix","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/namespaces/StorableKey/namespaces/RecoveryId/type-aliases/suffix","content":"suffix @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / StorableKey / RecoveryId / suffix Type Alias: suffix suffix = privacy Defined in: src/domain/models/keyManagement/StorableKey.ts:11","keywords":"","version":"Next"},{"title":"AttachmentData","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/AttachmentData","content":"AttachmentData @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / AttachmentData Type Alias: AttachmentData AttachmentData = AttachmentJsonData | AttachmentLinkData | AttachmentBase64 | AttachmentJwsData | AttachmentJws | AttachmentHeader Defined in: src/domain/models/MessageAttachment.ts:32","keywords":"","version":"Next"},{"title":"AttachmentJsonData","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/AttachmentJsonData","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"AttachmentJsonData","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/AttachmentJsonData#properties","content":" Property\tType\tDefined in json\tany\tsrc/domain/models/MessageAttachment.ts:29 ","version":"Next","tagName":"h2"},{"title":"Claim","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/Claim","content":"Claim @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Claim Type Alias: Claim Claim = Record&lt;string, any&gt; Defined in: src/domain/models/Credential.ts:4","keywords":"","version":"Next"},{"title":"ExportableKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/ExportableKey","content":"ExportableKey @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / ExportableKey Type Alias: ExportableKey ExportableKey = All Defined in: src/domain/models/keyManagement/exportable/ExportableKey.ts:14 ExportableKey defines the formats a crypographic key can be converted to Default is all","keywords":"","version":"Next"},{"title":"JsonString","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/JsonString","content":"JsonString @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / JsonString Type Alias: JsonString JsonString = string Defined in: src/domain/models/index.ts:24","keywords":"","version":"Next"},{"title":"JWK","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/JWK","content":"JWK @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / JWK Type Alias: JWK JWK = EC | OCT | OKP | RSA Defined in: src/domain/models/keyManagement/exportable/JWK.ts:11 JWK","keywords":"","version":"Next"},{"title":"HttpMethod","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/HttpMethod","content":"HttpMethod @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / HttpMethod Type Alias: HttpMethod HttpMethod = &quot;DELETE&quot; | &quot;GET&quot; | &quot;POST&quot; | &quot;PUT&quot; Defined in: src/domain/models/Api.ts:3","keywords":"","version":"Next"},{"title":"MnemonicWordList","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/MnemonicWordList","content":"MnemonicWordList @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / MnemonicWordList Type Alias: MnemonicWordList MnemonicWordList = [string, string, string, string, string, string, string, string, string, string, string, string] | [string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string, string] Defined in: src/domain/models/WordList.ts:1","keywords":"","version":"Next"},{"title":"PresentationClaims","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/PresentationClaims","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"PresentationClaims","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/PresentationClaims#type-parameters","content":" Type Parameter\tDefault typeT extends CredentialType\tJWT ","version":"Next","tagName":"h2"},{"title":"Schema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/Schema","content":"Schema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Schema Type Alias: Schema Schema = TB.Static&lt;typeof Schema&gt; Defined in: src/domain/backup/v0_0_1.ts:39","keywords":"","version":"Next"},{"title":"W3CVerifiableCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/W3CVerifiableCredential","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"W3CVerifiableCredential","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/W3CVerifiableCredential#properties","content":" Property\tType\tDefined in @context\t[&quot;https://www.w3.org/2018/credentials/v1&quot;]\tsrc/domain/models/VerifiableCredential.ts:27 credentialSchema?\t{ id: string; type: string; }\tsrc/domain/models/VerifiableCredential.ts:54 credentialSchema.id\tstring\tsrc/domain/models/VerifiableCredential.ts:55 credentialSchema.type\tstring\tsrc/domain/models/VerifiableCredential.ts:56 credentialStatus?\tunknown\tsrc/domain/models/VerifiableCredential.ts:58 credentialSubject\tRecord&lt;string, any&gt;\tsrc/domain/models/VerifiableCredential.ts:32 evidence?\t{ id: string; type: string; }\tsrc/domain/models/VerifiableCredential.ts:34 evidence.id\tstring\tsrc/domain/models/VerifiableCredential.ts:35 evidence.type\tstring\tsrc/domain/models/VerifiableCredential.ts:36 expirationDate?\tstring\tsrc/domain/models/VerifiableCredential.ts:33 issuanceDate\tstring\tsrc/domain/models/VerifiableCredential.ts:30 issued?\tstring\tsrc/domain/models/VerifiableCredential.ts:31 issuer\tstring\tsrc/domain/models/VerifiableCredential.ts:29 refreshService?\t{ id: string; type: string; }\tsrc/domain/models/VerifiableCredential.ts:38 refreshService.id\tstring\tsrc/domain/models/VerifiableCredential.ts:39 refreshService.type\tstring\tsrc/domain/models/VerifiableCredential.ts:40 termsOfUse?\t{ id: string; type: string; }\tsrc/domain/models/VerifiableCredential.ts:42 termsOfUse.id\tstring\tsrc/domain/models/VerifiableCredential.ts:43 termsOfUse.type\tstring\tsrc/domain/models/VerifiableCredential.ts:44 type\t[&quot;VerifiableCredential&quot;]\tsrc/domain/models/VerifiableCredential.ts:28 validFrom?\t{ id: string; type: string; }\tsrc/domain/models/VerifiableCredential.ts:46 validFrom.id\tstring\tsrc/domain/models/VerifiableCredential.ts:47 validFrom.type\tstring\tsrc/domain/models/VerifiableCredential.ts:48 validUntil?\t{ id: string; type: string; }\tsrc/domain/models/VerifiableCredential.ts:50 validUntil.id\tstring\tsrc/domain/models/VerifiableCredential.ts:51 validUntil.type\tstring\tsrc/domain/models/VerifiableCredential.ts:52 ","version":"Next","tagName":"h2"},{"title":"W3CVerifiablePresentation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/W3CVerifiablePresentation","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"W3CVerifiablePresentation","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/W3CVerifiablePresentation#properties","content":" Property\tType\tDefined in @context\t[&quot;https://www.w3.org/2018/presentations/v1&quot;]\tsrc/domain/models/VerifiableCredential.ts:63 proof?\tW3CVerifiablePresentationProof\tsrc/domain/models/VerifiableCredential.ts:70 type\t[&quot;VerifiablePresentation&quot;]\tsrc/domain/models/VerifiableCredential.ts:66 verifiableCredential\tstring[]\tsrc/domain/models/VerifiableCredential.ts:69 ","version":"Next","tagName":"h2"},{"title":"credential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/variables/credential","content":"credential @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / credential Variable: credential const credential: TObject&lt;{ data: TString; recovery_id: TString; }&gt; Defined in: src/domain/backup/v0_0_1.ts:6","keywords":"","version":"Next"},{"title":"W3CVerifiablePresentationProof","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/W3CVerifiablePresentationProof","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"W3CVerifiablePresentationProof","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/type-aliases/W3CVerifiablePresentationProof#properties","content":" Property\tType\tDefined in challenge\tstring\tsrc/domain/models/VerifiableCredential.ts:74 domain\tstring\tsrc/domain/models/VerifiableCredential.ts:75 ","version":"Next","tagName":"h2"},{"title":"did","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/variables/did","content":"did @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / did Variable: did const did: TObject&lt;{ alias: TOptional&lt;TString&gt;; did: TString; }&gt; Defined in: src/domain/backup/v0_0_1.ts:11","keywords":"","version":"Next"},{"title":"didpair","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/variables/didpair","content":"didpair @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / didpair Variable: didpair const didpair: TObject&lt;{ alias: TString; holder: TString; recipient: TString; }&gt; Defined in: src/domain/backup/v0_0_1.ts:16","keywords":"","version":"Next"},{"title":"key","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/variables/key","content":"key @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / key Variable: key const key: TObject&lt;{ did: TOptional&lt;TString&gt;; index: TOptional&lt;TNumber&gt;; key: TString; recovery_id: TString; }&gt; Defined in: src/domain/backup/v0_0_1.ts:22","keywords":"","version":"Next"},{"title":"linksecret","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/variables/linksecret","content":"linksecret @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / linksecret Variable: linksecret const linksecret: TOptional&lt;TString&gt; Defined in: src/domain/backup/v0_0_1.ts:37","keywords":"","version":"Next"},{"title":"mediator","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/variables/mediator","content":"mediator @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / mediator Variable: mediator const mediator: TObject&lt;{ holder_did: TString; mediator_did: TString; routing_did: TString; }&gt; Defined in: src/domain/backup/v0_0_1.ts:29","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Payload/","content":"","keywords":"","version":"Next"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Payload/#functions","content":" Function\tDescriptionmake\t- ","version":"Next","tagName":"h2"},{"title":"Schema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/variables/Schema","content":"Schema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / Schema Variable: Schema const Schema: TObject&lt;{ credentials: TArray&lt;TObject&lt;{ data: TString; recovery_id: TString; }&gt;&gt;; did_pairs: TArray&lt;TObject&lt;{ alias: TString; holder: TString; recipient: TString; }&gt;&gt;; dids: TArray&lt;TObject&lt;{ alias: TOptional&lt;TString&gt;; did: TString; }&gt;&gt;; keys: TArray&lt;TObject&lt;{ did: TOptional&lt;TString&gt;; index: TOptional&lt;TNumber&gt;; key: TString; recovery_id: TString; }&gt;&gt;; link_secret: TOptional&lt;TString&gt;; mediators: TArray&lt;TObject&lt;{ holder_did: TString; mediator_did: TString; routing_did: TString; }&gt;&gt;; messages: TArray&lt;TString&gt;; version: TOptional&lt;TLiteral&lt;&quot;0.0.1&quot;&gt;&gt;; }&gt; Defined in: src/domain/backup/v0_0_1.ts:39","keywords":"","version":"Next"},{"title":"message","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Domain/variables/message","content":"message @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Domain / message Variable: message const message: TString Defined in: src/domain/backup/v0_0_1.ts:35","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/#classes","content":" Class\tDescriptionTask\tA Task encapsulates a unit of work  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/#type-aliases","content":" Type Alias\tDescriptionContext\t- ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/PeerDID/","content":"","keywords":"","version":"Next"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/PeerDID/#interfaces","content":" Interface\tDescriptionPrivateKey\t- ","version":"Next","tagName":"h2"},{"title":"make","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Payload/functions/make","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"make","url":"/docs/sdk-ts/sdk/overview/namespaces/Payload/functions/make#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"make","url":"/docs/sdk-ts/sdk/overview/namespaces/Payload/functions/make#parameters","content":" Parameter\tTypepid\tstring data\tT  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"make","url":"/docs/sdk-ts/sdk/overview/namespaces/Payload/functions/make#returns","content":" Payload&lt;T&gt; ","version":"Next","tagName":"h2"},{"title":"PrivateKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/PeerDID/interfaces/PrivateKey","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PrivateKey","url":"/docs/sdk-ts/sdk/overview/namespaces/PeerDID/interfaces/PrivateKey#properties","content":" Property\tType\tDescription\tDefined in keyCurve\tKeyCurve\tInstance of a KeyCurve\tsrc/peer-did/PeerDID.ts:11 value\tUint8Array\tValue as Uint8Array, buffer like\tsrc/peer-did/PeerDID.ts:17 ","version":"Next","tagName":"h2"},{"title":"Context","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/type-aliases/Context","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Context","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/type-aliases/Context#type-parameters","content":" Type Parameter\tDefault typeT\tRecord&lt;string, never&gt; ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/","content":"","keywords":"","version":"Next"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/#interfaces","content":" Interface\tDescriptionStore\tStore interface for Pluto persistence layer ","version":"Next","tagName":"h2"},{"title":"Task","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/classes/Task","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/classes/Task#extends","content":" Task&lt;Payload&lt;R&gt;, T&gt;  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/classes/Task#type-parameters","content":" Type Parameter\tDefault typeT\tunknown R\tunknown  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/classes/Task#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/classes/Task#constructor","content":" new Task&lt;T, R&gt;(...args: unknown extends T ? [] : [T]): Task&lt;T, R&gt;  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\tunknown extends T ? [] : [T]\t  Returns‚Äã  Task&lt;T, R&gt;  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/classes/Task#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/classes/Task#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Plugins/classes/Task#run","content":" abstract run(ctx: Context): Promise&lt;Payload&lt;R&gt;&gt;  Defined in: src/utils/tasks.ts:23  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;Payload&lt;R&gt;&gt;  Inherited from‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/","content":"","keywords":"","version":"Next"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/#namespaces","content":" Namespace\tDescriptionTask\t-  ","version":"Next","tagName":"h2"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/#classes","content":" Class\tDescriptionConsoleLogger\t- Task\tA Task encapsulates a unit of work  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/#interfaces","content":" Interface\tDescriptionCtor\tConstructor for T Logger\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/#type-aliases","content":" Type Alias\tDescriptionArrayable\tT is either an Array or a single item JsonObj\tConstruct a Type with a set of string Keys of type T LogLevel\t- Nil\tno value shorthand Normalize\tFlatten intersect to show single interface  ","version":"Next","tagName":"h2"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/#functions","content":" Function\tDescriptionasArray\tasArray convert a value to an array asJsonObj\t- expect\texpect assert a value is notNil and return the value typed as such panic otherwise isArray\tisArray Typeguard - check a value is an Array isEmpty\tisEmpty Logic - check a given value is considered empty empty depends on typeof value: - null - undefined - array: length = 0 - string: length = 0 isNil\tisNullish Typeguard - check a value is undefined or null isObject\tisObject Typeguard - check a value is an object in the conceptual sense not the JS sense excluding JS overlap with: null Arrays Functions isString\tisString TypeGuard to check a value is a string notEmptyString\tnotEmptyString Typeguard + Logic - check a value is a string with contents notNil\tnotNil Typeguard - check a value is neither undefined or null validate\tvalidate Type assertion - assert a value matches a schema validateSafe\tvalidateSafe Typeguard - check a value matches a schema ","version":"Next","tagName":"h2"},{"title":"ConsoleLogger","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"ConsoleLogger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger#implements","content":" Logger  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ConsoleLogger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ConsoleLogger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger#constructor","content":" new ConsoleLogger(logLevel?: LogLevel): ConsoleLogger  Defined in: src/utils/logger.ts:30  Parameters‚Äã  Parameter\tTypelogLevel?\tLogLevel  Returns‚Äã  ConsoleLogger  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"ConsoleLogger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger#methods","content":" ","version":"Next","tagName":"h2"},{"title":"debug()‚Äã","type":1,"pageTitle":"ConsoleLogger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger#debug","content":" debug(message: string, ...params: any[]): void  Defined in: src/utils/logger.ts:44  very verbose information for debugging purposes  Parameters‚Äã  Parameter\tTypemessage\tstring ...params\tany[]  Returns‚Äã  void  Implementation of‚Äã  Logger.debug    ","version":"Next","tagName":"h3"},{"title":"error()‚Äã","type":1,"pageTitle":"ConsoleLogger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger#error","content":" error(message: string, ...params: any[]): void  Defined in: src/utils/logger.ts:56  unexpected or critical information  Parameters‚Äã  Parameter\tTypemessage\tstring ...params\tany[]  Returns‚Äã  void  Implementation of‚Äã  Logger.error    ","version":"Next","tagName":"h3"},{"title":"getLogLevel()‚Äã","type":1,"pageTitle":"ConsoleLogger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger#getloglevel","content":" getLogLevel(level: LogLevel): number  Defined in: src/utils/logger.ts:34  Parameters‚Äã  Parameter\tTypelevel\tLogLevel  Returns‚Äã  number    ","version":"Next","tagName":"h3"},{"title":"info()‚Äã","type":1,"pageTitle":"ConsoleLogger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger#info","content":" info(message: string, ...params: any[]): void  Defined in: src/utils/logger.ts:48  verbose information about normal operation  Parameters‚Äã  Parameter\tTypemessage\tstring ...params\tany[]  Returns‚Äã  void  Implementation of‚Äã  Logger.info    ","version":"Next","tagName":"h3"},{"title":"warn()‚Äã","type":1,"pageTitle":"ConsoleLogger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger#warn","content":" warn(message: string, ...params: any[]): void  Defined in: src/utils/logger.ts:52  expected information that might warrant require attention  Parameters‚Äã  Parameter\tTypemessage\tstring ...params\tany[]  Returns‚Äã  void  Implementation of‚Äã  Logger.warn ","version":"Next","tagName":"h3"},{"title":"Task","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/Task","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/Task#extended-by","content":" FetchCredentialDefinitionfetchSchemaCreateAuthorizationRequestProcessCallbackUrlResolveAuthorizationRequestResolveCredentialRequestResolveTokenRequestCreateCredentialRequestFetchAuthServerMetaFetchIssuerMetadataParseCredentialOfferTaskCreatePrismDIDCreateOOBOfferRunProtocolPKInstanceCreateOOBPresentationRequestCreatePresentationRequestCreatePresentationHandlePresentationHandleRevocation  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/Task#type-parameters","content":" Type Parameter\tDefault typeT\t- Args\tunknown  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/Task#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/Task#constructor","content":" new Task&lt;T, Args&gt;(...args: unknown extends Args ? [] : [Args]): Task&lt;T, Args&gt;  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\tunknown extends Args ? [] : [Args]\t  Returns‚Äã  Task&lt;T, Args&gt;  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/Task#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/Task#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/Task#run","content":" abstract run(ctx: Context): Promise&lt;T&gt;  Defined in: src/utils/tasks.ts:23  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;T&gt; ","version":"Next","tagName":"h3"},{"title":"Store","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/interfaces/Store","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"Store","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/interfaces/Store#methods","content":" ","version":"Next","tagName":"h2"},{"title":"delete()‚Äã","type":1,"pageTitle":"Store","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/interfaces/Store#delete","content":" delete(table: string, uuid: string): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:191  Delete a row from the Store  Parameters‚Äã  Parameter\tType\tDescriptiontable\tstring\tValid table name. Must be one of: &quot;credentials&quot;, &quot;credential-metadata&quot;, &quot;didkey-link&quot;, &quot;did-link&quot;, &quot;dids&quot;, &quot;keys&quot;, &quot;messages&quot; uuid\tstring\tThe unique identifier of the record to delete  Returns‚Äã  Promise&lt;void&gt;  Promise that resolves when the record is successfully deleted  Examples‚Äã  Delete a credential by its uuid   await store.delete(&quot;credentials&quot;, &quot;credential-123&quot;);   Delete a DID by its uuid   await store.delete(&quot;dids&quot;, &quot;did:example:123&quot;);   Throws‚Äã  Error if the record with the given uuid is not found or table name is not recognized    ","version":"Next","tagName":"h3"},{"title":"insert()‚Äã","type":1,"pageTitle":"Store","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/interfaces/Store#insert","content":" insert&lt;T&gt;(table: string, model: T): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:142  Persist new data in the Store.  Type Parameters‚Äã  Type Parameter\tDescriptionT extends Storable\tThe model type that extends Models.Model (e.g., Models.Credential, Models.DID, Models.Key, etc.)  Parameters‚Äã  Parameter\tType\tDescriptiontable\tstring\tValid table name. Must be one of: &quot;credentials&quot;, &quot;credential-metadata&quot;, &quot;didkey-link&quot;, &quot;did-link&quot;, &quot;dids&quot;, &quot;keys&quot;, &quot;messages&quot; model\tT\tThe model instance to persist. Must include all required properties and should have a valid uuid  Returns‚Äã  Promise&lt;void&gt;  Promise that resolves when the model is successfully persisted  Example‚Äã  Insert a new credential   const credential: Models.Credential = { uuid: &quot;credential-123&quot;, recoveryId: &quot;jwt&quot;, dataJson: JSON.stringify(credentialData), id: &quot;credential-id&quot;, issuer: &quot;did:example:issuer&quot; }; await store.insert&lt;Models.Credential&gt;(&quot;credentials&quot;, credential);   Throws‚Äã  Error if the model is invalid or table name is not recognized    ","version":"Next","tagName":"h3"},{"title":"query()‚Äã","type":1,"pageTitle":"Store","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/interfaces/Store#query","content":" query&lt;T&gt;(table: string, query?: Query&lt;T&gt;): Promise&lt;T[]&gt;  Defined in: src/pluto/Pluto.ts:117  Run a query to fetch data from the Store  Type Parameters‚Äã  Type Parameter\tDescriptionT extends Storable\tThe model type that extends Models.Model (e.g., Models.Credential, Models.DID, Models.Key, etc.)  Parameters‚Äã  Parameter\tType\tDescriptiontable\tstring\tValid table name. Must be one of: &quot;credentials&quot;, &quot;credential-metadata&quot;, &quot;didkey-link&quot;, &quot;did-link&quot;, &quot;dids&quot;, &quot;keys&quot;, &quot;messages&quot; query?\tQuery&lt;T&gt;\tOptional Query object with selector conditions and operators for filtering results Query behavior: - Properties within an object will be AND'ed together - Different objects in $or array will be OR'd together - Omit query parameter to fetch all records from the table  Returns‚Äã  Promise&lt;T[]&gt;  Promise resolving to array of models matching the query criteria  Examples‚Äã  Search for credentials by uuid and issuer   store.query&lt;Models.Credential&gt;(&quot;credentials&quot;, { selector: { uuid: &quot;credential-123&quot;, issuer: &quot;did:example:issuer&quot; } })   Search for DIDs with method &quot;prism&quot; OR &quot;peer&quot;   store.query&lt;Models.DID&gt;(&quot;dids&quot;, { selector: { $or: [{ method: &quot;prism&quot; }, { method: &quot;peer&quot; }] } })   Fetch all messages from the table   store.query&lt;Models.Message&gt;(&quot;messages&quot;)     ","version":"Next","tagName":"h3"},{"title":"start()?‚Äã","type":1,"pageTitle":"Store","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/interfaces/Store#start","content":" optional start(): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:76  Handle any necessary startup. Will be called first before any usage, if provided.  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"stop()?‚Äã","type":1,"pageTitle":"Store","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/interfaces/Store#stop","content":" optional stop(): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:81  Handle any necessary teardown.  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"update()‚Äã","type":1,"pageTitle":"Store","url":"/docs/sdk-ts/sdk/overview/namespaces/Pluto/interfaces/Store#update","content":" update&lt;T&gt;(table: string, model: T): Promise&lt;void&gt;  Defined in: src/pluto/Pluto.ts:168  Update an existing row in the Store  Type Parameters‚Äã  Type Parameter\tDescriptionT extends Storable\tThe model type that extends Models.Model (e.g., Models.Credential, Models.DID, Models.Key, etc.)  Parameters‚Äã  Parameter\tType\tDescriptiontable\tstring\tValid table name. Must be one of: &quot;credentials&quot;, &quot;credential-metadata&quot;, &quot;didkey-link&quot;, &quot;did-link&quot;, &quot;dids&quot;, &quot;keys&quot;, &quot;messages&quot; model\tT\tThe model instance with updated data. Must include the uuid to identify the record to update  Returns‚Äã  Promise&lt;void&gt;  Promise that resolves when the model is successfully updated  Example‚Äã  Update a credential to mark it as revoked   const updatedCredential: Models.Credential = { uuid: &quot;credential-123&quot;, recoveryId: &quot;jwt&quot;, dataJson: JSON.stringify(updatedCredentialData), id: &quot;credential-id&quot;, issuer: &quot;did:example:issuer&quot;, revoked: true }; await store.update&lt;Models.Credential&gt;(&quot;credentials&quot;, updatedCredential);   Throws‚Äã  Error if the model with the given uuid is not found or table name is not recognized ","version":"Next","tagName":"h3"},{"title":"asJsonObj","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asJsonObj","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"asJsonObj","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asJsonObj#parameters","content":" Parameter\tTypevalue\tunknown  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"asJsonObj","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asJsonObj#returns","content":" JsonObj ","version":"Next","tagName":"h2"},{"title":"asArray","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray","content":"","keywords":"","version":"Next"},{"title":"Call Signature‚Äã","type":1,"pageTitle":"asArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray#call-signature","content":" asArray&lt;T&gt;(items: Nil | T | T[]): T[]  Defined in: src/utils/guards.ts:81  asArray convert a value to an array  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"asArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h3"},{"title":"Parameters‚Äã","type":1,"pageTitle":"asArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray#parameters","content":" Parameter\tType\tDescriptionitems\tNil | T | T[]\tthe value to be converted - nullish returns empty array - single item returns array with item - array returns array  ","version":"Next","tagName":"h3"},{"title":"Returns‚Äã","type":1,"pageTitle":"asArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray#returns","content":" T[]  ","version":"Next","tagName":"h3"},{"title":"Call Signature‚Äã","type":1,"pageTitle":"asArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray#call-signature-1","content":" asArray&lt;T, U&gt;(items: Nil | T | T[], guard: (item: unknown) =&gt; item is U): U[]  Defined in: src/utils/guards.ts:88  asArray convert a value to an array with type guard  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"asArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray#type-parameters-1","content":" Type ParameterT U  ","version":"Next","tagName":"h3"},{"title":"Parameters‚Äã","type":1,"pageTitle":"asArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray#parameters-1","content":" Parameter\tType\tDescriptionitems\tNil | T | T[]\tthe value to be converted guard\t(item: unknown) =&gt; item is U\tTypeguard to filter items ensuring item types  ","version":"Next","tagName":"h3"},{"title":"Returns‚Äã","type":1,"pageTitle":"asArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray#returns-1","content":" U[] ","version":"Next","tagName":"h3"},{"title":"expect","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/expect","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"expect","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/expect#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"expect","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/expect#parameters","content":" Parameter\tType\tDescriptionvalue\tT\tthe value to check error?\tstring | Error | Ctor&lt;Error&gt;\tcustom error  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"expect","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/expect#returns","content":" Exclude&lt;T, Nil&gt; ","version":"Next","tagName":"h2"},{"title":"isArray","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isArray","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"isArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isArray#parameters","content":" Parameter\tTypevalue\tunknown  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"isArray","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isArray#returns","content":" value is unknown[] ","version":"Next","tagName":"h2"},{"title":"isEmpty","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isEmpty","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"isEmpty","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isEmpty#parameters","content":" Parameter\tTypevalue\tunknown  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"isEmpty","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isEmpty#returns","content":" value is Nil  ","version":"Next","tagName":"h2"},{"title":"See‚Äã","type":1,"pageTitle":"isEmpty","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isEmpty#see","content":" isNilisStringisArray ","version":"Next","tagName":"h2"},{"title":"isNil","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isNil","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"isNil","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isNil#parameters","content":" Parameter\tTypevalue\tunknown  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"isNil","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isNil#returns","content":" value is Nil ","version":"Next","tagName":"h2"},{"title":"isObject","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isObject","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"isObject","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isObject#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"isObject","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isObject#parameters","content":" Parameter\tTypevalue\tT  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"isObject","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isObject#returns","content":" value is Exclude&lt;T &amp; Record&lt;string, any&gt;, any[] | Nil | ((args: any) =&gt; any)&gt; ","version":"Next","tagName":"h2"},{"title":"isString","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isString","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"isString","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isString#parameters","content":" Parameter\tTypevalue\tunknown  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"isString","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isString#returns","content":" value is string ","version":"Next","tagName":"h2"},{"title":"notEmptyString","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notEmptyString","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"notEmptyString","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notEmptyString#parameters","content":" Parameter\tTypevalue\tunknown  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"notEmptyString","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notEmptyString#returns","content":" value is string ","version":"Next","tagName":"h2"},{"title":"notNil","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notNil","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"notNil","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notNil#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"notNil","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notNil#parameters","content":" Parameter\tTypevalue\tNil | T  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"notNil","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notNil#returns","content":" value is T  ","version":"Next","tagName":"h2"},{"title":"See‚Äã","type":1,"pageTitle":"notNil","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notNil#see","content":" isNil ","version":"Next","tagName":"h2"},{"title":"validateSafe","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validateSafe","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"validateSafe","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validateSafe#type-parameters","content":" Type ParameterT extends TObject&lt;TProperties&gt;  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"validateSafe","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validateSafe#parameters","content":" Parameter\tType\tDescriptionjson\tunknown schema\tT\t  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"validateSafe","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validateSafe#returns","content":" json is Static&lt;T&gt; ","version":"Next","tagName":"h2"},{"title":"validate","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validate","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"validate","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validate#type-parameters","content":" Type ParameterT extends TObject&lt;TProperties&gt;  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"validate","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validate#parameters","content":" Parameter\tType\tDescriptionjson\tunknown schema\tT\t  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"validate","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validate#returns","content":" asserts json is Static&lt;T&gt;  ","version":"Next","tagName":"h2"},{"title":"Throws‚Äã","type":1,"pageTitle":"validate","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validate#throws","content":" Error - list of issues ","version":"Next","tagName":"h2"},{"title":"Ctor","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Ctor","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Ctor","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Ctor#type-parameters","content":" Type Parameter\tDefault typeT\tany  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Ctor","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Ctor#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Ctor","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Ctor#constructor","content":" new Ctor(...args: any[]): T  Defined in: src/utils/types.ts:5  Parameters‚Äã  Parameter\tType...args\tany[]  Returns‚Äã  T ","version":"Next","tagName":"h3"},{"title":"Logger","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Logger","content":"","keywords":"","version":"Next"},{"title":"Methods‚Äã","type":1,"pageTitle":"Logger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Logger#methods","content":" ","version":"Next","tagName":"h2"},{"title":"debug()‚Äã","type":1,"pageTitle":"Logger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Logger#debug","content":" debug(message: string, ...params: any[]): void  Defined in: src/utils/logger.ts:10  very verbose information for debugging purposes  Parameters‚Äã  Parameter\tTypemessage\tstring ...params\tany[]  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"error()‚Äã","type":1,"pageTitle":"Logger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Logger#error","content":" error(message: string, ...params: any[]): void  Defined in: src/utils/logger.ts:22  unexpected or critical information  Parameters‚Äã  Parameter\tTypemessage\tstring ...params\tany[]  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"info()‚Äã","type":1,"pageTitle":"Logger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Logger#info","content":" info(message: string, ...params: any[]): void  Defined in: src/utils/logger.ts:14  verbose information about normal operation  Parameters‚Äã  Parameter\tTypemessage\tstring ...params\tany[]  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"warn()‚Äã","type":1,"pageTitle":"Logger","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Logger#warn","content":" warn(message: string, ...params: any[]): void  Defined in: src/utils/logger.ts:18  expected information that might warrant require attention  Parameters‚Äã  Parameter\tTypemessage\tstring ...params\tany[]  Returns‚Äã  void ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/#classes","content":" Class\tDescriptionContextProxy\tContext using proxy so we can extend arbitrarily Runner\tused to enable Modules to propagate the Context and have access to runTask  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/#interfaces","content":" Interface\tDescriptionContextCtor\tused to mask the Proxy behaviour and enable Typescript to know what Modules should be accessible  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/#type-aliases","content":" Type Alias\tDescriptionContext\tContext is provided to running tasks it optimistically provides access to Modules  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/#variables","content":" Variable\tDescriptionContext\t- ","version":"Next","tagName":"h2"},{"title":"Runner","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/Runner","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"Runner","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/Runner#extended-by","content":" JWTSDJWTDIFModule  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Runner","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/Runner#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Runner","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/Runner#constructor","content":" new Runner(): Runner  Returns‚Äã  Runner  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"Runner","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/Runner#methods","content":" ","version":"Next","tagName":"h2"},{"title":"clone()‚Äã","type":1,"pageTitle":"Runner","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/Runner#clone","content":" abstract clone(): Runner  Defined in: src/utils/tasks.ts:101  Returns‚Äã  Runner    ","version":"Next","tagName":"h3"},{"title":"withContext()‚Äã","type":1,"pageTitle":"Runner","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/Runner#withcontext","content":" withContext(ctx: Context): Runner  Defined in: src/utils/tasks.ts:103  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Runner ","version":"Next","tagName":"h3"},{"title":"ContextProxy","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/ContextProxy","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ContextProxy","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/ContextProxy#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ContextProxy","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/ContextProxy#constructor","content":" new ContextProxy(opts: JsonObj): ContextProxy  Defined in: src/utils/tasks.ts:40  Parameters‚Äã  Parameter\tTypeopts\tJsonObj  Returns‚Äã  ContextProxy  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ContextProxy","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/ContextProxy#properties","content":" Property\tModifier\tType\tDefined in logger\treadonly\tLogger\tsrc/utils/tasks.ts:36  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ContextProxy","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/ContextProxy#methods","content":" ","version":"Next","tagName":"h2"},{"title":"extend()‚Äã","type":1,"pageTitle":"ContextProxy","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/ContextProxy#extend","content":" extend(deps: JsonObj): this  Defined in: src/utils/tasks.ts:69  Parameters‚Äã  Parameter\tTypedeps\tJsonObj  Returns‚Äã  this    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"ContextProxy","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/classes/ContextProxy#run","content":" run&lt;T&gt;(task: Task&lt;T, any&gt;): Promise&lt;T&gt;  Defined in: src/utils/tasks.ts:55  Type Parameters‚Äã  Type ParameterT  Parameters‚Äã  Parameter\tTypetask\tTask&lt;T, any&gt;  Returns‚Äã  Promise&lt;T&gt; ","version":"Next","tagName":"h3"},{"title":"Context","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/type-aliases/Context","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Context","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/type-aliases/Context#type-parameters","content":" Type Parameter\tDefault typeT\tJsonObj ","version":"Next","tagName":"h2"},{"title":"ContextCtor","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/interfaces/ContextCtor","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ContextCtor","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/interfaces/ContextCtor#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ContextCtor","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/interfaces/ContextCtor#constructor","content":" new ContextCtor&lt;T&gt;(modules: T): Context&lt;T&gt;  Defined in: src/utils/tasks.ts:83  Parameters‚Äã  Parameter\tTypemodules\tT  Returns‚Äã  Context&lt;T&gt; ","version":"Next","tagName":"h3"},{"title":"Context","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/variables/Context","content":"Context @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Utils / Task / Context Variable: Context Context: ContextCtor Defined in: src/utils/tasks.ts:90","keywords":"","version":"Next"},{"title":"LogLevel","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/LogLevel","content":"LogLevel @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Utils / LogLevel Type Alias: LogLevel LogLevel = &quot;debug&quot; | &quot;info&quot; | &quot;warn&quot; | &quot;error&quot; | &quot;none&quot; Defined in: src/utils/logger.ts:25","keywords":"","version":"Next"},{"title":"JsonObj","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/JsonObj","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"JsonObj","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/JsonObj#type-parameters","content":" Type Parameter\tDefault typeT\tany ","version":"Next","tagName":"h2"},{"title":"Nil","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Nil","content":"Nil @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Utils / Nil Type Alias: Nil Nil = undefined | null Defined in: src/utils/types.ts:11 no value shorthand","keywords":"","version":"Next"},{"title":"Arrayable","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Arrayable","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Arrayable","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Arrayable#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"See‚Äã","type":1,"pageTitle":"Arrayable","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Arrayable#see","content":" asArray ","version":"Next","tagName":"h2"},{"title":"Normalize","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Normalize","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Normalize","url":"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Normalize#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"Args_CredentialIssue","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Args_CredentialIssue","content":"Args_CredentialIssue @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Args_CredentialIssue Type Alias: Args_CredentialIssue Args_CredentialIssue = IArgs&lt;&quot;credential-issue&quot;, { data: any; thid?: string; }&gt; Defined in: src/edge-agent/helpers/RunProtocol.ts:42","keywords":"","version":"Next"},{"title":"AgentOptions","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/AgentOptions","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"AgentOptions","url":"/docs/sdk-ts/sdk/overview/type-aliases/AgentOptions#properties","content":" Property\tType\tDefined in experiments?\t{ liveMode?: boolean; }\tsrc/edge-agent/types/index.ts:48 experiments.liveMode?\tboolean\tsrc/edge-agent/types/index.ts:49 mediatorDID?\tDID | string\tsrc/edge-agent/types/index.ts:47 resolverEndpoint?\tstring\tsrc/edge-agent/types/index.ts:52 ","version":"Next","tagName":"h2"},{"title":"Args_Message","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Args_Message","content":"Args_Message @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Args_Message Type Alias: Args_Message Args_Message = IArgs&lt;&quot;message&quot;, { message: Message; }&gt; Defined in: src/edge-agent/helpers/RunProtocol.ts:60","keywords":"","version":"Next"},{"title":"Args_PresentationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Args_PresentationRequest","content":"Args_PresentationRequest @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Args_PresentationRequest Type Alias: Args_PresentationRequest Args_PresentationRequest = IArgs&lt;&quot;presentation-request&quot;, { credential: Credential; presentationRequest: any; }&gt; Defined in: src/edge-agent/helpers/RunProtocol.ts:50","keywords":"","version":"Next"},{"title":"Args_CredentialOffer","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Args_CredentialOffer","content":"Args_CredentialOffer @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Args_CredentialOffer Type Alias: Args_CredentialOffer Args_CredentialOffer = IArgs&lt;&quot;credential-offer&quot;, { offer: any; thid?: string; }&gt; Defined in: src/edge-agent/helpers/RunProtocol.ts:46","keywords":"","version":"Next"},{"title":"Args_PresentationVerify","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Args_PresentationVerify","content":"Args_PresentationVerify @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Args_PresentationVerify Type Alias: Args_PresentationVerify Args_PresentationVerify = IArgs&lt;&quot;presentation-verify&quot;, { presentation: any; presentationRequest: any; thid?: string; }&gt; Defined in: src/edge-agent/helpers/RunProtocol.ts:54","keywords":"","version":"Next"},{"title":"Args_RequestCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Args_RequestCredential","content":"Args_RequestCredential @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Args_RequestCredential Type Alias: Args_RequestCredential Args_RequestCredential = IArgs&lt;&quot;credential-request&quot;, Args_RequestCredentialJWT | Args_RequestCredentialSDJWT&gt; Defined in: src/edge-agent/helpers/RunProtocol.ts:39","keywords":"","version":"Next"},{"title":"Args_RevocationCheck","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Args_RevocationCheck","content":"Args_RevocationCheck @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Args_RevocationCheck Type Alias: Args_RevocationCheck Args_RevocationCheck = IArgs&lt;&quot;revocation-check&quot;, { credential: Credential; }&gt; Defined in: src/edge-agent/helpers/RunProtocol.ts:59","keywords":"","version":"Next"},{"title":"Args_Unknown","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Args_Unknown","content":"Args_Unknown @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Args_Unknown Type Alias: Args_Unknown Args_Unknown = IArgs&lt;&quot;unknown&quot;, JsonObj&gt; Defined in: src/edge-agent/helpers/RunProtocol.ts:61","keywords":"","version":"Next"},{"title":"BackupAgent","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/BackupAgent","content":"BackupAgent @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / BackupAgent Type Alias: BackupAgent BackupAgent = Pick&lt;Agent, &quot;apollo&quot; | &quot;pluto&quot; | &quot;seed&quot;&gt; Defined in: src/edge-agent/Agent.Backup.ts:13 define Agent requirements for Backup","keywords":"","version":"Next"},{"title":"BackupExclude","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/BackupExclude","content":"BackupExclude @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / BackupExclude Type Alias: BackupExclude BackupExclude = &quot;messages&quot; | &quot;mediators&quot; | &quot;link_secret&quot; Defined in: src/edge-agent/Agent.Backup.ts:14","keywords":"","version":"Next"},{"title":"BackupOptions","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/BackupOptions","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"BackupOptions","url":"/docs/sdk-ts/sdk/overview/type-aliases/BackupOptions#properties","content":" Property\tType\tDefined in compress?\tboolean\tsrc/edge-agent/Agent.Backup.ts:20 excludes?\tBackupExclude[]\tsrc/edge-agent/Agent.Backup.ts:21 key?\tMasterKey\tsrc/edge-agent/Agent.Backup.ts:19 version?\tVersion\tsrc/edge-agent/Agent.Backup.ts:18 ","version":"Next","tagName":"h2"},{"title":"CollectionCreate","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/CollectionCreate","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CollectionCreate","url":"/docs/sdk-ts/sdk/overview/type-aliases/CollectionCreate#properties","content":" Property\tType\tDefined in migrationStrategies?\tMigrationStrategies\tsrc/pluto/collections/index.ts:7 schema\tSchemaType\tsrc/pluto/collections/index.ts:6 ","version":"Next","tagName":"h2"},{"title":"CollectionList","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/CollectionList","content":"CollectionList @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / CollectionList Type Alias: CollectionList CollectionList = Record&lt;string, CollectionCreate&gt; Defined in: src/pluto/collections/index.ts:12","keywords":"","version":"Next"},{"title":"ConnectionEventArg","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/ConnectionEventArg","content":"ConnectionEventArg @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / ConnectionEventArg Type Alias: ConnectionEventArg ConnectionEventArg = DIDPair Defined in: src/edge-agent/types/index.ts:57","keywords":"","version":"Next"},{"title":"EventCallback","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/EventCallback","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"EventCallback","url":"/docs/sdk-ts/sdk/overview/type-aliases/EventCallback#type-parameters","content":" Type ParameterT extends ListenerKey ","version":"Next","tagName":"h2"},{"title":"EventCallbacks","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/EventCallbacks","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"EventCallbacks","url":"/docs/sdk-ts/sdk/overview/type-aliases/EventCallbacks#properties","content":" Property\tType\tDefined in connection\t(connection: ConnectionEventArg) =&gt; void\tsrc/edge-agent/types/index.ts:69 message\t(messages: MessageEventArg) =&gt; void\tsrc/edge-agent/types/index.ts:68 revoke\t(revoke: RevokeEventArg) =&gt; void\tsrc/edge-agent/types/index.ts:70 ","version":"Next","tagName":"h2"},{"title":"ExtractModelProperties","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/ExtractModelProperties","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"ExtractModelProperties","url":"/docs/sdk-ts/sdk/overview/type-aliases/ExtractModelProperties#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"InvitationType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/InvitationType","content":"InvitationType @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / InvitationType Type Alias: InvitationType InvitationType = PrismOnboardingInvitation | OutOfBandInvitation Defined in: src/edge-agent/types/index.ts:55","keywords":"","version":"Next"},{"title":"ExtraResolver","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/ExtraResolver","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"ExtraResolver","url":"/docs/sdk-ts/sdk/overview/type-aliases/ExtraResolver#parameters","content":" Parameter\tTypeapollo\tApollo  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"ExtraResolver","url":"/docs/sdk-ts/sdk/overview/type-aliases/ExtraResolver#returns","content":" DIDResolver ","version":"Next","tagName":"h2"},{"title":"Join","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Join","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Join","url":"/docs/sdk-ts/sdk/overview/type-aliases/Join#type-parameters","content":" Type ParameterK P ","version":"Next","tagName":"h2"},{"title":"KeysFor","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/KeysFor","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"KeysFor","url":"/docs/sdk-ts/sdk/overview/type-aliases/KeysFor#type-parameters","content":" Type ParameterT P extends PropertyTypes ","version":"Next","tagName":"h2"},{"title":"KeysOf","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/KeysOf","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"KeysOf","url":"/docs/sdk-ts/sdk/overview/type-aliases/KeysOf#type-parameters","content":" Type ParameterT X ","version":"Next","tagName":"h2"},{"title":"MasterKey","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/MasterKey","content":"MasterKey @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / MasterKey Type Alias: MasterKey MasterKey = PrivateKey &amp; Common &amp; JWK &amp; PEM Defined in: src/edge-agent/Agent.Backup.ts:15","keywords":"","version":"Next"},{"title":"MessageEventArg","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/MessageEventArg","content":"MessageEventArg @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / MessageEventArg Type Alias: MessageEventArg MessageEventArg = Message[] Defined in: src/edge-agent/types/index.ts:56","keywords":"","version":"Next"},{"title":"MigrationStrategies","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/MigrationStrategies","content":"","keywords":"","version":"Next"},{"title":"Index Signature‚Äã","type":1,"pageTitle":"MigrationStrategies","url":"/docs/sdk-ts/sdk/overview/type-aliases/MigrationStrategies#index-signature","content":" [toVersion: number]: MigrationStrategy&lt;any&gt; ","version":"Next","tagName":"h2"},{"title":"MigrationStrategy","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/MigrationStrategy","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"MigrationStrategy","url":"/docs/sdk-ts/sdk/overview/type-aliases/MigrationStrategy#type-parameters","content":" Type Parameter\tDefault typeDocData\tany  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"MigrationStrategy","url":"/docs/sdk-ts/sdk/overview/type-aliases/MigrationStrategy#parameters","content":" Parameter\tTypeoldDocumentData\tDocData  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"MigrationStrategy","url":"/docs/sdk-ts/sdk/overview/type-aliases/MigrationStrategy#returns","content":" Promise&lt;DocData&gt; | DocData | null ","version":"Next","tagName":"h2"},{"title":"Model","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Model","content":"Model @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Model Type Alias: Model Model = Storable Defined in: src/pluto/models/Model.ts:8 Define common properties uuid: Universally Unique Identifier","keywords":"","version":"Next"},{"title":"ModelOptionalKeys","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/ModelOptionalKeys","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"ModelOptionalKeys","url":"/docs/sdk-ts/sdk/overview/type-aliases/ModelOptionalKeys#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"ModelPropertyNames","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/ModelPropertyNames","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"ModelPropertyNames","url":"/docs/sdk-ts/sdk/overview/type-aliases/ModelPropertyNames#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"ModelRequiredKeys","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/ModelRequiredKeys","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"ModelRequiredKeys","url":"/docs/sdk-ts/sdk/overview/type-aliases/ModelRequiredKeys#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"OptionalId","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/OptionalId","content":"","keywords":"","version":"Next"},{"title":"Type Declaration‚Äã","type":1,"pageTitle":"OptionalId","url":"/docs/sdk-ts/sdk/overview/type-aliases/OptionalId#type-declaration","content":" Name\tType\tDefined inuuid?\tstring\tsrc/pluto/repositories/builders/BaseRepository.ts:6  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"OptionalId","url":"/docs/sdk-ts/sdk/overview/type-aliases/OptionalId#type-parameters","content":" Type ParameterT extends Model ","version":"Next","tagName":"h2"},{"title":"OptionalKeys","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/OptionalKeys","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"OptionalKeys","url":"/docs/sdk-ts/sdk/overview/type-aliases/OptionalKeys#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"OptionalTypeToSchemaType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/OptionalTypeToSchemaType","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"OptionalTypeToSchemaType","url":"/docs/sdk-ts/sdk/overview/type-aliases/OptionalTypeToSchemaType#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"Paths","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Paths","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Paths","url":"/docs/sdk-ts/sdk/overview/type-aliases/Paths#type-parameters","content":" Type Parameter\tDefault typeT\t- D extends number\t10 ","version":"Next","tagName":"h2"},{"title":"PlutoRepositories","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/PlutoRepositories","content":"PlutoRepositories @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / PlutoRepositories Type Alias: PlutoRepositories PlutoRepositories = ReturnType&lt;typeof repositoryFactory&gt; Defined in: src/pluto/repositories/builders/factory.ts:32","keywords":"","version":"Next"},{"title":"Prev","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Prev","content":"Prev @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / Prev Type Alias: Prev Prev = [never, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...0[]] Defined in: src/pluto/types.ts:48","keywords":"","version":"Next"},{"title":"PropertyType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/PropertyType","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"PropertyType","url":"/docs/sdk-ts/sdk/overview/type-aliases/PropertyType#type-parameters","content":" Type ParameterType Property extends string ","version":"Next","tagName":"h2"},{"title":"PropertyTypes","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/PropertyTypes","content":"PropertyTypes @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / PropertyTypes Type Alias: PropertyTypes PropertyTypes = &quot;boolean&quot; | &quot;number&quot; | &quot;string&quot; Defined in: src/pluto/models/Schema.ts:65","keywords":"","version":"Next"},{"title":"ProtocolType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/ProtocolType","content":"ProtocolType @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / ProtocolType Type Alias: ProtocolType ProtocolType = typeof ProtocolIds | typeof ProtocolIds Defined in: src/edge-agent/types/index.ts:18 Temporary workaround to smooth transition of internal module splitting and end-user consumables ProtocolType is a merging of all the supported ProtocolIds These have been split internally into Didcomm and OEA modules But we can hide that from our users until full support exists","keywords":"","version":"Next"},{"title":"Query","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Query","content":"","keywords":"","version":"Next"},{"title":"Type Declaration‚Äã","type":1,"pageTitle":"Query","url":"/docs/sdk-ts/sdk/overview/type-aliases/Query#type-declaration","content":" Name\tType\tDefined inlimit?\tnumber\tsrc/pluto/types.ts:78 skip?\tnumber\tsrc/pluto/types.ts:77  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Query","url":"/docs/sdk-ts/sdk/overview/type-aliases/Query#type-parameters","content":" Type Parameter\tDefault typeDoc\tany ","version":"Next","tagName":"h2"},{"title":"QueryNoLimit","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/QueryNoLimit","content":"","keywords":"","version":"Next"},{"title":"Type Declaration‚Äã","type":1,"pageTitle":"QueryNoLimit","url":"/docs/sdk-ts/sdk/overview/type-aliases/QueryNoLimit#type-declaration","content":" Name\tType\tDefined insort?\tQuerySortPart&lt;Doc&gt;[]\tsrc/pluto/types.ts:70  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"QueryNoLimit","url":"/docs/sdk-ts/sdk/overview/type-aliases/QueryNoLimit#type-parameters","content":" Type ParameterDoc ","version":"Next","tagName":"h2"},{"title":"QuerySelector","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/QuerySelector","content":"","keywords":"","version":"Next"},{"title":"Type Declaration‚Äã","type":1,"pageTitle":"QuerySelector","url":"/docs/sdk-ts/sdk/overview/type-aliases/QuerySelector#type-declaration","content":" Name\tType\tDefined in$and?\tQuerySelector&lt;DocType&gt;[]\tsrc/pluto/types.ts:59 $nor?\tQuerySelector&lt;DocType&gt;[]\tsrc/pluto/types.ts:61 $or?\tQuerySelector&lt;DocType&gt;[]\tsrc/pluto/types.ts:60  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"QuerySelector","url":"/docs/sdk-ts/sdk/overview/type-aliases/QuerySelector#type-parameters","content":" Type ParameterDocType ","version":"Next","tagName":"h2"},{"title":"QuerySelectorAndIndex","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/QuerySelectorAndIndex","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"QuerySelectorAndIndex","url":"/docs/sdk-ts/sdk/overview/type-aliases/QuerySelectorAndIndex#type-parameters","content":" Type Parameter\tDefault typeDoc\tany  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"QuerySelectorAndIndex","url":"/docs/sdk-ts/sdk/overview/type-aliases/QuerySelectorAndIndex#properties","content":" Property\tType\tDefined in index?\tstring | string[]\tsrc/pluto/types.ts:66 selector?\tQuerySelector&lt;Doc&gt;\tsrc/pluto/types.ts:65 ","version":"Next","tagName":"h2"},{"title":"QuerySortDirection","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/QuerySortDirection","content":"QuerySortDirection @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / QuerySortDirection Type Alias: QuerySortDirection QuerySortDirection = &quot;asc&quot; | &quot;desc&quot; Defined in: src/pluto/types.ts:1","keywords":"","version":"Next"},{"title":"QuerySortPart","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/QuerySortPart","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"QuerySortPart","url":"/docs/sdk-ts/sdk/overview/type-aliases/QuerySortPart#type-parameters","content":" Type Parameter\tDefault typeDoc\tany ","version":"Next","tagName":"h2"},{"title":"RequiredKeys","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/RequiredKeys","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"RequiredKeys","url":"/docs/sdk-ts/sdk/overview/type-aliases/RequiredKeys#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"RevokeEventArg","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/RevokeEventArg","content":"RevokeEventArg @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / RevokeEventArg Type Alias: RevokeEventArg RevokeEventArg = Credential Defined in: src/edge-agent/types/index.ts:58","keywords":"","version":"Next"},{"title":"RequiredTypeToSchemaType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/RequiredTypeToSchemaType","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"RequiredTypeToSchemaType","url":"/docs/sdk-ts/sdk/overview/type-aliases/RequiredTypeToSchemaType#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"StringKeys","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/StringKeys","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"StringKeys","url":"/docs/sdk-ts/sdk/overview/type-aliases/StringKeys#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"Task","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/Task","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/type-aliases/Task#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Parameters‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/type-aliases/Task#parameters","content":" Parameter\tTypesignal\tAbortSignal  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"Task","url":"/docs/sdk-ts/sdk/overview/type-aliases/Task#returns","content":" Promise&lt;T&gt; ","version":"Next","tagName":"h2"},{"title":"TaskContext","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/TaskContext","content":"","keywords":"","version":"Next"},{"title":"Deprecated‚Äã","type":1,"pageTitle":"TaskContext","url":"/docs/sdk-ts/sdk/overview/type-aliases/TaskContext#deprecated","content":" Use TaskContext instead from @hyperledger/identus-sdk/plugins/oea ","version":"Next","tagName":"h2"},{"title":"RunProtocolArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/RunProtocolArgs","content":"RunProtocolArgs @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / RunProtocolArgs Type Alias: RunProtocolArgs RunProtocolArgs = Args_RequestCredential | Args_CredentialIssue | Args_CredentialOffer | Args_PresentationRequest | Args_PresentationVerify | Args_RevocationCheck | Args_Message | Args_Unknown Defined in: src/edge-agent/helpers/RunProtocol.ts:63","keywords":"","version":"Next"},{"title":"AnonCredsRecoveryId","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/AnonCredsRecoveryId","content":"AnonCredsRecoveryId @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / AnonCredsRecoveryId Variable: AnonCredsRecoveryId const AnonCredsRecoveryId: &quot;anonCreds+credential&quot; = &quot;anonCreds+credential&quot; Defined in: src/pollux/models/AnonCredsVerifiableCredential.ts:21","keywords":"","version":"Next"},{"title":"TypedSchema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/TypedSchema","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"TypedSchema","url":"/docs/sdk-ts/sdk/overview/type-aliases/TypedSchema#type-parameters","content":" Type ParameterT  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"TypedSchema","url":"/docs/sdk-ts/sdk/overview/type-aliases/TypedSchema#properties","content":" Property\tType\tDefined in encrypted\tModelPropertyNames&lt;T&gt;[]\tsrc/pluto/models/Schema.ts:40 indexes?\tstring[]\tsrc/pluto/models/Schema.ts:44 primaryKey\tstring\tsrc/pluto/models/Schema.ts:42 properties\t{ [K in &quot;uuid&quot; | ModelRequiredKeys&lt;T&gt; | ModelOptionalKeys&lt;T&gt;]: K extends &quot;uuid&quot; ? { maxLength: 60; required: true; type: &quot;string&quot; } : K extends ModelRequiredKeys&lt;T&gt; ? RequiredTypeToSchemaType&lt;T[K]&gt; : K extends ModelOptionalKeys&lt;T&gt; ? OptionalTypeToSchemaType&lt;T[K]&gt; : never }\tsrc/pluto/models/Schema.ts:45 type\tstring\tsrc/pluto/models/Schema.ts:43 version\tnumber\tsrc/pluto/models/Schema.ts:41 ","version":"Next","tagName":"h2"},{"title":"CredentialMetadataSchema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/CredentialMetadataSchema","content":"CredentialMetadataSchema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / CredentialMetadataSchema Variable: CredentialMetadataSchema const CredentialMetadataSchema: TypedSchema&lt;CredentialMetadata&gt; Defined in: src/pluto/models/CredentialMetadata.ts:24","keywords":"","version":"Next"},{"title":"WithId","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/type-aliases/WithId","content":"","keywords":"","version":"Next"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"WithId","url":"/docs/sdk-ts/sdk/overview/type-aliases/WithId#type-parameters","content":" Type ParameterT ","version":"Next","tagName":"h2"},{"title":"CredentialMigration","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/CredentialMigration","content":"CredentialMigration @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / CredentialMigration Variable: CredentialMigration const CredentialMigration: MigrationStrategies Defined in: src/pluto/models/Credential.ts:59","keywords":"","version":"Next"},{"title":"CredentialSchema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/CredentialSchema","content":"CredentialSchema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / CredentialSchema Variable: CredentialSchema const CredentialSchema: TypedSchema&lt;Credential&gt; Defined in: src/pluto/models/Credential.ts:38","keywords":"","version":"Next"},{"title":"DIDKeyLinkSchema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/DIDKeyLinkSchema","content":"DIDKeyLinkSchema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / DIDKeyLinkSchema Variable: DIDKeyLinkSchema const DIDKeyLinkSchema: TypedSchema&lt;DIDKeyLink&gt; Defined in: src/pluto/models/relationships/DIDKeyLink.ts:24","keywords":"","version":"Next"},{"title":"DIDLinkSchema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/DIDLinkSchema","content":"DIDLinkSchema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / DIDLinkSchema Variable: DIDLinkSchema const DIDLinkSchema: TypedSchema&lt;DIDLink&gt; Defined in: src/pluto/models/relationships/DIDLink.ts:49","keywords":"","version":"Next"},{"title":"KeySchema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/KeySchema","content":"KeySchema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / KeySchema Variable: KeySchema const KeySchema: TypedSchema&lt;Key&gt; Defined in: src/pluto/models/Key.ts:25","keywords":"","version":"Next"},{"title":"DIDSchema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/DIDSchema","content":"DIDSchema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / DIDSchema Variable: DIDSchema const DIDSchema: TypedSchema&lt;DID&gt; Defined in: src/pluto/models/DID.ts:24","keywords":"","version":"Next"},{"title":"JWTVerifiableCredentialRecoveryId","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/JWTVerifiableCredentialRecoveryId","content":"JWTVerifiableCredentialRecoveryId @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / JWTVerifiableCredentialRecoveryId Variable: JWTVerifiableCredentialRecoveryId const JWTVerifiableCredentialRecoveryId: &quot;jwt+credential&quot; = &quot;jwt+credential&quot; Defined in: src/pollux/models/JWTVerifiableCredential.ts:14","keywords":"","version":"Next"},{"title":"MessageSchema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/MessageSchema","content":"MessageSchema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / MessageSchema Variable: MessageSchema const MessageSchema: TypedSchema&lt;Message&gt; Defined in: src/pluto/models/Message.ts:27","keywords":"","version":"Next"},{"title":"SDJWTVerifiableCredentialRecoveryId","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/SDJWTVerifiableCredentialRecoveryId","content":"SDJWTVerifiableCredentialRecoveryId @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / overview / SDJWTVerifiableCredentialRecoveryId Variable: SDJWTVerifiableCredentialRecoveryId const SDJWTVerifiableCredentialRecoveryId: &quot;sd+jwt+credential&quot; = &quot;sd+jwt+credential&quot; Defined in: src/pollux/models/SDJWTVerifiableCredential.ts:17","keywords":"","version":"Next"},{"title":"Tasks","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/Tasks","content":"","keywords":"","version":"Next"},{"title":"Type Declaration‚Äã","type":1,"pageTitle":"Tasks","url":"/docs/sdk-ts/sdk/overview/variables/Tasks#type-declaration","content":" Name\tType\tDescription\tDefined in CreateOOBOffer\ttypeof CreateOOBOffer\t-\tsrc/exports.ts:318 CreateOOBPresentationRequest\ttypeof CreateOOBPresentationRequest\t-\tsrc/exports.ts:319 CreatePresentation\ttypeof CreatePresentation\tDeprecated Use CreatePresentation instead from @hyperledger/identus-sdk/plugins/oea\tsrc/exports.ts:323 CreatePresentationRequest\ttypeof CreatePresentationRequest\tDeprecated Use CreatePresentationRequest instead from @hyperledger/identus-sdk/plugins/oea\tsrc/exports.ts:327 CreatePrismDID\ttypeof CreatePrismDID\t-\tsrc/exports.ts:316 PKInstance\ttypeof PKInstance\t-\tsrc/exports.ts:317 RunProtocol\ttypeof RunProtocol\t-\tsrc/exports.ts:315  ","version":"Next","tagName":"h2"},{"title":"Deprecated‚Äã","type":1,"pageTitle":"Tasks","url":"/docs/sdk-ts/sdk/overview/variables/Tasks#deprecated","content":" Instead, import the specific task directly ","version":"Next","tagName":"h2"},{"title":"ProtocolType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/overview/variables/ProtocolType","content":"","keywords":"","version":"Next"},{"title":"Type Declaration‚Äã","type":1,"pageTitle":"ProtocolType","url":"/docs/sdk-ts/sdk/overview/variables/ProtocolType#type-declaration","content":" Name\tType\tDefault value\tDefined in DidcommBasicMessage\t&quot;https://didcomm.org/basicmessage/2.0/message&quot;\tProtocolIds.BasicMessage\tsrc/edge-agent/types/index.ts:20 DidcommConnectionRequest\t&quot;https://atalaprism.io/mercury/connections/1.0/request&quot;\tOEA.ProtocolIds.ConnectionRequest\tsrc/edge-agent/types/index.ts:39 DidcommConnectionResponse\t&quot;https://atalaprism.io/mercury/connections/1.0/response&quot;\tOEA.ProtocolIds.ConnectionResponse\tsrc/edge-agent/types/index.ts:40 DidcommCredentialPreview\t&quot;https://didcomm.org/issue-credential/3.0/credential-preview&quot;\tProtocolIds.CredentialPreview\tsrc/edge-agent/types/index.ts:32 Didcomminvitation\t&quot;https://didcomm.org/out-of-band/2.0/invitation&quot;\tProtocolIds.OOBInvitation\tsrc/edge-agent/types/index.ts:22 DidcommIssueCredential\t&quot;https://didcomm.org/issue-credential/3.0/issue-credential&quot;\tProtocolIds.IssueCredential\tsrc/edge-agent/types/index.ts:33 DidcommMediationDeny\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-deny&quot;\tProtocolIds.MediationDeny\tsrc/edge-agent/types/index.ts:25 DidcommMediationGrant\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-grant&quot;\tProtocolIds.MediationGrant\tsrc/edge-agent/types/index.ts:24 DidcommMediationKeysUpdate\t&quot;https://didcomm.org/coordinate-mediation/2.0/keylist-update&quot;\tProtocolIds.MediationKeysUpdate\tsrc/edge-agent/types/index.ts:26 DidcommMediationRequest\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-request&quot;\tProtocolIds.MediationRequest\tsrc/edge-agent/types/index.ts:23 DidcommOfferCredential\t&quot;https://didcomm.org/issue-credential/3.0/offer-credential&quot;\tProtocolIds.OfferCredential\tsrc/edge-agent/types/index.ts:34 DidcommPresentation\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/presentation&quot;\tOEA.ProtocolIds.Presentation\tsrc/edge-agent/types/index.ts:43 DidcommProposeCredential\t&quot;https://didcomm.org/issue-credential/3.0/propose-credential&quot;\tProtocolIds.ProposeCredential\tsrc/edge-agent/types/index.ts:35 DidcommProposePresentation\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/propose-presentation&quot;\tOEA.ProtocolIds.ProposePresentation\tsrc/edge-agent/types/index.ts:41 DidcommRequestCredential\t&quot;https://didcomm.org/issue-credential/3.0/request-credential&quot;\tProtocolIds.RequestCredential\tsrc/edge-agent/types/index.ts:36 DidcommRequestPresentation\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/request-presentation&quot;\tOEA.ProtocolIds.RequestPresentation\tsrc/edge-agent/types/index.ts:42 LiveDeliveryChange\t&quot;https://didcomm.org/messagepickup/3.0/live-delivery-change&quot;\tProtocolIds.LiveDeliveryChange\tsrc/edge-agent/types/index.ts:31 PickupDelivery\t&quot;https://didcomm.org/messagepickup/3.0/delivery&quot;\tProtocolIds.PickupDelivery\tsrc/edge-agent/types/index.ts:28 PickupReceived\t&quot;https://didcomm.org/messagepickup/3.0/messages-received&quot;\tProtocolIds.PickupReceived\tsrc/edge-agent/types/index.ts:30 PickupRequest\t&quot;https://didcomm.org/messagepickup/3.0/delivery-request&quot;\tProtocolIds.PickupRequest\tsrc/edge-agent/types/index.ts:27 PickupStatus\t&quot;https://didcomm.org/messagepickup/3.0/status&quot;\tProtocolIds.PickupStatus\tsrc/edge-agent/types/index.ts:29 PrismOnboarding\t&quot;https://atalaprism.io/did-request&quot;\tOEA.ProtocolIds.PrismOnboarding\tsrc/edge-agent/types/index.ts:37 PrismRevocation\t&quot;https://atalaprism.io/revocation_notification/1.0/revoke&quot;\tOEA.ProtocolIds.PrismRevocation\tsrc/edge-agent/types/index.ts:38 ProblemReporting\t&quot;https://didcomm.org/report-problem/2.0/problem-report&quot;\tProtocolIds.ProblemReporting\tsrc/edge-agent/types/index.ts:21 ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/","content":"","keywords":"","version":"Next"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/#classes","content":" Class\tDescriptionAnoncredsLoader\tAnoncredsLoader handle loading and access of anoncreds library Singleton to prevent recompilation of wasm FetchCredentialDefinition\tA Task encapsulates a unit of work fetchSchema\tA Task encapsulates a unit of work  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/#interfaces","content":" Interface\tDescriptionAnoncredsInputFieldFilter\t- Claims\t- FetchCredentialDefinitionArgs\t- FetchSchemaArgs\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/#type-aliases","content":" Type Alias\tDescriptionContext\t- CredentialDefinition\t- CredentialMetadata\t- CredentialOffer\t- CredentialRequest\t- Modules\t- PredicateType\t- Presentation\t- PresentationRequest\t- RequestedPredicates\t- Schema\t-  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/#variables","content":" Variable\tDescriptionCREDENTIAL_ISSUE\t- CREDENTIAL_OFFER\t- CREDENTIAL_REQUEST\t- plugin\t- PRESENTATION\t- PRESENTATION_REQUEST\t- ","version":"Next","tagName":"h2"},{"title":"FetchCredentialDefinition","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/FetchCredentialDefinition","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"FetchCredentialDefinition","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/FetchCredentialDefinition#extends","content":" Task&lt;CredentialDefinition, FetchCredentialDefinitionArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"FetchCredentialDefinition","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/FetchCredentialDefinition#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"FetchCredentialDefinition","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/FetchCredentialDefinition#constructor","content":" new FetchCredentialDefinition(...args: [FetchCredentialDefinitionArgs]): FetchCredentialDefinition  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[FetchCredentialDefinitionArgs]\t  Returns‚Äã  FetchCredentialDefinition  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"FetchCredentialDefinition","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/FetchCredentialDefinition#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"FetchCredentialDefinition","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/FetchCredentialDefinition#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"FetchCredentialDefinition","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/FetchCredentialDefinition#run","content":" run(ctx: Context): Promise&lt;CredentialDefinitionType&gt;  Defined in: src/plugins/internal/anoncreds/FetchCredentialDefinition.ts:10  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;CredentialDefinitionType&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"AnoncredsLoader","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#constructor","content":" new AnoncredsLoader(): AnoncredsLoader  Returns‚Äã  AnoncredsLoader  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#methods","content":" ","version":"Next","tagName":"h2"},{"title":"createCredentialRequest()‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#createcredentialrequest","content":" createCredentialRequest(credentialOffer: CredentialOfferType, credentialDefinition: CredentialDefinitionType, linkSecret: string, linkSecretId: string): Promise&lt;[CredentialRequestType, CredentialRequestMetadataType]&gt;  Defined in: src/plugins/internal/anoncreds/module/AnoncredsLoader.ts:49  Parameters‚Äã  Parameter\tTypecredentialOffer\tCredentialOfferType credentialDefinition\tCredentialDefinitionType linkSecret\tstring linkSecretId\tstring  Returns‚Äã  Promise&lt;[CredentialRequestType, CredentialRequestMetadataType]&gt;    ","version":"Next","tagName":"h3"},{"title":"createLinksecret()‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#createlinksecret","content":" createLinksecret(): Promise&lt;string&gt;  Defined in: src/plugins/internal/anoncreds/module/AnoncredsLoader.ts:44  Returns‚Äã  Promise&lt;string&gt;    ","version":"Next","tagName":"h3"},{"title":"createNonce()‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#createnonce","content":" createNonce(): Promise&lt;string&gt;  Defined in: src/plugins/internal/anoncreds/module/AnoncredsLoader.ts:208  Returns‚Äã  Promise&lt;string&gt;    ","version":"Next","tagName":"h3"},{"title":"createPresentation()‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#createpresentation","content":" createPresentation(presentationRequest: PresentationRequestType, schemas: Record&lt;string, Anoncreds.CredentialSchemaType&gt;, credentialDefinitions: Record&lt;string, Anoncreds.CredentialDefinitionType&gt;, credential: CredentialType, linkSecret: string): Promise&lt;PresentationType&gt;  Defined in: src/plugins/internal/anoncreds/module/AnoncredsLoader.ts:106  Parameters‚Äã  Parameter\tTypepresentationRequest\tPresentationRequestType schemas\tRecord&lt;string, Anoncreds.CredentialSchemaType&gt; credentialDefinitions\tRecord&lt;string, Anoncreds.CredentialDefinitionType&gt; credential\tCredentialType linkSecret\tstring  Returns‚Äã  Promise&lt;PresentationType&gt;    ","version":"Next","tagName":"h3"},{"title":"createPresentationDefinition()‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#createpresentationdefinition","content":" createPresentationDefinition(claims: Claims): Promise&lt;PresentationRequestType&gt;  Defined in: src/plugins/internal/anoncreds/module/AnoncredsLoader.ts:164  wrapper to transmute claims into anoncreds  Parameters‚Äã  Parameter\tType\tDescriptionclaims\tClaims\t  Returns‚Äã  Promise&lt;PresentationRequestType&gt;    ","version":"Next","tagName":"h3"},{"title":"createPresentationRequest()‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#createpresentationrequest","content":" createPresentationRequest(name: string, version: string, requested_attributes: Anoncreds.RequestedPredicates, requested_predicates: Anoncreds.RequestedAttributes): Promise&lt;PresentationRequest&gt;  Defined in: src/plugins/internal/anoncreds/module/AnoncredsLoader.ts:144  Parameters‚Äã  Parameter\tTypename\tstring version\tstring requested_attributes\tAnoncreds.RequestedPredicates requested_predicates\tAnoncreds.RequestedAttributes  Returns‚Äã  Promise&lt;PresentationRequest&gt;    ","version":"Next","tagName":"h3"},{"title":"isValidPresentation()‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#isvalidpresentation","content":" isValidPresentation(presentation: PresentationType): Promise&lt;boolean&gt;  Defined in: src/plugins/internal/anoncreds/module/AnoncredsLoader.ts:213  Parameters‚Äã  Parameter\tTypepresentation\tPresentationType  Returns‚Äã  Promise&lt;boolean&gt;    ","version":"Next","tagName":"h3"},{"title":"processCredential()‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#processcredential","content":" processCredential(credentialDefinition: CredentialDefinitionType, credential: CredentialType, credentialRequestMeta: CredentialRequestMetadataType, linkSecret: string): Promise&lt;CredentialType&gt;  Defined in: src/plugins/internal/anoncreds/module/AnoncredsLoader.ts:65  Parameters‚Äã  Parameter\tTypecredentialDefinition\tCredentialDefinitionType credential\tCredentialType credentialRequestMeta\tCredentialRequestMetadataType linkSecret\tstring  Returns‚Äã  Promise&lt;CredentialType&gt;    ","version":"Next","tagName":"h3"},{"title":"verifyPresentation()‚Äã","type":1,"pageTitle":"AnoncredsLoader","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/AnoncredsLoader#verifypresentation","content":" verifyPresentation(presentation: PresentationType, presentationRequest: PresentationRequestType, schemas: Record&lt;string, Anoncreds.CredentialSchemaType&gt;, credentialDefinitions: Record&lt;string, Anoncreds.CredentialDefinitionType&gt;): Promise&lt;boolean&gt;  Defined in: src/plugins/internal/anoncreds/module/AnoncredsLoader.ts:126  Parameters‚Äã  Parameter\tTypepresentation\tPresentationType presentationRequest\tPresentationRequestType schemas\tRecord&lt;string, Anoncreds.CredentialSchemaType&gt; credentialDefinitions\tRecord&lt;string, Anoncreds.CredentialDefinitionType&gt;  Returns‚Äã  Promise&lt;boolean&gt; ","version":"Next","tagName":"h3"},{"title":"fetchSchema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/fetchSchema","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"fetchSchema","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/fetchSchema#extends","content":" Task&lt;Schema, FetchSchemaArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"fetchSchema","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/fetchSchema#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"fetchSchema","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/fetchSchema#constructor","content":" new fetchSchema(...args: [FetchSchemaArgs]): fetchSchema  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[FetchSchemaArgs]\t  Returns‚Äã  fetchSchema  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"fetchSchema","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/fetchSchema#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"fetchSchema","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/fetchSchema#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"fetchSchema","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/classes/fetchSchema#run","content":" run(ctx: Context): Promise&lt;CredentialSchemaType&gt;  Defined in: src/plugins/internal/anoncreds/FetchSchema.ts:10  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;CredentialSchemaType&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"Claims","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/interfaces/Claims","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Claims","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/interfaces/Claims#properties","content":" Property\tType\tDefined in attributes?\tRequestedAttributes\tsrc/plugins/internal/anoncreds/types.ts:19 predicates?\tRecord&lt;string, AnoncredsInputFieldFilter&gt;\tsrc/plugins/internal/anoncreds/types.ts:20 ","version":"Next","tagName":"h2"},{"title":"AnoncredsInputFieldFilter","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/interfaces/AnoncredsInputFieldFilter","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"AnoncredsInputFieldFilter","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/interfaces/AnoncredsInputFieldFilter#properties","content":" Property\tType\tDefined in $gt?\tPredicateType\tsrc/plugins/internal/anoncreds/types.ts:25 $gte?\tPredicateType\tsrc/plugins/internal/anoncreds/types.ts:26 $lt?\tPredicateType\tsrc/plugins/internal/anoncreds/types.ts:27 $lte?\tPredicateType\tsrc/plugins/internal/anoncreds/types.ts:28 name\tstring\tsrc/plugins/internal/anoncreds/types.ts:24 type\tstring\tsrc/plugins/internal/anoncreds/types.ts:23 ","version":"Next","tagName":"h2"},{"title":"Context","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/Context","content":"Context @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / Context Type Alias: Context Context = Context&lt;Modules&gt; Defined in: src/plugins/internal/anoncreds/plugin.ts:10","keywords":"","version":"Next"},{"title":"FetchSchemaArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/interfaces/FetchSchemaArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"FetchSchemaArgs","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/interfaces/FetchSchemaArgs#properties","content":" Property\tType\tDefined in uri\tstring\tsrc/plugins/internal/anoncreds/FetchSchema.ts:6 ","version":"Next","tagName":"h2"},{"title":"CredentialDefinition","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/CredentialDefinition","content":"CredentialDefinition @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / CredentialDefinition Type Alias: CredentialDefinition CredentialDefinition = Anoncreds.CredentialDefinitionType Defined in: src/plugins/internal/anoncreds/types.ts:5","keywords":"","version":"Next"},{"title":"FetchCredentialDefinitionArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/interfaces/FetchCredentialDefinitionArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"FetchCredentialDefinitionArgs","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/interfaces/FetchCredentialDefinitionArgs#properties","content":" Property\tType\tDefined in uri\tstring\tsrc/plugins/internal/anoncreds/FetchCredentialDefinition.ts:6 ","version":"Next","tagName":"h2"},{"title":"CredentialMetadata","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/CredentialMetadata","content":"CredentialMetadata @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / CredentialMetadata Type Alias: CredentialMetadata CredentialMetadata = Anoncreds.CredentialRequestMetadataType Defined in: src/plugins/internal/anoncreds/types.ts:9","keywords":"","version":"Next"},{"title":"CredentialOffer","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/CredentialOffer","content":"CredentialOffer @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / CredentialOffer Type Alias: CredentialOffer CredentialOffer = Anoncreds.CredentialOfferType Defined in: src/plugins/internal/anoncreds/types.ts:7","keywords":"","version":"Next"},{"title":"CredentialRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/CredentialRequest","content":"CredentialRequest @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / CredentialRequest Type Alias: CredentialRequest CredentialRequest = Anoncreds.CredentialRequestType Defined in: src/plugins/internal/anoncreds/types.ts:8","keywords":"","version":"Next"},{"title":"Modules","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/Modules","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Modules","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/Modules#properties","content":" Property\tType\tDefined in Anoncreds\tAnoncredsLoader\tsrc/plugins/internal/anoncreds/plugin.ts:9 ","version":"Next","tagName":"h2"},{"title":"PredicateType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/PredicateType","content":"PredicateType @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / PredicateType Type Alias: PredicateType PredicateType = string | number Defined in: src/plugins/internal/anoncreds/types.ts:30","keywords":"","version":"Next"},{"title":"Presentation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/Presentation","content":"Presentation @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / Presentation Type Alias: Presentation Presentation = Anoncreds.PresentationType Defined in: src/plugins/internal/anoncreds/types.ts:12","keywords":"","version":"Next"},{"title":"PresentationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/PresentationRequest","content":"PresentationRequest @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / PresentationRequest Type Alias: PresentationRequest PresentationRequest = Anoncreds.PresentationRequestType Defined in: src/plugins/internal/anoncreds/types.ts:11","keywords":"","version":"Next"},{"title":"RequestedPredicates","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/RequestedPredicates","content":"RequestedPredicates @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / RequestedPredicates Type Alias: RequestedPredicates RequestedPredicates = Anoncreds.RequestedPredicates Defined in: src/plugins/internal/anoncreds/types.ts:15","keywords":"","version":"Next"},{"title":"Schema","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/type-aliases/Schema","content":"Schema @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / Schema Type Alias: Schema Schema = Anoncreds.CredentialSchemaType Defined in: src/plugins/internal/anoncreds/types.ts:4","keywords":"","version":"Next"},{"title":"CREDENTIAL_ISSUE","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/variables/CREDENTIAL_ISSUE","content":"CREDENTIAL_ISSUE @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / CREDENTIAL_ISSUE Variable: CREDENTIAL_ISSUE const CREDENTIAL_ISSUE: &quot;anoncreds/credential@v1.0&quot; = &quot;anoncreds/credential@v1.0&quot; Defined in: src/plugins/internal/anoncreds/types.ts:34","keywords":"","version":"Next"},{"title":"CREDENTIAL_OFFER","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/variables/CREDENTIAL_OFFER","content":"CREDENTIAL_OFFER @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / CREDENTIAL_OFFER Variable: CREDENTIAL_OFFER const CREDENTIAL_OFFER: &quot;anoncreds/credential-offer@v1.0&quot; = &quot;anoncreds/credential-offer@v1.0&quot; Defined in: src/plugins/internal/anoncreds/types.ts:32","keywords":"","version":"Next"},{"title":"plugin","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/variables/plugin","content":"plugin @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / plugin Variable: plugin const plugin: Plugin Defined in: src/plugins/internal/anoncreds/plugin.ts:12","keywords":"","version":"Next"},{"title":"CREDENTIAL_REQUEST","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/variables/CREDENTIAL_REQUEST","content":"CREDENTIAL_REQUEST @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / CREDENTIAL_REQUEST Variable: CREDENTIAL_REQUEST const CREDENTIAL_REQUEST: &quot;anoncreds/credential-request@v1.0&quot; = &quot;anoncreds/credential-request@v1.0&quot; Defined in: src/plugins/internal/anoncreds/types.ts:33","keywords":"","version":"Next"},{"title":"PRESENTATION","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/variables/PRESENTATION","content":"PRESENTATION @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / PRESENTATION Variable: PRESENTATION const PRESENTATION: &quot;anoncreds/proof@v1.0&quot; = &quot;anoncreds/proof@v1.0&quot; Defined in: src/plugins/internal/anoncreds/types.ts:36","keywords":"","version":"Next"},{"title":"PRESENTATION_REQUEST","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/anoncreds/variables/PRESENTATION_REQUEST","content":"PRESENTATION_REQUEST @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/anoncreds / PRESENTATION_REQUEST Variable: PRESENTATION_REQUEST const PRESENTATION_REQUEST: &quot;anoncreds/proof-request@v1.0&quot; = &quot;anoncreds/proof-request@v1.0&quot; Defined in: src/plugins/internal/anoncreds/types.ts:35","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/","content":"","keywords":"","version":"Next"},{"title":"Enumerations‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/#enumerations","content":" Enumeration\tDescriptionInvitationTypes\t-  ","version":"Next","tagName":"h2"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/#classes","content":" Class\tDescriptionBasicMessage\t- DIDCommConnection\tDefine the structure of a Connection IssueCredential\t- MediationKeysUpdateList\t- MediationRequest\t- MediatorConnection\tDefine the structure of a Connection OfferCredential\t- OutOfBandInvitation\t- PickupReceived\t- PickupRequest\t- PrismOnboardingInvitation\t- ProblemReport\t- ProposeCredential\t- RequestCredential\t-  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/#interfaces","content":" Interface\tDescriptionAttribute\t- BasicMessageBody\tSpecification: https://didcomm.org/basicmessage/2.0/ CredentialFormat\tSpecification: https://github.com/decentralized-identity/waci-didcomm/tree/main/issue_credential#request-credential CredentialPreview\tSpecification: https://github.com/decentralized-identity/waci-didcomm/tree/main/issue_credential#preview-credential IssueCredentialBody\tSpecification: https://github.com/decentralized-identity/waci-didcomm/tree/main/issue_credential#issue-credential MediationKeysUpdateListBody\tSpecification: https://didcomm.org/coordinate-mediation/2.0/ OfferCredentialBody\tSpecification: https://github.com/decentralized-identity/waci-didcomm/tree/main/issue_credential#offer-credential OutOfBandInvitationBody\t- PickupReceivedBody\tSpecification: https://didcomm.org/messagepickup/3.0/ PickupRequestBody\tSpecification: https://didcomm.org/messagepickup/3.0/ PrismOnboardingInvitationBody\t- ProblemReportBody\tSpecification: https://identity.foundation/didcomm-messaging/spec/#problem-reports ProposeCredentialBody\tSpecification: https://github.com/decentralized-identity/waci-didcomm/tree/main/issue_credential#propose-credential RequestCredentialBody\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/#type-aliases","content":" Type Alias\tDescriptionContext\t-  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/#variables","content":" Variable\tDescriptionplugin\t- ProtocolIds\t-  ","version":"Next","tagName":"h2"},{"title":"Functions‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/#functions","content":" Function\tDescriptionvalidateCredentialPreview\t- ","version":"Next","tagName":"h2"},{"title":"BasicMessage","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/BasicMessage","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"BasicMessage","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/BasicMessage#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"BasicMessage","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/BasicMessage#constructor","content":" new BasicMessage(body: BasicMessageBody, from: DID, to: DID, thid?: string): BasicMessage  Defined in: src/plugins/internal/didcomm/protocols/other/BasicMessage.ts:17  Parameters‚Äã  Parameter\tTypebody\tBasicMessageBody from\tDID to\tDID thid?\tstring  Returns‚Äã  BasicMessage  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"BasicMessage","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/BasicMessage#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body\tpublic\tBasicMessageBody\tundefined\tsrc/plugins/internal/didcomm/protocols/other/BasicMessage.ts:18 from\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/other/BasicMessage.ts:19 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/other/BasicMessage.ts:21 to\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/other/BasicMessage.ts:20 type\tstatic\t&quot;https://didcomm.org/basicmessage/2.0/message&quot;\tProtocolIds.BasicMessage\tsrc/plugins/internal/didcomm/protocols/other/BasicMessage.ts:15  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"BasicMessage","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/BasicMessage#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"BasicMessage","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/BasicMessage#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/other/BasicMessage.ts:24  Returns‚Äã  Message ","version":"Next","tagName":"h3"},{"title":"DIDCommConnection","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/DIDCommConnection","content":"","keywords":"","version":"Next"},{"title":"Extended by‚Äã","type":1,"pageTitle":"DIDCommConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/DIDCommConnection#extended-by","content":" MediatorConnection  ","version":"Next","tagName":"h2"},{"title":"Implements‚Äã","type":1,"pageTitle":"DIDCommConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/DIDCommConnection#implements","content":" Connection  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIDCommConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/DIDCommConnection#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIDCommConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/DIDCommConnection#constructor","content":" new DIDCommConnection(uri: string, host: string, alias?: string): DIDCommConnection  Defined in: src/plugins/internal/didcomm/connection/DIDCommConnection.ts:12  Parameters‚Äã  Parameter\tTypeuri\tstring host\tstring alias?\tstring  Returns‚Äã  DIDCommConnection  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"DIDCommConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/DIDCommConnection#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tDefined in alias?\treadonly\tstring\tundefined\t-\tsrc/plugins/internal/didcomm/connection/DIDCommConnection.ts:15 host\treadonly\tstring\tundefined\t-\tsrc/plugins/internal/didcomm/connection/DIDCommConnection.ts:14 state\tpublic\tState\tConnection.State.NEW\tcurrent condition of the connection\tsrc/plugins/internal/didcomm/connection/DIDCommConnection.ts:10 type\treadonly\t&quot;DIDComm&quot;\t&quot;DIDComm&quot;\t-\tsrc/plugins/internal/didcomm/connection/DIDCommConnection.ts:9 uri\treadonly\tstring\tundefined\tunique identifer for the connection\tsrc/plugins/internal/didcomm/connection/DIDCommConnection.ts:13  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIDCommConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/DIDCommConnection#methods","content":" ","version":"Next","tagName":"h2"},{"title":"receive()‚Äã","type":1,"pageTitle":"DIDCommConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/DIDCommConnection#receive","content":" receive(message: Message | undefined, ctx: AgentContext): Promise&lt;any&gt;  Defined in: src/plugins/internal/didcomm/connection/DIDCommConnection.ts:34  called when a Message is received from this connection  Parameters‚Äã  Parameter\tTypemessage\tMessage | undefined ctx\tAgentContext  Returns‚Äã  Promise&lt;any&gt;  Implementation of‚Äã  Connection.receive    ","version":"Next","tagName":"h3"},{"title":"send()‚Äã","type":1,"pageTitle":"DIDCommConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/DIDCommConnection#send","content":" send(msg: Message, ctx: AgentContext): Promise&lt;any&gt;  Defined in: src/plugins/internal/didcomm/connection/DIDCommConnection.ts:18  handle delivering a Message to the connected entity  Parameters‚Äã  Parameter\tTypemsg\tMessage ctx\tAgentContext  Returns‚Äã  Promise&lt;any&gt;  Implementation of‚Äã  Connection.send ","version":"Next","tagName":"h3"},{"title":"IssueCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/IssueCredential","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"IssueCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/IssueCredential#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"IssueCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/IssueCredential#constructor","content":" new IssueCredential(body: IssueCredentialBody, attachments: AttachmentDescriptor[], from: DID, to: DID, thid?: string, id?: string): IssueCredential  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:22  Parameters‚Äã  Parameter\tTypebody\tIssueCredentialBody attachments\tAttachmentDescriptor[] from\tDID to\tDID thid?\tstring id?\tstring  Returns‚Äã  IssueCredential  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"IssueCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/IssueCredential#properties","content":" Property\tModifier\tType\tDefault value\tDefined in attachments\tpublic\tAttachmentDescriptor[]\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:24 body\tpublic\tIssueCredentialBody\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:23 from\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:25 id\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:28 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:27 to\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:26 type\tstatic\t&quot;https://didcomm.org/issue-credential/3.0/issue-credential&quot;\tProtocolIds.IssueCredential\tsrc/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:20  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"IssueCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/IssueCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"getCredentialStrings()‚Äã","type":1,"pageTitle":"IssueCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/IssueCredential#getcredentialstrings","content":" getCredentialStrings(): string[]  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:44  Returns‚Äã  string[]    ","version":"Next","tagName":"h3"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"IssueCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/IssueCredential#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:31  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"fromMessage()‚Äã","type":1,"pageTitle":"IssueCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/IssueCredential#frommessage","content":" static fromMessage(msg: Message): IssueCredential  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:57  Parameters‚Äã  Parameter\tTypemsg\tMessage  Returns‚Äã  IssueCredential ","version":"Next","tagName":"h3"},{"title":"MediationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationRequest","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MediationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MediationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationRequest#constructor","content":" new MediationRequest(from: DID, to: DID, id: string): MediationRequest  Defined in: src/plugins/internal/didcomm/protocols/mediation/MediationRequest.ts:12  Parameters‚Äã  Parameter\tTypefrom\tDID to\tDID id\tstring  Returns‚Äã  MediationRequest  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MediationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationRequest#properties","content":" Property\tModifier\tType\tDefault value\tDefined in from\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/mediation/MediationRequest.ts:8 id\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/mediation/MediationRequest.ts:10 to\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/mediation/MediationRequest.ts:9 type\tstatic\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-request&quot;\tProtocolIds.MediationRequest\tsrc/plugins/internal/didcomm/protocols/mediation/MediationRequest.ts:6  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"MediationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"MediationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationRequest#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/mediation/MediationRequest.ts:18  Returns‚Äã  Message ","version":"Next","tagName":"h3"},{"title":"MediationKeysUpdateList","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationKeysUpdateList","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MediationKeysUpdateList","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationKeysUpdateList#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MediationKeysUpdateList","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationKeysUpdateList#constructor","content":" new MediationKeysUpdateList(from: DID, to: DID, recipientDids: DID[], id: string): MediationKeysUpdateList  Defined in: src/plugins/internal/didcomm/protocols/mediation/MediationKeysUpdateList.ts:27  Parameters‚Äã  Parameter\tTypefrom\tDID to\tDID recipientDids\tDID[] id\tstring  Returns‚Äã  MediationKeysUpdateList  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MediationKeysUpdateList","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationKeysUpdateList#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body\tpublic\tMediationKeysUpdateListBody\tundefined\tsrc/plugins/internal/didcomm/protocols/mediation/MediationKeysUpdateList.ts:22 from\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/mediation/MediationKeysUpdateList.ts:23 id\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/mediation/MediationKeysUpdateList.ts:25 to\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/mediation/MediationKeysUpdateList.ts:24 type\tstatic\t&quot;https://didcomm.org/coordinate-mediation/2.0/keylist-update&quot;\tProtocolIds.MediationKeysUpdate\tsrc/plugins/internal/didcomm/protocols/mediation/MediationKeysUpdateList.ts:20  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"MediationKeysUpdateList","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationKeysUpdateList#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"MediationKeysUpdateList","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediationKeysUpdateList#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/mediation/MediationKeysUpdateList.ts:39  Returns‚Äã  Message ","version":"Next","tagName":"h3"},{"title":"OfferCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OfferCredential","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"OfferCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OfferCredential#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"OfferCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OfferCredential#constructor","content":" new OfferCredential(body: OfferCredentialBody, attachments: AttachmentDescriptor[], from?: DID, to?: DID, thid?: string, id?: string): OfferCredential  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:26  Parameters‚Äã  Parameter\tTypebody\tOfferCredentialBody attachments\tAttachmentDescriptor[] from?\tDID to?\tDID thid?\tstring id?\tstring  Returns‚Äã  OfferCredential  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"OfferCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OfferCredential#properties","content":" Property\tModifier\tType\tDefault value\tDefined in attachments\tpublic\tAttachmentDescriptor[]\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:28 body\tpublic\tOfferCredentialBody\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:27 from?\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:29 id\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:32 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:31 to?\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:30 type\tstatic\t&quot;https://didcomm.org/issue-credential/3.0/offer-credential&quot;\tProtocolIds.OfferCredential\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:24  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"OfferCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OfferCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"OfferCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OfferCredential#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:47  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"fromMessage()‚Äã","type":1,"pageTitle":"OfferCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OfferCredential#frommessage","content":" static fromMessage(msg: Message): OfferCredential  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:60  Parameters‚Äã  Parameter\tTypemsg\tMessage  Returns‚Äã  OfferCredential ","version":"Next","tagName":"h3"},{"title":"PickupReceived","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupReceived","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PickupReceived","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupReceived#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PickupReceived","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupReceived#constructor","content":" new PickupReceived(body: PickupReceivedBody, from: DID, to: DID): PickupReceived  Defined in: src/plugins/internal/didcomm/protocols/pickup/PickupReceived.ts:17  Parameters‚Äã  Parameter\tTypebody\tPickupReceivedBody from\tDID to\tDID  Returns‚Äã  PickupReceived  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"PickupReceived","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupReceived#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body\tpublic\tPickupReceivedBody\tundefined\tsrc/plugins/internal/didcomm/protocols/pickup/PickupReceived.ts:18 from\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/pickup/PickupReceived.ts:19 to\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/pickup/PickupReceived.ts:20 type\tstatic\t&quot;https://didcomm.org/messagepickup/3.0/messages-received&quot;\tProtocolIds.PickupReceived\tsrc/plugins/internal/didcomm/protocols/pickup/PickupReceived.ts:15  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"PickupReceived","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupReceived#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"PickupReceived","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupReceived#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/pickup/PickupReceived.ts:23  Returns‚Äã  Message ","version":"Next","tagName":"h3"},{"title":"OutOfBandInvitation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OutOfBandInvitation","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"OutOfBandInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OutOfBandInvitation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"OutOfBandInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OutOfBandInvitation#constructor","content":" new OutOfBandInvitation(body: OutOfBandInvitationBody, from: string, id: string, attachments: AttachmentDescriptor[], expiration: number | null): OutOfBandInvitation  Defined in: src/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:17  Parameters‚Äã  Parameter\tType\tDefault valuebody\tOutOfBandInvitationBody\tundefined from\tstring\tundefined id\tstring\t... attachments\tAttachmentDescriptor[]\t[] expiration\tnumber | null\tnull  Returns‚Äã  OutOfBandInvitation  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"OutOfBandInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OutOfBandInvitation#properties","content":" Property\tModifier\tType\tDefault value\tDefined in attachments\tpublic\tAttachmentDescriptor[]\t[]\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:21 body\tpublic\tOutOfBandInvitationBody\tundefined\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:18 expiration\tpublic\tnumber | null\tnull\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:22 from\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:19 id\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:20 piuri\tpublic\t&quot;https://didcomm.org/out-of-band/2.0/invitation&quot;\tProtocolIds.OOBInvitation\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:15 type\tpublic\t&quot;https://didcomm.org/out-of-band/2.0/invitation&quot;\tProtocolIds.OOBInvitation\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:13  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"OutOfBandInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OutOfBandInvitation#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"isExpired‚Äã","type":1,"pageTitle":"OutOfBandInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OutOfBandInvitation#isexpired","content":" Get Signature‚Äã  get isExpired(): boolean  Defined in: src/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:25  Returns‚Äã  boolean  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"OutOfBandInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OutOfBandInvitation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"parsePrismOnboardingInvitationFromJson()‚Äã","type":1,"pageTitle":"OutOfBandInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/OutOfBandInvitation#parseprismonboardinginvitationfromjson","content":" static parsePrismOnboardingInvitationFromJson(json: string): PrismOnboardingInvitation  Defined in: src/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:39  Parameters‚Äã  Parameter\tType\tDescriptionjson\tstring\t  Returns‚Äã  PrismOnboardingInvitation  Deprecated‚Äã ","version":"Next","tagName":"h3"},{"title":"PickupRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupRequest","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PickupRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PickupRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupRequest#constructor","content":" new PickupRequest(body: PickupRequestBody, from: DID, to: DID): PickupRequest  Defined in: src/plugins/internal/didcomm/protocols/pickup/PickupRequest.ts:18  Parameters‚Äã  Parameter\tTypebody\tPickupRequestBody from\tDID to\tDID  Returns‚Äã  PickupRequest  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"PickupRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupRequest#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body\tpublic\tPickupRequestBody\tundefined\tsrc/plugins/internal/didcomm/protocols/pickup/PickupRequest.ts:19 from\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/pickup/PickupRequest.ts:20 to\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/pickup/PickupRequest.ts:21 type\tstatic\t&quot;https://didcomm.org/messagepickup/3.0/delivery-request&quot;\tProtocolIds.PickupRequest\tsrc/plugins/internal/didcomm/protocols/pickup/PickupRequest.ts:16  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"PickupRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"PickupRequest","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PickupRequest#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/pickup/PickupRequest.ts:24  Returns‚Äã  Message ","version":"Next","tagName":"h3"},{"title":"MediatorConnection","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#extends","content":" DIDCommConnection  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#constructor","content":" new MediatorConnection(uri: string, host: string, routingDID?: string): MediatorConnection  Defined in: src/plugins/internal/didcomm/connection/MediatorConnection.ts:9  Parameters‚Äã  Parameter\tTypeuri\tstring host\tstring routingDID?\tstring  Returns‚Äã  MediatorConnection  Overrides‚Äã  DIDCommConnection.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tInherited from\tDefined in alias?\treadonly\tstring\tundefined\t-\tDIDCommConnection.alias\tsrc/plugins/internal/didcomm/connection/DIDCommConnection.ts:15 host\treadonly\tstring\tundefined\t-\tDIDCommConnection.host\tsrc/plugins/internal/didcomm/connection/MediatorConnection.ts:11 routingDID?\tpublic\tstring\tundefined\t-\t-\tsrc/plugins/internal/didcomm/connection/MediatorConnection.ts:12 state\tpublic\tState\tConnection.State.NEW\tcurrent condition of the connection\tDIDCommConnection.state\tsrc/plugins/internal/didcomm/connection/DIDCommConnection.ts:10 type\treadonly\t&quot;DIDComm&quot;\t&quot;DIDComm&quot;\t-\tDIDCommConnection.type\tsrc/plugins/internal/didcomm/connection/DIDCommConnection.ts:9 uri\treadonly\tstring\tundefined\tunique identifer for the connection\tDIDCommConnection.uri\tsrc/plugins/internal/didcomm/connection/MediatorConnection.ts:10  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"liveMode‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#livemode","content":" Get Signature‚Äã  get liveMode(): boolean  Defined in: src/plugins/internal/didcomm/connection/MediatorConnection.ts:17  Returns‚Äã  boolean  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#methods","content":" ","version":"Next","tagName":"h2"},{"title":"asMediator()‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#asmediator","content":" asMediator(): Mediator  Defined in: src/plugins/internal/didcomm/connection/MediatorConnection.ts:21  Returns‚Äã  Mediator    ","version":"Next","tagName":"h3"},{"title":"close()‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#close","content":" close(): Promise&lt;void&gt;  Defined in: src/plugins/internal/didcomm/connection/MediatorConnection.ts:29  Returns‚Äã  Promise&lt;void&gt;    ","version":"Next","tagName":"h3"},{"title":"receive()‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#receive","content":" receive(message: Message | undefined, ctx: AgentContext): Promise&lt;any&gt;  Defined in: src/plugins/internal/didcomm/connection/DIDCommConnection.ts:34  called when a Message is received from this connection  Parameters‚Äã  Parameter\tTypemessage\tMessage | undefined ctx\tAgentContext  Returns‚Äã  Promise&lt;any&gt;  Inherited from‚Äã  DIDCommConnection.receive    ","version":"Next","tagName":"h3"},{"title":"send()‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#send","content":" send(msg: Message, ctx: AgentContext): Promise&lt;any&gt;  Defined in: src/plugins/internal/didcomm/connection/DIDCommConnection.ts:18  handle delivering a Message to the connected entity  Parameters‚Äã  Parameter\tTypemsg\tMessage ctx\tAgentContext  Returns‚Äã  Promise&lt;any&gt;  Inherited from‚Äã  DIDCommConnection.send    ","version":"Next","tagName":"h3"},{"title":"useLiveMode()‚Äã","type":1,"pageTitle":"MediatorConnection","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/MediatorConnection#uselivemode","content":" useLiveMode(socket: WebSocket): Promise&lt;void&gt;  Defined in: src/plugins/internal/didcomm/connection/MediatorConnection.ts:34  Parameters‚Äã  Parameter\tTypesocket\tWebSocket  Returns‚Äã  Promise&lt;void&gt; ","version":"Next","tagName":"h3"},{"title":"PrismOnboardingInvitation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PrismOnboardingInvitation","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"PrismOnboardingInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PrismOnboardingInvitation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"PrismOnboardingInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PrismOnboardingInvitation#constructor","content":" new PrismOnboardingInvitation(onboardEndpoint: string, from?: DID, type?: InvitationTypes): PrismOnboardingInvitation  Defined in: src/plugins/internal/didcomm/protocols/invitation/PrismOnboardingInvitation.ts:17  Parameters‚Äã  Parameter\tTypeonboardEndpoint\tstring from?\tDID type?\tInvitationTypes  Returns‚Äã  PrismOnboardingInvitation  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"PrismOnboardingInvitation","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/PrismOnboardingInvitation#properties","content":" Property\tModifier\tType\tDefault value\tDefined in from?\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/invitation/PrismOnboardingInvitation.ts:19 onboardEndpoint\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/invitation/PrismOnboardingInvitation.ts:18 type\tpublic\tInvitationTypes\tInvitationTypes.PRISM_ONBOARD\tsrc/plugins/internal/didcomm/protocols/invitation/PrismOnboardingInvitation.ts:15 ","version":"Next","tagName":"h2"},{"title":"ProblemReport","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProblemReport","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ProblemReport","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProblemReport#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ProblemReport","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProblemReport#constructor","content":" new ProblemReport(body: ProblemReportBody, from: DID, to: DID, thid?: string): ProblemReport  Defined in: src/plugins/internal/didcomm/protocols/other/ProblemReport.ts:23  Parameters‚Äã  Parameter\tTypebody\tProblemReportBody from\tDID to\tDID thid?\tstring  Returns‚Äã  ProblemReport  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ProblemReport","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProblemReport#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body\tpublic\tProblemReportBody\tundefined\tsrc/plugins/internal/didcomm/protocols/other/ProblemReport.ts:24 from\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/other/ProblemReport.ts:25 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/other/ProblemReport.ts:27 to\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/other/ProblemReport.ts:26 type\tstatic\t&quot;https://didcomm.org/report-problem/2.0/problem-report&quot;\tProtocolIds.ProblemReporting\tsrc/plugins/internal/didcomm/protocols/other/ProblemReport.ts:21  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ProblemReport","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProblemReport#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"ProblemReport","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProblemReport#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/other/ProblemReport.ts:30  Returns‚Äã  Message ","version":"Next","tagName":"h3"},{"title":"ProposeCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProposeCredential","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ProposeCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProposeCredential#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ProposeCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProposeCredential#constructor","content":" new ProposeCredential(body: ProposeCredentialBody, attachments: AttachmentDescriptor[], from?: DID, to?: DID, thid?: string, id?: string): ProposeCredential  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:24  Parameters‚Äã  Parameter\tTypebody\tProposeCredentialBody attachments\tAttachmentDescriptor[] from?\tDID to?\tDID thid?\tstring id?\tstring  Returns‚Äã  ProposeCredential  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ProposeCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProposeCredential#properties","content":" Property\tModifier\tType\tDefault value\tDefined in attachments\tpublic\tAttachmentDescriptor[]\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:26 body\tpublic\tProposeCredentialBody\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:25 from?\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:27 id\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:30 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:29 to?\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:28 type\tstatic\t&quot;https://didcomm.org/issue-credential/3.0/propose-credential&quot;\tProtocolIds.ProposeCredential\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:22  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ProposeCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProposeCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"ProposeCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProposeCredential#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:33  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"fromMessage()‚Äã","type":1,"pageTitle":"ProposeCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/ProposeCredential#frommessage","content":" static fromMessage(msg: Message): ProposeCredential  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:46  Parameters‚Äã  Parameter\tTypemsg\tMessage  Returns‚Äã  ProposeCredential ","version":"Next","tagName":"h3"},{"title":"InvitationTypes","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/enumerations/InvitationTypes","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"InvitationTypes","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/enumerations/InvitationTypes#enumeration-members","content":" Enumeration Member\tValue\tDefined in OUTOFBAND\t0\tsrc/plugins/internal/didcomm/protocols/invitation/PrismOnboardingInvitation.ts:4 PRISM_ONBOARD\t1\tsrc/plugins/internal/didcomm/protocols/invitation/PrismOnboardingInvitation.ts:5 ","version":"Next","tagName":"h2"},{"title":"validateCredentialPreview","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/functions/validateCredentialPreview","content":"","keywords":"","version":"Next"},{"title":"Parameters‚Äã","type":1,"pageTitle":"validateCredentialPreview","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/functions/validateCredentialPreview#parameters","content":" Parameter\tTypevalue\tunknown  ","version":"Next","tagName":"h2"},{"title":"Returns‚Äã","type":1,"pageTitle":"validateCredentialPreview","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/functions/validateCredentialPreview#returns","content":" value is CredentialPreview ","version":"Next","tagName":"h2"},{"title":"BasicMessageBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/BasicMessageBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"BasicMessageBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/BasicMessageBody#properties","content":" Property\tType\tDefined in content\tstring\tsrc/plugins/internal/didcomm/protocols/other/BasicMessage.ts:11 ","version":"Next","tagName":"h2"},{"title":"RequestCredential","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/RequestCredential","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"RequestCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/RequestCredential#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RequestCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/RequestCredential#constructor","content":" new RequestCredential(body: RequestCredentialBody, attachments: AttachmentDescriptor[], from: DID, to?: DID, thid?: string, id?: string): RequestCredential  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:28  Parameters‚Äã  Parameter\tTypebody\tRequestCredentialBody attachments\tAttachmentDescriptor[] from\tDID to?\tDID thid?\tstring id?\tstring  Returns‚Äã  RequestCredential  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"RequestCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/RequestCredential#properties","content":" Property\tModifier\tType\tDefault value\tDefined in attachments\tpublic\tAttachmentDescriptor[]\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:30 body\tpublic\tRequestCredentialBody\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:29 from\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:31 id\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:34 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:33 to?\tpublic\tDID\tundefined\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:32 type\tstatic\t&quot;https://didcomm.org/issue-credential/3.0/request-credential&quot;\tProtocolIds.RequestCredential\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:26  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"RequestCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/RequestCredential#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"RequestCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/RequestCredential#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:52  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"fromMessage()‚Äã","type":1,"pageTitle":"RequestCredential","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/classes/RequestCredential#frommessage","content":" static fromMessage(msg: Message): RequestCredential  Defined in: src/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:65  Parameters‚Äã  Parameter\tTypemsg\tMessage  Returns‚Äã  RequestCredential ","version":"Next","tagName":"h3"},{"title":"Attribute","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/Attribute","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Attribute","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/Attribute#properties","content":" Property\tType\tDefined in media_type?\tstring | Nil\tsrc/plugins/internal/didcomm/protocols/issueCredential/CredentialPreview.ts:20 name\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/CredentialPreview.ts:18 value\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/CredentialPreview.ts:19 ","version":"Next","tagName":"h2"},{"title":"CredentialFormat","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/CredentialFormat","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CredentialFormat","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/CredentialFormat#properties","content":" Property\tType\tDefined in attach_id\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:12 format\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:13 ","version":"Next","tagName":"h2"},{"title":"CredentialPreview","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/CredentialPreview","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CredentialPreview","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/CredentialPreview#properties","content":" Property\tType\tDefined in body\t{ attributes: Attribute[]; }\tsrc/plugins/internal/didcomm/protocols/issueCredential/CredentialPreview.ts:12 body.attributes\tAttribute[]\tsrc/plugins/internal/didcomm/protocols/issueCredential/CredentialPreview.ts:13 id?\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/CredentialPreview.ts:11 type\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/CredentialPreview.ts:10 ","version":"Next","tagName":"h2"},{"title":"OutOfBandInvitationBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/OutOfBandInvitationBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"OutOfBandInvitationBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/OutOfBandInvitationBody#properties","content":" Property\tType\tDefined in accept?\tstring[]\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:9 goal?\tstring\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:8 goal_code?\tstring\tsrc/plugins/internal/didcomm/protocols/invitation/OutOfBandInvitation.ts:7 ","version":"Next","tagName":"h2"},{"title":"IssueCredentialBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/IssueCredentialBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"IssueCredentialBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/IssueCredentialBody#properties","content":" Property\tType\tDefined in comment?\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:14 replacement_id?\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/IssueCredential.ts:16 ","version":"Next","tagName":"h2"},{"title":"PickupReceivedBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/PickupReceivedBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PickupReceivedBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/PickupReceivedBody#properties","content":" Property\tType\tDefined in message_id_list\tstring[]\tsrc/plugins/internal/didcomm/protocols/pickup/PickupReceived.ts:11 ","version":"Next","tagName":"h2"},{"title":"OfferCredentialBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/OfferCredentialBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"OfferCredentialBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/OfferCredentialBody#properties","content":" Property\tType\tDefined in comment?\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:18 credential_preview\tCredentialPreview\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:20 goal_code?\tany\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:14 replacement_id?\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/OfferCredential.ts:16 ","version":"Next","tagName":"h2"},{"title":"MediationKeysUpdateListBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/MediationKeysUpdateListBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"MediationKeysUpdateListBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/MediationKeysUpdateListBody#properties","content":" Property\tType\tDefined in updates\t{ action: &quot;add&quot;; recipient_did: string; }[]\tsrc/plugins/internal/didcomm/protocols/mediation/MediationKeysUpdateList.ts:11 ","version":"Next","tagName":"h2"},{"title":"PrismOnboardingInvitationBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/PrismOnboardingInvitationBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PrismOnboardingInvitationBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/PrismOnboardingInvitationBody#properties","content":" Property\tType\tDefined in from\tstring\tsrc/plugins/internal/didcomm/protocols/invitation/PrismOnboardingInvitation.ts:11 onboardingEndpoint\tstring\tsrc/plugins/internal/didcomm/protocols/invitation/PrismOnboardingInvitation.ts:10 type\tstring\tsrc/plugins/internal/didcomm/protocols/invitation/PrismOnboardingInvitation.ts:9 ","version":"Next","tagName":"h2"},{"title":"PickupRequestBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/PickupRequestBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PickupRequestBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/PickupRequestBody#properties","content":" Property\tType\tDefined in limit\tnumber\tsrc/plugins/internal/didcomm/protocols/pickup/PickupRequest.ts:10 recipient_did?\tstring\tsrc/plugins/internal/didcomm/protocols/pickup/PickupRequest.ts:12 ","version":"Next","tagName":"h2"},{"title":"ProblemReportBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/ProblemReportBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"ProblemReportBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/ProblemReportBody#properties","content":" Property\tType\tDefined in args?\tstring[]\tsrc/plugins/internal/didcomm/protocols/other/ProblemReport.ts:15 code\tstring\tsrc/plugins/internal/didcomm/protocols/other/ProblemReport.ts:11 comment?\tstring\tsrc/plugins/internal/didcomm/protocols/other/ProblemReport.ts:13 escalate_to?\tstring\tsrc/plugins/internal/didcomm/protocols/other/ProblemReport.ts:17 ","version":"Next","tagName":"h2"},{"title":"ProposeCredentialBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/ProposeCredentialBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"ProposeCredentialBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/ProposeCredentialBody#properties","content":" Property\tType\tDefined in comment?\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:16 credential_preview?\tCredentialPreview\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:18 goal_code?\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/ProposeCredential.ts:14 ","version":"Next","tagName":"h2"},{"title":"Context","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/type-aliases/Context","content":"Context @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/didcomm / Context Type Alias: Context Context = Context Defined in: src/plugins/internal/didcomm/plugin.ts:14","keywords":"","version":"Next"},{"title":"plugin","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/variables/plugin","content":"plugin @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/didcomm / plugin Variable: plugin const plugin: Plugin Defined in: src/plugins/internal/didcomm/plugin.ts:15","keywords":"","version":"Next"},{"title":"RequestCredentialBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/RequestCredentialBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"RequestCredentialBody","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/interfaces/RequestCredentialBody#properties","content":" Property\tType\tDefined in comment?\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:20 formats\tCredentialFormat[]\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:22 goal_code?\tstring\tsrc/plugins/internal/didcomm/protocols/issueCredential/RequestCredential.ts:18 ","version":"Next","tagName":"h2"},{"title":"ProtocolIds","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/variables/ProtocolIds","content":"","keywords":"","version":"Next"},{"title":"Type Declaration‚Äã","type":1,"pageTitle":"ProtocolIds","url":"/docs/sdk-ts/sdk/plugins/internal/didcomm/variables/ProtocolIds#type-declaration","content":" Name\tType\tDefault value\tDefined in BasicMessage\t&quot;https://didcomm.org/basicmessage/2.0/message&quot;\t&quot;https://didcomm.org/basicmessage/2.0/message&quot;\tsrc/plugins/internal/didcomm/types.ts:3 CredentialPreview\t&quot;https://didcomm.org/issue-credential/3.0/credential-preview&quot;\t&quot;https://didcomm.org/issue-credential/3.0/credential-preview&quot;\tsrc/plugins/internal/didcomm/types.ts:20 IssueCredential\t&quot;https://didcomm.org/issue-credential/3.0/issue-credential&quot;\t&quot;https://didcomm.org/issue-credential/3.0/issue-credential&quot;\tsrc/plugins/internal/didcomm/types.ts:24 LiveDeliveryChange\t&quot;https://didcomm.org/messagepickup/3.0/live-delivery-change&quot;\t&quot;https://didcomm.org/messagepickup/3.0/live-delivery-change&quot;\tsrc/plugins/internal/didcomm/types.ts:18 MediationDeny\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-deny&quot;\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-deny&quot;\tsrc/plugins/internal/didcomm/types.ts:11 MediationGrant\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-grant&quot;\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-grant&quot;\tsrc/plugins/internal/didcomm/types.ts:10 MediationKeysUpdate\t&quot;https://didcomm.org/coordinate-mediation/2.0/keylist-update&quot;\t&quot;https://didcomm.org/coordinate-mediation/2.0/keylist-update&quot;\tsrc/plugins/internal/didcomm/types.ts:12 MediationRequest\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-request&quot;\t&quot;https://didcomm.org/coordinate-mediation/2.0/mediate-request&quot;\tsrc/plugins/internal/didcomm/types.ts:9 OfferCredential\t&quot;https://didcomm.org/issue-credential/3.0/offer-credential&quot;\t&quot;https://didcomm.org/issue-credential/3.0/offer-credential&quot;\tsrc/plugins/internal/didcomm/types.ts:22 OOBInvitation\t&quot;https://didcomm.org/out-of-band/2.0/invitation&quot;\t&quot;https://didcomm.org/out-of-band/2.0/invitation&quot;\tsrc/plugins/internal/didcomm/types.ts:7 PickupDelivery\t&quot;https://didcomm.org/messagepickup/3.0/delivery&quot;\t&quot;https://didcomm.org/messagepickup/3.0/delivery&quot;\tsrc/plugins/internal/didcomm/types.ts:15 PickupReceived\t&quot;https://didcomm.org/messagepickup/3.0/messages-received&quot;\t&quot;https://didcomm.org/messagepickup/3.0/messages-received&quot;\tsrc/plugins/internal/didcomm/types.ts:17 PickupRequest\t&quot;https://didcomm.org/messagepickup/3.0/delivery-request&quot;\t&quot;https://didcomm.org/messagepickup/3.0/delivery-request&quot;\tsrc/plugins/internal/didcomm/types.ts:14 PickupStatus\t&quot;https://didcomm.org/messagepickup/3.0/status&quot;\t&quot;https://didcomm.org/messagepickup/3.0/status&quot;\tsrc/plugins/internal/didcomm/types.ts:16 ProblemReporting\t&quot;https://didcomm.org/report-problem/2.0/problem-report&quot;\t&quot;https://didcomm.org/report-problem/2.0/problem-report&quot;\tsrc/plugins/internal/didcomm/types.ts:5 ProposeCredential\t&quot;https://didcomm.org/issue-credential/3.0/propose-credential&quot;\t&quot;https://didcomm.org/issue-credential/3.0/propose-credential&quot;\tsrc/plugins/internal/didcomm/types.ts:21 RequestCredential\t&quot;https://didcomm.org/issue-credential/3.0/request-credential&quot;\t&quot;https://didcomm.org/issue-credential/3.0/request-credential&quot;\tsrc/plugins/internal/didcomm/types.ts:23 ","version":"Next","tagName":"h2"},{"title":"DIFModule","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/classes/DIFModule","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"DIFModule","url":"/docs/sdk-ts/sdk/plugins/internal/dif/classes/DIFModule#extends","content":" Runner  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"DIFModule","url":"/docs/sdk-ts/sdk/plugins/internal/dif/classes/DIFModule#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"DIFModule","url":"/docs/sdk-ts/sdk/plugins/internal/dif/classes/DIFModule#constructor","content":" new DIFModule(): DIFModule  Returns‚Äã  DIFModule  Inherited from‚Äã  Runner.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"DIFModule","url":"/docs/sdk-ts/sdk/plugins/internal/dif/classes/DIFModule#methods","content":" ","version":"Next","tagName":"h2"},{"title":"clone()‚Äã","type":1,"pageTitle":"DIFModule","url":"/docs/sdk-ts/sdk/plugins/internal/dif/classes/DIFModule#clone","content":" clone(): DIFModule  Defined in: src/plugins/internal/dif/module/index.ts:6  Returns‚Äã  DIFModule  Overrides‚Äã  Runner.clone    ","version":"Next","tagName":"h3"},{"title":"createPresentationDefinition()‚Äã","type":1,"pageTitle":"DIFModule","url":"/docs/sdk-ts/sdk/plugins/internal/dif/classes/DIFModule#createpresentationdefinition","content":" createPresentationDefinition(claims: JsonObj&lt;Filter&gt;, opts?: { issuer?: string; }): Promise&lt;Request&gt;  Defined in: src/plugins/internal/dif/module/index.ts:10  Parameters‚Äã  Parameter\tTypeclaims\tJsonObj&lt;Filter&gt; opts?\t{ issuer?: string; } opts.issuer?\tstring  Returns‚Äã  Promise&lt;Request&gt;    ","version":"Next","tagName":"h3"},{"title":"withContext()‚Äã","type":1,"pageTitle":"DIFModule","url":"/docs/sdk-ts/sdk/plugins/internal/dif/classes/DIFModule#withcontext","content":" withContext(ctx: Context): Runner  Defined in: src/utils/tasks.ts:103  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Runner  Inherited from‚Äã  Runner.withContext ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/","content":"","keywords":"","version":"Next"},{"title":"How to use‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/#how-to-use","content":" Typescript / esmodules  import * as DIF from &quot;@hyperledger/identus-sdk/plugins/dif&quot;;   Or with cjs modules  const DIF = require(&quot;@hyperledger/identus-sdk/plugins/dif&quot;);   ","version":"Next","tagName":"h2"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/#namespaces","content":" Namespace\tDescriptionDIF\t-  ","version":"Next","tagName":"h2"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/#classes","content":" Class\tDescriptionDIFModule\tused to enable Modules to propagate the Context and have access to runTask  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/#type-aliases","content":" Type Alias\tDescriptionContext\t- Modules\t-  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/#variables","content":" Variable\tDescriptionplugin\t- ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/","content":"","keywords":"","version":"Next"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/#namespaces","content":" Namespace\tDescriptionPresentation\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/#type-aliases","content":" Type Alias\tDescriptionEmbedTarget\t-  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/#variables","content":" Variable\tDescriptionPRESENTATION\t- PRESENTATION_REQUEST\t- ","version":"Next","tagName":"h2"},{"title":"Definition","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/interfaces/Definition","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Definition","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/interfaces/Definition#properties","content":" Property\tType\tDefined in format?\tFormat\tsrc/plugins/internal/dif/types.ts:9 id\tstring\tsrc/plugins/internal/dif/types.ts:7 input_descriptors\tInputDescriptor[]\tsrc/plugins/internal/dif/types.ts:8 ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/","content":"","keywords":"","version":"Next"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/#namespaces","content":" Namespace\tDescriptionDefinition\t- Submission\t-  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/#interfaces","content":" Interface\tDescriptionDefinition\t- Request\t- Submission\t- ","version":"Next","tagName":"h2"},{"title":"Request","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/interfaces/Request","content":"","keywords":"","version":"Next"},{"title":"Indexable‚Äã","type":1,"pageTitle":"Request","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/interfaces/Request#indexable","content":" [key: string]: any  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"Request","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/interfaces/Request#properties","content":" Property\tType\tDefined in presentation_definition\tDefinition\tsrc/plugins/internal/dif/types.ts:56 ","version":"Next","tagName":"h2"},{"title":"Submission","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/interfaces/Submission","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Submission","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/interfaces/Submission#properties","content":" Property\tType\tDefined in definition_id\tstring\tsrc/plugins/internal/dif/types.ts:62 descriptor_map\tDescriptorItem[]\tsrc/plugins/internal/dif/types.ts:63 id\tstring\tsrc/plugins/internal/dif/types.ts:61 ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/","content":"","keywords":"","version":"Next"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/#namespaces","content":" Namespace\tDescriptionField\t-  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/#interfaces","content":" Interface\tDescriptionConstraints\t- Field\t- InputDescriptor\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/#type-aliases","content":" Type Alias\tDescriptionFormat\t- InputLimitDisclosure\t- PredicateType\t- ","version":"Next","tagName":"h2"},{"title":"Field","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/interfaces/Field","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Field","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/interfaces/Field#properties","content":" Property\tType\tDefined in filter?\tFilter\tsrc/plugins/internal/dif/types.ts:38 id?\tstring\tsrc/plugins/internal/dif/types.ts:35 name?\tstring\tsrc/plugins/internal/dif/types.ts:37 optional?\tboolean\tsrc/plugins/internal/dif/types.ts:39 path\tstring[]\tsrc/plugins/internal/dif/types.ts:34 purpose?\tstring\tsrc/plugins/internal/dif/types.ts:36 ","version":"Next","tagName":"h2"},{"title":"InputDescriptor","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/interfaces/InputDescriptor","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"InputDescriptor","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/interfaces/InputDescriptor#properties","content":" Property\tType\tDefined in constraints\tConstraints\tsrc/plugins/internal/dif/types.ts:20 format?\tFormat\tsrc/plugins/internal/dif/types.ts:23 id\tstring\tsrc/plugins/internal/dif/types.ts:19 name?\tstring\tsrc/plugins/internal/dif/types.ts:21 purpose?\tstring\tsrc/plugins/internal/dif/types.ts:22 ","version":"Next","tagName":"h2"},{"title":"Constraints","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/interfaces/Constraints","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Constraints","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/interfaces/Constraints#properties","content":" Property\tType\tDefined in fields\tField[]\tsrc/plugins/internal/dif/types.ts:27 limit_disclosure\tInputLimitDisclosure\tsrc/plugins/internal/dif/types.ts:28 ","version":"Next","tagName":"h2"},{"title":"InputLimitDisclosure","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/type-aliases/InputLimitDisclosure","content":"InputLimitDisclosure @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/dif / DIF / Presentation / Definition / InputLimitDisclosure Type Alias: InputLimitDisclosure InputLimitDisclosure = &quot;required&quot; | &quot;preferred&quot; Defined in: src/plugins/internal/dif/types.ts:31","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/namespaces/Field/","content":"","keywords":"","version":"Next"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/namespaces/Field/#interfaces","content":" Interface\tDescriptionFilter\t- ","version":"Next","tagName":"h2"},{"title":"Filter","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/namespaces/Field/interfaces/Filter","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Filter","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/namespaces/Field/interfaces/Filter#properties","content":" Property\tType\tDefined in const?\tPredicateType[]\tsrc/plugins/internal/dif/types.ts:47 enum?\tPredicateType[]\tsrc/plugins/internal/dif/types.ts:46 pattern?\tstring\tsrc/plugins/internal/dif/types.ts:45 type\tstring\tsrc/plugins/internal/dif/types.ts:44 value?\tPredicateType\tsrc/plugins/internal/dif/types.ts:48 ","version":"Next","tagName":"h2"},{"title":"Format","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/type-aliases/Format","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Format","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/type-aliases/Format#properties","content":" Property\tType\tDefined in jwt?\t{ alg: string[]; }\tsrc/plugins/internal/dif/types.ts:14 jwt.alg\tstring[]\tsrc/plugins/internal/dif/types.ts:14 sdjwt?\t{ alg: string[]; }\tsrc/plugins/internal/dif/types.ts:15 sdjwt.alg\tstring[]\tsrc/plugins/internal/dif/types.ts:15 ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Submission/","content":"","keywords":"","version":"Next"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Submission/#interfaces","content":" Interface\tDescriptionDescriptorItem\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Submission/#type-aliases","content":" Type Alias\tDescriptionFormat\t- ","version":"Next","tagName":"h2"},{"title":"PredicateType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Definition/type-aliases/PredicateType","content":"PredicateType @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/dif / DIF / Presentation / Definition / PredicateType Type Alias: PredicateType PredicateType = string | number Defined in: src/plugins/internal/dif/types.ts:52","keywords":"","version":"Next"},{"title":"DescriptorItem","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Submission/interfaces/DescriptorItem","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"DescriptorItem","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Submission/interfaces/DescriptorItem#properties","content":" Property\tType\tDefined in format\tFormat\tsrc/plugins/internal/dif/types.ts:70 id\tstring\tsrc/plugins/internal/dif/types.ts:69 path\tstring\tsrc/plugins/internal/dif/types.ts:71 path_nested?\tDescriptorItem\tsrc/plugins/internal/dif/types.ts:72 ","version":"Next","tagName":"h2"},{"title":"Format","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/namespaces/Presentation/namespaces/Submission/type-aliases/Format","content":"Format @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/dif / DIF / Presentation / Submission / Format Type Alias: Format Format = &quot;sd_jwt&quot; | &quot;jwt_vp&quot; | &quot;jwt_vc&quot; Defined in: src/plugins/internal/dif/types.ts:67","keywords":"","version":"Next"},{"title":"EmbedTarget","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/type-aliases/EmbedTarget","content":"","keywords":"","version":"Next"},{"title":"Type Declaration‚Äã","type":1,"pageTitle":"EmbedTarget","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/type-aliases/EmbedTarget#type-declaration","content":" Name\tType\tDefined inpresentation_submission\tSubmission\tsrc/plugins/internal/dif/types.ts:78  ","version":"Next","tagName":"h2"},{"title":"Type Parameters‚Äã","type":1,"pageTitle":"EmbedTarget","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/type-aliases/EmbedTarget#type-parameters","content":" Type Parameter\tDefault typeT extends string\t&quot;verifiablePresentation&quot; ","version":"Next","tagName":"h2"},{"title":"PRESENTATION","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/variables/PRESENTATION","content":"PRESENTATION @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/dif / DIF / PRESENTATION Variable: PRESENTATION const PRESENTATION: &quot;dif/presentation-exchange/submission@v1.0&quot; = 'dif/presentation-exchange/submission@v1.0' Defined in: src/plugins/internal/dif/types.ts:3","keywords":"","version":"Next"},{"title":"PRESENTATION_REQUEST","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/namespaces/DIF/variables/PRESENTATION_REQUEST","content":"PRESENTATION_REQUEST @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/dif / DIF / PRESENTATION_REQUEST Variable: PRESENTATION_REQUEST const PRESENTATION_REQUEST: &quot;dif/presentation-exchange/definitions@v1.0&quot; = 'dif/presentation-exchange/definitions@v1.0' Defined in: src/plugins/internal/dif/types.ts:2","keywords":"","version":"Next"},{"title":"Context","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/type-aliases/Context","content":"Context @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/dif / Context Type Alias: Context Context = Context&lt;Modules &amp; Context&gt; Defined in: src/plugins/internal/dif/index.ts:30","keywords":"","version":"Next"},{"title":"Modules","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/type-aliases/Modules","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Modules","url":"/docs/sdk-ts/sdk/plugins/internal/dif/type-aliases/Modules#properties","content":" Property\tType\tDefined in DIF\tDIFModule\tsrc/plugins/internal/dif/index.ts:29 ","version":"Next","tagName":"h2"},{"title":"plugin","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/dif/variables/plugin","content":"plugin @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/dif / plugin Variable: plugin const plugin: Plugin Defined in: src/plugins/internal/dif/index.ts:31","keywords":"","version":"Next"},{"title":"HandlePresentation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandlePresentation","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"HandlePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandlePresentation#extends","content":" Task&lt;boolean, HandlePresentationArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"HandlePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandlePresentation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"HandlePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandlePresentation#constructor","content":" new HandlePresentation(...args: [HandlePresentationArgs]): HandlePresentation  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[HandlePresentationArgs]\t  Returns‚Äã  HandlePresentation  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"HandlePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandlePresentation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"HandlePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandlePresentation#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"HandlePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandlePresentation#run","content":" run(ctx: Context): Promise&lt;any&gt;  Defined in: src/plugins/internal/oea/tasks/HandlePresentation.ts:12  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;any&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/","content":"","keywords":"","version":"Next"},{"title":"How to use‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#how-to-use","content":" Typescript / esmodules  import * as OEA from &quot;@hyperledger/identus-sdk/plugins/oea&quot;;   Or with cjs modules  const OEA = require(&quot;@hyperledger/identus-sdk/plugins/oea&quot;);   ","version":"Next","tagName":"h2"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#namespaces","content":" Namespace\tDescriptionOEA\t-  ","version":"Next","tagName":"h2"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#classes","content":" Class\tDescriptionHandlePresentation\tA Task encapsulates a unit of work HandleRevocation\tA Task encapsulates a unit of work HandshakeRequest\t- Presentation\t- ProposePresentation\t- RequestPresentation\t- RevocationNotification\t-  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#interfaces","content":" Interface\tDescriptionHandlePresentationArgs\t- HandleRevocationArgs\tAsyncronously prepare a request credential message from a valid offerCredential for now supporting w3c verifiable credentials offers. HandshakeRequestBody\tNo specification available PresentationBody\tSpecification: https://github.com/decentralized-identity/waci-didcomm/blob/main/present_proof/present-proof-v3.md#presentation PrismRevocationBody\tNo specification available ProposePresentationBody\tSpecification: https://github.com/decentralized-identity/waci-didcomm/blob/main/present_proof/present-proof-v3.md#propose-presentation RequestPresentationBody\tSpecification: https://github.com/decentralized-identity/waci-didcomm/blob/main/present_proof/present-proof-v3.md#request-presentation  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#variables","content":" Variable\tDescriptionplugin\t-  ","version":"Next","tagName":"h2"},{"title":"References‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#references","content":" ","version":"Next","tagName":"h2"},{"title":"CreatePresentation‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#createpresentation","content":" Re-exports CreatePresentation    ","version":"Next","tagName":"h3"},{"title":"CreatePresentationArgs‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#createpresentationargs","content":" Re-exports CreatePresentationArgs    ","version":"Next","tagName":"h3"},{"title":"CreatePresentationRequest‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#createpresentationrequest","content":" Re-exports CreatePresentationRequest    ","version":"Next","tagName":"h3"},{"title":"CreatePresentationRequestArgs‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/#createpresentationrequestargs","content":" Re-exports CreatePresentationRequestArgs ","version":"Next","tagName":"h3"},{"title":"HandleRevocation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandleRevocation","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"HandleRevocation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandleRevocation#extends","content":" Task&lt;void, HandleRevocationArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"HandleRevocation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandleRevocation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"HandleRevocation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandleRevocation#constructor","content":" new HandleRevocation(...args: [HandleRevocationArgs]): HandleRevocation  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[HandleRevocationArgs]\t  Returns‚Äã  HandleRevocation  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"HandleRevocation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandleRevocation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"HandleRevocation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandleRevocation#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"HandleRevocation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandleRevocation#run","content":" run(ctx: Context): Promise&lt;void&gt;  Defined in: src/plugins/internal/oea/tasks/HandleRevocation.ts:20  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;void&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"HandshakeRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandshakeRequest","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"HandshakeRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandshakeRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"HandshakeRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandshakeRequest#constructor","content":" new HandshakeRequest(body: HandshakeRequestBody, from: DID, to: DID, thid?: string, id?: string): HandshakeRequest  Defined in: src/plugins/internal/oea/protocols/HandshakeRequest.ts:20  Parameters‚Äã  Parameter\tTypebody\tHandshakeRequestBody from\tDID to\tDID thid?\tstring id?\tstring  Returns‚Äã  HandshakeRequest  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"HandshakeRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandshakeRequest#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body\tpublic\tHandshakeRequestBody\tundefined\tsrc/plugins/internal/oea/protocols/HandshakeRequest.ts:21 from\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/HandshakeRequest.ts:22 id\tpublic\tstring\tundefined\tsrc/plugins/internal/oea/protocols/HandshakeRequest.ts:25 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/oea/protocols/HandshakeRequest.ts:24 to\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/HandshakeRequest.ts:23 type\tstatic\t&quot;https://atalaprism.io/mercury/connections/1.0/request&quot;\tOEA.ProtocolIds.ConnectionRequest\tsrc/plugins/internal/oea/protocols/HandshakeRequest.ts:18  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"HandshakeRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandshakeRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"HandshakeRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandshakeRequest#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/oea/protocols/HandshakeRequest.ts:28  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"fromMessage()‚Äã","type":1,"pageTitle":"HandshakeRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandshakeRequest#frommessage","content":" static fromMessage(msg: Message, from: DID): HandshakeRequest  Defined in: src/plugins/internal/oea/protocols/HandshakeRequest.ts:40  Parameters‚Äã  Parameter\tTypemsg\tMessage from\tDID  Returns‚Äã  HandshakeRequest    ","version":"Next","tagName":"h3"},{"title":"fromOutOfBand()‚Äã","type":1,"pageTitle":"HandshakeRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/HandshakeRequest#fromoutofband","content":" static fromOutOfBand(inviteMessage: OutOfBandInvitation, from: DID): HandshakeRequest  Defined in: src/plugins/internal/oea/protocols/HandshakeRequest.ts:67  Parameters‚Äã  Parameter\tTypeinviteMessage\tOutOfBandInvitation from\tDID  Returns‚Äã  HandshakeRequest ","version":"Next","tagName":"h3"},{"title":"ProposePresentation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/ProposePresentation","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ProposePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/ProposePresentation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ProposePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/ProposePresentation#constructor","content":" new ProposePresentation(body: ProposePresentationBody, attachments: AttachmentDescriptor[], from: DID, to: DID, thid?: string, id?: string): ProposePresentation  Defined in: src/plugins/internal/oea/protocols/ProposePresentation.ts:21  Parameters‚Äã  Parameter\tTypebody\tProposePresentationBody attachments\tAttachmentDescriptor[] from\tDID to\tDID thid?\tstring id?\tstring  Returns‚Äã  ProposePresentation  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"ProposePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/ProposePresentation#properties","content":" Property\tModifier\tType\tDefault value\tDefined in attachments\tpublic\tAttachmentDescriptor[]\tundefined\tsrc/plugins/internal/oea/protocols/ProposePresentation.ts:23 body\tpublic\tProposePresentationBody\tundefined\tsrc/plugins/internal/oea/protocols/ProposePresentation.ts:22 from\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/ProposePresentation.ts:24 id\tpublic\tstring\tundefined\tsrc/plugins/internal/oea/protocols/ProposePresentation.ts:27 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/oea/protocols/ProposePresentation.ts:26 to\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/ProposePresentation.ts:25 type\tstatic\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/propose-presentation&quot;\tOEA.ProtocolIds.ProposePresentation\tsrc/plugins/internal/oea/protocols/ProposePresentation.ts:19  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"ProposePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/ProposePresentation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"ProposePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/ProposePresentation#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/oea/protocols/ProposePresentation.ts:42  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"fromMessage()‚Äã","type":1,"pageTitle":"ProposePresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/ProposePresentation#frommessage","content":" static fromMessage(fromMessage: Message): ProposePresentation  Defined in: src/plugins/internal/oea/protocols/ProposePresentation.ts:55  Parameters‚Äã  Parameter\tTypefromMessage\tMessage  Returns‚Äã  ProposePresentation ","version":"Next","tagName":"h3"},{"title":"Presentation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/Presentation","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"Presentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/Presentation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"Presentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/Presentation#constructor","content":" new Presentation(body: PresentationBody, attachments: AttachmentDescriptor[], from: DID, to: DID, thid?: string, id?: string): Presentation  Defined in: src/plugins/internal/oea/protocols/Presentation.ts:21  Parameters‚Äã  Parameter\tTypebody\tPresentationBody attachments\tAttachmentDescriptor[] from\tDID to\tDID thid?\tstring id?\tstring  Returns‚Äã  Presentation  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"Presentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/Presentation#properties","content":" Property\tModifier\tType\tDefault value\tDefined in attachments\tpublic\tAttachmentDescriptor[]\tundefined\tsrc/plugins/internal/oea/protocols/Presentation.ts:23 body\tpublic\tPresentationBody\tundefined\tsrc/plugins/internal/oea/protocols/Presentation.ts:22 from\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/Presentation.ts:24 id\tpublic\tstring\tundefined\tsrc/plugins/internal/oea/protocols/Presentation.ts:27 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/oea/protocols/Presentation.ts:26 to\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/Presentation.ts:25 type\tstatic\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/presentation&quot;\tOEA.ProtocolIds.Presentation\tsrc/plugins/internal/oea/protocols/Presentation.ts:19  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"Presentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/Presentation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"Presentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/Presentation#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/oea/protocols/Presentation.ts:42  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"fromMessage()‚Äã","type":1,"pageTitle":"Presentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/Presentation#frommessage","content":" static fromMessage(fromMessage: Message): Presentation  Defined in: src/plugins/internal/oea/protocols/Presentation.ts:55  Parameters‚Äã  Parameter\tTypefromMessage\tMessage  Returns‚Äã  Presentation ","version":"Next","tagName":"h3"},{"title":"HandlePresentationArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/HandlePresentationArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"HandlePresentationArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/HandlePresentationArgs#properties","content":" Property\tType\tDefined in message\tMessage\tsrc/plugins/internal/oea/tasks/HandlePresentation.ts:8 ","version":"Next","tagName":"h2"},{"title":"RequestPresentation","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RequestPresentation","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"RequestPresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RequestPresentation#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RequestPresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RequestPresentation#constructor","content":" new RequestPresentation(body: RequestPresentationBody, attachments: AttachmentDescriptor[], from: DID, to: DID, thid?: string, id?: string): RequestPresentation  Defined in: src/plugins/internal/oea/protocols/RequestPresentation.ts:23  Parameters‚Äã  Parameter\tTypebody\tRequestPresentationBody attachments\tAttachmentDescriptor[] from\tDID to\tDID thid?\tstring id?\tstring  Returns‚Äã  RequestPresentation  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"RequestPresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RequestPresentation#properties","content":" Property\tModifier\tType\tDefault value\tDefined in attachments\tpublic\tAttachmentDescriptor[]\tundefined\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:25 body\tpublic\tRequestPresentationBody\tundefined\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:24 from\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:26 id\tpublic\tstring\tundefined\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:29 thid?\tpublic\tstring\tundefined\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:28 to\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:27 type\tstatic\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/request-presentation&quot;\tOEA.ProtocolIds.RequestPresentation\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:21  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"RequestPresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RequestPresentation#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"decodedAttachments‚Äã","type":1,"pageTitle":"RequestPresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RequestPresentation#decodedattachments","content":" Get Signature‚Äã  get decodedAttachments(): any[]  Defined in: src/plugins/internal/oea/protocols/RequestPresentation.ts:34  Returns‚Äã  any[]  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"RequestPresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RequestPresentation#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"RequestPresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RequestPresentation#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/oea/protocols/RequestPresentation.ts:52  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"fromMessage()‚Äã","type":1,"pageTitle":"RequestPresentation","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RequestPresentation#frommessage","content":" static fromMessage(fromMessage: Message): RequestPresentation  Defined in: src/plugins/internal/oea/protocols/RequestPresentation.ts:65  Parameters‚Äã  Parameter\tTypefromMessage\tMessage  Returns‚Äã  RequestPresentation ","version":"Next","tagName":"h3"},{"title":"HandleRevocationArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/HandleRevocationArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"HandleRevocationArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/HandleRevocationArgs#properties","content":" Property\tType\tDefined in message\tMessage\tsrc/plugins/internal/oea/tasks/HandleRevocation.ts:16 ","version":"Next","tagName":"h2"},{"title":"RevocationNotification","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RevocationNotification","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"RevocationNotification","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RevocationNotification#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"RevocationNotification","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RevocationNotification#constructor","content":" new RevocationNotification(body: PrismRevocationBody, from: DID, to: DID): RevocationNotification  Defined in: src/plugins/internal/oea/protocols/RevocationNotfiication.ts:17  Parameters‚Äã  Parameter\tTypebody\tPrismRevocationBody from\tDID to\tDID  Returns‚Äã  RevocationNotification  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"RevocationNotification","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RevocationNotification#properties","content":" Property\tModifier\tType\tDefault value\tDefined in body\tpublic\tPrismRevocationBody\tundefined\tsrc/plugins/internal/oea/protocols/RevocationNotfiication.ts:18 from\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/RevocationNotfiication.ts:19 to\tpublic\tDID\tundefined\tsrc/plugins/internal/oea/protocols/RevocationNotfiication.ts:20 type\tstatic\t&quot;https://atalaprism.io/revocation_notification/1.0/revoke&quot;\tOEA.ProtocolIds.PrismRevocation\tsrc/plugins/internal/oea/protocols/RevocationNotfiication.ts:15  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"RevocationNotification","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RevocationNotification#methods","content":" ","version":"Next","tagName":"h2"},{"title":"makeMessage()‚Äã","type":1,"pageTitle":"RevocationNotification","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RevocationNotification#makemessage","content":" makeMessage(): Message  Defined in: src/plugins/internal/oea/protocols/RevocationNotfiication.ts:23  Returns‚Äã  Message    ","version":"Next","tagName":"h3"},{"title":"fromMessage()‚Äã","type":1,"pageTitle":"RevocationNotification","url":"/docs/sdk-ts/sdk/plugins/internal/oea/classes/RevocationNotification#frommessage","content":" static fromMessage(message: Message): RevocationNotification  Defined in: src/plugins/internal/oea/protocols/RevocationNotfiication.ts:35  Parameters‚Äã  Parameter\tTypemessage\tMessage  Returns‚Äã  RevocationNotification ","version":"Next","tagName":"h3"},{"title":"HandshakeRequestBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/HandshakeRequestBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"HandshakeRequestBody","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/HandshakeRequestBody#properties","content":" Property\tType\tDefined in accept?\tstring[]\tsrc/plugins/internal/oea/protocols/HandshakeRequest.ts:14 goal?\tstring\tsrc/plugins/internal/oea/protocols/HandshakeRequest.ts:13 goal_code?\tstring\tsrc/plugins/internal/oea/protocols/HandshakeRequest.ts:12 ","version":"Next","tagName":"h2"},{"title":"PrismRevocationBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/PrismRevocationBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PrismRevocationBody","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/PrismRevocationBody#properties","content":" Property\tType\tDefined in comment?\tstring\tsrc/plugins/internal/oea/protocols/RevocationNotfiication.ts:11 issueCredentialProtocolThreadId\tstring\tsrc/plugins/internal/oea/protocols/RevocationNotfiication.ts:10 ","version":"Next","tagName":"h2"},{"title":"ProposePresentationBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/ProposePresentationBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"ProposePresentationBody","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/ProposePresentationBody#properties","content":" Property\tType\tDefined in comment?\tstring\tsrc/plugins/internal/oea/protocols/ProposePresentation.ts:15 goal_code?\tstring\tsrc/plugins/internal/oea/protocols/ProposePresentation.ts:13 ","version":"Next","tagName":"h2"},{"title":"PresentationBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/PresentationBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PresentationBody","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/PresentationBody#properties","content":" Property\tType\tDefined in comment?\tstring\tsrc/plugins/internal/oea/protocols/Presentation.ts:15 goal_code?\tstring\tsrc/plugins/internal/oea/protocols/Presentation.ts:13 ","version":"Next","tagName":"h2"},{"title":"RequestPresentationBody","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/RequestPresentationBody","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"RequestPresentationBody","url":"/docs/sdk-ts/sdk/plugins/internal/oea/interfaces/RequestPresentationBody#properties","content":" Property\tType\tDefined in comment?\tstring\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:15 goal_code?\tstring\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:13 will_confirm?\tboolean\tsrc/plugins/internal/oea/protocols/RequestPresentation.ts:17 ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/","content":"","keywords":"","version":"Next"},{"title":"Enumerations‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/#enumerations","content":" Enumeration\tDescriptionDescriptorItemFormat\t- InputLimitDisclosure\t-  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/#interfaces","content":" Interface\tDescriptionCredentialOffer\t- DescriptorItem\t- PresentationRequest\t- PresentationSubmission\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/#type-aliases","content":" Type Alias\tDescriptionDefinitionFormat\t- InputConstraints\t- InputDescriptor\t- InputField\t- InputFieldFilter\t- JWTPresentationClaims\t- PredicateType\t- SDJWTPresentationClaims\t- SDJWTPresentationSubmission\t-  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/#variables","content":" Variable\tDescriptionPRISM_JWT\t- PRISM_SDJWT\t- ProtocolIds\t- ","version":"Next","tagName":"h2"},{"title":"DescriptorItemFormat","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/enumerations/DescriptorItemFormat","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"DescriptorItemFormat","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/enumerations/DescriptorItemFormat#enumeration-members","content":" Enumeration Member\tValue\tDefined in JWT_VC\t&quot;jwt_vc&quot;\tsrc/plugins/internal/oea/types.ts:26 JWT_VP\t&quot;jwt_vp&quot;\tsrc/plugins/internal/oea/types.ts:27 SDJWT\t&quot;sdjwt&quot;\tsrc/plugins/internal/oea/types.ts:28 ","version":"Next","tagName":"h2"},{"title":"InputLimitDisclosure","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/enumerations/InputLimitDisclosure","content":"","keywords":"","version":"Next"},{"title":"Enumeration Members‚Äã","type":1,"pageTitle":"InputLimitDisclosure","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/enumerations/InputLimitDisclosure#enumeration-members","content":" Enumeration Member\tValue\tDefined in PREFERRED\t&quot;preferred&quot;\tsrc/plugins/internal/oea/types.ts:121 REQUIRED\t&quot;required&quot;\tsrc/plugins/internal/oea/types.ts:120 ","version":"Next","tagName":"h2"},{"title":"CredentialOffer","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/interfaces/CredentialOffer","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CredentialOffer","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/interfaces/CredentialOffer#properties","content":" Property\tType\tDefined in options\t{ challenge: string; domain: string; }\tsrc/plugins/internal/oea/types.ts:19 options.challenge\tstring\tsrc/plugins/internal/oea/types.ts:20 options.domain\tstring\tsrc/plugins/internal/oea/types.ts:21 ","version":"Next","tagName":"h2"},{"title":"DescriptorItem","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/interfaces/DescriptorItem","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"DescriptorItem","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/interfaces/DescriptorItem#properties","content":" Property\tType\tDefined in format\tstring\tsrc/plugins/internal/oea/types.ts:61 id\tstring\tsrc/plugins/internal/oea/types.ts:60 path\tstring\tsrc/plugins/internal/oea/types.ts:62 path_nested?\tDescriptorItem\tsrc/plugins/internal/oea/types.ts:63 ","version":"Next","tagName":"h2"},{"title":"PresentationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/interfaces/PresentationRequest","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PresentationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/interfaces/PresentationRequest#properties","content":" Property\tType\tDefined in options\t{ challenge: string; domain: string; }\tsrc/plugins/internal/oea/types.ts:67 options.challenge\tstring\tsrc/plugins/internal/oea/types.ts:68 options.domain\tstring\tsrc/plugins/internal/oea/types.ts:69 presentation_definition\t{ format?: DefinitionFormat; id: string; input_descriptors: InputDescriptor[]; }\tsrc/plugins/internal/oea/types.ts:71 presentation_definition.format?\tDefinitionFormat\tsrc/plugins/internal/oea/types.ts:74 presentation_definition.id\tstring\tsrc/plugins/internal/oea/types.ts:72 presentation_definition.input_descriptors\tInputDescriptor[]\tsrc/plugins/internal/oea/types.ts:73 ","version":"Next","tagName":"h2"},{"title":"PresentationSubmission","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/interfaces/PresentationSubmission","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"PresentationSubmission","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/interfaces/PresentationSubmission#properties","content":" Property\tType\tDefined in presentation_submission\t{ definition_id: string; descriptor_map: DescriptorItem[]; id: string; }\tsrc/plugins/internal/oea/types.ts:51 presentation_submission.definition_id\tstring\tsrc/plugins/internal/oea/types.ts:53 presentation_submission.descriptor_map\tDescriptorItem[]\tsrc/plugins/internal/oea/types.ts:54 presentation_submission.id\tstring\tsrc/plugins/internal/oea/types.ts:52 verifiablePresentation\tstring[]\tsrc/plugins/internal/oea/types.ts:56 ","version":"Next","tagName":"h2"},{"title":"DefinitionFormat","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/DefinitionFormat","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"DefinitionFormat","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/DefinitionFormat#properties","content":" Property\tType\tDefined in jwt?\t{ alg: string[]; }\tsrc/plugins/internal/oea/types.ts:79 jwt.alg\tstring[]\tsrc/plugins/internal/oea/types.ts:80 sdjwt?\t{ alg: string[]; }\tsrc/plugins/internal/oea/types.ts:82 sdjwt.alg\tstring[]\tsrc/plugins/internal/oea/types.ts:83 ","version":"Next","tagName":"h2"},{"title":"InputDescriptor","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/InputDescriptor","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"InputDescriptor","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/InputDescriptor#properties","content":" Property\tType\tDefined in constraints\tInputConstraints\tsrc/plugins/internal/oea/types.ts:89 format?\tDefinitionFormat\tsrc/plugins/internal/oea/types.ts:92 id\tstring\tsrc/plugins/internal/oea/types.ts:88 name?\tstring\tsrc/plugins/internal/oea/types.ts:90 purpose?\tstring\tsrc/plugins/internal/oea/types.ts:91 ","version":"Next","tagName":"h2"},{"title":"InputConstraints","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/InputConstraints","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"InputConstraints","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/InputConstraints#properties","content":" Property\tType\tDefined in fields\tInputField[]\tsrc/plugins/internal/oea/types.ts:115 limit_disclosure\tInputLimitDisclosure\tsrc/plugins/internal/oea/types.ts:116 ","version":"Next","tagName":"h2"},{"title":"InputField","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/InputField","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"InputField","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/InputField#properties","content":" Property\tType\tDefined in filter?\tInputFieldFilter\tsrc/plugins/internal/oea/types.ts:110 id?\tstring\tsrc/plugins/internal/oea/types.ts:107 name?\tstring\tsrc/plugins/internal/oea/types.ts:109 optional?\tboolean\tsrc/plugins/internal/oea/types.ts:111 path\tstring[]\tsrc/plugins/internal/oea/types.ts:106 purpose?\tstring\tsrc/plugins/internal/oea/types.ts:108 ","version":"Next","tagName":"h2"},{"title":"InputFieldFilter","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/InputFieldFilter","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"InputFieldFilter","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/InputFieldFilter#properties","content":" Property\tType\tDefined in const?\tPredicateType[]\tsrc/plugins/internal/oea/types.ts:99 enum?\tPredicateType[]\tsrc/plugins/internal/oea/types.ts:98 pattern?\tstring\tsrc/plugins/internal/oea/types.ts:97 type\tstring\tsrc/plugins/internal/oea/types.ts:96 value?\tPredicateType\tsrc/plugins/internal/oea/types.ts:100 ","version":"Next","tagName":"h2"},{"title":"PredicateType","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/PredicateType","content":"PredicateType @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oea / OEA / PredicateType Type Alias: PredicateType PredicateType = string | number Defined in: src/plugins/internal/oea/types.ts:103","keywords":"","version":"Next"},{"title":"JWTPresentationClaims","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/JWTPresentationClaims","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"JWTPresentationClaims","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/JWTPresentationClaims#properties","content":" Property\tType\tDefined in claims\tJsonObj&lt;InputFieldFilter&gt;\tsrc/plugins/internal/oea/types.ts:34 issuer?\tstring\tsrc/plugins/internal/oea/types.ts:33 schema?\tstring\tsrc/plugins/internal/oea/types.ts:32 ","version":"Next","tagName":"h2"},{"title":"SDJWTPresentationClaims","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/SDJWTPresentationClaims","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"SDJWTPresentationClaims","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/SDJWTPresentationClaims#properties","content":" Property\tType\tDefined in claims\tJsonObj&lt;InputFieldFilter&gt;\tsrc/plugins/internal/oea/types.ts:40 issuer?\tstring\tsrc/plugins/internal/oea/types.ts:39 schema?\tstring\tsrc/plugins/internal/oea/types.ts:38 ","version":"Next","tagName":"h2"},{"title":"SDJWTPresentationSubmission","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/SDJWTPresentationSubmission","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"SDJWTPresentationSubmission","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/type-aliases/SDJWTPresentationSubmission#properties","content":" Property\tType\tDefined in disclosures\tany[]\tsrc/plugins/internal/oea/types.ts:44 payload\tstring\tsrc/plugins/internal/oea/types.ts:46 protected\tstring\tsrc/plugins/internal/oea/types.ts:45 signature\tstring\tsrc/plugins/internal/oea/types.ts:47 ","version":"Next","tagName":"h2"},{"title":"PRISM_JWT","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/variables/PRISM_JWT","content":"PRISM_JWT @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oea / OEA / PRISM_JWT Variable: PRISM_JWT const PRISM_JWT: &quot;prism/jwt&quot; = &quot;prism/jwt&quot; Defined in: src/plugins/internal/oea/types.ts:15","keywords":"","version":"Next"},{"title":"PRISM_SDJWT","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/variables/PRISM_SDJWT","content":"PRISM_SDJWT @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oea / OEA / PRISM_SDJWT Variable: PRISM_SDJWT const PRISM_SDJWT: &quot;vc+sd-jwt&quot; = &quot;vc+sd-jwt&quot; Defined in: src/plugins/internal/oea/types.ts:16","keywords":"","version":"Next"},{"title":"ProtocolIds","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/variables/ProtocolIds","content":"","keywords":"","version":"Next"},{"title":"Type Declaration‚Äã","type":1,"pageTitle":"ProtocolIds","url":"/docs/sdk-ts/sdk/plugins/internal/oea/namespaces/OEA/variables/ProtocolIds#type-declaration","content":" Name\tType\tDefault value\tDefined in ConnectionRequest\t&quot;https://atalaprism.io/mercury/connections/1.0/request&quot;\t&quot;https://atalaprism.io/mercury/connections/1.0/request&quot;\tsrc/plugins/internal/oea/types.ts:6 ConnectionResponse\t&quot;https://atalaprism.io/mercury/connections/1.0/response&quot;\t&quot;https://atalaprism.io/mercury/connections/1.0/response&quot;\tsrc/plugins/internal/oea/types.ts:7 Presentation\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/presentation&quot;\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/presentation&quot;\tsrc/plugins/internal/oea/types.ts:10 PrismOnboarding\t&quot;https://atalaprism.io/did-request&quot;\t&quot;https://atalaprism.io/did-request&quot;\tsrc/plugins/internal/oea/types.ts:11 PrismRevocation\t&quot;https://atalaprism.io/revocation_notification/1.0/revoke&quot;\t&quot;https://atalaprism.io/revocation_notification/1.0/revoke&quot;\tsrc/plugins/internal/oea/types.ts:12 ProposePresentation\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/propose-presentation&quot;\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/propose-presentation&quot;\tsrc/plugins/internal/oea/types.ts:8 RequestPresentation\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/request-presentation&quot;\t&quot;https://didcomm.atalaprism.io/present-proof/3.0/request-presentation&quot;\tsrc/plugins/internal/oea/types.ts:9 ","version":"Next","tagName":"h2"},{"title":"plugin","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oea/variables/plugin","content":"plugin @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oea / plugin Variable: plugin const plugin: Plugin Defined in: src/plugins/internal/oea/index.ts:27","keywords":"","version":"Next"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/","content":"","keywords":"","version":"Next"},{"title":"How to use‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/#how-to-use","content":" Typescript / esmodules  import * as OIDC from &quot;@hyperledger/identus-sdk/plugins/oidc&quot;;   Or with cjs modules  const OIDC = require(&quot;@hyperledger/identus-sdk/plugins/oidc&quot;);   ","version":"Next","tagName":"h2"},{"title":"Namespaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/#namespaces","content":" Namespace\tDescriptionProtocols\t-  ","version":"Next","tagName":"h2"},{"title":"Classes‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/#classes","content":" Class\tDescriptionAuthorizationRequest\t- AuthorizationResponse\t- CreateAuthorizationRequest\tmanage the creation of an Authorization Request CreateCredentialRequest\tcreate a CredentialRequest for the given offer a connection with the relevant Issuer must have already been established CredentialRequest\t- FetchAuthServerMeta\ttry to retrieve Authorization Server Metadata from the give URI /.well-known/openid-configuration will be appended to the URI FetchIssuerMetadata\ttry to retrieve Issuer Metadata from the given URI /.well-known/openid-credential-issuer will be appended to the uri OIDCConnection\tDefine the structure of a Connection OIDCModule\thttps://openid.net/specs/openid-4-verifiable-credential-issuance-1_0.html ParseCredentialOffer\tvalidates the offer is correctly formed OIDC Credential Offer returns the offer Typed as such ProcessCallbackUrl\tA Task encapsulates a unit of work ResolveAuthorizationRequest\tOIDC Convenience Task Credential Offer to Authorization Request ResolveCredentialRequest\tOIDC Convenience Task Credential Offer to issued Credential ResolveTokenRequest\tOIDC Convenience Task CallbackUrl to established Connection TokenRequest\t-  ","version":"Next","tagName":"h2"},{"title":"Interfaces‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/#interfaces","content":" Interface\tDescriptionAuthorizationRequestMetadata\t- CreateAuthorizationRequestArgs\t- CreateCredentialRequestArgs\t- FetchAuthServerMetaArgs\t- FetchIssuerMetadataArgs\t- ParseCredentialOfferArgs\tattempt to extract a Credential Offer from the given value ProcessCallbackUrlArgs\t- ResolveAuthorizationRequestArgs\t- ResolveCredentialRequestArgs\t- ResolveTokenRequestArgs\t-  ","version":"Next","tagName":"h2"},{"title":"Type Aliases‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/#type-aliases","content":" Type Alias\tDescriptionAuthServerMetadata\t- Context\t- CredentialOffer\t- IssuerMetadata\t- Modules\t- TokenResponse\t-  ","version":"Next","tagName":"h2"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/#variables","content":" Variable\tDescriptionAuthServerMetadata\t- CredentialOffer\t- IssuerMetadata\t- plugin\t- TokenResponse\t- ","version":"Next","tagName":"h2"},{"title":"AuthorizationResponse","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationResponse","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"AuthorizationResponse","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationResponse#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"AuthorizationResponse","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationResponse#constructor","content":" new AuthorizationResponse(callbackUrl: string | URL, code: string): AuthorizationResponse  Defined in: src/plugins/internal/oidc/protocols/AuthorizationResponse.ts:5  Parameters‚Äã  Parameter\tTypecallbackUrl\tstring | URL code\tstring  Returns‚Äã  AuthorizationResponse  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"AuthorizationResponse","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationResponse#properties","content":" Property\tModifier\tType\tDefined in code\treadonly\tstring\tsrc/plugins/internal/oidc/protocols/AuthorizationResponse.ts:3 url\treadonly\tURL\tsrc/plugins/internal/oidc/protocols/AuthorizationResponse.ts:2  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"AuthorizationResponse","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationResponse#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"issuer‚Äã","type":1,"pageTitle":"AuthorizationResponse","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationResponse#issuer","content":" Get Signature‚Äã  get issuer(): string | null  Defined in: src/plugins/internal/oidc/protocols/AuthorizationResponse.ts:18  Returns‚Äã  string | null    ","version":"Next","tagName":"h3"},{"title":"params‚Äã","type":1,"pageTitle":"AuthorizationResponse","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationResponse#params","content":" Get Signature‚Äã  get params(): URLSearchParams  Defined in: src/plugins/internal/oidc/protocols/AuthorizationResponse.ts:13  Returns‚Äã  URLSearchParams    ","version":"Next","tagName":"h3"},{"title":"state‚Äã","type":1,"pageTitle":"AuthorizationResponse","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationResponse#state","content":" Get Signature‚Äã  get state(): string | null  Defined in: src/plugins/internal/oidc/protocols/AuthorizationResponse.ts:22  Returns‚Äã  string | null ","version":"Next","tagName":"h3"},{"title":"CreateCredentialRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest","content":"","keywords":"","version":"Next"},{"title":"Param‚Äã","type":1,"pageTitle":"CreateCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest#param","content":" ","version":"Next","tagName":"h2"},{"title":"Param‚Äã","type":1,"pageTitle":"CreateCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest#param-1","content":" ","version":"Next","tagName":"h2"},{"title":"Param‚Äã","type":1,"pageTitle":"CreateCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest#param-2","content":" ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"CreateCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest#extends","content":" Task&lt;CredentialRequest, CreateCredentialRequestArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CreateCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CreateCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest#constructor","content":" new CreateCredentialRequest(...args: [CreateCredentialRequestArgs]): CreateCredentialRequest  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[CreateCredentialRequestArgs]\t  Returns‚Äã  CreateCredentialRequest  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CreateCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"CreateCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"CreateCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateCredentialRequest#run","content":" run(ctx: Context): Promise&lt;CredentialRequest&gt;  Defined in: src/plugins/internal/oidc/tasks/CreateCredentialRequest.ts:27  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;CredentialRequest&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"CreateAuthorizationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest","content":"","keywords":"","version":"Next"},{"title":"Param‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#param","content":" ","version":"Next","tagName":"h2"},{"title":"Param‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#param-1","content":" ","version":"Next","tagName":"h2"},{"title":"Param‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#param-2","content":" ","version":"Next","tagName":"h2"},{"title":"Param‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#param-3","content":" ","version":"Next","tagName":"h2"},{"title":"Param‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#param-4","content":" ","version":"Next","tagName":"h2"},{"title":"Param‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#param-5","content":" ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#extends","content":" Task&lt;AuthorizationRequest, CreateAuthorizationRequestArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#constructor","content":" new CreateAuthorizationRequest(...args: [CreateAuthorizationRequestArgs]): CreateAuthorizationRequest  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[CreateAuthorizationRequestArgs]\t  Returns‚Äã  CreateAuthorizationRequest  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"CreateAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CreateAuthorizationRequest#run","content":" run(): Promise&lt;AuthorizationRequest&gt;  Defined in: src/plugins/internal/oidc/connection/CreateAuthorizationRequest.ts:30  Returns‚Äã  Promise&lt;AuthorizationRequest&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"CredentialRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CredentialRequest","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"CredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CredentialRequest#extends","content":" ApiRequest  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"CredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CredentialRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"CredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CredentialRequest#constructor","content":" new CredentialRequest(endpoint: string | URL, body: JsonObj): CredentialRequest  Defined in: src/plugins/internal/oidc/protocols/CredentialRequest.ts:8  Parameters‚Äã  Parameter\tTypeendpoint\tstring | URL body\tJsonObj  Returns‚Äã  CredentialRequest  Overrides‚Äã  ApiRequest.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"CredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/CredentialRequest#properties","content":" Property\tModifier\tType\tDefault value\tInherited from\tDefined in body?\tpublic\tstring | JsonObj\tundefined\tApiRequest.body\tsrc/domain/models/Api.ts:40 headers\treadonly\tHeaders\tundefined\tApiRequest.headers\tsrc/domain/models/Api.ts:37 method\tpublic\tHttpMethod\t&quot;GET&quot;\tApiRequest.method\tsrc/domain/models/Api.ts:39 params\treadonly\tURLSearchParams\tundefined\tApiRequest.params\tsrc/domain/models/Api.ts:38 ProtocolId\treadonly\t&quot;OIDC_V1/CREDENTIAL_REQUEST&quot;\tProtocols.CredentialRequest\t-\tsrc/plugins/internal/oidc/protocols/CredentialRequest.ts:6 url\treadonly\tURL\tundefined\tApiRequest.url\tsrc/domain/models/Api.ts:42 ","version":"Next","tagName":"h2"},{"title":"FetchAuthServerMeta","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchAuthServerMeta","content":"","keywords":"","version":"Next"},{"title":"Param‚Äã","type":1,"pageTitle":"FetchAuthServerMeta","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchAuthServerMeta#param","content":" ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"FetchAuthServerMeta","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchAuthServerMeta#extends","content":" Task&lt;ApiResponse&lt;AuthServerMetadata&gt;, FetchAuthServerMetaArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"FetchAuthServerMeta","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchAuthServerMeta#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"FetchAuthServerMeta","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchAuthServerMeta#constructor","content":" new FetchAuthServerMeta(...args: [FetchAuthServerMetaArgs]): FetchAuthServerMeta  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[FetchAuthServerMetaArgs]\t  Returns‚Äã  FetchAuthServerMeta  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"FetchAuthServerMeta","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchAuthServerMeta#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"FetchAuthServerMeta","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchAuthServerMeta#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"FetchAuthServerMeta","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchAuthServerMeta#run","content":" run(ctx: Context): Promise&lt;ApiResponse&lt;{ acr_values_supported?: string[]; authorization_encryption_alg_values_supported?: string[]; authorization_encryption_enc_values_supported?: string[]; authorization_endpoint?: string; authorization_response_iss_parameter_supported?: boolean; authorization_signing_alg_values_supported?: string[]; backchannel_authentication_endpoint?: string; backchannel_authentication_request_signing_alg_values_supported?: string[]; backchannel_logout_session_supported?: boolean; backchannel_logout_supported?: boolean; backchannel_token_delivery_modes_supported?: string[]; backchannel_user_code_parameter_supported?: boolean; check_session_iframe?: string; claim_types_supported?: string[]; claims_locales_supported?: string[]; claims_parameter_supported?: boolean; claims_supported?: string[]; code_challenge_methods_supported?: string[]; device_authorization_endpoint?: string; display_values_supported?: string[]; dpop_signing_alg_values_supported?: string[]; end_session_endpoint?: string; frontchannel_logout_session_supported?: boolean; frontchannel_logout_supported?: boolean; grant_types_supported?: string[]; id_token_encryption_alg_values_supported?: string[]; id_token_encryption_enc_values_supported?: string[]; id_token_signing_alg_values_supported?: string[]; introspection_encryption_alg_values_supported?: string[]; introspection_encryption_enc_values_supported?: string[]; introspection_endpoint?: string; introspection_endpoint_auth_methods_supported?: string[]; introspection_endpoint_auth_signing_alg_values_supported?: string[]; introspection_signing_alg_values_supported?: string[]; issuer: string; jwks_uri?: string; mtls_endpoint_aliases?: { }; op_policy_uri?: string; op_tos_uri?: string; pushed_authorization_request_endpoint?: string; registration_endpoint?: string; request_object_encryption_alg_values_supported?: string[]; request_object_encryption_enc_values_supported?: string[]; request_object_signing_alg_values_supported?: string[]; request_parameter_supported?: boolean; request_uri_parameter_supported?: boolean; require_pushed_authorization_requests?: boolean; require_request_uri_registration?: boolean; require_signed_request_object?: boolean; response_modes_supported?: string[]; response_types_supported?: string[]; revocation_endpoint?: string; revocation_endpoint_auth_methods_supported?: string[]; revocation_endpoint_auth_signing_alg_values_supported?: string[]; scopes_supported?: string[]; service_documentation?: string; signed_metadata?: string; subject_types_supported?: string[]; tls_client_certificate_bound_access_tokens?: boolean; token_endpoint?: string; token_endpoint_auth_methods_supported?: string[]; token_endpoint_auth_signing_alg_values_supported?: string[]; ui_locales_supported?: string[]; userinfo_encryption_alg_values_supported?: string[]; userinfo_encryption_enc_values_supported?: string[]; userinfo_endpoint?: string; userinfo_signing_alg_values_supported?: string[]; }&gt;&gt;  Defined in: src/plugins/internal/oidc/tasks/FetchAuthServerMeta.ts:19  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;ApiResponse&lt;{ acr_values_supported?: string[]; authorization_encryption_alg_values_supported?: string[]; authorization_encryption_enc_values_supported?: string[]; authorization_endpoint?: string; authorization_response_iss_parameter_supported?: boolean; authorization_signing_alg_values_supported?: string[]; backchannel_authentication_endpoint?: string; backchannel_authentication_request_signing_alg_values_supported?: string[]; backchannel_logout_session_supported?: boolean; backchannel_logout_supported?: boolean; backchannel_token_delivery_modes_supported?: string[]; backchannel_user_code_parameter_supported?: boolean; check_session_iframe?: string; claim_types_supported?: string[]; claims_locales_supported?: string[]; claims_parameter_supported?: boolean; claims_supported?: string[]; code_challenge_methods_supported?: string[]; device_authorization_endpoint?: string; display_values_supported?: string[]; dpop_signing_alg_values_supported?: string[]; end_session_endpoint?: string; frontchannel_logout_session_supported?: boolean; frontchannel_logout_supported?: boolean; grant_types_supported?: string[]; id_token_encryption_alg_values_supported?: string[]; id_token_encryption_enc_values_supported?: string[]; id_token_signing_alg_values_supported?: string[]; introspection_encryption_alg_values_supported?: string[]; introspection_encryption_enc_values_supported?: string[]; introspection_endpoint?: string; introspection_endpoint_auth_methods_supported?: string[]; introspection_endpoint_auth_signing_alg_values_supported?: string[]; introspection_signing_alg_values_supported?: string[]; issuer: string; jwks_uri?: string; mtls_endpoint_aliases?: { }; op_policy_uri?: string; op_tos_uri?: string; pushed_authorization_request_endpoint?: string; registration_endpoint?: string; request_object_encryption_alg_values_supported?: string[]; request_object_encryption_enc_values_supported?: string[]; request_object_signing_alg_values_supported?: string[]; request_parameter_supported?: boolean; request_uri_parameter_supported?: boolean; require_pushed_authorization_requests?: boolean; require_request_uri_registration?: boolean; require_signed_request_object?: boolean; response_modes_supported?: string[]; response_types_supported?: string[]; revocation_endpoint?: string; revocation_endpoint_auth_methods_supported?: string[]; revocation_endpoint_auth_signing_alg_values_supported?: string[]; scopes_supported?: string[]; service_documentation?: string; signed_metadata?: string; subject_types_supported?: string[]; tls_client_certificate_bound_access_tokens?: boolean; token_endpoint?: string; token_endpoint_auth_methods_supported?: string[]; token_endpoint_auth_signing_alg_values_supported?: string[]; ui_locales_supported?: string[]; userinfo_encryption_alg_values_supported?: string[]; userinfo_encryption_enc_values_supported?: string[]; userinfo_endpoint?: string; userinfo_signing_alg_values_supported?: string[]; }&gt;&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"FetchIssuerMetadata","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchIssuerMetadata","content":"","keywords":"","version":"Next"},{"title":"See‚Äã","type":1,"pageTitle":"FetchIssuerMetadata","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchIssuerMetadata#see","content":" OIDC Issuer Metadata  ","version":"Next","tagName":"h2"},{"title":"Param‚Äã","type":1,"pageTitle":"FetchIssuerMetadata","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchIssuerMetadata#param","content":" ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"FetchIssuerMetadata","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchIssuerMetadata#extends","content":" Task&lt;IssuerMetadata, FetchIssuerMetadataArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"FetchIssuerMetadata","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchIssuerMetadata#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"FetchIssuerMetadata","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchIssuerMetadata#constructor","content":" new FetchIssuerMetadata(...args: [FetchIssuerMetadataArgs]): FetchIssuerMetadata  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[FetchIssuerMetadataArgs]\t  Returns‚Äã  FetchIssuerMetadata  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"FetchIssuerMetadata","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchIssuerMetadata#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"FetchIssuerMetadata","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchIssuerMetadata#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"FetchIssuerMetadata","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/FetchIssuerMetadata#run","content":" run(ctx: Context): Promise&lt;{ authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }&gt;  Defined in: src/plugins/internal/oidc/tasks/FetchIssuerMetadata.ts:19  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;{ authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"OIDCConnection","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCConnection","content":"","keywords":"","version":"Next"},{"title":"Implements‚Äã","type":1,"pageTitle":"OIDCConnection","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCConnection#implements","content":" Connection  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"OIDCConnection","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCConnection#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"OIDCConnection","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCConnection#constructor","content":" new OIDCConnection(issuerMeta: { authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }, scopes: string[]): OIDCConnection  Defined in: src/plugins/internal/oidc/connection/OIDCConnection.ts:12  Parameters‚Äã  Parameter\tTypeissuerMeta\t{ authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; } issuerMeta.authorization_servers?\tstring[] issuerMeta.batch_credential_endpoint?\tstring issuerMeta.credential_configurations_supported\t{[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; } issuerMeta.credential_endpoint\tstring issuerMeta.credential_identifiers_supported?\tboolean issuerMeta.credential_issuer\tstring issuerMeta.credential_response_encryption?\t{ alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; } issuerMeta.credential_response_encryption.alg_values_supported\tstring[] issuerMeta.credential_response_encryption.enc_values_supported\tstring[] issuerMeta.credential_response_encryption.encryption_required\tboolean issuerMeta.deferred_credential_endpoint?\tstring issuerMeta.display?\t{ } issuerMeta.notification_endpoint?\tstring issuerMeta.signed_metadata?\tstring scopes\tstring[]  Returns‚Äã  OIDCConnection  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"OIDCConnection","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCConnection#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tDefined in issuerMeta\treadonly\t{ authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }\tundefined\t-\tsrc/plugins/internal/oidc/connection/OIDCConnection.ts:13 issuerMeta.authorization_servers?\tpublic\tstring[]\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:86 issuerMeta.batch_credential_endpoint?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:95 issuerMeta.credential_configurations_supported\tpublic\t{[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:111 issuerMeta.credential_endpoint\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:90 issuerMeta.credential_identifiers_supported?\tpublic\tboolean\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:175 issuerMeta.credential_issuer\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:80 issuerMeta.credential_response_encryption?\tpublic\t{ alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:155 issuerMeta.credential_response_encryption.alg_values_supported\tpublic\tstring[]\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:159 issuerMeta.credential_response_encryption.enc_values_supported\tpublic\tstring[]\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:163 issuerMeta.credential_response_encryption.encryption_required\tpublic\tboolean\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:169 issuerMeta.deferred_credential_endpoint?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:100 issuerMeta.display?\tpublic\t{ }\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:178 issuerMeta.notification_endpoint?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:105 issuerMeta.signed_metadata?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:108 scopes\treadonly\tstring[]\tundefined\t-\tsrc/plugins/internal/oidc/connection/OIDCConnection.ts:14 state\tpublic\tState\tConnection.State.NEW\tcurrent condition of the connection\tsrc/plugins/internal/oidc/connection/OIDCConnection.ts:8 tokenResponse?\tpublic\t{ access_token: string; c_nonce?: string; c_nonce_expires_in?: number; expires_in?: number; id_token?: string; refresh_expires_in?: number; refresh_token?: string; scope?: string; session_state?: string; token_type: string; }\tundefined\t-\tsrc/plugins/internal/oidc/connection/OIDCConnection.ts:9 tokenResponse.access_token\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:545 tokenResponse.c_nonce?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:548 tokenResponse.c_nonce_expires_in?\tpublic\tnumber\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:549 tokenResponse.expires_in?\tpublic\tnumber\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:547 tokenResponse.id_token?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:552 tokenResponse.refresh_expires_in?\tpublic\tnumber\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:551 tokenResponse.refresh_token?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:550 tokenResponse.scope?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:553 tokenResponse.session_state?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:554 tokenResponse.token_type\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:546 uri\treadonly\tstring\tundefined\tunique identifer for the connection\tsrc/plugins/internal/oidc/connection/OIDCConnection.ts:10  ","version":"Next","tagName":"h2"},{"title":"Methods‚Äã","type":1,"pageTitle":"OIDCConnection","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCConnection#methods","content":" ","version":"Next","tagName":"h2"},{"title":"send()‚Äã","type":1,"pageTitle":"OIDCConnection","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCConnection#send","content":" send(request: any, ctx: Context): Promise&lt;ApiResponse&lt;unknown&gt; | undefined&gt;  Defined in: src/plugins/internal/oidc/connection/OIDCConnection.ts:19  handle delivering a Message to the connected entity  Parameters‚Äã  Parameter\tTyperequest\tany ctx\tContext  Returns‚Äã  Promise&lt;ApiResponse&lt;unknown&gt; | undefined&gt;  Implementation of‚Äã  Connection.send ","version":"Next","tagName":"h3"},{"title":"OIDCModule","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCModule","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"OIDCModule","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCModule#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"OIDCModule","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCModule#constructor","content":" new OIDCModule(): OIDCModule  Returns‚Äã  OIDCModule  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"OIDCModule","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/OIDCModule#properties","content":" Property\tModifier\tType\tDefault value\tDefined in clientId\tpublic\tstring | undefined\tundefined\tsrc/plugins/internal/oidc/module.ts:6 ","version":"Next","tagName":"h2"},{"title":"ParseCredentialOffer","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ParseCredentialOffer","content":"","keywords":"","version":"Next"},{"title":"Param‚Äã","type":1,"pageTitle":"ParseCredentialOffer","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ParseCredentialOffer#param","content":" json object  ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"ParseCredentialOffer","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ParseCredentialOffer#extends","content":" Task&lt;CredentialOffer, ParseCredentialOfferArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ParseCredentialOffer","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ParseCredentialOffer#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ParseCredentialOffer","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ParseCredentialOffer#constructor","content":" new ParseCredentialOffer(...args: [ParseCredentialOfferArgs]): ParseCredentialOffer  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[ParseCredentialOfferArgs]\t  Returns‚Äã  ParseCredentialOffer  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"ParseCredentialOffer","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ParseCredentialOffer#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"ParseCredentialOffer","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ParseCredentialOffer#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"ParseCredentialOffer","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ParseCredentialOffer#run","content":" run(ctx: Context): Promise&lt;{ credential_configuration_ids: string[]; credential_issuer: string; grants?: { authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }; }&gt;  Defined in: src/plugins/internal/oidc/tasks/ParseCredentialOffer.ts:24  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;{ credential_configuration_ids: string[]; credential_issuer: string; grants?: { authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }; }&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"ProcessCallbackUrl","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ProcessCallbackUrl","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"ProcessCallbackUrl","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ProcessCallbackUrl#extends","content":" Task&lt;AuthorizationResponse, ProcessCallbackUrlArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ProcessCallbackUrl","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ProcessCallbackUrl#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ProcessCallbackUrl","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ProcessCallbackUrl#constructor","content":" new ProcessCallbackUrl(...args: [ProcessCallbackUrlArgs]): ProcessCallbackUrl  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[ProcessCallbackUrlArgs]\t  Returns‚Äã  ProcessCallbackUrl  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"ProcessCallbackUrl","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ProcessCallbackUrl#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"ProcessCallbackUrl","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ProcessCallbackUrl#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"ProcessCallbackUrl","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ProcessCallbackUrl#run","content":" run(): Promise&lt;AuthorizationResponse&gt;  Defined in: src/plugins/internal/oidc/connection/ProcessCallbackUrl.ts:12  Returns‚Äã  Promise&lt;AuthorizationResponse&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"AuthorizationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationRequest","content":"","keywords":"","version":"Next"},{"title":"Constructors‚Äã","type":1,"pageTitle":"AuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"AuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationRequest#constructor","content":" new AuthorizationRequest(authServerMeta: { acr_values_supported?: string[]; authorization_encryption_alg_values_supported?: string[]; authorization_encryption_enc_values_supported?: string[]; authorization_endpoint?: string; authorization_response_iss_parameter_supported?: boolean; authorization_signing_alg_values_supported?: string[]; backchannel_authentication_endpoint?: string; backchannel_authentication_request_signing_alg_values_supported?: string[]; backchannel_logout_session_supported?: boolean; backchannel_logout_supported?: boolean; backchannel_token_delivery_modes_supported?: string[]; backchannel_user_code_parameter_supported?: boolean; check_session_iframe?: string; claim_types_supported?: string[]; claims_locales_supported?: string[]; claims_parameter_supported?: boolean; claims_supported?: string[]; code_challenge_methods_supported?: string[]; device_authorization_endpoint?: string; display_values_supported?: string[]; dpop_signing_alg_values_supported?: string[]; end_session_endpoint?: string; frontchannel_logout_session_supported?: boolean; frontchannel_logout_supported?: boolean; grant_types_supported?: string[]; id_token_encryption_alg_values_supported?: string[]; id_token_encryption_enc_values_supported?: string[]; id_token_signing_alg_values_supported?: string[]; introspection_encryption_alg_values_supported?: string[]; introspection_encryption_enc_values_supported?: string[]; introspection_endpoint?: string; introspection_endpoint_auth_methods_supported?: string[]; introspection_endpoint_auth_signing_alg_values_supported?: string[]; introspection_signing_alg_values_supported?: string[]; issuer: string; jwks_uri?: string; mtls_endpoint_aliases?: { }; op_policy_uri?: string; op_tos_uri?: string; pushed_authorization_request_endpoint?: string; registration_endpoint?: string; request_object_encryption_alg_values_supported?: string[]; request_object_encryption_enc_values_supported?: string[]; request_object_signing_alg_values_supported?: string[]; request_parameter_supported?: boolean; request_uri_parameter_supported?: boolean; require_pushed_authorization_requests?: boolean; require_request_uri_registration?: boolean; require_signed_request_object?: boolean; response_modes_supported?: string[]; response_types_supported?: string[]; revocation_endpoint?: string; revocation_endpoint_auth_methods_supported?: string[]; revocation_endpoint_auth_signing_alg_values_supported?: string[]; scopes_supported?: string[]; service_documentation?: string; signed_metadata?: string; subject_types_supported?: string[]; tls_client_certificate_bound_access_tokens?: boolean; token_endpoint?: string; token_endpoint_auth_methods_supported?: string[]; token_endpoint_auth_signing_alg_values_supported?: string[]; ui_locales_supported?: string[]; userinfo_encryption_alg_values_supported?: string[]; userinfo_encryption_enc_values_supported?: string[]; userinfo_endpoint?: string; userinfo_signing_alg_values_supported?: string[]; }, issuerMeta: { authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }): AuthorizationRequest  Defined in: src/plugins/internal/oidc/protocols/AuthorizationRequest.ts:13  Parameters‚Äã  Parameter\tType\tDescriptionauthServerMeta\t{ acr_values_supported?: string[]; authorization_encryption_alg_values_supported?: string[]; authorization_encryption_enc_values_supported?: string[]; authorization_endpoint?: string; authorization_response_iss_parameter_supported?: boolean; authorization_signing_alg_values_supported?: string[]; backchannel_authentication_endpoint?: string; backchannel_authentication_request_signing_alg_values_supported?: string[]; backchannel_logout_session_supported?: boolean; backchannel_logout_supported?: boolean; backchannel_token_delivery_modes_supported?: string[]; backchannel_user_code_parameter_supported?: boolean; check_session_iframe?: string; claim_types_supported?: string[]; claims_locales_supported?: string[]; claims_parameter_supported?: boolean; claims_supported?: string[]; code_challenge_methods_supported?: string[]; device_authorization_endpoint?: string; display_values_supported?: string[]; dpop_signing_alg_values_supported?: string[]; end_session_endpoint?: string; frontchannel_logout_session_supported?: boolean; frontchannel_logout_supported?: boolean; grant_types_supported?: string[]; id_token_encryption_alg_values_supported?: string[]; id_token_encryption_enc_values_supported?: string[]; id_token_signing_alg_values_supported?: string[]; introspection_encryption_alg_values_supported?: string[]; introspection_encryption_enc_values_supported?: string[]; introspection_endpoint?: string; introspection_endpoint_auth_methods_supported?: string[]; introspection_endpoint_auth_signing_alg_values_supported?: string[]; introspection_signing_alg_values_supported?: string[]; issuer: string; jwks_uri?: string; mtls_endpoint_aliases?: { }; op_policy_uri?: string; op_tos_uri?: string; pushed_authorization_request_endpoint?: string; registration_endpoint?: string; request_object_encryption_alg_values_supported?: string[]; request_object_encryption_enc_values_supported?: string[]; request_object_signing_alg_values_supported?: string[]; request_parameter_supported?: boolean; request_uri_parameter_supported?: boolean; require_pushed_authorization_requests?: boolean; require_request_uri_registration?: boolean; require_signed_request_object?: boolean; response_modes_supported?: string[]; response_types_supported?: string[]; revocation_endpoint?: string; revocation_endpoint_auth_methods_supported?: string[]; revocation_endpoint_auth_signing_alg_values_supported?: string[]; scopes_supported?: string[]; service_documentation?: string; signed_metadata?: string; subject_types_supported?: string[]; tls_client_certificate_bound_access_tokens?: boolean; token_endpoint?: string; token_endpoint_auth_methods_supported?: string[]; token_endpoint_auth_signing_alg_values_supported?: string[]; ui_locales_supported?: string[]; userinfo_encryption_alg_values_supported?: string[]; userinfo_encryption_enc_values_supported?: string[]; userinfo_endpoint?: string; userinfo_signing_alg_values_supported?: string[]; }\t- authServerMeta.acr_values_supported?\tstring[]\tJSON array containing a list of the Authentication Context Class References that this authorization server supports. authServerMeta.authorization_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response encryption (alg value). authServerMeta.authorization_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response encryption (enc value). authServerMeta.authorization_endpoint?\tstring\tURL of the authorization server's authorization endpoint. authServerMeta.authorization_response_iss_parameter_supported?\tboolean\tBoolean value indicating whether the authorization server provides the iss parameter in the authorization response. authServerMeta.authorization_signing_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response signing. authServerMeta.backchannel_authentication_endpoint?\tstring\tCIBA Backchannel Authentication Endpoint. authServerMeta.backchannel_authentication_request_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported for validation of signed CIBA authentication requests. authServerMeta.backchannel_logout_session_supported?\tboolean\tBoolean value specifying whether the authorization server can pass a sid (session ID) Claim in the Logout Token to identify the RP session with the OP. authServerMeta.backchannel_logout_supported?\tboolean\tBoolean value specifying whether the authorization server supports back-channel logout. authServerMeta.backchannel_token_delivery_modes_supported?\tstring[]\tSupported CIBA authentication result delivery modes. authServerMeta.backchannel_user_code_parameter_supported?\tboolean\tIndicates whether the authorization server supports the use of the CIBA user_code parameter. authServerMeta.check_session_iframe?\tstring\tURL of an authorization server iframe that supports cross-origin communications for session state information with the RP Client, using the HTML5 postMessage API. authServerMeta.claim_types_supported?\tstring[]\tJSON array containing a list of the Claim Types that the authorization server supports. authServerMeta.claims_locales_supported?\tstring[]\tLanguages and scripts supported for values in Claims being returned, represented as a JSON array of RFC 5646 language tag values. authServerMeta.claims_parameter_supported?\tboolean\tBoolean value specifying whether the authorization server supports use of the claims parameter. authServerMeta.claims_supported?\tstring[]\tJSON array containing a list of the Claim Names of the Claims that the authorization server MAY be able to supply values for. authServerMeta.code_challenge_methods_supported?\tstring[]\tPKCE code challenge methods supported by this authorization server. authServerMeta.device_authorization_endpoint?\tstring\tURL of the authorization server's device authorization endpoint. authServerMeta.display_values_supported?\tstring[]\tJSON array containing a list of the display parameter values that the authorization server supports. authServerMeta.dpop_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS algorithms supported for DPoP proof JWTs. authServerMeta.end_session_endpoint?\tstring\tURL at the authorization server to which an RP can perform a redirect to request that the End-User be logged out at the authorization server. authServerMeta.frontchannel_logout_session_supported?\tboolean\tBoolean value specifying whether the authorization server can pass iss (issuer) and sid (session ID) query parameters to identify the RP session with the authorization server when the frontchannel_logout_uri is used. authServerMeta.frontchannel_logout_supported?\tboolean\tBoolean value specifying whether the authorization server supports HTTP-based logout. authServerMeta.grant_types_supported?\tstring[]\tJSON array containing a list of the grant_type values that this authorization server supports. authServerMeta.id_token_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of the JWE alg values supported by the authorization server for the ID Token. authServerMeta.id_token_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of the JWE enc values supported by the authorization server for the ID Token. authServerMeta.id_token_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS alg values supported by the authorization server for the ID Token. authServerMeta.introspection_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response content key encryption (alg value). authServerMeta.introspection_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response content encryption (enc value). authServerMeta.introspection_endpoint?\tstring\tURL of the authorization server's introspection endpoint. authServerMeta.introspection_endpoint_auth_methods_supported?\tstring[]\tJSON array containing a list of client authentication methods supported by this introspection endpoint. authServerMeta.introspection_endpoint_auth_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported by the introspection endpoint for the signature on the JWT used to authenticate the client at the introspection endpoint. authServerMeta.introspection_signing_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response signing. authServerMeta.issuer\tstring\tAuthorization server's Issuer Identifier URL. authServerMeta.jwks_uri?\tstring\tURL of the authorization server's JWK Set document. authServerMeta.mtls_endpoint_aliases?\t{ }\tJSON object containing alternative authorization server endpoints, which a client intending to do mutual TLS will use in preference to the conventional endpoints. authServerMeta.op_policy_uri?\tstring\tURL that the authorization server provides to the person registering the client to read about the authorization server's requirements on how the client can use the data provided by the authorization server. authServerMeta.op_tos_uri?\tstring\tURL that the authorization server provides to the person registering the client to read about the authorization server's terms of service. authServerMeta.pushed_authorization_request_endpoint?\tstring\tURL of the authorization server's pushed authorization request endpoint. authServerMeta.registration_endpoint?\tstring\tURL of the authorization server's Dynamic Client Registration Endpoint. authServerMeta.request_object_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of the JWE alg values supported by the authorization server for Request Objects. authServerMeta.request_object_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of the JWE enc values supported by the authorization server for Request Objects. authServerMeta.request_object_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS alg values supported by the authorization server for Request Objects. authServerMeta.request_parameter_supported?\tboolean\tBoolean value specifying whether the authorization server supports use of the request parameter. authServerMeta.request_uri_parameter_supported?\tboolean\tBoolean value specifying whether the authorization server supports use of the request_uri parameter. authServerMeta.require_pushed_authorization_requests?\tboolean\tIndicates whether the authorization server accepts authorization requests only via PAR. authServerMeta.require_request_uri_registration?\tboolean\tBoolean value specifying whether the authorization server requires any request_uri values used to be pre-registered. authServerMeta.require_signed_request_object?\tboolean\tIndicates where authorization request needs to be protected as Request Object and provided through either request or request_uri parameter. authServerMeta.response_modes_supported?\tstring[]\tJSON array containing a list of the response_mode values that this authorization server supports. authServerMeta.response_types_supported?\tstring[]\tJSON array containing a list of the response_type values that this authorization server supports. authServerMeta.revocation_endpoint?\tstring\tURL of the authorization server's revocation endpoint. authServerMeta.revocation_endpoint_auth_methods_supported?\tstring[]\tJSON array containing a list of client authentication methods supported by this revocation endpoint. authServerMeta.revocation_endpoint_auth_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported by the revocation endpoint for the signature on the JWT used to authenticate the client at the revocation endpoint. authServerMeta.scopes_supported?\tstring[]\tJSON array containing a list of the scope values that this authorization server supports. authServerMeta.service_documentation?\tstring\tURL of a page containing human-readable information that developers might want or need to know when using the authorization server. authServerMeta.signed_metadata?\tstring\tSigned JWT containing metadata values about the authorization server as claims. authServerMeta.subject_types_supported?\tstring[]\tJSON array containing a list of the Subject Identifier types that this authorization server supports. authServerMeta.tls_client_certificate_bound_access_tokens?\tboolean\tIndicates authorization server support for mutual-TLS client certificate-bound access tokens. authServerMeta.token_endpoint?\tstring\tURL of the authorization server's token endpoint. authServerMeta.token_endpoint_auth_methods_supported?\tstring[]\tJSON array containing a list of client authentication methods supported by this token endpoint. authServerMeta.token_endpoint_auth_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported by the token endpoint for the signature on the JWT used to authenticate the client at the token endpoint. authServerMeta.ui_locales_supported?\tstring[]\tLanguages and scripts supported for the user interface, represented as a JSON array of language tag values from RFC 5646. authServerMeta.userinfo_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of the JWE alg values supported by the UserInfo Endpoint. authServerMeta.userinfo_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of the JWE enc values supported by the UserInfo Endpoint. authServerMeta.userinfo_endpoint?\tstring\tURL of the authorization server's UserInfo Endpoint. authServerMeta.userinfo_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS alg values supported by the UserInfo Endpoint. issuerMeta\t{ authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }\t- issuerMeta.authorization_servers?\tstring[]\t- issuerMeta.batch_credential_endpoint?\tstring\t- issuerMeta.credential_configurations_supported\t{[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }\t- issuerMeta.credential_endpoint\tstring\t- issuerMeta.credential_identifiers_supported?\tboolean\t- issuerMeta.credential_issuer\tstring\t- issuerMeta.credential_response_encryption?\t{ alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }\t- issuerMeta.credential_response_encryption.alg_values_supported\tstring[]\t- issuerMeta.credential_response_encryption.enc_values_supported\tstring[]\t- issuerMeta.credential_response_encryption.encryption_required\tboolean\t- issuerMeta.deferred_credential_endpoint?\tstring\t- issuerMeta.display?\t{ }\t- issuerMeta.notification_endpoint?\tstring\t- issuerMeta.signed_metadata?\tstring\t-  Returns‚Äã  AuthorizationRequest  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"AuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationRequest#properties","content":" Property\tModifier\tType\tDefault value\tDescription\tDefined in authServerMeta\treadonly\t{ acr_values_supported?: string[]; authorization_encryption_alg_values_supported?: string[]; authorization_encryption_enc_values_supported?: string[]; authorization_endpoint?: string; authorization_response_iss_parameter_supported?: boolean; authorization_signing_alg_values_supported?: string[]; backchannel_authentication_endpoint?: string; backchannel_authentication_request_signing_alg_values_supported?: string[]; backchannel_logout_session_supported?: boolean; backchannel_logout_supported?: boolean; backchannel_token_delivery_modes_supported?: string[]; backchannel_user_code_parameter_supported?: boolean; check_session_iframe?: string; claim_types_supported?: string[]; claims_locales_supported?: string[]; claims_parameter_supported?: boolean; claims_supported?: string[]; code_challenge_methods_supported?: string[]; device_authorization_endpoint?: string; display_values_supported?: string[]; dpop_signing_alg_values_supported?: string[]; end_session_endpoint?: string; frontchannel_logout_session_supported?: boolean; frontchannel_logout_supported?: boolean; grant_types_supported?: string[]; id_token_encryption_alg_values_supported?: string[]; id_token_encryption_enc_values_supported?: string[]; id_token_signing_alg_values_supported?: string[]; introspection_encryption_alg_values_supported?: string[]; introspection_encryption_enc_values_supported?: string[]; introspection_endpoint?: string; introspection_endpoint_auth_methods_supported?: string[]; introspection_endpoint_auth_signing_alg_values_supported?: string[]; introspection_signing_alg_values_supported?: string[]; issuer: string; jwks_uri?: string; mtls_endpoint_aliases?: { }; op_policy_uri?: string; op_tos_uri?: string; pushed_authorization_request_endpoint?: string; registration_endpoint?: string; request_object_encryption_alg_values_supported?: string[]; request_object_encryption_enc_values_supported?: string[]; request_object_signing_alg_values_supported?: string[]; request_parameter_supported?: boolean; request_uri_parameter_supported?: boolean; require_pushed_authorization_requests?: boolean; require_request_uri_registration?: boolean; require_signed_request_object?: boolean; response_modes_supported?: string[]; response_types_supported?: string[]; revocation_endpoint?: string; revocation_endpoint_auth_methods_supported?: string[]; revocation_endpoint_auth_signing_alg_values_supported?: string[]; scopes_supported?: string[]; service_documentation?: string; signed_metadata?: string; subject_types_supported?: string[]; tls_client_certificate_bound_access_tokens?: boolean; token_endpoint?: string; token_endpoint_auth_methods_supported?: string[]; token_endpoint_auth_signing_alg_values_supported?: string[]; ui_locales_supported?: string[]; userinfo_encryption_alg_values_supported?: string[]; userinfo_encryption_enc_values_supported?: string[]; userinfo_endpoint?: string; userinfo_signing_alg_values_supported?: string[]; }\tundefined\t-\tsrc/plugins/internal/oidc/protocols/AuthorizationRequest.ts:14 authServerMeta.acr_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the Authentication Context Class References that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:354 authServerMeta.authorization_encryption_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of algorithms supported by the authorization server for introspection response encryption (alg value).\tsrc/plugins/internal/oidc/types.ts:483 authServerMeta.authorization_encryption_enc_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of algorithms supported by the authorization server for introspection response encryption (enc value).\tsrc/plugins/internal/oidc/types.ts:488 authServerMeta.authorization_endpoint?\tpublic\tstring\tundefined\tURL of the authorization server's authorization endpoint.\tsrc/plugins/internal/oidc/types.ts:234 authServerMeta.authorization_response_iss_parameter_supported?\tpublic\tboolean\tundefined\tBoolean value indicating whether the authorization server provides the iss parameter in the authorization response.\tsrc/plugins/internal/oidc/types.ts:473 authServerMeta.authorization_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of algorithms supported by the authorization server for introspection response signing.\tsrc/plugins/internal/oidc/types.ts:478 authServerMeta.backchannel_authentication_endpoint?\tpublic\tstring\tundefined\tCIBA Backchannel Authentication Endpoint.\tsrc/plugins/internal/oidc/types.ts:492 authServerMeta.backchannel_authentication_request_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWS signing algorithms supported for validation of signed CIBA authentication requests.\tsrc/plugins/internal/oidc/types.ts:497 authServerMeta.backchannel_logout_session_supported?\tpublic\tboolean\tundefined\tBoolean value specifying whether the authorization server can pass a sid (session ID) Claim in the Logout Token to identify the RP session with the OP.\tsrc/plugins/internal/oidc/types.ts:534 authServerMeta.backchannel_logout_supported?\tpublic\tboolean\tundefined\tBoolean value specifying whether the authorization server supports back-channel logout.\tsrc/plugins/internal/oidc/types.ts:538 authServerMeta.backchannel_token_delivery_modes_supported?\tpublic\tstring[]\tundefined\tSupported CIBA authentication result delivery modes.\tsrc/plugins/internal/oidc/types.ts:501 authServerMeta.backchannel_user_code_parameter_supported?\tpublic\tboolean\tundefined\tIndicates whether the authorization server supports the use of the CIBA user_code parameter.\tsrc/plugins/internal/oidc/types.ts:505 authServerMeta.check_session_iframe?\tpublic\tstring\tundefined\tURL of an authorization server iframe that supports cross-origin communications for session state information with the RP Client, using the HTML5 postMessage API.\tsrc/plugins/internal/oidc/types.ts:510 authServerMeta.claim_types_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the Claim Types that the authorization server supports.\tsrc/plugins/internal/oidc/types.ts:410 authServerMeta.claims_locales_supported?\tpublic\tstring[]\tundefined\tLanguages and scripts supported for values in Claims being returned, represented as a JSON array of RFC 5646 language tag values.\tsrc/plugins/internal/oidc/types.ts:420 authServerMeta.claims_parameter_supported?\tpublic\tboolean\tundefined\tBoolean value specifying whether the authorization server supports use of the claims parameter.\tsrc/plugins/internal/oidc/types.ts:425 authServerMeta.claims_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the Claim Names of the Claims that the authorization server MAY be able to supply values for.\tsrc/plugins/internal/oidc/types.ts:415 authServerMeta.code_challenge_methods_supported?\tpublic\tstring[]\tundefined\tPKCE code challenge methods supported by this authorization server.\tsrc/plugins/internal/oidc/types.ts:328 authServerMeta.device_authorization_endpoint?\tpublic\tstring\tundefined\tURL of the authorization server's device authorization endpoint.\tsrc/plugins/internal/oidc/types.ts:336 authServerMeta.display_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the display parameter values that the authorization server supports.\tsrc/plugins/internal/oidc/types.ts:406 authServerMeta.dpop_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWS algorithms supported for DPoP proof JWTs.\tsrc/plugins/internal/oidc/types.ts:514 authServerMeta.end_session_endpoint?\tpublic\tstring\tundefined\tURL at the authorization server to which an RP can perform a redirect to request that the End-User be logged out at the authorization server.\tsrc/plugins/internal/oidc/types.ts:519 authServerMeta.frontchannel_logout_session_supported?\tpublic\tboolean\tundefined\tBoolean value specifying whether the authorization server can pass iss (issuer) and sid (session ID) query parameters to identify the RP session with the authorization server when the frontchannel_logout_uri is used.\tsrc/plugins/internal/oidc/types.ts:525 authServerMeta.frontchannel_logout_supported?\tpublic\tboolean\tundefined\tBoolean value specifying whether the authorization server supports HTTP-based logout.\tsrc/plugins/internal/oidc/types.ts:529 authServerMeta.grant_types_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the grant_type values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:265 authServerMeta.id_token_encryption_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWE alg values supported by the authorization server for the ID Token.\tsrc/plugins/internal/oidc/types.ts:369 authServerMeta.id_token_encryption_enc_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWE enc values supported by the authorization server for the ID Token.\tsrc/plugins/internal/oidc/types.ts:374 authServerMeta.id_token_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWS alg values supported by the authorization server for the ID Token.\tsrc/plugins/internal/oidc/types.ts:364 authServerMeta.introspection_encryption_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of algorithms supported by the authorization server for introspection response content key encryption (alg value).\tsrc/plugins/internal/oidc/types.ts:463 authServerMeta.introspection_encryption_enc_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of algorithms supported by the authorization server for introspection response content encryption (enc value).\tsrc/plugins/internal/oidc/types.ts:468 authServerMeta.introspection_endpoint?\tpublic\tstring\tundefined\tURL of the authorization server's introspection endpoint.\tsrc/plugins/internal/oidc/types.ts:313 authServerMeta.introspection_endpoint_auth_methods_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of client authentication methods supported by this introspection endpoint.\tsrc/plugins/internal/oidc/types.ts:318 authServerMeta.introspection_endpoint_auth_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWS signing algorithms supported by the introspection endpoint for the signature on the JWT used to authenticate the client at the introspection endpoint.\tsrc/plugins/internal/oidc/types.ts:324 authServerMeta.introspection_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of algorithms supported by the authorization server for introspection response signing.\tsrc/plugins/internal/oidc/types.ts:458 authServerMeta.issuer\tpublic\tstring\tundefined\tAuthorization server's Issuer Identifier URL.\tsrc/plugins/internal/oidc/types.ts:230 authServerMeta.jwks_uri?\tpublic\tstring\tundefined\tURL of the authorization server's JWK Set document.\tsrc/plugins/internal/oidc/types.ts:242 authServerMeta.mtls_endpoint_aliases?\tpublic\t{ }\tundefined\tJSON object containing alternative authorization server endpoints, which a client intending to do mutual TLS will use in preference to the conventional endpoints.\tsrc/plugins/internal/oidc/types.ts:345 authServerMeta.op_policy_uri?\tpublic\tstring\tundefined\tURL that the authorization server provides to the person registering the client to read about the authorization server's requirements on how the client can use the data provided by the authorization server.\tsrc/plugins/internal/oidc/types.ts:290 authServerMeta.op_tos_uri?\tpublic\tstring\tundefined\tURL that the authorization server provides to the person registering the client to read about the authorization server's terms of service.\tsrc/plugins/internal/oidc/types.ts:295 authServerMeta.pushed_authorization_request_endpoint?\tpublic\tstring\tundefined\tURL of the authorization server's pushed authorization request endpoint.\tsrc/plugins/internal/oidc/types.ts:449 authServerMeta.registration_endpoint?\tpublic\tstring\tundefined\tURL of the authorization server's Dynamic Client Registration Endpoint.\tsrc/plugins/internal/oidc/types.ts:246 authServerMeta.request_object_encryption_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWE alg values supported by the authorization server for Request Objects.\tsrc/plugins/internal/oidc/types.ts:396 authServerMeta.request_object_encryption_enc_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWE enc values supported by the authorization server for Request Objects.\tsrc/plugins/internal/oidc/types.ts:401 authServerMeta.request_object_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWS alg values supported by the authorization server for Request Objects.\tsrc/plugins/internal/oidc/types.ts:391 authServerMeta.request_parameter_supported?\tpublic\tboolean\tundefined\tBoolean value specifying whether the authorization server supports use of the request parameter.\tsrc/plugins/internal/oidc/types.ts:430 authServerMeta.request_uri_parameter_supported?\tpublic\tboolean\tundefined\tBoolean value specifying whether the authorization server supports use of the request_uri parameter.\tsrc/plugins/internal/oidc/types.ts:435 authServerMeta.require_pushed_authorization_requests?\tpublic\tboolean\tundefined\tIndicates whether the authorization server accepts authorization requests only via PAR.\tsrc/plugins/internal/oidc/types.ts:453 authServerMeta.require_request_uri_registration?\tpublic\tboolean\tundefined\tBoolean value specifying whether the authorization server requires any request_uri values used to be pre-registered.\tsrc/plugins/internal/oidc/types.ts:440 authServerMeta.require_signed_request_object?\tpublic\tboolean\tundefined\tIndicates where authorization request needs to be protected as Request Object and provided through either request or request_uri parameter.\tsrc/plugins/internal/oidc/types.ts:445 authServerMeta.response_modes_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the response_mode values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:260 authServerMeta.response_types_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the response_type values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:255 authServerMeta.revocation_endpoint?\tpublic\tstring\tundefined\tURL of the authorization server's revocation endpoint.\tsrc/plugins/internal/oidc/types.ts:299 authServerMeta.revocation_endpoint_auth_methods_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of client authentication methods supported by this revocation endpoint.\tsrc/plugins/internal/oidc/types.ts:304 authServerMeta.revocation_endpoint_auth_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWS signing algorithms supported by the revocation endpoint for the signature on the JWT used to authenticate the client at the revocation endpoint.\tsrc/plugins/internal/oidc/types.ts:309 authServerMeta.scopes_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the scope values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:250 authServerMeta.service_documentation?\tpublic\tstring\tundefined\tURL of a page containing human-readable information that developers might want or need to know when using the authorization server.\tsrc/plugins/internal/oidc/types.ts:279 authServerMeta.signed_metadata?\tpublic\tstring\tundefined\tSigned JWT containing metadata values about the authorization server as claims.\tsrc/plugins/internal/oidc/types.ts:332 authServerMeta.subject_types_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the Subject Identifier types that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:359 authServerMeta.tls_client_certificate_bound_access_tokens?\tpublic\tboolean\tundefined\tIndicates authorization server support for mutual-TLS client certificate-bound access tokens.\tsrc/plugins/internal/oidc/types.ts:340 authServerMeta.token_endpoint?\tpublic\tstring\tundefined\tURL of the authorization server's token endpoint.\tsrc/plugins/internal/oidc/types.ts:238 authServerMeta.token_endpoint_auth_methods_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of client authentication methods supported by this token endpoint.\tsrc/plugins/internal/oidc/types.ts:269 authServerMeta.token_endpoint_auth_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWS signing algorithms supported by the token endpoint for the signature on the JWT used to authenticate the client at the token endpoint.\tsrc/plugins/internal/oidc/types.ts:274 authServerMeta.ui_locales_supported?\tpublic\tstring[]\tundefined\tLanguages and scripts supported for the user interface, represented as a JSON array of language tag values from RFC 5646.\tsrc/plugins/internal/oidc/types.ts:284 authServerMeta.userinfo_encryption_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWE alg values supported by the UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:382 authServerMeta.userinfo_encryption_enc_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWE enc values supported by the UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:386 authServerMeta.userinfo_endpoint?\tpublic\tstring\tundefined\tURL of the authorization server's UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:349 authServerMeta.userinfo_signing_alg_values_supported?\tpublic\tstring[]\tundefined\tJSON array containing a list of the JWS alg values supported by the UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:378 issuerMeta\treadonly\t{ authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }\tundefined\t-\tsrc/plugins/internal/oidc/protocols/AuthorizationRequest.ts:15 issuerMeta.authorization_servers?\tpublic\tstring[]\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:86 issuerMeta.batch_credential_endpoint?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:95 issuerMeta.credential_configurations_supported\tpublic\t{[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:111 issuerMeta.credential_endpoint\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:90 issuerMeta.credential_identifiers_supported?\tpublic\tboolean\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:175 issuerMeta.credential_issuer\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:80 issuerMeta.credential_response_encryption?\tpublic\t{ alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:155 issuerMeta.credential_response_encryption.alg_values_supported\tpublic\tstring[]\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:159 issuerMeta.credential_response_encryption.enc_values_supported\tpublic\tstring[]\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:163 issuerMeta.credential_response_encryption.encryption_required\tpublic\tboolean\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:169 issuerMeta.deferred_credential_endpoint?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:100 issuerMeta.display?\tpublic\t{ }\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:178 issuerMeta.notification_endpoint?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:105 issuerMeta.signed_metadata?\tpublic\tstring\tundefined\t-\tsrc/plugins/internal/oidc/types.ts:108 meta\treadonly\tAuthorizationRequestMetadata\t{}\t-\tsrc/plugins/internal/oidc/protocols/AuthorizationRequest.ts:11 url\tpublic\tURL\tundefined\t-\tsrc/plugins/internal/oidc/protocols/AuthorizationRequest.ts:10  ","version":"Next","tagName":"h2"},{"title":"Accessors‚Äã","type":1,"pageTitle":"AuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationRequest#accessors","content":" ","version":"Next","tagName":"h2"},{"title":"params‚Äã","type":1,"pageTitle":"AuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationRequest#params","content":" Get Signature‚Äã  get params(): URLSearchParams  Defined in: src/plugins/internal/oidc/protocols/AuthorizationRequest.ts:21  Returns‚Äã  URLSearchParams  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"AuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"setCodeChallenge()‚Äã","type":1,"pageTitle":"AuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationRequest#setcodechallenge","content":" setCodeChallenge(method: &quot;S256&quot;, challenge: string, verifier: string): void  Defined in: src/plugins/internal/oidc/protocols/AuthorizationRequest.ts:25  Parameters‚Äã  Parameter\tTypemethod\t&quot;S256&quot; challenge\tstring verifier\tstring  Returns‚Äã  void    ","version":"Next","tagName":"h3"},{"title":"setNonce()‚Äã","type":1,"pageTitle":"AuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/AuthorizationRequest#setnonce","content":" setNonce(nonce: string): void  Defined in: src/plugins/internal/oidc/protocols/AuthorizationRequest.ts:31  Parameters‚Äã  Parameter\tTypenonce\tstring  Returns‚Äã  void ","version":"Next","tagName":"h3"},{"title":"ResolveTokenRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveTokenRequest","content":"","keywords":"","version":"Next"},{"title":"Param‚Äã","type":1,"pageTitle":"ResolveTokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveTokenRequest#param","content":" ","version":"Next","tagName":"h2"},{"title":"Param‚Äã","type":1,"pageTitle":"ResolveTokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveTokenRequest#param-1","content":" ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"ResolveTokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveTokenRequest#extends","content":" Task&lt;TokenResponse, ResolveTokenRequestArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ResolveTokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveTokenRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ResolveTokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveTokenRequest#constructor","content":" new ResolveTokenRequest(...args: [ResolveTokenRequestArgs]): ResolveTokenRequest  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[ResolveTokenRequestArgs]\t  Returns‚Äã  ResolveTokenRequest  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"ResolveTokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveTokenRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"ResolveTokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveTokenRequest#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"ResolveTokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveTokenRequest#run","content":" run(ctx: Context): Promise&lt;{ access_token: string; c_nonce?: string; c_nonce_expires_in?: number; expires_in?: number; id_token?: string; refresh_expires_in?: number; refresh_token?: string; scope?: string; session_state?: string; token_type: string; }&gt;  Defined in: src/plugins/internal/oidc/connection/ResolveTokenRequest.ts:34  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;{ access_token: string; c_nonce?: string; c_nonce_expires_in?: number; expires_in?: number; id_token?: string; refresh_expires_in?: number; refresh_token?: string; scope?: string; session_state?: string; token_type: string; }&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"ResolveCredentialRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveCredentialRequest","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"ResolveCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveCredentialRequest#extends","content":" Task&lt;JWTCredential, ResolveCredentialRequestArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ResolveCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveCredentialRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ResolveCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveCredentialRequest#constructor","content":" new ResolveCredentialRequest(...args: [ResolveCredentialRequestArgs]): ResolveCredentialRequest  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[ResolveCredentialRequestArgs]\t  Returns‚Äã  ResolveCredentialRequest  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"ResolveCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveCredentialRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"ResolveCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveCredentialRequest#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"ResolveCredentialRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveCredentialRequest#run","content":" run(ctx: Context): Promise&lt;JWTCredential&gt;  Defined in: src/plugins/internal/oidc/connection/ResolveCredentialRequest.ts:29  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;JWTCredential&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"ResolveAuthorizationRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveAuthorizationRequest","content":"","keywords":"","version":"Next"},{"title":"Param‚Äã","type":1,"pageTitle":"ResolveAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveAuthorizationRequest#param","content":" ","version":"Next","tagName":"h2"},{"title":"Extends‚Äã","type":1,"pageTitle":"ResolveAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveAuthorizationRequest#extends","content":" Task&lt;AuthorizationRequest, ResolveAuthorizationRequestArgs&gt;  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"ResolveAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveAuthorizationRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"ResolveAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveAuthorizationRequest#constructor","content":" new ResolveAuthorizationRequest(...args: [ResolveAuthorizationRequestArgs]): ResolveAuthorizationRequest  Defined in: src/utils/tasks.ts:18  Parameters‚Äã  Parameter\tType\tDescription...args\t[ResolveAuthorizationRequestArgs]\t  Returns‚Äã  ResolveAuthorizationRequest  Inherited from‚Äã  Task.constructor  ","version":"Next","tagName":"h3"},{"title":"Methods‚Äã","type":1,"pageTitle":"ResolveAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveAuthorizationRequest#methods","content":" ","version":"Next","tagName":"h2"},{"title":"log()‚Äã","type":1,"pageTitle":"ResolveAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveAuthorizationRequest#log","content":" log(): unknown  Defined in: src/utils/tasks.ts:26  Returns‚Äã  unknown  Inherited from‚Äã  Task.log    ","version":"Next","tagName":"h3"},{"title":"run()‚Äã","type":1,"pageTitle":"ResolveAuthorizationRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/ResolveAuthorizationRequest#run","content":" run(ctx: Context): Promise&lt;AuthorizationRequest&gt;  Defined in: src/plugins/internal/oidc/connection/ResolveAuthorizationRequest.ts:32  Parameters‚Äã  Parameter\tTypectx\tContext  Returns‚Äã  Promise&lt;AuthorizationRequest&gt;  Overrides‚Äã  Task.run ","version":"Next","tagName":"h3"},{"title":"AuthorizationRequestMetadata","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/AuthorizationRequestMetadata","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"AuthorizationRequestMetadata","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/AuthorizationRequestMetadata#properties","content":" Property\tType\tDefined in codeVerifier?\tstring\tsrc/plugins/internal/oidc/protocols/AuthorizationRequest.ts:5 nonce?\tstring\tsrc/plugins/internal/oidc/protocols/AuthorizationRequest.ts:6 ","version":"Next","tagName":"h2"},{"title":"TokenRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/TokenRequest","content":"","keywords":"","version":"Next"},{"title":"Extends‚Äã","type":1,"pageTitle":"TokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/TokenRequest#extends","content":" ApiRequest  ","version":"Next","tagName":"h2"},{"title":"Constructors‚Äã","type":1,"pageTitle":"TokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/TokenRequest#constructors","content":" ","version":"Next","tagName":"h2"},{"title":"Constructor‚Äã","type":1,"pageTitle":"TokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/TokenRequest#constructor","content":" new TokenRequest(endpoint: string | URL, grantType: &quot;authorization_code&quot;, body: JsonObj): TokenRequest  Defined in: src/plugins/internal/oidc/protocols/TokenRequest.ts:5  Parameters‚Äã  Parameter\tTypeendpoint\tstring | URL grantType\t&quot;authorization_code&quot; body\tJsonObj  Returns‚Äã  TokenRequest  Overrides‚Äã  ApiRequest.constructor  ","version":"Next","tagName":"h3"},{"title":"Properties‚Äã","type":1,"pageTitle":"TokenRequest","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/classes/TokenRequest#properties","content":" Property\tModifier\tType\tDefault value\tInherited from\tDefined in body?\tpublic\tstring | JsonObj\tundefined\tApiRequest.body\tsrc/domain/models/Api.ts:40 headers\treadonly\tHeaders\tundefined\tApiRequest.headers\tsrc/domain/models/Api.ts:37 method\tpublic\tHttpMethod\t&quot;GET&quot;\tApiRequest.method\tsrc/domain/models/Api.ts:39 params\treadonly\tURLSearchParams\tundefined\tApiRequest.params\tsrc/domain/models/Api.ts:38 url\treadonly\tURL\tundefined\tApiRequest.url\tsrc/domain/models/Api.ts:42 ","version":"Next","tagName":"h2"},{"title":"FetchAuthServerMetaArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/FetchAuthServerMetaArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"FetchAuthServerMetaArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/FetchAuthServerMetaArgs#properties","content":" Property\tType\tDefined in algorithm?\tstring\tsrc/plugins/internal/oidc/tasks/FetchAuthServerMeta.ts:8 serverUri\tstring | URL\tsrc/plugins/internal/oidc/tasks/FetchAuthServerMeta.ts:7 ","version":"Next","tagName":"h2"},{"title":"CreateCredentialRequestArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/CreateCredentialRequestArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CreateCredentialRequestArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/CreateCredentialRequestArgs#properties","content":" Property\tType\tDescription\tDefined in clientId?\tstring\t-\tsrc/plugins/internal/oidc/tasks/CreateCredentialRequest.ts:12 issuerMeta?\t{ authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }\t-\tsrc/plugins/internal/oidc/tasks/CreateCredentialRequest.ts:13 issuerMeta.authorization_servers?\tstring[]\t-\tsrc/plugins/internal/oidc/types.ts:86 issuerMeta.batch_credential_endpoint?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:95 issuerMeta.credential_configurations_supported\t{[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }\t-\tsrc/plugins/internal/oidc/types.ts:111 issuerMeta.credential_endpoint\tstring\t-\tsrc/plugins/internal/oidc/types.ts:90 issuerMeta.credential_identifiers_supported?\tboolean\t-\tsrc/plugins/internal/oidc/types.ts:175 issuerMeta.credential_issuer\tstring\t-\tsrc/plugins/internal/oidc/types.ts:80 issuerMeta.credential_response_encryption?\t{ alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }\t-\tsrc/plugins/internal/oidc/types.ts:155 issuerMeta.credential_response_encryption.alg_values_supported\tstring[]\t-\tsrc/plugins/internal/oidc/types.ts:159 issuerMeta.credential_response_encryption.enc_values_supported\tstring[]\t-\tsrc/plugins/internal/oidc/types.ts:163 issuerMeta.credential_response_encryption.encryption_required\tboolean\t-\tsrc/plugins/internal/oidc/types.ts:169 issuerMeta.deferred_credential_endpoint?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:100 issuerMeta.display?\t{ }\t-\tsrc/plugins/internal/oidc/types.ts:178 issuerMeta.notification_endpoint?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:105 issuerMeta.signed_metadata?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:108 offer\t{ credential_configuration_ids: string[]; credential_issuer: string; grants?: { authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }; }\t-\tsrc/plugins/internal/oidc/tasks/CreateCredentialRequest.ts:11 offer.credential_configuration_ids\tstring[]\tarray of unique strings that each identify one of the keys in name/value pairs stored in the credential_configurations_supported Credential Issuer Metadata\tsrc/plugins/internal/oidc/types.ts:25 offer.credential_issuer\tstring\turl of the Credential Issuer from which the wallet is requested to obtain one or more Credentials the Wallet uses it to obtain the Credential Issuer's Metadata\tsrc/plugins/internal/oidc/types.ts:20 offer.grants?\t{ authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }\tindicates the Grant Types the Authorization Server is prepared to process if grants is nil the Wallet must determine the Grant Types using the Metadata when multiple grants are present, it is at the Wallets discretion which to use\tsrc/plugins/internal/oidc/types.ts:31 offer.grants.authorization_code?\t{ authorization_server?: string; issuer_state?: string; }\t-\tsrc/plugins/internal/oidc/types.ts:32 offer.grants.authorization_code.authorization_server?\tstring\tcan be used to identify the Authorization Server to use with this grant type when authorization_servers in Issuer Metadata has multiple entries\tsrc/plugins/internal/oidc/types.ts:43 offer.grants.authorization_code.issuer_state?\tstring\tused to bind the Authorization Request with the Credential Issuer to a context if the Wallet decides to use the Authorization Code flow and received this value it must be included in the subsequent Authorization Reqest\tsrc/plugins/internal/oidc/types.ts:38 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code?\t{ authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }\t-\tsrc/plugins/internal/oidc/types.ts:46 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.authorization_server?\tstring\tcan be used to identify the Authorization Server to use with this grant type when authorization_servers in Issuer Metadata has multiple entries\tsrc/plugins/internal/oidc/types.ts:63 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.interval?\tnumber\tamount of time in seconds that the Wallet should wait between polling requests to the token endpoint\tsrc/plugins/internal/oidc/types.ts:58 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.pre-authorized_code\tstring\tcode representing the Issuers authorization short lived and single use if the Wallet decides to use the pre-authorized_code flow, this value must be included in the subsequent Token Request\tsrc/plugins/internal/oidc/types.ts:53 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code?\t{ description?: string; input_mode?: string; length?: number; }\tspecifies whether the Authorization Server expects a presentation of a Transaction Code along with the Token Request\tsrc/plugins/internal/oidc/types.ts:68 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.description?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:71 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.input_mode?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:69 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.length?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:70 tokenResponse?\t{ access_token: string; c_nonce?: string; c_nonce_expires_in?: number; expires_in?: number; id_token?: string; refresh_expires_in?: number; refresh_token?: string; scope?: string; session_state?: string; token_type: string; }\t-\tsrc/plugins/internal/oidc/tasks/CreateCredentialRequest.ts:14 tokenResponse.access_token\tstring\t-\tsrc/plugins/internal/oidc/types.ts:545 tokenResponse.c_nonce?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:548 tokenResponse.c_nonce_expires_in?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:549 tokenResponse.expires_in?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:547 tokenResponse.id_token?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:552 tokenResponse.refresh_expires_in?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:551 tokenResponse.refresh_token?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:550 tokenResponse.scope?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:553 tokenResponse.session_state?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:554 tokenResponse.token_type\tstring\t-\tsrc/plugins/internal/oidc/types.ts:546 ","version":"Next","tagName":"h2"},{"title":"FetchIssuerMetadataArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/FetchIssuerMetadataArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"FetchIssuerMetadataArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/FetchIssuerMetadataArgs#properties","content":" Property\tType\tDefined in uri\tstring | URL\tsrc/plugins/internal/oidc/tasks/FetchIssuerMetadata.ts:6 ","version":"Next","tagName":"h2"},{"title":"ParseCredentialOfferArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ParseCredentialOfferArgs","content":"","keywords":"","version":"Next"},{"title":"See‚Äã","type":1,"pageTitle":"ParseCredentialOfferArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ParseCredentialOfferArgs#see","content":" OIDC Credential Offer  ","version":"Next","tagName":"h2"},{"title":"Properties‚Äã","type":1,"pageTitle":"ParseCredentialOfferArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ParseCredentialOfferArgs#properties","content":" Property\tType\tDefined in value\tunknown\tsrc/plugins/internal/oidc/tasks/ParseCredentialOffer.ts:13 ","version":"Next","tagName":"h2"},{"title":"ResolveAuthorizationRequestArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ResolveAuthorizationRequestArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"ResolveAuthorizationRequestArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ResolveAuthorizationRequestArgs#properties","content":" Property\tType\tDescription\tDefined in clientId\tstring\t-\tsrc/plugins/internal/oidc/connection/ResolveAuthorizationRequest.ts:12 offer\t{ credential_configuration_ids: string[]; credential_issuer: string; grants?: { authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }; }\t-\tsrc/plugins/internal/oidc/connection/ResolveAuthorizationRequest.ts:11 offer.credential_configuration_ids\tstring[]\tarray of unique strings that each identify one of the keys in name/value pairs stored in the credential_configurations_supported Credential Issuer Metadata\tsrc/plugins/internal/oidc/types.ts:25 offer.credential_issuer\tstring\turl of the Credential Issuer from which the wallet is requested to obtain one or more Credentials the Wallet uses it to obtain the Credential Issuer's Metadata\tsrc/plugins/internal/oidc/types.ts:20 offer.grants?\t{ authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }\tindicates the Grant Types the Authorization Server is prepared to process if grants is nil the Wallet must determine the Grant Types using the Metadata when multiple grants are present, it is at the Wallets discretion which to use\tsrc/plugins/internal/oidc/types.ts:31 offer.grants.authorization_code?\t{ authorization_server?: string; issuer_state?: string; }\t-\tsrc/plugins/internal/oidc/types.ts:32 offer.grants.authorization_code.authorization_server?\tstring\tcan be used to identify the Authorization Server to use with this grant type when authorization_servers in Issuer Metadata has multiple entries\tsrc/plugins/internal/oidc/types.ts:43 offer.grants.authorization_code.issuer_state?\tstring\tused to bind the Authorization Request with the Credential Issuer to a context if the Wallet decides to use the Authorization Code flow and received this value it must be included in the subsequent Authorization Reqest\tsrc/plugins/internal/oidc/types.ts:38 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code?\t{ authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }\t-\tsrc/plugins/internal/oidc/types.ts:46 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.authorization_server?\tstring\tcan be used to identify the Authorization Server to use with this grant type when authorization_servers in Issuer Metadata has multiple entries\tsrc/plugins/internal/oidc/types.ts:63 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.interval?\tnumber\tamount of time in seconds that the Wallet should wait between polling requests to the token endpoint\tsrc/plugins/internal/oidc/types.ts:58 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.pre-authorized_code\tstring\tcode representing the Issuers authorization short lived and single use if the Wallet decides to use the pre-authorized_code flow, this value must be included in the subsequent Token Request\tsrc/plugins/internal/oidc/types.ts:53 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code?\t{ description?: string; input_mode?: string; length?: number; }\tspecifies whether the Authorization Server expects a presentation of a Transaction Code along with the Token Request\tsrc/plugins/internal/oidc/types.ts:68 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.description?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:71 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.input_mode?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:69 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.length?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:70 redirectUri\tstring\t-\tsrc/plugins/internal/oidc/connection/ResolveAuthorizationRequest.ts:13 ","version":"Next","tagName":"h2"},{"title":"CreateAuthorizationRequestArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/CreateAuthorizationRequestArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"CreateAuthorizationRequestArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/CreateAuthorizationRequestArgs#properties","content":" Property\tType\tDescription\tDefined in authServerMeta\t{ acr_values_supported?: string[]; authorization_encryption_alg_values_supported?: string[]; authorization_encryption_enc_values_supported?: string[]; authorization_endpoint?: string; authorization_response_iss_parameter_supported?: boolean; authorization_signing_alg_values_supported?: string[]; backchannel_authentication_endpoint?: string; backchannel_authentication_request_signing_alg_values_supported?: string[]; backchannel_logout_session_supported?: boolean; backchannel_logout_supported?: boolean; backchannel_token_delivery_modes_supported?: string[]; backchannel_user_code_parameter_supported?: boolean; check_session_iframe?: string; claim_types_supported?: string[]; claims_locales_supported?: string[]; claims_parameter_supported?: boolean; claims_supported?: string[]; code_challenge_methods_supported?: string[]; device_authorization_endpoint?: string; display_values_supported?: string[]; dpop_signing_alg_values_supported?: string[]; end_session_endpoint?: string; frontchannel_logout_session_supported?: boolean; frontchannel_logout_supported?: boolean; grant_types_supported?: string[]; id_token_encryption_alg_values_supported?: string[]; id_token_encryption_enc_values_supported?: string[]; id_token_signing_alg_values_supported?: string[]; introspection_encryption_alg_values_supported?: string[]; introspection_encryption_enc_values_supported?: string[]; introspection_endpoint?: string; introspection_endpoint_auth_methods_supported?: string[]; introspection_endpoint_auth_signing_alg_values_supported?: string[]; introspection_signing_alg_values_supported?: string[]; issuer: string; jwks_uri?: string; mtls_endpoint_aliases?: { }; op_policy_uri?: string; op_tos_uri?: string; pushed_authorization_request_endpoint?: string; registration_endpoint?: string; request_object_encryption_alg_values_supported?: string[]; request_object_encryption_enc_values_supported?: string[]; request_object_signing_alg_values_supported?: string[]; request_parameter_supported?: boolean; request_uri_parameter_supported?: boolean; require_pushed_authorization_requests?: boolean; require_request_uri_registration?: boolean; require_signed_request_object?: boolean; response_modes_supported?: string[]; response_types_supported?: string[]; revocation_endpoint?: string; revocation_endpoint_auth_methods_supported?: string[]; revocation_endpoint_auth_signing_alg_values_supported?: string[]; scopes_supported?: string[]; service_documentation?: string; signed_metadata?: string; subject_types_supported?: string[]; tls_client_certificate_bound_access_tokens?: boolean; token_endpoint?: string; token_endpoint_auth_methods_supported?: string[]; token_endpoint_auth_signing_alg_values_supported?: string[]; ui_locales_supported?: string[]; userinfo_encryption_alg_values_supported?: string[]; userinfo_encryption_enc_values_supported?: string[]; userinfo_endpoint?: string; userinfo_signing_alg_values_supported?: string[]; }\t-\tsrc/plugins/internal/oidc/connection/CreateAuthorizationRequest.ts:11 authServerMeta.acr_values_supported?\tstring[]\tJSON array containing a list of the Authentication Context Class References that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:354 authServerMeta.authorization_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response encryption (alg value).\tsrc/plugins/internal/oidc/types.ts:483 authServerMeta.authorization_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response encryption (enc value).\tsrc/plugins/internal/oidc/types.ts:488 authServerMeta.authorization_endpoint?\tstring\tURL of the authorization server's authorization endpoint.\tsrc/plugins/internal/oidc/types.ts:234 authServerMeta.authorization_response_iss_parameter_supported?\tboolean\tBoolean value indicating whether the authorization server provides the iss parameter in the authorization response.\tsrc/plugins/internal/oidc/types.ts:473 authServerMeta.authorization_signing_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response signing.\tsrc/plugins/internal/oidc/types.ts:478 authServerMeta.backchannel_authentication_endpoint?\tstring\tCIBA Backchannel Authentication Endpoint.\tsrc/plugins/internal/oidc/types.ts:492 authServerMeta.backchannel_authentication_request_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported for validation of signed CIBA authentication requests.\tsrc/plugins/internal/oidc/types.ts:497 authServerMeta.backchannel_logout_session_supported?\tboolean\tBoolean value specifying whether the authorization server can pass a sid (session ID) Claim in the Logout Token to identify the RP session with the OP.\tsrc/plugins/internal/oidc/types.ts:534 authServerMeta.backchannel_logout_supported?\tboolean\tBoolean value specifying whether the authorization server supports back-channel logout.\tsrc/plugins/internal/oidc/types.ts:538 authServerMeta.backchannel_token_delivery_modes_supported?\tstring[]\tSupported CIBA authentication result delivery modes.\tsrc/plugins/internal/oidc/types.ts:501 authServerMeta.backchannel_user_code_parameter_supported?\tboolean\tIndicates whether the authorization server supports the use of the CIBA user_code parameter.\tsrc/plugins/internal/oidc/types.ts:505 authServerMeta.check_session_iframe?\tstring\tURL of an authorization server iframe that supports cross-origin communications for session state information with the RP Client, using the HTML5 postMessage API.\tsrc/plugins/internal/oidc/types.ts:510 authServerMeta.claim_types_supported?\tstring[]\tJSON array containing a list of the Claim Types that the authorization server supports.\tsrc/plugins/internal/oidc/types.ts:410 authServerMeta.claims_locales_supported?\tstring[]\tLanguages and scripts supported for values in Claims being returned, represented as a JSON array of RFC 5646 language tag values.\tsrc/plugins/internal/oidc/types.ts:420 authServerMeta.claims_parameter_supported?\tboolean\tBoolean value specifying whether the authorization server supports use of the claims parameter.\tsrc/plugins/internal/oidc/types.ts:425 authServerMeta.claims_supported?\tstring[]\tJSON array containing a list of the Claim Names of the Claims that the authorization server MAY be able to supply values for.\tsrc/plugins/internal/oidc/types.ts:415 authServerMeta.code_challenge_methods_supported?\tstring[]\tPKCE code challenge methods supported by this authorization server.\tsrc/plugins/internal/oidc/types.ts:328 authServerMeta.device_authorization_endpoint?\tstring\tURL of the authorization server's device authorization endpoint.\tsrc/plugins/internal/oidc/types.ts:336 authServerMeta.display_values_supported?\tstring[]\tJSON array containing a list of the display parameter values that the authorization server supports.\tsrc/plugins/internal/oidc/types.ts:406 authServerMeta.dpop_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS algorithms supported for DPoP proof JWTs.\tsrc/plugins/internal/oidc/types.ts:514 authServerMeta.end_session_endpoint?\tstring\tURL at the authorization server to which an RP can perform a redirect to request that the End-User be logged out at the authorization server.\tsrc/plugins/internal/oidc/types.ts:519 authServerMeta.frontchannel_logout_session_supported?\tboolean\tBoolean value specifying whether the authorization server can pass iss (issuer) and sid (session ID) query parameters to identify the RP session with the authorization server when the frontchannel_logout_uri is used.\tsrc/plugins/internal/oidc/types.ts:525 authServerMeta.frontchannel_logout_supported?\tboolean\tBoolean value specifying whether the authorization server supports HTTP-based logout.\tsrc/plugins/internal/oidc/types.ts:529 authServerMeta.grant_types_supported?\tstring[]\tJSON array containing a list of the grant_type values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:265 authServerMeta.id_token_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of the JWE alg values supported by the authorization server for the ID Token.\tsrc/plugins/internal/oidc/types.ts:369 authServerMeta.id_token_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of the JWE enc values supported by the authorization server for the ID Token.\tsrc/plugins/internal/oidc/types.ts:374 authServerMeta.id_token_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS alg values supported by the authorization server for the ID Token.\tsrc/plugins/internal/oidc/types.ts:364 authServerMeta.introspection_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response content key encryption (alg value).\tsrc/plugins/internal/oidc/types.ts:463 authServerMeta.introspection_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response content encryption (enc value).\tsrc/plugins/internal/oidc/types.ts:468 authServerMeta.introspection_endpoint?\tstring\tURL of the authorization server's introspection endpoint.\tsrc/plugins/internal/oidc/types.ts:313 authServerMeta.introspection_endpoint_auth_methods_supported?\tstring[]\tJSON array containing a list of client authentication methods supported by this introspection endpoint.\tsrc/plugins/internal/oidc/types.ts:318 authServerMeta.introspection_endpoint_auth_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported by the introspection endpoint for the signature on the JWT used to authenticate the client at the introspection endpoint.\tsrc/plugins/internal/oidc/types.ts:324 authServerMeta.introspection_signing_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response signing.\tsrc/plugins/internal/oidc/types.ts:458 authServerMeta.issuer\tstring\tAuthorization server's Issuer Identifier URL.\tsrc/plugins/internal/oidc/types.ts:230 authServerMeta.jwks_uri?\tstring\tURL of the authorization server's JWK Set document.\tsrc/plugins/internal/oidc/types.ts:242 authServerMeta.mtls_endpoint_aliases?\t{ }\tJSON object containing alternative authorization server endpoints, which a client intending to do mutual TLS will use in preference to the conventional endpoints.\tsrc/plugins/internal/oidc/types.ts:345 authServerMeta.op_policy_uri?\tstring\tURL that the authorization server provides to the person registering the client to read about the authorization server's requirements on how the client can use the data provided by the authorization server.\tsrc/plugins/internal/oidc/types.ts:290 authServerMeta.op_tos_uri?\tstring\tURL that the authorization server provides to the person registering the client to read about the authorization server's terms of service.\tsrc/plugins/internal/oidc/types.ts:295 authServerMeta.pushed_authorization_request_endpoint?\tstring\tURL of the authorization server's pushed authorization request endpoint.\tsrc/plugins/internal/oidc/types.ts:449 authServerMeta.registration_endpoint?\tstring\tURL of the authorization server's Dynamic Client Registration Endpoint.\tsrc/plugins/internal/oidc/types.ts:246 authServerMeta.request_object_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of the JWE alg values supported by the authorization server for Request Objects.\tsrc/plugins/internal/oidc/types.ts:396 authServerMeta.request_object_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of the JWE enc values supported by the authorization server for Request Objects.\tsrc/plugins/internal/oidc/types.ts:401 authServerMeta.request_object_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS alg values supported by the authorization server for Request Objects.\tsrc/plugins/internal/oidc/types.ts:391 authServerMeta.request_parameter_supported?\tboolean\tBoolean value specifying whether the authorization server supports use of the request parameter.\tsrc/plugins/internal/oidc/types.ts:430 authServerMeta.request_uri_parameter_supported?\tboolean\tBoolean value specifying whether the authorization server supports use of the request_uri parameter.\tsrc/plugins/internal/oidc/types.ts:435 authServerMeta.require_pushed_authorization_requests?\tboolean\tIndicates whether the authorization server accepts authorization requests only via PAR.\tsrc/plugins/internal/oidc/types.ts:453 authServerMeta.require_request_uri_registration?\tboolean\tBoolean value specifying whether the authorization server requires any request_uri values used to be pre-registered.\tsrc/plugins/internal/oidc/types.ts:440 authServerMeta.require_signed_request_object?\tboolean\tIndicates where authorization request needs to be protected as Request Object and provided through either request or request_uri parameter.\tsrc/plugins/internal/oidc/types.ts:445 authServerMeta.response_modes_supported?\tstring[]\tJSON array containing a list of the response_mode values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:260 authServerMeta.response_types_supported?\tstring[]\tJSON array containing a list of the response_type values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:255 authServerMeta.revocation_endpoint?\tstring\tURL of the authorization server's revocation endpoint.\tsrc/plugins/internal/oidc/types.ts:299 authServerMeta.revocation_endpoint_auth_methods_supported?\tstring[]\tJSON array containing a list of client authentication methods supported by this revocation endpoint.\tsrc/plugins/internal/oidc/types.ts:304 authServerMeta.revocation_endpoint_auth_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported by the revocation endpoint for the signature on the JWT used to authenticate the client at the revocation endpoint.\tsrc/plugins/internal/oidc/types.ts:309 authServerMeta.scopes_supported?\tstring[]\tJSON array containing a list of the scope values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:250 authServerMeta.service_documentation?\tstring\tURL of a page containing human-readable information that developers might want or need to know when using the authorization server.\tsrc/plugins/internal/oidc/types.ts:279 authServerMeta.signed_metadata?\tstring\tSigned JWT containing metadata values about the authorization server as claims.\tsrc/plugins/internal/oidc/types.ts:332 authServerMeta.subject_types_supported?\tstring[]\tJSON array containing a list of the Subject Identifier types that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:359 authServerMeta.tls_client_certificate_bound_access_tokens?\tboolean\tIndicates authorization server support for mutual-TLS client certificate-bound access tokens.\tsrc/plugins/internal/oidc/types.ts:340 authServerMeta.token_endpoint?\tstring\tURL of the authorization server's token endpoint.\tsrc/plugins/internal/oidc/types.ts:238 authServerMeta.token_endpoint_auth_methods_supported?\tstring[]\tJSON array containing a list of client authentication methods supported by this token endpoint.\tsrc/plugins/internal/oidc/types.ts:269 authServerMeta.token_endpoint_auth_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported by the token endpoint for the signature on the JWT used to authenticate the client at the token endpoint.\tsrc/plugins/internal/oidc/types.ts:274 authServerMeta.ui_locales_supported?\tstring[]\tLanguages and scripts supported for the user interface, represented as a JSON array of language tag values from RFC 5646.\tsrc/plugins/internal/oidc/types.ts:284 authServerMeta.userinfo_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of the JWE alg values supported by the UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:382 authServerMeta.userinfo_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of the JWE enc values supported by the UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:386 authServerMeta.userinfo_endpoint?\tstring\tURL of the authorization server's UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:349 authServerMeta.userinfo_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS alg values supported by the UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:378 clientId\tstring\t-\tsrc/plugins/internal/oidc/connection/CreateAuthorizationRequest.ts:12 issuerMeta\t{ authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }\t-\tsrc/plugins/internal/oidc/connection/CreateAuthorizationRequest.ts:10 issuerMeta.authorization_servers?\tstring[]\t-\tsrc/plugins/internal/oidc/types.ts:86 issuerMeta.batch_credential_endpoint?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:95 issuerMeta.credential_configurations_supported\t{[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }\t-\tsrc/plugins/internal/oidc/types.ts:111 issuerMeta.credential_endpoint\tstring\t-\tsrc/plugins/internal/oidc/types.ts:90 issuerMeta.credential_identifiers_supported?\tboolean\t-\tsrc/plugins/internal/oidc/types.ts:175 issuerMeta.credential_issuer\tstring\t-\tsrc/plugins/internal/oidc/types.ts:80 issuerMeta.credential_response_encryption?\t{ alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }\t-\tsrc/plugins/internal/oidc/types.ts:155 issuerMeta.credential_response_encryption.alg_values_supported\tstring[]\t-\tsrc/plugins/internal/oidc/types.ts:159 issuerMeta.credential_response_encryption.enc_values_supported\tstring[]\t-\tsrc/plugins/internal/oidc/types.ts:163 issuerMeta.credential_response_encryption.encryption_required\tboolean\t-\tsrc/plugins/internal/oidc/types.ts:169 issuerMeta.deferred_credential_endpoint?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:100 issuerMeta.display?\t{ }\t-\tsrc/plugins/internal/oidc/types.ts:178 issuerMeta.notification_endpoint?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:105 issuerMeta.signed_metadata?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:108 offer?\t{ credential_configuration_ids: string[]; credential_issuer: string; grants?: { authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }; }\t-\tsrc/plugins/internal/oidc/connection/CreateAuthorizationRequest.ts:14 offer.credential_configuration_ids\tstring[]\tarray of unique strings that each identify one of the keys in name/value pairs stored in the credential_configurations_supported Credential Issuer Metadata\tsrc/plugins/internal/oidc/types.ts:25 offer.credential_issuer\tstring\turl of the Credential Issuer from which the wallet is requested to obtain one or more Credentials the Wallet uses it to obtain the Credential Issuer's Metadata\tsrc/plugins/internal/oidc/types.ts:20 offer.grants?\t{ authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }\tindicates the Grant Types the Authorization Server is prepared to process if grants is nil the Wallet must determine the Grant Types using the Metadata when multiple grants are present, it is at the Wallets discretion which to use\tsrc/plugins/internal/oidc/types.ts:31 offer.grants.authorization_code?\t{ authorization_server?: string; issuer_state?: string; }\t-\tsrc/plugins/internal/oidc/types.ts:32 offer.grants.authorization_code.authorization_server?\tstring\tcan be used to identify the Authorization Server to use with this grant type when authorization_servers in Issuer Metadata has multiple entries\tsrc/plugins/internal/oidc/types.ts:43 offer.grants.authorization_code.issuer_state?\tstring\tused to bind the Authorization Request with the Credential Issuer to a context if the Wallet decides to use the Authorization Code flow and received this value it must be included in the subsequent Authorization Reqest\tsrc/plugins/internal/oidc/types.ts:38 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code?\t{ authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }\t-\tsrc/plugins/internal/oidc/types.ts:46 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.authorization_server?\tstring\tcan be used to identify the Authorization Server to use with this grant type when authorization_servers in Issuer Metadata has multiple entries\tsrc/plugins/internal/oidc/types.ts:63 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.interval?\tnumber\tamount of time in seconds that the Wallet should wait between polling requests to the token endpoint\tsrc/plugins/internal/oidc/types.ts:58 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.pre-authorized_code\tstring\tcode representing the Issuers authorization short lived and single use if the Wallet decides to use the pre-authorized_code flow, this value must be included in the subsequent Token Request\tsrc/plugins/internal/oidc/types.ts:53 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code?\t{ description?: string; input_mode?: string; length?: number; }\tspecifies whether the Authorization Server expects a presentation of a Transaction Code along with the Token Request\tsrc/plugins/internal/oidc/types.ts:68 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.description?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:71 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.input_mode?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:69 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.length?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:70 redirectUri\tstring\t-\tsrc/plugins/internal/oidc/connection/CreateAuthorizationRequest.ts:13 scopes?\tstring[]\t-\tsrc/plugins/internal/oidc/connection/CreateAuthorizationRequest.ts:15 ","version":"Next","tagName":"h2"},{"title":"ProcessCallbackUrlArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ProcessCallbackUrlArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"ProcessCallbackUrlArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ProcessCallbackUrlArgs#properties","content":" Property\tType\tDescription\tDefined in authServerMeta\t{ acr_values_supported?: string[]; authorization_encryption_alg_values_supported?: string[]; authorization_encryption_enc_values_supported?: string[]; authorization_endpoint?: string; authorization_response_iss_parameter_supported?: boolean; authorization_signing_alg_values_supported?: string[]; backchannel_authentication_endpoint?: string; backchannel_authentication_request_signing_alg_values_supported?: string[]; backchannel_logout_session_supported?: boolean; backchannel_logout_supported?: boolean; backchannel_token_delivery_modes_supported?: string[]; backchannel_user_code_parameter_supported?: boolean; check_session_iframe?: string; claim_types_supported?: string[]; claims_locales_supported?: string[]; claims_parameter_supported?: boolean; claims_supported?: string[]; code_challenge_methods_supported?: string[]; device_authorization_endpoint?: string; display_values_supported?: string[]; dpop_signing_alg_values_supported?: string[]; end_session_endpoint?: string; frontchannel_logout_session_supported?: boolean; frontchannel_logout_supported?: boolean; grant_types_supported?: string[]; id_token_encryption_alg_values_supported?: string[]; id_token_encryption_enc_values_supported?: string[]; id_token_signing_alg_values_supported?: string[]; introspection_encryption_alg_values_supported?: string[]; introspection_encryption_enc_values_supported?: string[]; introspection_endpoint?: string; introspection_endpoint_auth_methods_supported?: string[]; introspection_endpoint_auth_signing_alg_values_supported?: string[]; introspection_signing_alg_values_supported?: string[]; issuer: string; jwks_uri?: string; mtls_endpoint_aliases?: { }; op_policy_uri?: string; op_tos_uri?: string; pushed_authorization_request_endpoint?: string; registration_endpoint?: string; request_object_encryption_alg_values_supported?: string[]; request_object_encryption_enc_values_supported?: string[]; request_object_signing_alg_values_supported?: string[]; request_parameter_supported?: boolean; request_uri_parameter_supported?: boolean; require_pushed_authorization_requests?: boolean; require_request_uri_registration?: boolean; require_signed_request_object?: boolean; response_modes_supported?: string[]; response_types_supported?: string[]; revocation_endpoint?: string; revocation_endpoint_auth_methods_supported?: string[]; revocation_endpoint_auth_signing_alg_values_supported?: string[]; scopes_supported?: string[]; service_documentation?: string; signed_metadata?: string; subject_types_supported?: string[]; tls_client_certificate_bound_access_tokens?: boolean; token_endpoint?: string; token_endpoint_auth_methods_supported?: string[]; token_endpoint_auth_signing_alg_values_supported?: string[]; ui_locales_supported?: string[]; userinfo_encryption_alg_values_supported?: string[]; userinfo_encryption_enc_values_supported?: string[]; userinfo_endpoint?: string; userinfo_signing_alg_values_supported?: string[]; }\t-\tsrc/plugins/internal/oidc/connection/ProcessCallbackUrl.ts:6 authServerMeta.acr_values_supported?\tstring[]\tJSON array containing a list of the Authentication Context Class References that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:354 authServerMeta.authorization_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response encryption (alg value).\tsrc/plugins/internal/oidc/types.ts:483 authServerMeta.authorization_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response encryption (enc value).\tsrc/plugins/internal/oidc/types.ts:488 authServerMeta.authorization_endpoint?\tstring\tURL of the authorization server's authorization endpoint.\tsrc/plugins/internal/oidc/types.ts:234 authServerMeta.authorization_response_iss_parameter_supported?\tboolean\tBoolean value indicating whether the authorization server provides the iss parameter in the authorization response.\tsrc/plugins/internal/oidc/types.ts:473 authServerMeta.authorization_signing_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response signing.\tsrc/plugins/internal/oidc/types.ts:478 authServerMeta.backchannel_authentication_endpoint?\tstring\tCIBA Backchannel Authentication Endpoint.\tsrc/plugins/internal/oidc/types.ts:492 authServerMeta.backchannel_authentication_request_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported for validation of signed CIBA authentication requests.\tsrc/plugins/internal/oidc/types.ts:497 authServerMeta.backchannel_logout_session_supported?\tboolean\tBoolean value specifying whether the authorization server can pass a sid (session ID) Claim in the Logout Token to identify the RP session with the OP.\tsrc/plugins/internal/oidc/types.ts:534 authServerMeta.backchannel_logout_supported?\tboolean\tBoolean value specifying whether the authorization server supports back-channel logout.\tsrc/plugins/internal/oidc/types.ts:538 authServerMeta.backchannel_token_delivery_modes_supported?\tstring[]\tSupported CIBA authentication result delivery modes.\tsrc/plugins/internal/oidc/types.ts:501 authServerMeta.backchannel_user_code_parameter_supported?\tboolean\tIndicates whether the authorization server supports the use of the CIBA user_code parameter.\tsrc/plugins/internal/oidc/types.ts:505 authServerMeta.check_session_iframe?\tstring\tURL of an authorization server iframe that supports cross-origin communications for session state information with the RP Client, using the HTML5 postMessage API.\tsrc/plugins/internal/oidc/types.ts:510 authServerMeta.claim_types_supported?\tstring[]\tJSON array containing a list of the Claim Types that the authorization server supports.\tsrc/plugins/internal/oidc/types.ts:410 authServerMeta.claims_locales_supported?\tstring[]\tLanguages and scripts supported for values in Claims being returned, represented as a JSON array of RFC 5646 language tag values.\tsrc/plugins/internal/oidc/types.ts:420 authServerMeta.claims_parameter_supported?\tboolean\tBoolean value specifying whether the authorization server supports use of the claims parameter.\tsrc/plugins/internal/oidc/types.ts:425 authServerMeta.claims_supported?\tstring[]\tJSON array containing a list of the Claim Names of the Claims that the authorization server MAY be able to supply values for.\tsrc/plugins/internal/oidc/types.ts:415 authServerMeta.code_challenge_methods_supported?\tstring[]\tPKCE code challenge methods supported by this authorization server.\tsrc/plugins/internal/oidc/types.ts:328 authServerMeta.device_authorization_endpoint?\tstring\tURL of the authorization server's device authorization endpoint.\tsrc/plugins/internal/oidc/types.ts:336 authServerMeta.display_values_supported?\tstring[]\tJSON array containing a list of the display parameter values that the authorization server supports.\tsrc/plugins/internal/oidc/types.ts:406 authServerMeta.dpop_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS algorithms supported for DPoP proof JWTs.\tsrc/plugins/internal/oidc/types.ts:514 authServerMeta.end_session_endpoint?\tstring\tURL at the authorization server to which an RP can perform a redirect to request that the End-User be logged out at the authorization server.\tsrc/plugins/internal/oidc/types.ts:519 authServerMeta.frontchannel_logout_session_supported?\tboolean\tBoolean value specifying whether the authorization server can pass iss (issuer) and sid (session ID) query parameters to identify the RP session with the authorization server when the frontchannel_logout_uri is used.\tsrc/plugins/internal/oidc/types.ts:525 authServerMeta.frontchannel_logout_supported?\tboolean\tBoolean value specifying whether the authorization server supports HTTP-based logout.\tsrc/plugins/internal/oidc/types.ts:529 authServerMeta.grant_types_supported?\tstring[]\tJSON array containing a list of the grant_type values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:265 authServerMeta.id_token_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of the JWE alg values supported by the authorization server for the ID Token.\tsrc/plugins/internal/oidc/types.ts:369 authServerMeta.id_token_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of the JWE enc values supported by the authorization server for the ID Token.\tsrc/plugins/internal/oidc/types.ts:374 authServerMeta.id_token_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS alg values supported by the authorization server for the ID Token.\tsrc/plugins/internal/oidc/types.ts:364 authServerMeta.introspection_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response content key encryption (alg value).\tsrc/plugins/internal/oidc/types.ts:463 authServerMeta.introspection_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response content encryption (enc value).\tsrc/plugins/internal/oidc/types.ts:468 authServerMeta.introspection_endpoint?\tstring\tURL of the authorization server's introspection endpoint.\tsrc/plugins/internal/oidc/types.ts:313 authServerMeta.introspection_endpoint_auth_methods_supported?\tstring[]\tJSON array containing a list of client authentication methods supported by this introspection endpoint.\tsrc/plugins/internal/oidc/types.ts:318 authServerMeta.introspection_endpoint_auth_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported by the introspection endpoint for the signature on the JWT used to authenticate the client at the introspection endpoint.\tsrc/plugins/internal/oidc/types.ts:324 authServerMeta.introspection_signing_alg_values_supported?\tstring[]\tJSON array containing a list of algorithms supported by the authorization server for introspection response signing.\tsrc/plugins/internal/oidc/types.ts:458 authServerMeta.issuer\tstring\tAuthorization server's Issuer Identifier URL.\tsrc/plugins/internal/oidc/types.ts:230 authServerMeta.jwks_uri?\tstring\tURL of the authorization server's JWK Set document.\tsrc/plugins/internal/oidc/types.ts:242 authServerMeta.mtls_endpoint_aliases?\t{ }\tJSON object containing alternative authorization server endpoints, which a client intending to do mutual TLS will use in preference to the conventional endpoints.\tsrc/plugins/internal/oidc/types.ts:345 authServerMeta.op_policy_uri?\tstring\tURL that the authorization server provides to the person registering the client to read about the authorization server's requirements on how the client can use the data provided by the authorization server.\tsrc/plugins/internal/oidc/types.ts:290 authServerMeta.op_tos_uri?\tstring\tURL that the authorization server provides to the person registering the client to read about the authorization server's terms of service.\tsrc/plugins/internal/oidc/types.ts:295 authServerMeta.pushed_authorization_request_endpoint?\tstring\tURL of the authorization server's pushed authorization request endpoint.\tsrc/plugins/internal/oidc/types.ts:449 authServerMeta.registration_endpoint?\tstring\tURL of the authorization server's Dynamic Client Registration Endpoint.\tsrc/plugins/internal/oidc/types.ts:246 authServerMeta.request_object_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of the JWE alg values supported by the authorization server for Request Objects.\tsrc/plugins/internal/oidc/types.ts:396 authServerMeta.request_object_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of the JWE enc values supported by the authorization server for Request Objects.\tsrc/plugins/internal/oidc/types.ts:401 authServerMeta.request_object_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS alg values supported by the authorization server for Request Objects.\tsrc/plugins/internal/oidc/types.ts:391 authServerMeta.request_parameter_supported?\tboolean\tBoolean value specifying whether the authorization server supports use of the request parameter.\tsrc/plugins/internal/oidc/types.ts:430 authServerMeta.request_uri_parameter_supported?\tboolean\tBoolean value specifying whether the authorization server supports use of the request_uri parameter.\tsrc/plugins/internal/oidc/types.ts:435 authServerMeta.require_pushed_authorization_requests?\tboolean\tIndicates whether the authorization server accepts authorization requests only via PAR.\tsrc/plugins/internal/oidc/types.ts:453 authServerMeta.require_request_uri_registration?\tboolean\tBoolean value specifying whether the authorization server requires any request_uri values used to be pre-registered.\tsrc/plugins/internal/oidc/types.ts:440 authServerMeta.require_signed_request_object?\tboolean\tIndicates where authorization request needs to be protected as Request Object and provided through either request or request_uri parameter.\tsrc/plugins/internal/oidc/types.ts:445 authServerMeta.response_modes_supported?\tstring[]\tJSON array containing a list of the response_mode values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:260 authServerMeta.response_types_supported?\tstring[]\tJSON array containing a list of the response_type values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:255 authServerMeta.revocation_endpoint?\tstring\tURL of the authorization server's revocation endpoint.\tsrc/plugins/internal/oidc/types.ts:299 authServerMeta.revocation_endpoint_auth_methods_supported?\tstring[]\tJSON array containing a list of client authentication methods supported by this revocation endpoint.\tsrc/plugins/internal/oidc/types.ts:304 authServerMeta.revocation_endpoint_auth_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported by the revocation endpoint for the signature on the JWT used to authenticate the client at the revocation endpoint.\tsrc/plugins/internal/oidc/types.ts:309 authServerMeta.scopes_supported?\tstring[]\tJSON array containing a list of the scope values that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:250 authServerMeta.service_documentation?\tstring\tURL of a page containing human-readable information that developers might want or need to know when using the authorization server.\tsrc/plugins/internal/oidc/types.ts:279 authServerMeta.signed_metadata?\tstring\tSigned JWT containing metadata values about the authorization server as claims.\tsrc/plugins/internal/oidc/types.ts:332 authServerMeta.subject_types_supported?\tstring[]\tJSON array containing a list of the Subject Identifier types that this authorization server supports.\tsrc/plugins/internal/oidc/types.ts:359 authServerMeta.tls_client_certificate_bound_access_tokens?\tboolean\tIndicates authorization server support for mutual-TLS client certificate-bound access tokens.\tsrc/plugins/internal/oidc/types.ts:340 authServerMeta.token_endpoint?\tstring\tURL of the authorization server's token endpoint.\tsrc/plugins/internal/oidc/types.ts:238 authServerMeta.token_endpoint_auth_methods_supported?\tstring[]\tJSON array containing a list of client authentication methods supported by this token endpoint.\tsrc/plugins/internal/oidc/types.ts:269 authServerMeta.token_endpoint_auth_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS signing algorithms supported by the token endpoint for the signature on the JWT used to authenticate the client at the token endpoint.\tsrc/plugins/internal/oidc/types.ts:274 authServerMeta.ui_locales_supported?\tstring[]\tLanguages and scripts supported for the user interface, represented as a JSON array of language tag values from RFC 5646.\tsrc/plugins/internal/oidc/types.ts:284 authServerMeta.userinfo_encryption_alg_values_supported?\tstring[]\tJSON array containing a list of the JWE alg values supported by the UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:382 authServerMeta.userinfo_encryption_enc_values_supported?\tstring[]\tJSON array containing a list of the JWE enc values supported by the UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:386 authServerMeta.userinfo_endpoint?\tstring\tURL of the authorization server's UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:349 authServerMeta.userinfo_signing_alg_values_supported?\tstring[]\tJSON array containing a list of the JWS alg values supported by the UserInfo Endpoint.\tsrc/plugins/internal/oidc/types.ts:378 callbackUrl\tURL\t-\tsrc/plugins/internal/oidc/connection/ProcessCallbackUrl.ts:7 expectedState?\tstring\t-\tsrc/plugins/internal/oidc/connection/ProcessCallbackUrl.ts:8 ","version":"Next","tagName":"h2"},{"title":"ResolveTokenRequestArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ResolveTokenRequestArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"ResolveTokenRequestArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ResolveTokenRequestArgs#properties","content":" Property\tType\tDefined in authorizationRequest\tAuthorizationRequest\tsrc/plugins/internal/oidc/connection/ResolveTokenRequest.ts:11 callbackUrl?\tstring | URL\tsrc/plugins/internal/oidc/connection/ResolveTokenRequest.ts:12 ","version":"Next","tagName":"h2"},{"title":"ResolveCredentialRequestArgs","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ResolveCredentialRequestArgs","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"ResolveCredentialRequestArgs","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/interfaces/ResolveCredentialRequestArgs#properties","content":" Property\tType\tDescription\tDefined in clientId?\tstring\t-\tsrc/plugins/internal/oidc/connection/ResolveCredentialRequest.ts:11 issuerMeta?\t{ authorization_servers?: string[]; batch_credential_endpoint?: string; credential_configurations_supported: {[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }; credential_endpoint: string; credential_identifiers_supported?: boolean; credential_issuer: string; credential_response_encryption?: { alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }; deferred_credential_endpoint?: string; display?: { }; notification_endpoint?: string; signed_metadata?: string; }\t-\tsrc/plugins/internal/oidc/connection/ResolveCredentialRequest.ts:12 issuerMeta.authorization_servers?\tstring[]\t-\tsrc/plugins/internal/oidc/types.ts:86 issuerMeta.batch_credential_endpoint?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:95 issuerMeta.credential_configurations_supported\t{[key: string]: { credential_definition: { credentialSubject?: { }; type: string[]; }; credential_signing_alg_values_supported?: string[]; cryptographic_binding_methods_supported?: string[]; format: string; proof_types_supported?: {[key: string]: { proof_signing_alg_values_supported: string[]; }; }; scope?: string; }; }\t-\tsrc/plugins/internal/oidc/types.ts:111 issuerMeta.credential_endpoint\tstring\t-\tsrc/plugins/internal/oidc/types.ts:90 issuerMeta.credential_identifiers_supported?\tboolean\t-\tsrc/plugins/internal/oidc/types.ts:175 issuerMeta.credential_issuer\tstring\t-\tsrc/plugins/internal/oidc/types.ts:80 issuerMeta.credential_response_encryption?\t{ alg_values_supported: string[]; enc_values_supported: string[]; encryption_required: boolean; }\t-\tsrc/plugins/internal/oidc/types.ts:155 issuerMeta.credential_response_encryption.alg_values_supported\tstring[]\t-\tsrc/plugins/internal/oidc/types.ts:159 issuerMeta.credential_response_encryption.enc_values_supported\tstring[]\t-\tsrc/plugins/internal/oidc/types.ts:163 issuerMeta.credential_response_encryption.encryption_required\tboolean\t-\tsrc/plugins/internal/oidc/types.ts:169 issuerMeta.deferred_credential_endpoint?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:100 issuerMeta.display?\t{ }\t-\tsrc/plugins/internal/oidc/types.ts:178 issuerMeta.notification_endpoint?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:105 issuerMeta.signed_metadata?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:108 offer\t{ credential_configuration_ids: string[]; credential_issuer: string; grants?: { authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }; }\t-\tsrc/plugins/internal/oidc/connection/ResolveCredentialRequest.ts:10 offer.credential_configuration_ids\tstring[]\tarray of unique strings that each identify one of the keys in name/value pairs stored in the credential_configurations_supported Credential Issuer Metadata\tsrc/plugins/internal/oidc/types.ts:25 offer.credential_issuer\tstring\turl of the Credential Issuer from which the wallet is requested to obtain one or more Credentials the Wallet uses it to obtain the Credential Issuer's Metadata\tsrc/plugins/internal/oidc/types.ts:20 offer.grants?\t{ authorization_code?: { authorization_server?: string; issuer_state?: string; }; urn:ietf:params:oauth:grant-type:pre-authorized_code?: { authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }; }\tindicates the Grant Types the Authorization Server is prepared to process if grants is nil the Wallet must determine the Grant Types using the Metadata when multiple grants are present, it is at the Wallets discretion which to use\tsrc/plugins/internal/oidc/types.ts:31 offer.grants.authorization_code?\t{ authorization_server?: string; issuer_state?: string; }\t-\tsrc/plugins/internal/oidc/types.ts:32 offer.grants.authorization_code.authorization_server?\tstring\tcan be used to identify the Authorization Server to use with this grant type when authorization_servers in Issuer Metadata has multiple entries\tsrc/plugins/internal/oidc/types.ts:43 offer.grants.authorization_code.issuer_state?\tstring\tused to bind the Authorization Request with the Credential Issuer to a context if the Wallet decides to use the Authorization Code flow and received this value it must be included in the subsequent Authorization Reqest\tsrc/plugins/internal/oidc/types.ts:38 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code?\t{ authorization_server?: string; interval?: number; pre-authorized_code: string; tx_code?: { description?: string; input_mode?: string; length?: number; }; }\t-\tsrc/plugins/internal/oidc/types.ts:46 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.authorization_server?\tstring\tcan be used to identify the Authorization Server to use with this grant type when authorization_servers in Issuer Metadata has multiple entries\tsrc/plugins/internal/oidc/types.ts:63 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.interval?\tnumber\tamount of time in seconds that the Wallet should wait between polling requests to the token endpoint\tsrc/plugins/internal/oidc/types.ts:58 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.pre-authorized_code\tstring\tcode representing the Issuers authorization short lived and single use if the Wallet decides to use the pre-authorized_code flow, this value must be included in the subsequent Token Request\tsrc/plugins/internal/oidc/types.ts:53 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code?\t{ description?: string; input_mode?: string; length?: number; }\tspecifies whether the Authorization Server expects a presentation of a Transaction Code along with the Token Request\tsrc/plugins/internal/oidc/types.ts:68 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.description?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:71 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.input_mode?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:69 offer.grants.urn:ietf:params:oauth:grant-type:pre-authorized_code.tx_code.length?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:70 tokenResponse?\t{ access_token: string; c_nonce?: string; c_nonce_expires_in?: number; expires_in?: number; id_token?: string; refresh_expires_in?: number; refresh_token?: string; scope?: string; session_state?: string; token_type: string; }\t-\tsrc/plugins/internal/oidc/connection/ResolveCredentialRequest.ts:13 tokenResponse.access_token\tstring\t-\tsrc/plugins/internal/oidc/types.ts:545 tokenResponse.c_nonce?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:548 tokenResponse.c_nonce_expires_in?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:549 tokenResponse.expires_in?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:547 tokenResponse.id_token?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:552 tokenResponse.refresh_expires_in?\tnumber\t-\tsrc/plugins/internal/oidc/types.ts:551 tokenResponse.refresh_token?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:550 tokenResponse.scope?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:553 tokenResponse.session_state?\tstring\t-\tsrc/plugins/internal/oidc/types.ts:554 tokenResponse.token_type\tstring\t-\tsrc/plugins/internal/oidc/types.ts:546 ","version":"Next","tagName":"h2"},{"title":"README","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/namespaces/Protocols/","content":"","keywords":"","version":"Next"},{"title":"Variables‚Äã","type":1,"pageTitle":"README","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/namespaces/Protocols/#variables","content":" Variable\tDescriptionCredentialRequest\t- ","version":"Next","tagName":"h2"},{"title":"CredentialRequest","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/namespaces/Protocols/variables/CredentialRequest","content":"CredentialRequest @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / Protocols / CredentialRequest Variable: CredentialRequest const CredentialRequest: &quot;OIDC_V1/CREDENTIAL_REQUEST&quot; Defined in: src/plugins/internal/oidc/types.ts:10","keywords":"","version":"Next"},{"title":"AuthServerMetadata","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/type-aliases/AuthServerMetadata","content":"AuthServerMetadata @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / AuthServerMetadata Type Alias: AuthServerMetadata AuthServerMetadata = TB.Static&lt;typeof AuthServerMetadata&gt; Defined in: src/plugins/internal/oidc/types.ts:225","keywords":"","version":"Next"},{"title":"Context","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/type-aliases/Context","content":"Context @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / Context Type Alias: Context Context = Context&lt;Modules&gt; Defined in: src/plugins/internal/oidc/plugin.ts:6","keywords":"","version":"Next"},{"title":"IssuerMetadata","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/type-aliases/IssuerMetadata","content":"IssuerMetadata @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / IssuerMetadata Type Alias: IssuerMetadata IssuerMetadata = TB.Static&lt;typeof IssuerMetadata&gt; Defined in: src/plugins/internal/oidc/types.ts:77","keywords":"","version":"Next"},{"title":"CredentialOffer","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/type-aliases/CredentialOffer","content":"CredentialOffer @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / CredentialOffer Type Alias: CredentialOffer CredentialOffer = TB.Static&lt;typeof CredentialOffer&gt; Defined in: src/plugins/internal/oidc/types.ts:13","keywords":"","version":"Next"},{"title":"Modules","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/type-aliases/Modules","content":"","keywords":"","version":"Next"},{"title":"Properties‚Äã","type":1,"pageTitle":"Modules","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/type-aliases/Modules#properties","content":" Property\tType\tDefined in OIDC\tOIDCModule\tsrc/plugins/internal/oidc/plugin.ts:5 ","version":"Next","tagName":"h2"},{"title":"TokenResponse","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/type-aliases/TokenResponse","content":"TokenResponse @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / TokenResponse Type Alias: TokenResponse TokenResponse = TB.Static&lt;typeof TokenResponse&gt; Defined in: src/plugins/internal/oidc/types.ts:543","keywords":"","version":"Next"},{"title":"CredentialOffer","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/variables/CredentialOffer","content":"CredentialOffer @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / CredentialOffer Variable: CredentialOffer CredentialOffer: TObject&lt;{ credential_configuration_ids: TArray&lt;TString&gt;; credential_issuer: TString; grants: TOptional&lt;TObject&lt;{ authorization_code: TOptional&lt;TObject&lt;{ authorization_server: TOptional&lt;TString&gt;; issuer_state: TOptional&lt;TString&gt;; }&gt;&gt;; urn:ietf:params:oauth:grant-type:pre-authorized_code: TOptional&lt;TObject&lt;{ authorization_server: TOptional&lt;TString&gt;; interval: TOptional&lt;TNumber&gt;; pre-authorized_code: TString; tx_code: TOptional&lt;TObject&lt;{ description: ...; input_mode: ...; length: ...; }&gt;&gt;; }&gt;&gt;; }&gt;&gt;; }&gt; Defined in: src/plugins/internal/oidc/types.ts:13","keywords":"","version":"Next"},{"title":"AuthServerMetadata","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/variables/AuthServerMetadata","content":"AuthServerMetadata @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / AuthServerMetadata Variable: AuthServerMetadata AuthServerMetadata: TObject&lt;{ acr_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; authorization_encryption_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; authorization_encryption_enc_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; authorization_endpoint: TOptional&lt;TString&gt;; authorization_response_iss_parameter_supported: TOptional&lt;TBoolean&gt;; authorization_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; backchannel_authentication_endpoint: TOptional&lt;TString&gt;; backchannel_authentication_request_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; backchannel_logout_session_supported: TOptional&lt;TBoolean&gt;; backchannel_logout_supported: TOptional&lt;TBoolean&gt;; backchannel_token_delivery_modes_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; backchannel_user_code_parameter_supported: TOptional&lt;TBoolean&gt;; check_session_iframe: TOptional&lt;TString&gt;; claim_types_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; claims_locales_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; claims_parameter_supported: TOptional&lt;TBoolean&gt;; claims_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; code_challenge_methods_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; device_authorization_endpoint: TOptional&lt;TString&gt;; display_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; dpop_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; end_session_endpoint: TOptional&lt;TString&gt;; frontchannel_logout_session_supported: TOptional&lt;TBoolean&gt;; frontchannel_logout_supported: TOptional&lt;TBoolean&gt;; grant_types_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; id_token_encryption_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; id_token_encryption_enc_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; id_token_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; introspection_encryption_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; introspection_encryption_enc_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; introspection_endpoint: TOptional&lt;TString&gt;; introspection_endpoint_auth_methods_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; introspection_endpoint_auth_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; introspection_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; issuer: TString; jwks_uri: TOptional&lt;TString&gt;; mtls_endpoint_aliases: TOptional&lt;TObject&lt;{ }&gt;&gt;; op_policy_uri: TOptional&lt;TString&gt;; op_tos_uri: TOptional&lt;TString&gt;; pushed_authorization_request_endpoint: TOptional&lt;TString&gt;; registration_endpoint: TOptional&lt;TString&gt;; request_object_encryption_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; request_object_encryption_enc_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; request_object_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; request_parameter_supported: TOptional&lt;TBoolean&gt;; request_uri_parameter_supported: TOptional&lt;TBoolean&gt;; require_pushed_authorization_requests: TOptional&lt;TBoolean&gt;; require_request_uri_registration: TOptional&lt;TBoolean&gt;; require_signed_request_object: TOptional&lt;TBoolean&gt;; response_modes_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; response_types_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; revocation_endpoint: TOptional&lt;TString&gt;; revocation_endpoint_auth_methods_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; revocation_endpoint_auth_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; scopes_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; service_documentation: TOptional&lt;TString&gt;; signed_metadata: TOptional&lt;TString&gt;; subject_types_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; tls_client_certificate_bound_access_tokens: TOptional&lt;TBoolean&gt;; token_endpoint: TOptional&lt;TString&gt;; token_endpoint_auth_methods_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; token_endpoint_auth_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; ui_locales_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; userinfo_encryption_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; userinfo_encryption_enc_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; userinfo_endpoint: TOptional&lt;TString&gt;; userinfo_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; }&gt; Defined in: src/plugins/internal/oidc/types.ts:225","keywords":"","version":"Next"},{"title":"plugin","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/variables/plugin","content":"plugin @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / plugin Variable: plugin const plugin: Plugin Defined in: src/plugins/internal/oidc/plugin.ts:8","keywords":"","version":"Next"},{"title":"IssuerMetadata","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/variables/IssuerMetadata","content":"IssuerMetadata @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / IssuerMetadata Variable: IssuerMetadata IssuerMetadata: TObject&lt;{ authorization_servers: TOptional&lt;TArray&lt;TString&gt;&gt;; batch_credential_endpoint: TOptional&lt;TString&gt;; credential_configurations_supported: TRecord&lt;TString, TObject&lt;{ credential_definition: TObject&lt;{ credentialSubject: TOptional&lt;TObject&lt;{ }&gt;&gt;; type: TArray&lt;TString&gt;; }&gt;; credential_signing_alg_values_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; cryptographic_binding_methods_supported: TOptional&lt;TArray&lt;TString&gt;&gt;; format: TString; proof_types_supported: TOptional&lt;TRecord&lt;TString, TObject&lt;{ proof_signing_alg_values_supported: TArray&lt;TString&gt;; }&gt;&gt;&gt;; scope: TOptional&lt;TString&gt;; }&gt;&gt;; credential_endpoint: TString; credential_identifiers_supported: TOptional&lt;TBoolean&gt;; credential_issuer: TString; credential_response_encryption: TOptional&lt;TObject&lt;{ alg_values_supported: TArray&lt;TString&gt;; enc_values_supported: TArray&lt;TString&gt;; encryption_required: TBoolean; }&gt;&gt;; deferred_credential_endpoint: TOptional&lt;TString&gt;; display: TOptional&lt;TObject&lt;{ }&gt;&gt;; notification_endpoint: TOptional&lt;TString&gt;; signed_metadata: TOptional&lt;TString&gt;; }&gt; Defined in: src/plugins/internal/oidc/types.ts:77","keywords":"","version":"Next"},{"title":"TokenResponse","type":0,"sectionRef":"#","url":"/docs/sdk-ts/sdk/plugins/internal/oidc/variables/TokenResponse","content":"TokenResponse @hyperledger/identus-sdk v7.0.0 @hyperledger/identus-sdk / plugins/internal/oidc / TokenResponse Variable: TokenResponse TokenResponse: TObject&lt;{ access_token: TString; c_nonce: TOptional&lt;TString&gt;; c_nonce_expires_in: TOptional&lt;TNumber&gt;; expires_in: TOptional&lt;TNumber&gt;; id_token: TOptional&lt;TString&gt;; refresh_expires_in: TOptional&lt;TNumber&gt;; refresh_token: TOptional&lt;TString&gt;; scope: TOptional&lt;TString&gt;; session_state: TOptional&lt;TString&gt;; token_type: TString; }&gt; Defined in: src/plugins/internal/oidc/types.ts:543","keywords":"","version":"Next"},{"title":"Tutorials","type":0,"sectionRef":"#","url":"/docs/tutorials/","content":"Tutorials Welcome to the Identus Platform Tutorials! These tutorials will help you get started with using Identus Platform. The tutorials will guide you through setting up a connection, working with Decentralized Identifiers (DIDs), and using verifiable credentials. Whether you are new to self-sovereign identity (SSI) or have prior experience, these tutorials will provide the necessary information and skills to build and use SSI-based applications. Throughout all code examples in tutorials, the following conventions are in use: Issuer Keycloak is hosted at http://localhost:9980/Issuer Agent is hosted at http://localhost:8080/cloud-agent/Holder Agent is hosted at http://localhost:8090/cloud-agent/Verifier Agent is hosted at http://localhost:8100/cloud-agent/ To use the Identus Cloud Agents, you must include an apiKey header in your requests. You can configure the key, and in some instances, it will be provided to you, so make sure to create an environment variable with the proper value. export API_KEY=&lt;API Key value&gt; Alternatively, replace $API_KEY with your key in the CURL commands supplied throughout this tutorial. :::","keywords":"","version":"Next"},{"title":"Delete the Credential Definition","type":0,"sectionRef":"#","url":"/docs/tutorials/credentialdefinition/delete","content":"Delete the Credential Definition Unfortunately, once published (especially in the Verifiable Data Registry (VDR), deleting the credential definition becomes unfeasible. In the Identus Platform, credential definitions aren't published to the VDR. This functionality will be incorporated in subsequent versions of the platform. Hence, the platform currently doesn't provide a REST API for deletion. If you need to delete the credential definition, it's advisable to contact the database administrator or directly remove it from the Postgres instance using its guid. For example: DELETE FROM credential_definition WHERE guid = '3f86a73f-5b78-39c7-af77-0c16123fa9c2' ","keywords":"","version":"Next"},{"title":"Anoncred Credential Definition Guide","type":0,"sectionRef":"#","url":"/docs/tutorials/credentialdefinition/credential-definition","content":"","keywords":"","version":"Next"},{"title":"Abstract‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#abstract","content":" This document details the structure, supported formats, and technical intricacies of Anoncred Credential Definitions within the Identus Platform.  ","version":"Next","tagName":"h2"},{"title":"1. Introduction‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#1-introduction","content":" An Anoncred Credential Definition serves as a standardized format for any given Anoncred Verifiable Credential. By embedding essential attributes unique to each type of credential, it lays the groundwork for diverse categories of verifiable credentials. Integrating this definition on a public blockchain ensures its availability and verifiability for all stakeholders.  The Identus Platform endorses the Anoncred Credential Definition, conforming to the Hyperledger AnonCreds specification.  ","version":"Next","tagName":"h2"},{"title":"2. Anoncred Credential Definition Attributes‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#2-anoncred-credential-definition-attributes","content":" ","version":"Next","tagName":"h2"},{"title":"name (String)‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#name-string","content":" A descriptive and readable name indicating the type or category of the credential.  Example:  { &quot;name&quot;: &quot;{{CREDENTIAL_NAME}}&quot; }     ","version":"Next","tagName":"h3"},{"title":"description (String)‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#description-string","content":" A succinct descriptor providing an overview of the credential definition's purpose or category.  Example:  { &quot;description&quot;: &quot;{{CREDENTIAL_DESCRIPTION}}&quot; }     ","version":"Next","tagName":"h3"},{"title":"version (String)‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#version-string","content":" Specifies the version of the credential definition, using the SemVer protocol.  Example:  { &quot;version&quot;: &quot;{{VERSION_NUMBER}}&quot; }     ","version":"Next","tagName":"h3"},{"title":"tag (String)‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#tag-string","content":" A unique identifier or tag associated with the credential definition.  Example:  { &quot;tag&quot;: &quot;{{TAG_IDENTIFIER}}&quot; }     ","version":"Next","tagName":"h3"},{"title":"author (DID)‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#author-did","content":" The decentralized identifier (DID) of the entity that created the credential definition.  Example:  { &quot;author&quot;: &quot;{{ISSUER_DID_SHORT}}&quot; }     ","version":"Next","tagName":"h3"},{"title":"schemaId (URI)‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#schemaid-uri","content":" A distinct reference to retrieve the schema from the Schema Registry.  Example:  { &quot;schemaId&quot;: &quot;{{SCHEMA_REGISTRY_URI}}&quot; }     ","version":"Next","tagName":"h3"},{"title":"signatureType (String)‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#signaturetype-string","content":" Indicates the type of signature applied to the credential definition.  Example:  { &quot;signatureType&quot;: &quot;{{SIGNATURE_TYPE}}&quot; }     ","version":"Next","tagName":"h3"},{"title":"supportRevocation (Boolean)‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#supportrevocation-boolean","content":" Specifies if the credential definition incorporates revocation capabilities.  Example:  { &quot;supportRevocation&quot;: &quot;{{BOOLEAN_VALUE}}&quot; }     ","version":"Next","tagName":"h3"},{"title":"Conclusion‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#conclusion","content":" The Anoncred Credential Definition is a versatile tool that offers a standardized approach for an array of verifiable credentials. By ensuring its correct incorporation within the Identus Platform, the issuance and validation processes of various credentials can be streamlined and made more efficient.  ","version":"Next","tagName":"h2"},{"title":"References‚Äã","type":1,"pageTitle":"Anoncred Credential Definition Guide","url":"/docs/tutorials/credentialdefinition/credential-definition#references","content":" Hyperledger AnonCreds specification  Note: Throughout the implementation phase within the Identus Platform, it's crucial to replace placeholders (such as {{CREDENTIAL_NAME}}, {{VERSION_NUMBER}}, and others) with their real, intended values. ","version":"Next","tagName":"h2"},{"title":"Connections","type":0,"sectionRef":"#","url":"/docs/tutorials/connections/connection","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#roles","content":" The connection protocol has two roles:  Inviter: A subject that initiates a connection request by sending a connection invitation.Invitee: A subject that receives a connection invitation and accepts it by sending a connection request.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#prerequisites","content":" Inviter and Invitee Cloud Agents up and running  ","version":"Next","tagName":"h2"},{"title":"Cloud Agent endpoints overview‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#cloud-agent-endpoints-overview","content":" The protocol uses the following REST API endpoints:  /connections: POST: Creates a new connection and returns an invitationGET: Returns a list of connections GET /connections/{connectionId}: Returns an existing connection record by idPOST /connection-invitations: Accepts an externally received invitation  info Please check the full Cloud Agent API specification for more detailed information.  ","version":"Next","tagName":"h2"},{"title":"Inviter Flow‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#inviter-flow","content":" Generate and share a new Out-of-Band (OOB) invitation (connection gets created in InvitationGenerated state)Receive a connection request from the Invitee (connection moves to ConnectionRequestReceived state)Accept the connection request (connection moves to ConnectionResponsePending state)Send the connection response via the DIDComm Agent (connection achieves ConnectionResponseSent state)  The following diagram represents the Inviter's Connection state transitions:    ","version":"Next","tagName":"h2"},{"title":"Invitee Flow‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#invitee-flow","content":" Receive the OOB invitation (InvitationReceived state)Accept the invitation (connection is created in ConnectionRequestPending state)Send the connection request via DIDComm (connection achieves ConnectionRequestSent state)Receive the connection response (connection achieves ConnectionResponseReceived state)  The following diagram represents the Invitee's Connection state transitions:    ","version":"Next","tagName":"h2"},{"title":"Sequence diagram‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#sequence-diagram","content":" The following diagram shows the end-to-end flow for establishing a connection between an inviter and an invitee.    ","version":"Next","tagName":"h2"},{"title":"Command line example‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#command-line-example","content":" The following example demonstrates how you could use two Cloud Agent APIs to set up a connection between them.  ","version":"Next","tagName":"h2"},{"title":"Inviter creates an invitation‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#inviter-creates-an-invitation","content":" curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/connections' \\ -H 'Content-Type: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -d '{ &quot;label&quot;: &quot;Connect with Alice&quot; }' | jq   Example response:  { &quot;connectionId&quot;: &quot;1893e207-4cba-4792-8179-067c78d2acc2&quot;, &quot;createdAt&quot;: &quot;2023-02-02T17:14:13.593647Z&quot;, &quot;invitation&quot;: { &quot;from&quot;: &quot;did:peer:inviter-did&quot;, &quot;id&quot;: &quot;1893e207-4cba-4792-8179-067c78d2acc2&quot;, &quot;invitationUrl&quot;: &quot;https://domain.com/path?_oob={RAW_INVITATION}&quot;, &quot;type&quot;: &quot;https://didcomm.org/out-of-band/2.0/invitation&quot; }, &quot;kind&quot;: &quot;/connections/1893e207-4cba-4792-8179-067c78d2acc2&quot;, &quot;label&quot;: &quot;Connect with Alice&quot;, &quot;self&quot;: &quot;Connection&quot;, &quot;state&quot;: &quot;InvitationGenerated&quot; }   ","version":"Next","tagName":"h3"},{"title":"Invitee accepts OOB invitation‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#invitee-accepts-oob-invitation","content":" Replace {RAW_INVITATION} with the value of the '_oob' query string parameter from the invitation URL above  curl -X 'POST' \\ 'http://localhost:8090/cloud-agent/connection-invitations' \\ -H 'Content-Type: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -d '{ &quot;invitation&quot;: &quot;{RAW_INVITATION}&quot; }' | jq   Example response:  { &quot;connectionId&quot;: &quot;755a457a-878e-4292-a3f2-cb83601f802e&quot;, &quot;createdAt&quot;: &quot;2023-02-02T18:05:58Z&quot;, &quot;invitation&quot;: { &quot;from&quot;: &quot;did:peer:inviter-did&quot;, &quot;id&quot;: &quot;1893e207-4cba-4792-8179-067c78d2acc2&quot;, &quot;invitationUrl&quot;: &quot;https://domain.com/path?_oob={RAW_INVITATION}&quot;, &quot;type&quot;: &quot;https://didcomm.org/out-of-band/2.0/invitation&quot; }, &quot;kind&quot;: &quot;/connections/755a457a-878e-4292-a3f2-cb83601f802e&quot;, &quot;myDid&quot;: &quot;did:peer:invitee-did&quot;, &quot;self&quot;: &quot;Connection&quot;, &quot;state&quot;: &quot;ConnectionRequestPending&quot;, &quot;theirDid&quot;: &quot;did:peer:inviter-did&quot;, &quot;updatedAt&quot;: &quot;2023-02-02T18:05:59Z&quot; }   ","version":"Next","tagName":"h3"},{"title":"Invitee retrieves the list of connections‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#invitee-retrieves-the-list-of-connections","content":" curl -X 'GET' 'http://localhost:8090/cloud-agent/connections' \\ -H &quot;apikey: $API_KEY&quot; | jq   Example output:  { &quot;contents&quot;: [ { &quot;connectionId&quot;: &quot;755a457a-878e-4292-a3f2-cb83601f802e&quot;, &quot;createdAt&quot;: &quot;2023-02-02T18:05:58Z&quot;, &quot;invitation&quot;: { &quot;from&quot;: &quot;did:peer:issuer-did&quot;, &quot;id&quot;: &quot;1893e207-4cba-4792-8179-067c78d2acc2&quot;, &quot;invitationUrl&quot;: &quot;https://domain.com/path?_oob={RAW_INVITATION}&quot;, &quot;type&quot;: &quot;https://didcomm.org/out-of-band/2.0/invitation&quot; }, &quot;kind&quot;: &quot;/connections/755a457a-878e-4292-a3f2-cb83601f802e&quot;, &quot;myDid&quot;: &quot;did:peer:holder-did&quot;, &quot;self&quot;: &quot;Connection&quot;, &quot;state&quot;: &quot;ConnectionResponseReceived&quot;, &quot;theirDid&quot;: &quot;did:peer:issuer-did&quot;, &quot;updatedAt&quot;: &quot;2023-02-02T18:06:14Z&quot; } ], &quot;kind&quot;: &quot;Collection&quot;, &quot;self&quot;: &quot;/collections&quot; }   ","version":"Next","tagName":"h3"},{"title":"Inviter retrieves the list of connections‚Äã","type":1,"pageTitle":"Connections","url":"/docs/tutorials/connections/connection#inviter-retrieves-the-list-of-connections","content":" curl -X 'GET' 'http://localhost:8080/cloud-agent/connections' \\ -H &quot;apikey: $API_KEY&quot; | jq   Example response:  { &quot;contents&quot;: [ { &quot;connectionId&quot;: &quot;1893e207-4cba-4792-8179-067c78d2acc2&quot;, &quot;createdAt&quot;: &quot;2023-02-02T17:14:13Z&quot;, &quot;invitation&quot;: { &quot;from&quot;: &quot;did:peer:issuer-did&quot;, &quot;id&quot;: &quot;1893e207-4cba-4792-8179-067c78d2acc2&quot;, &quot;invitationUrl&quot;: &quot;https://domain.com/path?_oob={RAW_INVITATION}&quot;, &quot;type&quot;: &quot;https://didcomm.org/out-of-band/2.0/invitation&quot; }, &quot;kind&quot;: &quot;/connections/1893e207-4cba-4792-8179-067c78d2acc2&quot;, &quot;label&quot;: &quot;Connect with Alice&quot;, &quot;myDid&quot;: &quot;did:peer:issuer-did&quot;, &quot;self&quot;: &quot;Connection&quot;, &quot;state&quot;: &quot;ConnectionResponseSent&quot;, &quot;theirDid&quot;: &quot;did:peer:holder-did&quot;, &quot;updatedAt&quot;: &quot;2023-02-02T18:06:16Z&quot; } ], &quot;kind&quot;: &quot;Collection&quot;, &quot;self&quot;: &quot;/collections&quot; }   info Please check the full Cloud Agent API specification for more detailed information. ","version":"Next","tagName":"h3"},{"title":"present-proof","type":0,"sectionRef":"#","url":"/docs/tutorials/credentials/connectionless/present-proof","content":"present-proof","keywords":"","version":"Next"},{"title":"Create the Credential Definition","type":0,"sectionRef":"#","url":"/docs/tutorials/credentialdefinition/create","content":"","keywords":"","version":"Next"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Create the Credential Definition","url":"/docs/tutorials/credentialdefinition/create#prerequisites","content":" Before creating a credential definition, one must first create and then publish prism DID, and then create a credential schema to be used for the credential definition. Credential schema for credential definition must have a type of AnoncredSchemaV1 as shown in this example.  ","version":"Next","tagName":"h2"},{"title":"Step-by-step guide‚Äã","type":1,"pageTitle":"Create the Credential Definition","url":"/docs/tutorials/credentialdefinition/create#step-by-step-guide","content":" The following guide demonstrates how to create a birth certificate credential definition.  ","version":"Next","tagName":"h2"},{"title":"1. Define the Credential Definition for the Verifiable Credential‚Äã","type":1,"pageTitle":"Create the Credential Definition","url":"/docs/tutorials/credentialdefinition/create#1-define-the-credential-definition-for-the-verifiable-credential","content":" Assume you are aiming to define a credential for birth certificates. This credential definition has specific properties and ties to a schema in the Cloud Agent.  Here's a sample content of the credential definition:  { &quot;name&quot;: &quot;Birth Certificate location&quot;, &quot;description&quot;: &quot;Birth certificate Anoncred Credential Definition&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;tag&quot;: &quot;Licence&quot;, &quot;author&quot;: &quot;{{ISSUER_DID_SHORT}}&quot;, &quot;schemaId&quot;: &quot;http://host.docker.internal:8080/cloud-agent/schema-registry/schemas/{{SCHEMA_ID}}&quot;, &quot;signatureType&quot;: &quot;CL&quot;, &quot;supportRevocation&quot;: true }   ","version":"Next","tagName":"h3"},{"title":"2. Create the Credential Definition Record‚Äã","type":1,"pageTitle":"Create the Credential Definition","url":"/docs/tutorials/credentialdefinition/create#2-create-the-credential-definition-record","content":" Use your preferred REST API client, such as Postman or Insomnia, or utilize a client stub that's generated based on the OpenAPI specification. In your API client, initiate a new POST request to either /credential-definition-registry/definitions or /credential-definition-registry/definitions/did-url endpoints. They both take the same payload /credential-definition-registry/definitions creates a credential definition that can later be resolved via HTTP URL/credential-definition-registry/definitions/did-url creates a credential definition that can later be resolved via DID URL, the DID includes a service endpoint with the location of the credential definition registry.  Please note: The author field value should align with the short form of a PRISM DID previously created by the same agent. It's okay if this DID is unpublished. You can refer to the Create DID documentation for more comprehensive details on crafting a PRISM DID.  Construct the request body using the following JSON object:  { &quot;name&quot;: &quot;Birth Certificate location&quot;, &quot;description&quot;: &quot;Birth certificate Anoncred Credential Definition&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;tag&quot;: &quot;Licence&quot;, &quot;author&quot;: &quot;{{ISSUER_DID_SHORT}}&quot;, &quot;schemaId&quot;: &quot;http://host.docker.internal:8080/cloud-agent/schema-registry/schemas/{{SCHEMA_ID}}&quot;, &quot;signatureType&quot;: &quot;CL&quot;, &quot;supportRevocation&quot;: true }   Transmit the POST Request to Create the New Credential Definition  Once you've crafted your POST request, send it. Upon success, the server should respond with a GUID that uniquely identifies the new credential definition. The response bodies will be the same for HTTP URL endpoint and DID URL endpoint, as well as request bodies, the only difference will be the URL, and how this credential definitions will be resolved later, via HTTP URL or DID URL respectivly.  For ease of reference, here's a curl example:  curl -X 'POST' \\ 'http://localhost:8080/credential-definition-registry/definitions/' \\ -H 'accept: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -H 'Content-Type: application/json' \\ -d '{ &quot;name&quot;: &quot;Birth Certificate location&quot;, &quot;description&quot;: &quot;Birth certificate Anoncred Credential Definition&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;tag&quot;: &quot;Licence&quot;, &quot;author&quot;: &quot;{{ISSUER_DID_SHORT}}&quot;, &quot;schemaId&quot;: &quot;http://host.docker.internal:8080/cloud-agent/schema-registry/schemas/{{SCHEMA_ID}}&quot;, &quot;signatureType&quot;: &quot;CL&quot;, &quot;supportRevocation&quot;: true }   A potential response could be:  { &quot;guid&quot;: &quot;3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot;, &quot;id&quot;: &quot;f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea&quot;, &quot;longId&quot;: &quot;did:prism:agent/f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea?version=1.0.0&quot;, &quot;name&quot;: &quot;Birth Certificate location&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;Birth certificate Anoncred Credential Definition&quot;, &quot;tag&quot;: &quot;Licence&quot;, &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;authored&quot;: &quot;2023-03-14T14:41:46.713943Z&quot;, &quot;schemaId&quot;: &quot;http://host.docker.internal:8080/cloud-agent/schema-registry/schemas/{{SCHEMA_ID}}&quot;, &quot;signatureType&quot;: &quot;CL&quot;, &quot;supportRevocation&quot;: true, &quot;kind&quot;: &quot;CredentialDefinition&quot;, &quot;self&quot;: &quot;/credential-definition-registry/definitions/3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot; }   ","version":"Next","tagName":"h3"},{"title":"3. Retrieve the Created Credential Definition‚Äã","type":1,"pageTitle":"Create the Credential Definition","url":"/docs/tutorials/credentialdefinition/create#3-retrieve-the-created-credential-definition","content":" To obtain details of the newly created credential definition, send a GET request to either /credential-definition-registry/definitions/{guid} or /credential-definition-registry/definitions/did-url/{guid} endpoints. Replace {guid} with the unique GUID returned from the previous creation step. Note that if you've created a credential definitoin via HTTP URL endpoint, you can retrieve it via /credential-definition-registry/definitions/{guid} and if you've created credential definition via DID URL endpoint, it can only be retrieved via /credential-definition-registry/definitions/did-url/{guid}  To exemplify this process, use the following curl command:  curl -X 'GET' \\ 'http://localhost:8080/credential-definition-registry/definitions/3f86a73f-5b78-39c7-af77-0c16123fa9c2' \\ -H 'accept: application/json' \\ -H &quot;apikey: $API_KEY&quot;   or in case of DID URL  curl -X 'GET' \\ 'http://localhost:8080/credential-definition-registry/definitions/did-url/3f86a73f-5b78-39c7-af77-0c16123fa9c2' \\ -H 'accept: application/json' \\ -H &quot;apikey: $API_KEY&quot;   You should receive a response containing the JSON object representing the credential definition you've just established:  { &quot;guid&quot;: &quot;3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot;, &quot;id&quot;: &quot;f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea&quot;, &quot;longId&quot;: &quot;did:prism:agent/f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea?version=1.0.0&quot;, &quot;name&quot;: &quot;Birth Certificate location&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;Birth certificate Anoncred Credential Definition&quot;, &quot;tag&quot;: &quot;Licence&quot;, &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;authored&quot;: &quot;2023-03-14T14:41:46.713943Z&quot;, &quot;schemaId&quot;: &quot;http://host.docker.internal:8080/cloud-agent/schema-registry/schemas/{{SCHEMA_ID}}&quot;, &quot;signatureType&quot;: &quot;CL&quot;, &quot;supportRevocation&quot;: true, &quot;kind&quot;: &quot;CredentialDefinition&quot;, &quot;self&quot;: &quot;/credential-definition-registry/definitions/3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot; }   Or in case of DID URL, the respoinse is Prism Envelope  { &quot;resource&quot;: &quot;eyJhdXRob3IiOiJkaWQ6cHJpc206ZDYyYzFlNmJlZDdiYWYzYjgwNzFiZmE5NzUyNDg0Zjg5ODRlNzUzMWZjMmM1MGJiOTQ4OTE4YWYwNWFiMjAxOSIsImF1dGhvcmVkIjoiMjAyNC0wOS0yN1QxMjozNjoxNS42NDcwNTRaIiwiZGVmaW5pdGlvbiI6eyJpc3N1ZXJJZCI6ImRpZDpwcmlzbTpkNjJjMWU2YmVkN2JhZjNiODA3MWJmYTk3NTI0ODRmODk4NGU3NTMxZmMyYzUwYmI5NDg5MThhZjA1YWIyMDE5Iiwic2NoZW1hSWQiOiJodHRwOi8vbG9jYWxob3N0OjgwODUvc2NoZW1hLXJlZ2lzdHJ5L3NjaGVtYXMvZGFjZjNiOGUtODllYi0zYWQ2LWExNDYtMTIyZGRhN2Q2MjY0L3NjaGVtYSIsInRhZyI6IkxpY2VuY2UiLCJ0eXBlIjoiQ0wiLCJ2YWx1ZSI6eyJwcmltYXJ5Ijp7Im4iOiIxMDU2NTQwMzY4NTExMTkxOTg0NDI4MDQ5MDUxOTcxMzg3NzI2NjA5NjEzNjI1NjQ5NDI3MjY0OTIyMjEyMDY1Mzc3ODc0Mjc2NjQ3NjE2MTA1Mjg5MTEyNjg2NTI1ODI5MDI4MzM2MzE4MDQ0NjI5ODg0NDQ3NzI4Mzk5NzY5NDk3Njc3NTg1MDY1NDE2NjA4NDU4ODcxMTEyMDY3NjMwMTU1MjQyNzk5NDcwNzg5MDE3NDUwMjE3NTQ0NzU3NzcyMzc0OTk0MzQ4MTcwODU5MTM3ODQ0NzkwMzY4NzIyOTM2NTY3NzY0Mjk2NTUwMDQ5NzQwODc0NTExMTE4MTQ3ODE0MDIxNzAxNTU2MDY2NDYwMDE2NDQ2NDY5ODY3OTY1MjcyMDMwODEzNDY1ODU3NzQzMjE1NTYwNDUxMjU0NzI0MzU3ODI4NDk0NjAxMzI2MzI2MTczOTgzMzQ3ODk4NTMwODkxMjgzODk2MzY0MjQyNzY0MDY0MzM0MDQ1MTg4Nzk2NzkzMjg3MTgyMjgwMjg0OTI0ODkzMzIwNDg5MjcwMzg0MTg4Nzc3NzQ3MDYwNjg4Mjc1ODg3MzYzMTA1Mzg3MDE3MDAzMzYxMzkxNTcxNjgyMjk4OTY1NDYzNzAxMDYyODcwMTA1MDg5MjkzNTcyMDQ0MzA3ODQ2NzQ3OTQ5NDg3OTMyMTA2MjA2ODIxNzc1MTc1NTA3ODk5MTg2MzMyMTE2NjA5MzU4ODE2OTYzNDUyMzU2NjQwNTMxMTMzNjExMTkyMDY2NDk0MTA1ODEwNzg0NDg2ODAwNjA0Mjc2NDE4MzIxMzciLCJyIjp7ImJpcnRoZGF5IjoiNDk3NzU1NDY2NjkwNTI5MDcxMzE1NTI5NjE1OTY2NTE1MzQ3MzM2NjUyMzExNzg4OTYzODE5MjE4MzU5MTAyOTQ0NzczMjQ1ODgxNzEyMjcxNjAxMTgxNTA2MTQ2MzMwMjYwMTI5MDEyMTUzMzQ1NjU3MzU1NDI5MzM4MDg5ODU5ODc5MDQ5NDczNTAyODUxMjk1NDM4NTIyMzY5NzM3NzQ1NDc3MzkzODI5ODU1NzI0NDk3MzY4NjYyNjI5NTEzNDYzODgwODI3ODI2NjYxNDcyNjc3ODc5NDA2NTE1MDAzMzcwMTA0NjU0MzMyOTYwNzU1NTU0OTY3NDM0NTQwODIzNzcwODg3NTk2MTE4Mjk2NjkyODg1ODY4OTU2MDAwNzc1MjkxNDIyNzQ1ODEzMzUzODMxMzMxNDk4OTk3ODc5MjUzNTIxNTg1Nzg2NDExODk0NTY4MTE5NzI1MjAzNjg3MDg4MDU0NDgzODc3NDEzNDI5MjQ5NDc2MjYwNDU3MjIwMjA1Nzc1MzA1NTA4NzcxMjYyMjM0MTI1ODMyOTA1OTUzMDM4MTg1MDc2NjUzMTQzNDcwNDQzNTQ2Mzc0NDk4MTM3NTc2NzY0Mzk3NjU5NjY4NDc4MTU0Njg5MzY5NzUyMDY0MDg1MTYwMzM0ODQxNTQ2MjYxMzM2MzAyODE5NTI0MDI1MDkwMDcwOTEzNDQwMjA2NzI3NzEyODIzNTIzMjI2MDQ2NTY0Nzk3MTA1MjA2NTU1OTY0ODcxMzMxMzAxNjc2ODQyMTIyODMzMTM5NjEwNjM1ODg5ODkyODg4NTY3OTk5MDUiLCJsb2NhdGlvbiI6Ijk2NTAwODMyMjE1NTE5Mjc1MTAwMDc4MjgzMjkyNTU2NTM2MzYyMjQ3ODM4NzcxNDczMzAzMDMwMTQwMTA0ODM2OTUyODI5ODcxMTYxODUxMTgxODIyMDg1Mzc3Nzg4NTI5NDg4ODg3NTA5OTEyODIzNTE0NzIzOTM0MTg4Mzc1MjAxMjE5NzQ2MDYyMjExNzU0MTgxOTgzNjMxNDIzOTMwNTgwMTM2Njg1ODYwNjc3NzAxNDMwMTIwNjM2NTc5MTUwNzIwMzA5OTg2NDM1NzEzNDIwMzIxMjQyODIwNzI2NzIxNzM4MjE4Mjg1NzM1OTU0NTE0ODI3MTQ2MTk0NjAzMzUyMDExNTg3NzEwNDYxODEwMTcxOTI2NzQ2OTM5ODEzMzYxOTAzODYxNzIwODg0NjcxOTMzMjkwNTk1MDM2NjA2MzYyMTk1NTk4MTQ4NTM3NTkzOTQxNzg1NTI3NTA2Nzg1ODkwMTc4OTU0MTMwMzQ5MTI3NjA0NjQ2NjY3Nzg3Nzc5ODgxMDM0OTYwNjM2ODE4NDU3ODMzMTAxMTM0ODYzNDkxOTA1NDAyMzM1NzIwNjg0MjM4MTM1NjcwNDg4ODgzNzU5Nzk0NTAwMDc4MDkxMzMyNjI3NzEwMzc4NTQ3MTEwMDM5MTk1NTQ2MjE0NDUwMzAzOTc3NTI0NDU4ODgzMTI1NzIyNjY2OTYxMDczODA2MDE2NTg1NjA5Nzg2MTIwODI3MDcwNzY1ODA4MTg0NDAyMzYyMDk1NDkyOTc4MDAxOTU3MDQxMjA2NjU3MTgwMTA0ODA0ODE1NDE5MTg1OTE0MzY1IiwibWFzdGVyX3NlY3JldCI6IjkwMTQyODA1NjM0MTQxNTAwODgxMDI5NzU2NjQ0MDYzMzIyNDAyNTg4OTg5NTMwMzA4NzExNjI1ODk3NDc1MDcyMDUzNDIwMjU0MDQxNTY0MjUzMjA1ODczMjMyNDg0NTc2NDk5OTk0MDUzODg1MjY4NjcxODY0MzU3NTc4NTY5NjU4MTQyMTc3NDEzOTc5MjcyNTU3MDQ0MDAxMzc3MzU0MDQwMTk3ODAxMzgwMzEwMTQ5ODAzMTMxMDc0ODAwOTM2Nzc5NjU5MjU3NTcwNDkxODk3MzI2ODYyNDMxMDUzNDE3NTE0NTEwNzQ3MDI4ODY2OTE3ODA4MDA5NTQyOTM1NDI2NDQ4NzQwMjI0MjAwNDAzMjIwNTY4MDA5ODgxMDI5ODIwNDUzMjE0MTU5MzY2MzU4NTc4NzE3Mzc5NTMwNzQ4NDk1NzM3MDQ5NjMwNDM5NjIwODcxODk2NTMwODQ3ODAzMjE3NDUyODk4OTI2NDYxNjQ1NTAxODU5MzAxMjM5MjAyOTA5NzY5NDUyMTIwNDQ0NDUyNzAzNzgyNDIyOTQ1NjE1MjY3Nzc4MzI0NzkyNTYxNTYzODg5MzQ5NDI3NzU3Mjk5OTc3MTA5MDE5NjMwOTAxMzk5ODg2NTg2NTU3NTE0NTg5MTM0Nzk5MTk3OTY3MzIxMzQ3Nzc1Mjk5OTIxMDU0MjE0NTM5MDQ3MjA5NTAwNjMyNTY5NDM3Njc1MDQ5NzQxMDQxNDE4OTczNDEyMjYwMzUxODI5Nzk0MDk5ODIzMzg5OTU1MDQ1NjU0MjMwMTA5MTU0NzA1NjU3MDk3NjczODc0In0sInJjdHh0IjoiNTQ4NTk3NDYwMTc5NjcxNzIwMjg0MjIxOTMwODU0NjI4MDMyOTQyNDMwMDI2NTM2NDk3NTY3MDcyOTEzMzIyOTc1NzE3NzgwMzY3MjAwOTUyMjEwNzk2NDY3MTUxMjI4OTg1OTU0MTM3MDQzMDIyNTQ4MjA0NzU0NDE4NTc0OTU1NDA0ODgyNjc1MzI2Mzg5NDU0NjAzMzkwNjE3MzAyMzYyMjMwMTM3NDI1ODgyODcxMTA2NjQ1Nzg0OTg3MjgwNDUwNjIxODc0MjQxNDkzOTQzNDkyMzc5NjczMTk3OTYxNzk2Nzc4NzYwNTI4MzI5NDU0MTc4MzM2MDIyMjM4OTYwNjQ1NDgxNzc0NDAyMzY3NDAwMTMwNzk2OTc1MzM2OTU2NjI3MzM3MzMzMjUxMzY4MTY3MjkzMTk1NDU1MTA1MTUyOTM4MTU2MzU1NDg4MDI5ODk4NjUyOTM1Mzc1MTI5NTMyNTI3NjUzNjgyMzE1MzcwNjA2MTkxNzkxMzkyMjUyODI5NzkyMTc3MDc3ODA3MDU1MjAwNzU2NjI5NjI3NDI2NDc5MDg3MTI2NDk3MDQ0NDU5MDY2ODE3MTExODYwMjUzMjQ1NTc5NzMyMDMyNzk3NjQ0NjM0ODY2MTU0NDI2NjIwNzE2ODc3NjcxNDI5NjIyNzAzMzU5NzEzNTM1MjQwNjUzMjcwNzEyOTc4NDk1NDI0NjYyNTkxNDk3MTM0NjkyODM5MDMxMDYwMTMxODkyMjE4ODQ0MDcxNjg2MjIyODE0MzM4NTY2MDIyNjM0MTQ3ODY0MDc5OTg4Mzc4MjQ1OTE4NTkiLCJzIjoiNzkxNDQwOTkzMTkzMjI4NzQ4Nzg3NDA2MTM4MzQ3Nzg1NTI1NjUwODgyNzE3NTg4MzcxODgzMzk4NDg2NTg3OTc1Nzc0ODQ1MDY1NTE3Mjk4NzM2NTAxMjU4MTUyNjg1NDI1MDA1OTU3MTUwNjk1MDE3MDUwMzc2NzE4MDQ2MjUyNTM2NDI4MTQ0MzEyMzMzMDgzMTI5MDMyNDE2NzI3MzI0NzgxNTMwMTI4MTE0MDQ3MTU1ODc3Mzg5Njg1MTE1MTMyODU4Njk3NTYwNzgwMjE2MTAxOTI1MTc3NzYxNzE5OTkxODc3OTE4OTAyMzQ2MDA2MDg5OTU2MTExNTAwNzQ5MDkwMzMxNzY5Njk4NjUzNzIwNTkyNTc5ODEzMzY4Nzk5NzI0MDg3ODAwMjAwNTM3MzYwNTg3NjQwNTc3ODYyMjAwMzE4NTIxODI2NjAyNTA3ODA5Mjc3NzUwMTY0ODUyNTY1MjQwMzgwMDU0MTM1NDY5NzUxNDEwNDk4MTQ3NzMxNDIxNzU0OTE2NDIwMjgzNTM2NzY1NDA3OTE3NDcxOTgyMDQxMDkyOTYwODUxMzA2NjM0NzgzMDY0NzA5MTY2NDc1MDc3MTk4MTAxNDIwODQ5MzA2NzkyMTU3NjMzMTUwNDkwNjgyMDE2NDk1NDMwNDAwMjI5MDEyOTM2MTg2Mjk2MzMyMDcwMzA2OTE2MDM5NDk5ODQ5Njk5MTgxNDQ2ODYxNzgyNTM3OTU5ODc0MDAzNzc3MzE3NjY4MTI3NDg4MjE3MzcxOTIyNDc3ODMzMDAxODMyODAwMjEyNDU5MzkzNTgxNjMiLCJ6IjoiNzI5ODc2NDE0MjA1NzkyNTk2ODc4NTQwMTAzODUxODM5NjY3ODIyMDE5MzQwODMxNjgxMTgxOTI1MTY3ODcwMDU4OTk0ODg4MDE4OTg4Nzc2NTczMDEyMDQ2NTc3ODI4OTY5OTA5NTE4MTIwNzMwMTc4MTQ2ODQ2NDU0NjczNDk3NTQ5MTAyNjAxNzY0NzYzMDUyMjExMTcwNDMyNzQyNTI4Nzg1OTU1NjIyOTE4NzMyMjQwMjk5NDg2NjY5OTc5MjI1ODk5NzMwMzUwMDMyMjM0NTIyMzA5MjU3MjcxNDE5MDc1MDg4MDg5MzkzNjQxOTYxOTA0Njg2MDAwODgwNTQ5ODIxMTEyNTIyMTEyMDA3MzUwODA5NTY2NjYzODM5NjA0NjEwMzQ5NDM4MTgxMzY0MDE5MzU2NTE4NTcyOTA3Mjk5OTY4NzU2NDE4MjIzNDM1ODYxNjE2MzkwNDIzMzYxMzM0NTE1NDk4NDcxMDk4NjA2NjY0NTczOTE1ODQ0NTg2MjYxMTQxNzQ1MzYwMTkzNjc4MDA4MDk3OTE5MTIxNDgxMDgwODM5OTAwMTMyMTY2NTU4NjAxMDAyMzQxMzc5NTczMzc3NjcwNDk2MDc2ODMxMzU0MzE2MjEzNDY3MDA1MDcyMDgxMDgwODcyODIxMzEwMzQ2NTc1MjgzMDYwNDEwMjA2NzUxNzk1NjM1MDY1NDM5MTQ5OTI1NTc5MjIzMjM4NTI0NzA5OTg5NzgzMTA0Njc3NTc0MDE1NjY5MjMxNjMxNDAwMjI5NTc2OTM1NTc3NzE5MTI1MDIwNDczOTcwNjU3MjgifSwicmV2b2NhdGlvbiI6eyJnIjoiMSAxMjI1OTQ3NDcyOTc2QjVBQTgyMjlDMjI4RUFFNUI3NThDMDlGNkIwN0I1NDU4MEJDNzYzNTMwNkJFQjI1ODkyIDEgMDlBMzEzOEIzMzZGMUZCQUJEMEIxM0E5QTNBNzM1RDMyQjRFN0YzREZCNTE1QzkwRkQwNzVGNTY5QTQ5RTUyMSAyIDA5NUU0NURERjQxN0QwNUZCMTA5MzNGRkM2M0Q0NzQ1NDhCN0ZGRkY3ODg4ODAyRjA3RkZGRkZGN0QwN0E4QTgiLCJnX2Rhc2giOiIxIDI0OTA1M0Y0NUJCQTg3MDA3NzhDRjE1ODQxREZERUIwQUY1OTQzRTFFMkYyRUVFMDNFQUI2RDgwOEFDMkYxRUUgMSAwNzQyQ0U3QjM3MjAzNTc1QThDNUQzMjc1NzY3RDkxNUQ2RUVDRkVDMzc5NzkzOTNGNjYxRkY1NDE0QzdENEJBIDEgMThEN0ExMEUzNjJGQTE5MkYxRDJFNTE3OUQ1ODBGMTk0RTM5NDEzMTE1MTE3MDBGQkE3OUE0QTIxMkUxN0Y5RiAxIDA3QzNDQTRFMjBDOTkyQTEwQ0NDNzI0NDlBQUU5NjRFMDFEREZCNTBGQ0VEQkUxRTZDOEQwRUMzOThGOTU3MUMgMiAwOTVFNDVEREY0MTdEMDVGQjEwOTMzRkZDNjNENDc0NTQ4QjdGRkZGNzg4ODgwMkYwN0ZGRkZGRjdEMDdBOEE4IDEgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCIsImgiOiIxIDE5RUMwQkExMTRFMTBBN0Y5RkVCMkU3MzMyNTZDQzk4NTU0RkVEQzFGRjgzN0REQUEzNDQxN0U1NzYyNTg0NzkgMSAwMTYzN0VGQTBCQ0E2QjNENjZDMzE1RUU4QUJGNzNCMEU5MUVCNTA1REE1QUZCRDk2MTA5M0QwMjk5RjRGQUVEIDIgMDk1RTQ1RERGNDE3RDA1RkIxMDkzM0ZGQzYzRDQ3NDU0OEI3RkZGRjc4ODg4MDJGMDdGRkZGRkY3RDA3QThBOCIsImgwIjoiMSAxQUMwQUY5NTBEN0UyRkE0MDNDN0UwRkI5RThDNTE4N0Q3QTBBMzFBMzgzQkFFNDVGRUEyMUFGNjZFOEM1MTkxIDEgMTMyNTZGMDBCODQyOTNGMjA3M0VCOUVFRTFCMUY4MDU4MTAyNkMzMkE1RjdGQThDNEExQTEwODMyNkE2Mzc0NSAyIDA5NUU0NURERjQxN0QwNUZCMTA5MzNGRkM2M0Q0NzQ1NDhCN0ZGRkY3ODg4ODAyRjA3RkZGRkZGN0QwN0E4QTgiLCJoMSI6IjEgMUFEMTUwOTJDMTNDNUI0NUY4MDk3OENFQ0ZCM0Y5NUUyMTNBMURBQ0NBNDMxRkEzNkE3MUU4OTg4MUE2RkVDMCAxIDI0NEEwRTMyODkyMjcxNTE5NjYwMEQ2NkYxRTU3MzA4NUE0MURDM0UxRkU4RjZEODU0OTY1RTNFMkFFNkY2RTIgMiAwOTVFNDVEREY0MTdEMDVGQjEwOTMzRkZDNjNENDc0NTQ4QjdGRkZGNzg4ODgwMkYwN0ZGRkZGRjdEMDdBOEE4IiwiaDIiOiIxIDBGMEZDRUJDNTE1MzI3MjEyNDI2QzIwNkY2ODQ4N0U5M0EyNjc1NTdCRjg5QUJENkIxNTBDMzA2MUM1RDNDRjcgMSAwN0I1OUVFMThFREY1RThFQzEzM0ZFMDY1N0RDRjEzMTAxMUYwQzFERUM1RjQ2NDU3MUMxMTIyMDc3RjMwMDVEIDIgMDk1RTQ1RERGNDE3RDA1RkIxMDkzM0ZGQzYzRDQ3NDU0OEI3RkZGRjc4ODg4MDJGMDdGRkZGRkY3RDA3QThBOCIsImhfY2FwIjoiMSAyNDAzOTI2NjBDNjYxMDhCQjgzNDkwMDk1NzBGQTQ0MkFBRDAzQTY1MTU2NkQwMUE4MkVFRDQwMDNEMzY1QzY3IDEgMEMyQTE3Q0Q5MDM4QzE4QzU3Q0QyNDY4RTA2RENFNzU4NEE4Q0I4RTgwMzkzQjNBMjBCRkZERTY5MEQ0QzM2MCAxIDIzQ0ZFREE0NkJDMThEQUMzODdCRDdDMUQ2RjM1MzYyMEY2M0E0REI0OEM5MDBEQ0QxRkYzMEEzNkRDNjQwNEYgMSAwREJCQzQ3MUUyMzUwQ0I1QkU2RkFGN0RDOTBDQkQ3Q0MxRTkyOUUwQ0MzOUJCRDlBOUNBOEJFM0Y3REVCNkIwIDIgMDk1RTQ1RERGNDE3RDA1RkIxMDkzM0ZGQzYzRDQ3NDU0OEI3RkZGRjc4ODg4MDJGMDdGRkZGRkY3RDA3QThBOCAxIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLCJodGlsZGUiOiIxIDAxQjQ4Mzg3QjlGRDlCQUQwRTg1RTJCMDFCNDI5OEJCNzNDQ0JBMjE5NzdDQTk4RDZFRDQ2MDM2ODNEODFDNjAgMSAxRTQwMzE1RDYyNTY1RDg4MjBFM0RGODRFMEUzRTE4RkI4OTFDNkJDNTJFOTJEMzhCNTIzMDNFOENFNDI4Q0U2IDIgMDk1RTQ1RERGNDE3RDA1RkIxMDkzM0ZGQzYzRDQ3NDU0OEI3RkZGRjc4ODg4MDJGMDdGRkZGRkY3RDA3QThBOCIsInBrIjoiMSAwMjNCRDYzRDM0RkE0NjYwN0REMDgyN0Q2MjlDMzdCOEVBMEZFMjJFOUQwM0JCOTgzNjlBMTI1RjczRDc0OERGIDEgMEZFMEE3Nzg1MEYyRkNBOEFEREFCMTlCQTY0QUYzMEVFM0JBNTNDRTMwRTUxOEY3MzcxRkNFMTQ1NjQ1MTg0MCAyIDA5NUU0NURERjQxN0QwNUZCMTA5MzNGRkM2M0Q0NzQ1NDhCN0ZGRkY3ODg4ODAyRjA3RkZGRkZGN0QwN0E4QTgiLCJ1IjoiMSAwMkY0OUVBNzFGMjEzNkRERjNBNDkyRjMzRjFDRTYzMEFFNzQ1OTc3NDVDQkFEQkZGQzAyQjczNTVEOURBREJGIDEgMEU2OTNENjlFNUUzRDYxRjhGMDlFQ0UwRDJBMDgwOTUzQzkyNzMxOUY2OTQ0NTRGOTJFRjI0RDBBMDIwMjU0RCAxIDIxMTQxRDg0MTU2QkQxMkUzNEFDRDFDMkY3QTA2NzRCQkU0NUMwRjUyRjBFM0M3RUZEMjNDOURCNURDMDc2MjMgMSAxOUNENzY3NUQ5MTk0MzlFMjAxRDQzREFCNDdDREVDQUM1MTE0QkEzQzQyRTE4QkY1REQ5M0Y5N0UxMkNBNkMyIDIgMDk1RTQ1RERGNDE3RDA1RkIxMDkzM0ZGQzYzRDQ3NDU0OEI3RkZGRjc4ODg4MDJGMDdGRkZGRkY3RDA3QThBOCAxIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLCJ5IjoiMSAwOUU5REJGQkI4QTUxNTZBQjdENjc5QkNCOEZCNkE0RkU3NDJENTVDMURBQzAzNzA2QTQ1QUQyOUFCM0VFNzBGIDEgMTg0OEI3RkYxOTQ4MUFEQjY4RkRFMDI0MEExRkFDOTVBODc0OTg3NUVFOTg4OUZENzlCMjU5NTRERUJDODI4QSAxIDEwODIzRkNDMkI0MTNFRDJFRUEzQkQ4RjJCRjNBMUZGMjc3QjdFQTRGNkI1RjBGMTZDODQ3M0QyRjc1RTc0MTUgMSAxMTJDRjc0NkVDNzVDMEU2MDY3MzJBQTQ1ODZCNDM3MDVDMUY2MEJDREQ5RjBDMTUwQzVGMDYyMkQ3NTNCMTU1IDIgMDk1RTQ1RERGNDE3RDA1RkIxMDkzM0ZGQzYzRDQ3NDU0OEI3RkZGRjc4ODg4MDJGMDdGRkZGRkY3RDA3QThBOCAxIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAifX19LCJkZWZpbml0aW9uSnNvblNjaGVtYUlkIjoiUHVibGljQ3JlZGVudGlhbERlZmluaXRpb25WMSIsImRlc2NyaXB0aW9uIjoiQmlydGggY2VydGlmaWNhdGUgQW5vbmNyZWQgQ3JlZGVudGlhbCBEZWZpbml0aW9uIiwiZ3VpZCI6ImVmNGE1ZGRjLTA2MTItMzRmNi1hZjI4LWM1ZDE0N2FhNDM4MCIsImlkIjoiYjc2YWUwOTMtN2U0ZS00NWE4LThmOTEtMTJhMmMzMGNjYjYzIiwia2V5Q29ycmVjdG5lc3NQcm9vZiI6eyJjIjoiMzA3NDE2NTUyNjQzOTM2NzgxODg3MDMzMzY5MTYxOTk3NTUzNDMyMjQ1OTE3OTA4MDk3Mjg2MTcxMTcwOTYyOTAzNTY5NDQ5MDU3NjYiLCJ4cl9jYXAiOltbImxvY2F0aW9uIiwiMzc2ODI3NzMxMDQ2MzM0MTkzOTYwMzU4OTkwMzgxMDA3NDc5Mzc0MjM2NDQ5OTg5ODA5MDY0MDg3NDg4MDk4MTQ2MDgzMjc5MjI5ODA5NDQ0MjM2OTQzODU2MTk0MjAzMjM0OTE0NTAxMzI4NTc5NDQwMjg3NzM1MTc5Mjk4NjMzNDg5MzIwNTU5NzE1MTk1MzU0MTYwMDg5MzY0MjA3MzMxMzQyNjAwODI2NDAzNDI5MjM0OTUxNjU3MDI4NTI0Nzc3ODc4NzQ2MzAyMDE0OTA3MDg0NTg3MTI1Nzg5NzMyMDY0NDA1NTQ2Mjc5NDczOTIyMTEyNDg2NzU3Nzk2MTQ0MTAwMDcyMjc2NjQ3NTc4NTQ2OTAxMjEwMDAzNzc2NDA4MTg1NTE1NzI5MzM4OTgzODY3NDQyNTEyMzI3NzYxMzYzMDAxODg0Mjc4NjI0MzYyOTQ5ODc3OTQ5MzA0MzAxMjkxODA2NTk5ODkyNzA2OTE3OTQ5OTM0NDI3ODQzODAxMTgxODQxMjcwOTM0ODQ1MTc0NDE2OTIwNzE2MTM3OTU2NjA0NDA4MDc0NTA0OTk4NjIxMjc1NTM0MTIyMjYzMTIyMTUyNDUxMzAyNzAyNzE2ODYwNDc5MDQ3NDk0MTE2NDc3NDAzMjkzOTk4NzUwNTcxNTQ3MjI5NTQ1NTEwNzM1MDYzODUyMDc3Mjg0OTYwMTgwMDU1MDA4NjA5Njg3Mjg0MjE2MzMwMDI4MzY1Njc2OTAzMDIzMzg2NDI3MDk2NTc0MDExNzMzNDAxMTY2NDI5MjA0NzQ2MzI2MDk2MjU2NjQ5MTE1NzUyMjczOTAyMDM5NDM0Mzc2Mjc2MTI3MTMyMzEzOTE3OTI3NTUzOTU4NDUxNDY5ODYwMTk1NjkzNDIwMjIxMzI1NTg1NTg2NzMxIl0sWyJiaXJ0aGRheSIsIjI1NTAwMDM2ODMzNDA5MzQxOTUzOTE4MDAyODI0MTA1MTEwMzA4OTA3NDMzODQzMTQ5OTE3ODc3MTUxNDc5NDY2MzAxOTQ5NjY4MzA1NTgxNTc0NDE2Nzk1OTkyMDYzNzAwMDM3NzY4NDIyMzIxNzk2NDE1OTA3NjY1MzQ4NzI2MTE2OTkzNzgxNDgxODIwNzAzODU4MTA0NDgzOTk0MjI4MDQ1NjUxODMzODY4MjgzMjg1NDkwMzIxMzk3NTQzMjQyNzY5OTU3ODY0ODMzMDAxNjk0OTA2MjUzOTIwOTY1NDU4MzcyNzcxNjczOTExNTk0ODQyNjAzNDM5NTMzMzQwMDc5MDQ2NjM1ODMzNDA1NzcyNDAwMzQyMjQ5MTA4NjA5OTkyMTk3ODY5NjY3MzE5MjA1MzQ5ODg4NTUyNDAzNDc0Mzc0NDgwMzMyMTU2NjQyMjI2OTQ3MDUzNDQwNTEzNzg5NjcwNzY5OTU1MzQ5NjM0NzMyOTkwOTgzMDk5NTkyOTIzNzQ0NTc1OTE5MTE2Mjk3MDY3NjU4OTE0ODgwODAyOTMyODc3OTkwNTQwNDYzMDAxMDE4OTU5MTg0MzA4NzE3OTMwNzQ1OTk2OTE0Mjc2MzA2MzQzNTkwODA3MDk2NTM1MDYxOTI2ODY3MTU0NjQ2NDgzNDU4ODQ1NjY2NjQxNjU4MjA4NDM3MzA1MDM4OTc0NjQ4MDkzMTUyNjg1NTk0NDEwNzk2Mzg2OTI5MDM4MDcwOTQ2ODg1ODYxMzYyMDI2NjE0MTUxMDMxNjQ1OTY1NzMwOTgxNjY5NDc4MTQyOTEyMTMzNzQ1MDc3NTM3NDY4NDQ0MzU0MjA2NTA3NTU4OTE5NTQ5OTUxNTQ0MzI4MTkwMDQwMzA2MzQ3NDc0NzcwNzY1NTU5MDA1MTA4ODgwOSJdLFsibWFzdGVyX3NlY3JldCIsIjQ5MDA3ODIyMDM2OTkwODI2ODQxMTkwMzM3MTU4ODI4Nzc1NzE0NjM3MDc3OTg5Njg0MTA5NTc0NjA4ODQ3MjA2MzIxMTA2ODQxMzcwOTkxNTQ2NTMwMjYwMDIzNDU1MDk4OTcyNjcyNjUyNDQzMDQ1NzI2MTM3MTk2Nzc5NzUxNjQ2MDQyOTk3NjgyMzYyMTQxMTA1MjY5NTQ2MTkxMjMwNzcyODc5MzczNjcxNTY1ODk5NjAxMjQ2MjYwMDMzNjY4OTQyODY1MjgyMTg3NzA3OTc2NDcyNjg3NzU5NTA1NjQ4NjgyNzc0NTI3NzAzNzQyNjQxODc2MTgwOTU4OTI3MzMxNjcwNDAxMzI4ODI4Mzc2MjMxMTk4NzI3ODUyMzU4NTUxNzUzNTEwNTk1MzQwNjI4MTA0MjkxMDU5ODI4NDU2NTUwOTQyNjI0MjA3OTA4ODMyNzQ5NjM5ODQwODIxNzEyNTU1Mjg2MDE5Mjk2MTY4OTQ0NjEzNjg3NDM5MzU5NTMxNjA2NzQ3MDc3Mjc3MDE4MDE5MzU1MjM4NzUyMzUwMTYzODE3MzQ5ODI1ODY4ODQ0NTk0ODU5NDQ3Mzg0NDA0NjMxMDk3NjkzNTQ5NTk0NjkwNDcyMTI3Nzg1MTg4NDI5MTAxNjE5MDI4MTc1NjI3MzIzOTUzNTAyOTUwNzk3NTIwMDQ0OTE2MDY5MDg4MjczODU3NzYwNzU5MDkxNTQyNDQ4ODc4MzU5NTc1NDk5MjM1MzIzODc4NDA1MjIwNDc5MzMxMzE5MDE0ODg2NDk5NjE0MzI2MTA3MTM2MjA1ODg4Njg3ODU4Njg4NTgxNTI4NjQxMzI4ODg1NzkwNTc0MjAwNjUxMzA0NzU4NTE0MTAzNzAzNDM2NDAwMDM0NTQ4MjAxMDc5NDM4MzQ2NjU5OCJdXSwieHpfY2FwIjoiNDk2Njg1Mjk0NTI0Mjc4Njg0NDc0OTQ1MDQ0MzI5OTU5MjI0NTA4NzY1NjMzNTg4MDQzNDUwNDgxNTE4MzQ5ODk4NDAxMjk3MzQ2OTk0MjQ5ODEwMjIzODM3MzE0MDc0NDI1NDQ4NzU1OTYwMjg2MTU3ODY4NTk0NDU2MDE2Mjc3NTcyMjAxMDgwNDQzMTA3NjQxNjM5MzExNDAyMDUyOTM3NjczMzI5MDM4NjU0Nzc2MDI1MTA0OTYyMTEwMTQzNTg5NjA3NjEyOTM2NDI4MDc3MjQ1Nzg4Mjk2OTc2MzU5ODk5MjMwMjQwNTEyMjc5MzU0MDg2MTMwNjIyNjYzMjgzMTA4Njk4MTM0NjU0NTMzMTQ1NjY4NDU1NjExODU2MDY2Mjc2OTgxMjUwMDAyMTQ2ODgwNTk0NzM3MzU2MjA2MDE1NzUyMDAxNjE3ODU2OTI0MDk3NjU3ODU2NjkzNTYwODA1ODQ0MDQ3NTY3ODE2NTczNDUxNTg1NTUzODMzMzQ0ODE0NDMzMzMxNzk2ODc5Mzg5NjgyODM3MjQ3OTU0MDUwOTcwNzE0Mjg2NDQwNDg2NjY5MDE4MjMzODkxNTA0ODE0ODk3NDAyODYxNzMxMDg2NjEzMTU5MDM0NDEzNTIzMzk2NjE0NjE4NjQ3NjczNzgzMDIyMTAzMTQxNTg0MTAwMDY0NTE0NjA4ODYxMTY2Nzg3NjYzODMxMjE5MTM0NTYwNDAyNTEzMjQ5MDg0NzA5NDM2ODM5NTM5NTQ3MzQwNzMyNDYyOTE4MDg3NzU3MTYyOTQ2Mzk5MTMzNzA0MTA0MzMwNzUxNzU3OTMxMTE0OTkwNzA5NjU3NDQ3MjU0OTM1OTc3MDExNjQzMTc5NjU4MTg5MzI3MDg4NDY5NjExMzcxMTg1OTY2MzIwNzU3ODM1In0sImtleUNvcnJlY3RuZXNzUHJvb2ZKc29uU2NoZW1hSWQiOiJQcm9vZktleUNyZWRlbnRpYWxEZWZpbml0aW9uVjEiLCJuYW1lIjoiQmlydGggQ2VydGlmaWNhdGUgbG9jYXRpb24iLCJyZXNvbHV0aW9uTWV0aG9kIjoiZGlkIiwic2NoZW1hSWQiOiJodHRwOi8vbG9jYWxob3N0OjgwODUvc2NoZW1hLXJlZ2lzdHJ5L3NjaGVtYXMvZGFjZjNiOGUtODllYi0zYWQ2LWExNDYtMTIyZGRhN2Q2MjY0L3NjaGVtYSIsInNpZ25hdHVyZVR5cGUiOiJDTCIsInN1cHBvcnRSZXZvY2F0aW9uIjp0cnVlLCJ0YWciOiJMaWNlbmNlIiwidmVyc2lvbiI6IjEuMC4wIn0=&quot;, &quot;url&quot;: &quot;did:prism:d62c1e6bed7baf3b8071bfa9752484f8984e7531fc2c50bb948918af05ab2019?resourceService=agent-base-url&amp;resourcePath=credential-definition-registry/definitions/did-url/ef4a5ddc-0612-34f6-af28-c5d147aa4380?resourceHash=ca8ea2c80ff1e07978e2ed59245186fbb9992daedbecb651535ad5996be372c1&quot;   Remember, in the Cloud Agent, the combination of author, id, and version uniquely identifies each credential definition. Thus, using the same agent DID as the author, you cannot establish another credential definition with identical id and version values.  ","version":"Next","tagName":"h3"},{"title":"4. Update the Credential Definition‚Äã","type":1,"pageTitle":"Create the Credential Definition","url":"/docs/tutorials/credentialdefinition/create#4-update-the-credential-definition","content":" To update or upgrade an existing credential definition, follow the steps outlined below:  Begin with the first step and make necessary modifications to the Credential Definition.Update the version value to reflect the changes made. This is important to ensure that each version of the credential definition remains distinct.Create a new credential definition entry with the updated version and schema.  Note: When you make changes to an existing credential definition, it's essential to version the new entry accurately. This ensures clarity and avoids potential conflicts or misunderstandings among different versions of the same definition. ","version":"Next","tagName":"h3"},{"title":"Issue credentials (OID4VCI)","type":0,"sectionRef":"#","url":"/docs/tutorials/credentials/oid4vci/issue","content":"","keywords":"","version":"Next"},{"title":"Example: OID4VCI Authorization Code Issuance‚Äã","type":1,"pageTitle":"Issue credentials (OID4VCI)","url":"/docs/tutorials/credentials/oid4vci/issue#example-oid4vci-authorization-code-issuance","content":" Example is available here.  Following the instructions, the example demonstrates a single-tenant agent setup using an external Keycloak as the Issuer Authorization Server. The demo application walks through the authorization code issuance flow step-by-step.  1. Launching Local Example Stack‚Äã  docker-compose up   After running the docker-compose up command, all the containers should be running and initialized with the necessary configurations. The following logs should appear indicating that the stack is ready to execute the flow   _ _ _ _ _ | |_| |_| |_ _ __| | | ___ | ' \\ _| _| '_ \\_ _(_-&lt; |_||_\\__|\\__| .__/ |_|/__/ |_| 2024-07-16_11:51:01.301 INFO o.h.b.s.BlazeServerBuilder@L424:[ZScheduler-Worker-5] {} - http4s v0.23.23 on blaze v0.23.15 started at http://0.0.0.0:8085/   2. Building the demo application‚Äã  docker build -t identus-oid4vci-demo:latest ./demo   3. Running the demo application‚Äã  docker run --network &lt;NETWORK_NAME&gt; -it identus-oid4vci-demo:latest   The parameter NETWORK_NAME should be the same as the network name in docker-compose. This name can be discovered by running the docker network ls command.  The demo application acts as both issuer and Holder in the same script. See the source code for detailed steps on how to implement this flow. The demo application will interactively prompt the next step in the issuance flow. Keep continuing until this log appears asking the user to log in using the browser.  ############################## Open this link in the browser to login http://localhost:9980/realms/students/protocol/openid-connect/auth?redirect_uri=..... ############################## wating for authorization redirect ...   Open this URL in the browser. Enter alice for the username and 1234 for the password.  After a successful login, this log should appear indicating the demo application has received the credentials.  ::::: Credential Received ::::: { &quot;credential&quot;: &quot;eyJ0eXAiOiJKV1QiLC...SK1vJK-fx6zjXw&quot; }  ","version":"Next","tagName":"h2"},{"title":"Issue credentials (Connectionless)","type":0,"sectionRef":"#","url":"/docs/tutorials/credentials/connectionless/issue","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#roles","content":" In the Issue Credentials Protocol, there are two roles:  The Issuer is responsible for creating a new credential offer, sending it to a Holder, and issuing the VC once the offer is accepted.The Holder is responsible for accepting a credential offer from an issuer and receiving the VC.  The Issuer and Holder interact with the Identus Cloud Agent API to perform the operations defined in the protocol.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#prerequisites","content":" Before using the &quot;Connectionless&quot; Issuing Credentials protocol, the following conditions must be present:  JWTAnonCredsSDJWT Issuer Cloud Agents is up and runningThe Issuer has a published PRISM DID, and the DID document must have at least one assertionMethod key for issuing credentials (see Create DID and Publish DID)The Holder is either another Cloud Agent or Edge Agent SDK  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#overview","content":" The protocol described is a VC issuance process between an Issuer (Identus Cloud Agent) and Holder (Identus Edge Agent SDK).  The protocol consists of the following main parts:  The Issuer creates a new credential offer using the /issue-credentials/credential-offers/invitation endpoint, which includes information such as the schema identifier and claims. This returns a unique OOB (out-of-band) invitate code for the prospective Holder.The Holder accepts the OOB invite (see SDK acceptInvitation)The Issuer responds by sending the actual Credential OfferThe Holder accepts the Credential OfferThe Issuer sends the Verifiable Credential  The claims provide specific information about the individual, such as their name or qualifications.  This protocol is applicable in various real-life scenarios, such as educational credentialing, employment verification, and more. In these scenarios, the Issuer could be a school, an employer, etc., and the Holder could be a student or an employee. The VCs issued during this protocol could represent a diploma, a certificate of employment, etc.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#endpoints","content":" Endpoint\tDescription\tRole/issue-credentials/credential-offers/invitation\tThis endpoint allows you to create a new credential offer invitation\tIssuer /issue-credentials/credential-offers/accept-invitation\tThis endpoint allows you to accept the invitation\tHolder /issue-credentials/records\tThis endpoint allows you to retrieve a collection of all the existing credential records\tIssuer, Holder /issue-credentials/records/{recordId}\tThis endpoint allows you to retrieve a specific credential record by its id\tIssuer, Holder /issue-credentials/records/{recordId}/accept-offer\tThis endpoint allows you to accept a credential offer\tHolder /issue-credentials/records/{recordId}/issue-credential\tThis endpoint allows you to issue a VC for a specific credential record.\tIssuer  info Please check the full Cloud Agent API specification for more detailed information.  ","version":"Next","tagName":"h2"},{"title":"Issuer interactions‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#issuer-interactions","content":" This section describes the Issuer role's available interactions with the Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"Creating a Credential Offer‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#creating-a-credential-offer","content":" To start the process, the issuer needs to create a credential offer invitation. To do this, make a POST request to the /issue-credentials/credential-offers/invitation endpoint with a JSON payload that includes the following information:  JWTAnonCredsSDJWT claims: The data stored in a verifiable credential. Claims get expressed in a key-value format. The claims contain the data that the issuer attests to, such as name, address, date of birth, and so on.issuingDID: The DID referring to the issuer to issue this credential fromschemaId: An optional field that, if specified, contains a valid URL to an existing VC schema. The Cloud Agent must be able to dereference the specified URL (i.e. fetch the VC schema content from it), in order to validate the provided claims against it. When not specified, the claims fields is not validated and can be any valid JSON object. Please refer to the Create VC schema doc for details on how to create a VC schema.credentialFormat: The format of the credential that will be issued - JWT in this case. When not specified, the default value is JWT. note The issuingDID property comes from completing the pre-requisite steps listed above Once the request initiates, a new credential record for the issuer gets created with a unique ID. The state of this record is now OfferPending. # Issuer POST request to create a new credential offer curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/issue-credentials/credential-offers/invitation' \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -d '{ &quot;claims&quot;: { &quot;emailAddress&quot;: &quot;alice@wonderland.com&quot;, &quot;givenName&quot;: &quot;Alice&quot;, &quot;familyName&quot;: &quot;Wonderland&quot;, &quot;dateOfIssuance&quot;: &quot;2020-11-13T20:20:39+00:00&quot;, &quot;drivingLicenseID&quot;: &quot;12345&quot;, &quot;drivingClass&quot;: 3 }, &quot;credentialFormat&quot;: &quot;JWT&quot;, &quot;issuingDID&quot;: &quot;did:prism:9f847f8bbb66c112f71d08ab39930d468ccbfe1e0e1d002be53d46c431212c26&quot;, &quot;schemaId&quot;: &quot;http://localhost:8080/cloud-agent/schema-registry/schemas/3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot; }'   ","version":"Next","tagName":"h3"},{"title":"Sending the Offer to the Holder‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#sending-the-offer-to-the-holder","content":" The next step for the Issuer is to send the OOB invite Holder (by definition, this is &quot;out of band&quot;, so not handled by Identus). Common ways to convey such OOB invites might be a QR code that is scanned, or via an existing channel of connection in an application.  ","version":"Next","tagName":"h3"},{"title":"Issuing the Credential‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#issuing-the-credential","content":" Once the holder has approved the offer and sent a request to the Issuer, the Issuer will receive the request via DIDComm and update the record state to RequestReceived.  The Issuer can then use the /issue-credentials/records/{recordId}/issue-credential endpoint to issue the credential to the holder.  # Issuer POST request to issue the credential # make sure you have `issuer_record_id` extracted from created credential offer # and the record achieved `RequestReceived` state curl -X POST \\ &quot;http://localhost:8080/cloud-agent/issue-credentials/records/$issuer_record_id/issue-credential&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -H &quot;apikey: $API_KEY&quot;   When this endpoint gets called, the state of the record will change to CredentialPending, and after processing, it will change to CredentialGenerated.  Finally, the Issuer agent will send the credential to the holder via DIDComm, and the state of the record will change to CredentialSent. At this point, the Issuer's interactions with the holder are complete.    ","version":"Next","tagName":"h3"},{"title":"Holder interactions‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#holder-interactions","content":" This section describes the Holder role's available interactions with the Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"Receiving the VC Offer‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#receiving-the-vc-offer","content":" The Holder will receive the offer from the Issuer via DIDComm, and a new credential record with a unique ID gets created in the OfferReceived state.  This process is automatic for the Cloud Agent.  You could check if a new credential offer is available using /issue-credentials/records request and check for any records available in OfferReceived state:  # Holder GET request to retrieve credential records curl &quot;http://localhost:8090/cloud-agent/issue-credentials/records&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -H &quot;apikey: $API_KEY&quot;   ","version":"Next","tagName":"h3"},{"title":"Approving the VC Offer‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#approving-the-vc-offer","content":" To accept the offer, the Holder can make a POST request to the /issue-credentials/records/{recordId}/accept-offer endpoint with a JSON payload that includes the following information:  JWTanoncredsSDJWT holder_record_id: The unique identifier of the issue credential record known by the holder's Cloud Agent.subjectId: This field represents the unique identifier for the subject of the verifiable credential. It is a short-form PRISM DID string, such as did:prism:subjectIdentifier. # Holder POST request to accept the credential offer curl -X POST &quot;http://localhost:8090/cloud-agent/issue-credentials/records/$holder_record_id/accept-offer&quot; \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -d '{ &quot;subjectId&quot;: &quot;did:prism:subjectIdentifier&quot; }'   This request will change the state of the record to RequestPending.  ","version":"Next","tagName":"h3"},{"title":"Receiving the VC Credential‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#receiving-the-vc-credential","content":" Once the Holder has approved the offer and sent a request to the Issuer, the Holder agent will process the request and send it to the Issuer agent. The state of the Holder's record will change to RequestSent.  After the Issuer has issued the credential, the Holder will receive the credential via DIDComm, and the state of the Holder's record will change to CredentialReceived. This process is automatic for the Cloud Agent.  The Holder can check the achieved credential using a GET request to /issue-credentials/records/{recordId}/ endpoint.    ","version":"Next","tagName":"h3"},{"title":"Sequence diagram‚Äã","type":1,"pageTitle":"Issue credentials (Connectionless)","url":"/docs/tutorials/credentials/connectionless/issue#sequence-diagram","content":" TODO ","version":"Next","tagName":"h2"},{"title":"Present proof (DIDComm)","type":0,"sectionRef":"#","url":"/docs/tutorials/credentials/didcomm/present-proof","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#roles","content":" The present proof protocol has two roles:  Verifier: A subject requesting a proof presentation by sending a request presentation message, then verifying the presentation.Holder/Prover: A subject that receives a proof presentation request, prepares a proof, and sends it to the verifier by sending a proof presentation message.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#prerequisites","content":" Before using the Proof Presentation protocol, the following conditions must be present:  Holder/Prover and Verifier Cloud Agents must be up and runningA connection must be established between the Holder/Prover and Verifier Cloud Agents (see Connections)The Holder/Prover should hold a verifiable credential (VC) received from an Issuer see Issue.  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#overview","content":" This protocol supports the presentation of verifiable claims between two Cloud Agents, the Holder/Prover and the Verifier.  The protocol consists of the following main parts:  The Verifier creates a new proof presentation request using the /present-proof/presentations endpoint. It includes the identifier of an existing connection between both parties, domain, and a challenge to protect from potential replay attacks.The Holder/Prover receives the presentation request from the Verifier and can retrieve the list of existing requests using the /present-proof/presentations endpoint.The Holder/Prover can then review and accept a specific request using the /present-proof/presentations/{presentationId} endpoint, providing the identifier of the credential record to use in the proof presentation.The Verifier receives the proof presentation from the Holder/Prover and can accept it using the /present-proof/presentations/{presentationId} endpoint, specifying presentation-accept as the action type.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#endpoints","content":" Endpoint\tMethod\tDescription\tRole/present-proof/presentations\tPOST\tCreates and sends a new proof presentation request.\tVerifier /present-proof/presentations\tGET\tRetrieves the collection of all the existing presentation proof records - sent or received.\tVerifier, Holder/Prover /present-proof/presentations/{id}\tGET\tRetrieves a specific presentation proof record by id.\tVerifier, Holder/Prover /present-proof/presentations/{id}\tPATCH\tUpdates an existing presentation proof record to, e.g., accept the request on the Holder/Prover side or accept the presentation on the Verifier side.\tVerifier, Holder/Prover  info For more detailed information, please, check the full Cloud Agent API.  ","version":"Next","tagName":"h2"},{"title":"Verifier interactions‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#verifier-interactions","content":" This section describes the interactions available to the Verifier with the Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"Creating and sending a Presentation Request‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#creating-and-sending-a-presentation-request","content":" The Verifier needs to create a proof presentation request to start the process. To do this, he makes a POST request to the /present-proof/presentations endpoint with a JSON payload that includes the following information:  connectionId: This field represents the unique identifier of an existing connection between the verifier and the Holder/prover. It is for exchanging messages related to the protocol flow execution.challenge and domain: The Verifier provides the random seed challenge and operational domain, and the Holder/Prover must sign the generated proof to protect from replay attacks.  JWTAnonCredsSDJWT curl -X 'POST' 'http://localhost:8070/cloud-agent/present-proof/presentations' \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -d '{ &quot;connectionId&quot;: &quot;872ddfa9-4115-46c2-8a1b-22c24c7431d7&quot;, &quot;proofs&quot;:[], &quot;options&quot;: { &quot;challenge&quot;: &quot;11c91493-01b3-4c4d-ac36-b336bab5bddf&quot;, &quot;domain&quot;: &quot;https://prism-verifier.com&quot; } }'   Upon execution, a new presentation request record gets created with an initial state of RequestPending. The Verifier Cloud Agent will send the presentation request message to the Cloud Agent of the Holder/Prover through the specified DIDComm connection. The record state then is updated to RequestSent.  The Verifier can retrieve the list of presentation records by making a GET request to the /present-proof/presentations endpoint:  curl -X 'GET' 'http://localhost:8070/cloud-agent/present-proof/presentations' \\ -H 'accept: application/json' \\ -H &quot;apikey: $API_KEY&quot;   ","version":"Next","tagName":"h3"},{"title":"Accept presentation proof received from the Holder/prover‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#accept-presentation-proof-received-from-the-holderprover","content":" Once the Holder/Prover has received a proof presentation request, he can accept it using an appropriate verifiable credential. The Cloud Agent of the Verifier will receive that proof and verify it. Upon successful verification, the presentation record state gets updated to PresentationVerified.  The Verifier can then explicitly accept the specific verified proof presentation to change the record state to PresentationAccepted by making a PATCH request to the /present-proof/presentations/{id} endpoint:  curl -X 'PATCH' 'http://localhost:8070/cloud-agent/present-proof/presentations/{PRESENTATION_ID}' \\ -H 'Content-Type: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -d '{ &quot;action&quot;: &quot;presentation-accept&quot; }'     ","version":"Next","tagName":"h3"},{"title":"Holder/Prover‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#holderprover","content":" This section describes the interactions available to the Holder/Prover with his Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"Reviewing and accepting a received presentation request‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#reviewing-and-accepting-a-received-presentation-request","content":" The Holder/Prover can retrieve the list of presentation requests received by its Cloud Agent from different Verifiers making a GET request to the /present-proof/presentations endpoint:  curl -X 'GET' 'http://localhost:8090/cloud-agent/present-proof/presentations' \\ -H 'accept: application/json' \\ -H &quot;apikey: $API_KEY&quot;   The Holder/Prover can then accept a specific request, generate the proof, and send it to the Verifier Cloud Agent by making a PATCH request to the /present-proof/presentations/{id} endpoint:  JWTAnonCredsSDJWT curl -X 'PATCH' 'http://localhost:8090/cloud-agent/present-proof/presentations/{PRESENTATION_ID}' \\ -H 'Content-Type: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -d '{ &quot;action&quot;: &quot;request-accept&quot;, &quot;proofId&quot;: [&quot;{CRED_RECORD_ID}&quot;] }' The Holder/Prover will have to provide the following information: presentationId: The unique identifier of the presentation record to accept.proofId: The unique identifier of the verifiable credential record to use as proof.  The Holder/Prover will have to provide the following information:  presentationId: The unique identifier of the presentation record to accept.anoncredPresentationRequest: A list of credential unique identifier with the attribute and predicate the credential is answering for.  The record state is updated to PresentationPending and processed by the Holder/Prover Cloud Agent. The agent will automatically generate the proof presentation, change the state to PresentationGenerated, and will eventually send it to the Verifier Agent, and change the state to PresentationSent.    ","version":"Next","tagName":"h3"},{"title":"Sequence diagram‚Äã","type":1,"pageTitle":"Present proof (DIDComm)","url":"/docs/tutorials/credentials/didcomm/present-proof#sequence-diagram","content":" The following diagram shows the end-to-end flow for a verifier to request and verify a proof presentation from a Holder/prover.  JWTAnonCreds ","version":"Next","tagName":"h2"},{"title":"Credential revocation","type":0,"sectionRef":"#","url":"/docs/tutorials/credentials/revocation","content":"","keywords":"","version":"Next"},{"title":"Overview‚Äã","type":1,"pageTitle":"Credential revocation","url":"/docs/tutorials/credentials/revocation#overview","content":" Every credential will contain the property credentialStatus, which will look like this:  &quot;credentialStatus&quot;: { &quot;id&quot;: &quot;http://localhost:8080/cloud-agent/cloud-agent/credential-status/27526236-3836-4061-9867-f69314e258b4#94567&quot; &quot;type&quot;: &quot;StatusList2021Entry&quot;, &quot;statusPurpose&quot;: &quot;revocation&quot;, &quot;statusListIndex&quot;: &quot;94567&quot;, &quot;statusListCredential&quot;: &quot;http://localhost:8080/cloud-agent/cloud-agent/credential-status/27526236-3836-4061-9867-f69314e258b4&quot; },   type will always be StatusList2021EntrystatusListCredential is a publicly accessible URL that resolves a status list credential that looks like this:  JWT { &quot;proof&quot; : {...}, &quot;@context&quot; : [ &quot;https://www.w3.org/2018/credentials/v1&quot;, &quot;https://w3c.github.io/vc-bitstring-status-list/contexts/2021/v1.jsonld&quot; ], &quot;type&quot; : [ &quot;VerifiableCredential&quot;, &quot;StatusList2021Credential&quot; ], &quot;id&quot; : &quot;http://localhost:8085/credential-status/c2688c98-ecb5-4dd3-87e8-a689b8fa84dd&quot;, &quot;issuer&quot; : &quot;did:prism:462c4811bf61d7de25b3baf86c5d2f0609b4debe53792d297bf612269bf8593a&quot;, &quot;issuanceDate&quot; : 1717793619, &quot;credentialSubject&quot; : { &quot;type&quot; : &quot;StatusList2021&quot;, &quot;statusPurpose&quot; : &quot;Revocation&quot;, &quot;encodedList&quot; : &quot;H4sIAAAAAAAA_-3BMQ0AAAACIGf_0MbwARoAAAAAAAAAAAAAAAAAAADgbbmHB0sAQAAA&quot; } }   statusListIndex is an index in a bit string at which the credential's revocation status can be verified.  The status list credential contains encodedList, a base64-encoded bit string that contains the credential's revocation status.  ","version":"Next","tagName":"h2"},{"title":"Verification‚Äã","type":1,"pageTitle":"Credential revocation","url":"/docs/tutorials/credentials/revocation#verification","content":" To verify the revocation status of the credential, one must follow these steps:  Resolve the Status list credential using the URL found at path: credentialStatus.statusListCredentialVerify the embedded proof of the credential.Decode bit-string, which is in the JSON document of the Status list credential, found at path - credentialSubject.encodedListUse the status list index from credentialStatus.statusListIndex to check if the bit at this index in the decoded bit-string from step 3 is on or off. If the bit is on, the credential is revoked. Otherwise, a revocation has yet to occur.  ","version":"Next","tagName":"h2"},{"title":"Proof verification‚Äã","type":1,"pageTitle":"Credential revocation","url":"/docs/tutorials/credentials/revocation#proof-verification","content":" Status list credential integrity can be verified using the embedded proof.  JWT We currently support 2 types of proofs: DataIntegrityProof via crypto suite eddsa-jcs-2022. The exact steps on how to create a verify this proof are in the Data Integrity EdDSA Cryptosuites v1.0 Used for Ed25519 EC curves, meaning if the proof was created using Ed25519 private key EcdsaSecp256k1Signature2019, the description of this cryptosuite can be found here Used for secp256k1 EC curves, meaning if the proof was created using secp256k1 private keyThis proof type uses RDF canonicalization algorithm as a data normalization before singing and verifying, the variant of this algorithm used is URDNA2015 Example of status list credential with DataIntegrityProof‚Äã { &quot;proof&quot; : { &quot;type&quot; : &quot;DataIntegrityProof&quot;, &quot;proofPurpose&quot; : &quot;assertionMethod&quot;, &quot;verificationMethod&quot; : &quot;data:application/json;base64,eyJAY29udGV4dCI6WyJodHRwczovL3czaWQub3JnL3NlY3VyaXR5L211bHRpa2V5L3YxIl0sInR5cGUiOiJNdWx0aWtleSIsInB1YmxpY0tleU11bHRpYmFzZSI6InVNRll3RUFZSEtvWkl6ajBDQVFZRks0RUVBQW9EUWdBRUNYSUZsMlIxOGFtZUxELXlrU09HS1FvQ0JWYkZNNW91bGtjMnZJckp0UzRQWkJnMkxyNEQzUFdYR2xHTXB1aHdwSk84MEFpdzFXeVVHT1hONkJqSlFBPT0ifQ==&quot;, &quot;created&quot; : &quot;2024-03-23T16:45:50.924279Z&quot;, &quot;proofValue&quot; : &quot;ziKx1CJPKLy4U9kMmVzYct5xztq4oHRLPgMpAjh95zQxzBZorhLFmhZ85UPixJoQbaqkVaygLBnLARyxgGJGFNKFggaPSXHgJuG&quot;, &quot;cryptoSuite&quot; : &quot;eddsa-jcs-2022&quot; }, &quot;@context&quot; : [ &quot;https://www.w3.org/2018/credentials/v1&quot;, &quot;https://w3c.github.io/vc-bitstring-status-list/contexts/2021/v1.jsonld&quot; ], &quot;type&quot; : [ &quot;VerifiableCredential&quot;, &quot;StatusList2021Credential&quot; ], &quot;id&quot; : &quot;http://localhost:8080/cloud-agent/credential-status/27526236-3836-4061-9867-f69314e258b4&quot;, &quot;issuer&quot; : &quot;did:prism:462c4811bf61d7de25b3baf86c5d2f0609b4debe53792d297bf612269bf8593a&quot;, &quot;issuanceDate&quot; : 1711212350, &quot;credentialSubject&quot; : { &quot;id&quot; : &quot;&quot;, &quot;type&quot; : &quot;StatusList2021&quot;, &quot;statusPurpose&quot; : &quot;Revocation&quot;, &quot;encodedList&quot; : &quot;H4sIAAAAAAAAAO3BMQEAAADCoPVPbQwfoAAAAAAAAAAAAAAAAAAAAIC3AYbSVKsAQAAA&quot; } } Example of status list credential with EcdsaSecp256k1Signature2019 proof‚Äã { &quot;proof&quot; : { &quot;type&quot; : &quot;EcdsaSecp256k1Signature2019&quot;, &quot;proofPurpose&quot; : &quot;assertionMethod&quot;, &quot;verificationMethod&quot; : &quot;data:application/json;base64,eyJAY29udGV4dCI6WyJodHRwczovL3czaWQub3JnL3NlY3VyaXR5L3YxIl0sInR5cGUiOiJFY2RzYVNlY3AyNTZrMVZlcmlmaWNhdGlvbktleTIwMTkiLCJwdWJsaWNLZXlKd2siOnsiY3J2Ijoic2VjcDI1NmsxIiwia2V5X29wcyI6WyJ2ZXJpZnkiXSwia3R5IjoiRUMiLCJ4IjoiQ1hJRmwyUjE4YW1lTEQteWtTT0dLUW9DQlZiRk01b3Vsa2MydklySnRTND0iLCJ5IjoiRDJRWU5pNi1BOXoxbHhwUmpLYm9jS1NUdk5BSXNOVnNsQmpsemVnWXlVQT0ifX0=&quot;, &quot;created&quot; : &quot;2024-06-07T20:53:40.177613Z&quot;, &quot;jws&quot; : &quot;eyJiNjQiOmZhbHNlLCJjcml0IjpbImI2NCJdLCJhbGciOiJFUzI1NksifQ..-JD-ggFe1JgWd7NxUqOvmkHwuO-B2U9V-Nqn2jIsXg1TN8G_Suy__ZNSUwIRPdhFXKy3YXvisfrtheDdOemu7g&quot; }, &quot;@context&quot; : [ &quot;https://www.w3.org/2018/credentials/v1&quot;, &quot;https://w3c.github.io/vc-bitstring-status-list/contexts/2021/v1.jsonld&quot; ], &quot;type&quot; : [ &quot;VerifiableCredential&quot;, &quot;StatusList2021Credential&quot; ], &quot;id&quot; : &quot;http://localhost:8085/credential-status/c2688c98-ecb5-4dd3-87e8-a689b8fa84dd&quot;, &quot;issuer&quot; : &quot;did:prism:462c4811bf61d7de25b3baf86c5d2f0609b4debe53792d297bf612269bf8593a&quot;, &quot;issuanceDate&quot; : 1717793619, &quot;credentialSubject&quot; : { &quot;type&quot; : &quot;StatusList2021&quot;, &quot;statusPurpose&quot; : &quot;Revocation&quot;, &quot;encodedList&quot; : &quot;H4sIAAAAAAAA_-3BMQ0AAAACIGf_0MbwARoAAAAAAAAAAAAAAAAAAADgbbmHB0sAQAAA&quot; } }   ","version":"Next","tagName":"h2"},{"title":"Revocation‚Äã","type":1,"pageTitle":"Credential revocation","url":"/docs/tutorials/credentials/revocation#revocation","content":" Only issuers of a credential can revoke a credential.  Get the list of credentials  curl -X 'GET' \\ 'http://localhost:8080/cloud-agent/issue-credentials/records' \\ -H 'accept: application/json'   This endpoint will return the credentials issued. Every credential includes an ID.  Revoke the credential  curl -X 'PATCH' \\ 'http://localhost:8080/cloud-agent/revoke-credential/&lt;credential_id&gt;' \\ -H 'accept: */*'   note Present proof will fail the verification if one of the credentials the holder presents a revoked credential. ","version":"Next","tagName":"h2"},{"title":"Deactivate DID","type":0,"sectionRef":"#","url":"/docs/tutorials/dids/deactivate","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Deactivate DID","url":"/docs/tutorials/dids/deactivate#roles","content":" DID Controller is the organization or individual who has control of the DID.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Deactivate DID","url":"/docs/tutorials/dids/deactivate#prerequisites","content":" DID Controller Cloud Agent up and runningDID Controller has a DID created on the Cloud Agent (see Create DID)DID Controller has a DID published to the blockchain (see Publish DID)  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Deactivate DID","url":"/docs/tutorials/dids/deactivate#overview","content":" DID deactivation operates similarly to the DID update, where deactivate-operation publishes to the blockchain, and confirmation blocks must be created before participants consider it deactivated. Once the DID is deactivated, all content in the DID document gets deleted, and no operation will affect the DID afterward. The same concept also holds for PRISM DID deactivation in that the fork can occur if any subsequent operation occurs before the operation is confirmed. Please refer to the SECURE_DEPTH parameter in PRISM method - protocol parameters for the number of confirmation blocks. At the time of writing, this number is 112 blocks.  DID deactivation is easily performed with the Cloud Agent. Under the hood, the Cloud Agent uses the MASTER keys to sign the intended operation and automatically post the operation to the blockchain. This example shows the DID deactivation and steps to observe the changes to the DID using the Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Deactivate DID","url":"/docs/tutorials/dids/deactivate#endpoints","content":" The example uses the following endpoints  Endpoint\tDescription\tRolePOST /did-registrar/dids/{didRef}/deactivations\tDeactivate a PRISM DID\tDID Controller GET /dids/{didRef}\tResolve a DID to DID document representation\tDID Controller  ","version":"Next","tagName":"h2"},{"title":"DID Controller interactions‚Äã","type":1,"pageTitle":"Deactivate DID","url":"/docs/tutorials/dids/deactivate#did-controller-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Check the current state of the DID document‚Äã","type":1,"pageTitle":"Deactivate DID","url":"/docs/tutorials/dids/deactivate#1-check-the-current-state-of-the-did-document","content":" Given the DID Controller has a DID managed by the Cloud Agent and that DID is published, he can resolve the DID document using short-form DID.  curl --location --request GET 'http://localhost:8080/cloud-agent/dids/{didRef}' \\ --header &quot;apikey: $API_KEY&quot; \\ --header 'Accept: */*'   Example DID document response (some fields omitted for readability)  { &quot;didDocument&quot;: {...}, &quot;didDocumentMetadata&quot;: { &quot;canonicalId&quot;: &quot;did:prism:66e431434f201c7ae43f6e63569f1ee556d7dfbee1646101547324013e545d2c&quot;, &quot;deactivated&quot;: false, ... }, &quot;didResolutionMetadata&quot;: {...} }   The DID metadata shows the deactivation status as false, meaning that this DID is still active.  ","version":"Next","tagName":"h3"},{"title":"2. Requesting the DID deactivation to PRSIM Agent‚Äã","type":1,"pageTitle":"Deactivate DID","url":"/docs/tutorials/dids/deactivate#2-requesting-the-did-deactivation-to-prsim-agent","content":" The active status comes from the last step. The DID deactivation can be performed by calling POST /did-registrar/dids/{didRef}/deactivations and replacing {didRef} with the DID to deactivate.  curl --location --request POST 'http://localhost:8080/cloud-agent/did-registrar/dids/{didRef}/deactivations' \\ --header &quot;apikey: $API_KEY&quot; \\ --header 'Accept: application/json'   Under the hood, the Cloud Agent constructs the DID deactivate-operation from the last confirmed operation observed on the blockchain. The DID Controller should receive a response about the scheduled operation, waiting for confirmation on the blockchain. If this deactivate-operation gets confirmed on the blockchain and not discarded as a fork, the DID becomes deactivated.  ","version":"Next","tagName":"h3"},{"title":"3. Wait for the confirmation and observe the change in the DID metadata‚Äã","type":1,"pageTitle":"Deactivate DID","url":"/docs/tutorials/dids/deactivate#3-wait-for-the-confirmation-and-observe-the-change-in-the-did-metadata","content":" When the DID Controller tries to resolve the DID again using the example in Step 1, the content might remain the same because the operation still needs to be confirmed and applied.  The DID Controller keeps polling this endpoint until the deactivated status in DID document metadata changes to true.  Example response of deactivated DID document (some fields omitted for readability)  { &quot;didDocumentMetadata&quot;: { &quot;canonicalId&quot;: &quot;did:prism:66e431434f201c7ae43f6e63569f1ee556d7dfbee1646101547324013e545d2c&quot;, &quot;deactivated&quot;: true, ... }, &quot;didResolutionMetadata&quot;: {...} }   The DID metadata indicates that the DID is deactivated and the didDocument is empty. ","version":"Next","tagName":"h3"},{"title":"Issue credentials (DIDComm)","type":0,"sectionRef":"#","url":"/docs/tutorials/credentials/didcomm/issue","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#roles","content":" In the Issue Credentials Protocol, there are two roles:  The Issuer is responsible for creating a new credential offer, sending it to a Holder, and issuing the VC once the offer is accepted.The Holder is responsible for accepting a credential offer from an issuer and receiving the VC.  The Issuer and Holder interact with the Identus Cloud Agent API to perform the operations defined in the protocol.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#prerequisites","content":" Before using the Issuing Credentials protocol, the following conditions must be present:  JWTAnonCredsSDJWT Issuer and Holder Cloud Agents up and runningA connection must be established between the Issuer and Holder Cloud Agents ( see Connections)The Issuer must have a published PRISM DID, and the DID document must have at least one assertionMethod key for issuing credentials (see Create DIDand Publish DID)The Issuer must have created a VC schema as described here.The Holder must have a PRISM DID, and the DID document must have at least one authentication key for presenting the proof.  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#overview","content":" The protocol described is a VC issuance process between two Identus Cloud Agents, the Issuer and the Holder.  The protocol consists of the following main parts:  The Issuer creates a new credential offer using the /issue-credentials/credential-offersendpoint, which includes information such as the schema identifier and claims.The Holder can then retrieve the offer using the /issue-credentials/recordsendpoint and accept the offer using the /issue-credentials/records/{recordId}/accept-offerendpoint.The Issuer then uses the /issue-credentials/records/{recordId}/issue-credentialendpoint to issue the credential, which gets sent to the Holder via DIDComm. The Holder receives the credential, and the protocol is complete.  The claims provide specific information about the individual, such as their name or qualifications.  This protocol is applicable in various real-life scenarios, such as educational credentialing, employment verification, and more. In these scenarios, the Issuer could be a school, an employer, etc., and the Holder could be a student or an employee. The VCs issued during this protocol could represent a diploma, a certificate of employment, etc.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#endpoints","content":" Endpoint\tDescription\tRole/issue-credentials/credential-offers\tThis endpoint allows you to create a new credential offer\tIssuer /issue-credentials/records\tThis endpoint allows you to retrieve a collection of all the existing credential records\tIssuer, Holder /issue-credentials/records/{recordId}\tThis endpoint allows you to retrieve a specific credential record by its id\tIssuer, Holder /issue-credentials/records/{recordId}/accept-offer\tThis endpoint allows you to accept a credential offer\tHolder /issue-credentials/records/{recordId}/issue-credential\tThis endpoint allows you to issue a VC for a specific credential record.\tIssuer  info Please check the full Cloud Agent API specification for more detailed information.  ","version":"Next","tagName":"h2"},{"title":"Issuer interactions‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#issuer-interactions","content":" This section describes the Issuer role's available interactions with the Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"Creating a Credential Offer‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#creating-a-credential-offer","content":" To start the process, the issuer needs to create a credential offer. To do this, make a POST request to the /issue-credentials/credential-offersendpoint with a JSON payload that includes the following information:  JWTAnonCredsSDJWT NOTE: After v1.40.0 the API was changed to be compliant with VCDM 1.1 and group the JWT-VC properties in the object jwtVcPropertiesV1 claims (deprecated): The data stored in a verifiable credential. Claims get expressed in a key-value format. The claims contain the data that the issuer attests to, such as name, address, date of birth, and so on.jwtVcPropertiesV1.claims: The data stored in a verifiable credential. Claims get expressed in a key-value format. The claims contain the data that the issuer attests to, such as name, address, date of birth, and so on.issuingDID (deprecated): The DID referring to the issuer to issue this credential from.jwtVcPropertiesV1.issuingDID: The DID referring to the issuer to issue this credential from.jwtVcPropertiesV1.issuingKid: The key ID of the DID to sign the JWT VC.jwtVcPropertiesV1.validityPeriod: The validity period of the JWT VC in seconds.connectionId: The unique ID of the connection between the holder and the issuer to offer this credential over.schemaId (deprecated): An optional field that, if specified, contains a valid URL to an existing VC schema.jwtVcPropertiesV1.credentialSchema.id: The required field that, if specified, contains a valid URI to an existing VC schema.jwtVcPropertiesV1.credentialSchema.type: The required field that must equal to JsonSchemaValidator2018credentialFormat: The format of the credential that will be issued - JWT in this case. When not specified, the default value is JWT. note The issuingDID and connectionId properties come from completing the pre-requisite steps listed above Once the request initiates, a new credential record for the issuer gets created with a unique ID. The state of this record is now OfferPending. Deprecated APICurrent API # Issuer POST request to create a new credential offer (deprecated, but still supported) curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/issue-credentials/credential-offers' \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -d '{ &quot;connectionId&quot;: &quot;9d075518-f97e-4f11-9d10-d7348a7a0fda&quot;, &quot;credentialFormat&quot;: &quot;JWT&quot;, &quot;claims&quot;: { &quot;emailAddress&quot;: &quot;alice@wonderland.com&quot;, &quot;givenName&quot;: &quot;Alice&quot;, &quot;familyName&quot;: &quot;Wonderland&quot;, &quot;dateOfIssuance&quot;: &quot;2020-11-13T20:20:39+00:00&quot;, &quot;drivingLicenseID&quot;: &quot;12345&quot;, &quot;drivingClass&quot;: 3 }, &quot;issuingDID&quot;: &quot;did:prism:9f847f8bbb66c112f71d08ab39930d468ccbfe1e0e1d002be53d46c431212c26&quot;, &quot;schemaId&quot;: &quot;http://localhost:8080/cloud-agent/schema-registry/schemas/3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot; }'   ","version":"Next","tagName":"h3"},{"title":"Sending the Offer to the Holder‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#sending-the-offer-to-the-holder","content":" The next step for the Issuer is to send the offer to the holder using DIDComm. To do this, the Issuer agent will process the offer and send it to the holder agent. This process is automatic. The state of the Issuer's record will change to OfferSent.  ","version":"Next","tagName":"h3"},{"title":"Issuing the Credential‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#issuing-the-credential","content":" Once the holder has approved the offer and sent a request to the Issuer, the Issuer will receive the request via DIDComm and update the record state to RequestReceived.  The Issuer can then use the /issue-credentials/records/{recordId}/issue-credentialendpoint to issue the credential to the holder.  # Issuer POST request to issue the credential # make sure you have `issuer_record_id` extracted from created credential offer # and the record achieved `RequestReceived` state curl -X POST \\ &quot;http://localhost:8080/cloud-agent/issue-credentials/records/$issuer_record_id/issue-credential&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -H &quot;apikey: $API_KEY&quot;   When this endpoint gets called, the state of the record will change to CredentialPending, and after processing, it will change to CredentialGenerated.  Finally, the Issuer agent will send the credential to the holder via DIDComm, and the state of the record will change to CredentialSent. At this point, the Issuer's interactions with the holder are complete.    ","version":"Next","tagName":"h3"},{"title":"Holder interactions‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#holder-interactions","content":" This section describes the Holder role's available interactions with the Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"Receiving the VC Offer‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#receiving-the-vc-offer","content":" The Holder will receive the offer from the Issuer via DIDComm, and a new credential record with a unique ID gets created in the OfferReceived state.  This process is automatic for the Cloud Agent.  You could check if a new credential offer is available using /issue-credentials/records request and check for any records available in OfferReceived state:  # Holder GET request to retrieve credential records curl &quot;http://localhost:8090/cloud-agent/issue-credentials/records&quot; \\ -H &quot;Content-Type: application/json&quot; \\ -H &quot;apikey: $API_KEY&quot;   ","version":"Next","tagName":"h3"},{"title":"Approving the VC Offer‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#approving-the-vc-offer","content":" To accept the offer, the Holder can make a POST request to the /issue-credentials/records/{recordId}/accept-offerendpoint with a JSON payload that includes the following information:  JWTanoncredsSDJWT holder_record_id: The unique identifier of the issue credential record known by the holder's Cloud Agent.subjectId: This field represents the unique identifier for the subject of the verifiable credential. It is a short-form PRISM DID string, such as did:prism:subjectIdentifier. # Holder POST request to accept the credential offer curl -X POST &quot;http://localhost:8090/cloud-agent/issue-credentials/records/$holder_record_id/accept-offer&quot; \\ -H 'accept: application/json' \\ -H 'Content-Type: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -d '{ &quot;subjectId&quot;: &quot;did:prism:subjectIdentifier&quot; }'   This request will change the state of the record to RequestPending.  ","version":"Next","tagName":"h3"},{"title":"Receiving the VC Credential‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#receiving-the-vc-credential","content":" Once the Holder has approved the offer and sent a request to the Issuer, the Holder agent will process the request and send it to the Issuer agent. The state of the Holder's record will change to RequestSent.  After the Issuer has issued the credential, the Holder will receive the credential via DIDComm, and the state of the Holder's record will change to CredentialReceived. This process is automatic for the Cloud Agent.  The Holder can check the achieved credential using a GET request to /issue-credentials/records/{recordId}/endpoint.    ","version":"Next","tagName":"h3"},{"title":"Sequence diagram‚Äã","type":1,"pageTitle":"Issue credentials (DIDComm)","url":"/docs/tutorials/credentials/didcomm/issue#sequence-diagram","content":" The following diagram shows the end-to-end flow for an issuer to issue a VC to a holder.  JWTAnonCreds ","version":"Next","tagName":"h2"},{"title":"Publish DID","type":0,"sectionRef":"#","url":"/docs/tutorials/dids/publish","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Publish DID","url":"/docs/tutorials/dids/publish#roles","content":" DID Controller is the organization or individual who has control of the DID.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Publish DID","url":"/docs/tutorials/dids/publish#prerequisites","content":" DID Controller Cloud Agent up and runningDID Controller has a DID created by the Cloud Agent (see Create DID)  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Publish DID","url":"/docs/tutorials/dids/publish#overview","content":" Publishing a DID requires the DID create-operation and the DID MASTER key pairs, which the Cloud Agent already created under the hood. When the DID Controller requests a publication of their DID, the Cloud Agent uses the DID MASTER key to sign the operation and submit the signed operation to the blockchain. After the operation submission to the blockchain, a specific number of confirmation blocks must get created before the DID operation is processed and published. (see PRISM DID method - Processing of DID operation)  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Publish DID","url":"/docs/tutorials/dids/publish#endpoints","content":" The example uses the following endpoints  Endpoint\tDescription\tRoleGET /did-registrar/dids/{didRef}\tGet the DID stored in the Cloud Agent\tDID Controller POST /did-registrar/dids/{didRef}/publications\tPublish the DID stored in the Cloud Agent to the blockchain\tDID Controller GET /dids/{didRef}\tResolve a DID to DID document representation\tDID Controller  ","version":"Next","tagName":"h2"},{"title":"DID Controller interactions‚Äã","type":1,"pageTitle":"Publish DID","url":"/docs/tutorials/dids/publish#did-controller-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Check the status of an unpublished DID‚Äã","type":1,"pageTitle":"Publish DID","url":"/docs/tutorials/dids/publish#1-check-the-status-of-an-unpublished-did","content":" DID Controller checks the status by replacing the {didRef} with the unpublished DID on the Agent. The {didRef} path segment can be either short-form or long-form DID. When a DID gets created and not published, it has the status of CREATED.  curl --location --request GET 'http://localhost:8080/cloud-agent/did-registrar/dids/{didRef}' \\ --header &quot;apikey: $API_KEY&quot; \\ --header 'Accept: application/json'   Example response  { &quot;did&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;longFormDid&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ&quot;, &quot;status&quot;: &quot;CREATED&quot; }   ","version":"Next","tagName":"h3"},{"title":"2. Request a publication of a DID‚Äã","type":1,"pageTitle":"Publish DID","url":"/docs/tutorials/dids/publish#2-request-a-publication-of-a-did","content":" To publish a DID, use DID Controller POST a request to /did-registrar/dids/{didRef}/publications endpoint.  curl --location --request POST 'http://localhost:8080/cloud-agent/did-registrar/dids/{didRef}/publications' \\ --header &quot;apikey: $API_KEY&quot; \\ --header 'Accept: application/json'   The Cloud Agent will retrieve a DID MASTER key and sign the operation before submitting it to the blockchain. The process is asynchronous, and it takes time until the operation is confirmed. The DID Controller receives a scheduled operation as a response.  { &quot;scheduledOperation&quot;: { &quot;didRef&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;id&quot;: &quot;0cf945eaf3be143e5d64eef992666f3c613ae986fdb34e71ef4a9d2f25a6704f&quot; } }   The response contains the scheduledOperation property, which describes a scheduled operation. The submitted DID operations are batched together along with other operations to reduce the transaction cost when interacting with the blockchain.  The Cloud Agent will eventually expose an endpoint to check the status of a scheduled operation. Checking the publishing status is possible by following Step 3.  ","version":"Next","tagName":"h3"},{"title":"3. Wait until the DID operation is confirmed‚Äã","type":1,"pageTitle":"Publish DID","url":"/docs/tutorials/dids/publish#3-wait-until-the-did-operation-is-confirmed","content":" The DID Controller checks the DID status the same as in Step 1. The status of the DID has changed to PUBLICATION_PENDING.  Example response with status PUBLICATION_PENDING  { &quot;did&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;longFormDid&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ&quot;, &quot;status&quot;: &quot;PUBLICATION_PENDING&quot; }   If the operation is confirmed, the status becomes PUBLISHED. The longFormDid property is no longer mandatory for published DID.  Example response with status PUBLISHED  { &quot;did&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;status&quot;: &quot;PUBLISHED&quot; }   Note: The status here is the internal status of the DID on the Cloud Agent (PUBLISHED, CREATED, PUBLICAION_PENDING). It does not indicate the lifecycle of the DID observed on the blockchain (e.g., deactivated, etc.). The DID resolution metadata is for that purpose.  ","version":"Next","tagName":"h3"},{"title":"4. Resolve a short-form DID‚Äã","type":1,"pageTitle":"Publish DID","url":"/docs/tutorials/dids/publish#4-resolve-a-short-form-did","content":" Only published DID can be resolved using short-form. To confirm that the short-form DID is resolvable, test the DID against the resolution endpoint.  Replace {didRef} with the short-form DID; the response should return a DID document.  curl --location --request GET 'http://localhost:8080/cloud-agent/dids/{didRef}' \\ --header &quot;apikey: $API_KEY&quot; \\ --header 'Accept: */*'  ","version":"Next","tagName":"h3"},{"title":"Create DID","type":0,"sectionRef":"#","url":"/docs/tutorials/dids/create","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Create DID","url":"/docs/tutorials/dids/create#roles","content":" DID Controller is the organization or individual who has control of the DID.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Create DID","url":"/docs/tutorials/dids/create#prerequisites","content":" DID Controller Cloud Agent up and running  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Create DID","url":"/docs/tutorials/dids/create#overview","content":" For this example, a PRISM DID gets created and stored inside the Cloud Agent along with the private keys. It is not automatically published. The Agent will keep track of private keys used for the create-operation and the content of the operation itself.  The Cloud Agent provides two endpoint groups to facilitate PRISM DID usage.  /dids/*facilitate of low-level interactions between DID operations and the blockchain. The DID controllers will handle key management independently and use these endpoints for blockchain interaction. /did-registrar/*Facilitates a higher-level interaction with PRISM DID, where the Cloud Agent handles key management concerns.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Create DID","url":"/docs/tutorials/dids/create#endpoints","content":" The example uses the following endpoints  Endpoint\tDescription\tRoleGET /did-registrar/dids\tList all DIDs stored in the Cloud Agent\tDID Controller POST /did-registrar/dids\tCreate a new PRISM DID to be managed by the Cloud Agent\tDID Controller GET /dids/{didRef}\tResolve a DID to DID document representation\tDID Controller  ","version":"Next","tagName":"h2"},{"title":"DID Controller interactions‚Äã","type":1,"pageTitle":"Create DID","url":"/docs/tutorials/dids/create#did-controller-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Check existing DID on the Cloud Agent‚Äã","type":1,"pageTitle":"Create DID","url":"/docs/tutorials/dids/create#1-check-existing-did-on-the-cloud-agent","content":" curl --location --request GET 'http://localhost:8080/cloud-agent/did-registrar/dids' \\ --header &quot;apikey: $API_KEY&quot; \\ --header 'Accept: application/json'   The result should show an empty list, as no DIDs exist on this Cloud Agent instance.  ","version":"Next","tagName":"h3"},{"title":"2. Create the Cloud Agent managed DID using DID registrar endpoint‚Äã","type":1,"pageTitle":"Create DID","url":"/docs/tutorials/dids/create#2-create-the-cloud-agent-managed-did-using-did-registrar-endpoint","content":" The DID controller can create a new DID by sending a DID document template to the Agent. Since key pairs are generated and managed by the Cloud Agent, DID controller only has to specify the key id,purpose (authentication, assertionMethod, etc.), and optional curve (secp256k1, Ed25519, X25519). If the curve is omitted, the agent uses the secp256k1 curve by default.  curl --location --request POST 'http://localhost:8080/cloud-agent/did-registrar/dids' \\ --header 'Content-Type: application/json' \\ --header 'Accept: application/json' \\ --header &quot;apikey: $API_KEY&quot; \\ --data-raw '{ &quot;documentTemplate&quot;: { &quot;publicKeys&quot;: [ { &quot;id&quot;: &quot;auth-1&quot;, &quot;purpose&quot;: &quot;authentication&quot;, &quot;curve&quot;: &quot;secp256k1&quot; } ], &quot;services&quot;: [] } }'   The response should look like  { &quot;longFormDid&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ&quot; }   ","version":"Next","tagName":"h3"},{"title":"3. List the created DID‚Äã","type":1,"pageTitle":"Create DID","url":"/docs/tutorials/dids/create#3-list-the-created-did","content":" Check the GET /did-registrar/dids endpoint. The response should return a list containing one DID.  { &quot;contents&quot;: [ { &quot;did&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;longFormDid&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ&quot;, &quot;status&quot;: &quot;CREATED&quot; } ], &quot;kind&quot;: &quot;ManagedDIDPage&quot;, &quot;pageOf&quot;: &quot;http://localhost:8080/cloud-agent/did-registrar/dids&quot;, &quot;self&quot;: &quot;http://localhost:8080/cloud-agent/did-registrar/dids&quot; }   ","version":"Next","tagName":"h3"},{"title":"4. Resolution of the created DID‚Äã","type":1,"pageTitle":"Create DID","url":"/docs/tutorials/dids/create#4-resolution-of-the-created-did","content":" To check that the DID document is correctly populated, test the created DID against the resolution endpoint.  Replacing the {didRef} with the long-form DID, and the response should return the DID document. Replacing the {didRef} with the short-form DID, and the resolution should fail since the DID still needs to be published.  curl --location --request GET 'http://localhost:8080/cloud-agent/dids/{didRef}' \\ --header &quot;apikey: $API_KEY&quot; \\ --header 'Accept: */*'   Example DID document response (some fields omitted for readability)  { &quot;@context&quot;: &quot;https://w3id.org/did-resolution/v1&quot;, &quot;didDocument&quot;: { &quot;@context&quot;: [&quot;https://www.w3.org/ns/did/v1&quot;], ... &quot;id&quot;: &quot;did:prism:62675a438616773280f70e4f4d1047133fc56bb183758fcccd5d5714ea5b1959:Cr0BCroBEloKBWtleS0xEARCTwoJc2VjcDI1NmsxEiDRh7iIj8WKJ28nde1uc6ZnEBWIwEVMXlIEmrqCo-bE5Bogn6o2TzP0HzekLOhA-06MrIpOuaaHL_Rhy01wyjV4ypsSXAoHbWFzdGVyMBABQk8KCXNlY3AyNTZrMRIg0y28R1CS3F0-kwNcQShdRhtcvz-LQlI86z1DIYrKM7oaIPkmCAegj-sSaAy0zTxrR9F4TSXB-62vCQxIsEovkEcA&quot;, &quot;verificationMethod&quot;: [ {...} ], }, &quot;didDocumentMetadata&quot;: {...}, &quot;didResolutionMetadata&quot;: {...} }  ","version":"Next","tagName":"h3"},{"title":"Update DID","type":0,"sectionRef":"#","url":"/docs/tutorials/dids/update","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Update DID","url":"/docs/tutorials/dids/update#roles","content":" DID Controller is the organization or individual who has control of the DID.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Update DID","url":"/docs/tutorials/dids/update#prerequisites","content":" DID Controller Cloud Agent is up and runningDID Controller has a DID created by the Cloud Agent (see Create DID)DID Controller has a DID published to the blockchain (see Publish DID)  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Update DID","url":"/docs/tutorials/dids/update#overview","content":" The Cloud Agent allows the DID Controller to update the DID easily. This update mechanism is implementation specific and links the DID update-operation from the last confirmed operation observed on the blockchain.  When updating a DID, there is a waiting period for the update to be confirmed on the blockchain. If the DID Controller updates the DID before the previous update is confirmed, it can create a situation where the sequence of updates splits into two separate paths, which is not allowed according to the protocol. This happens because the Cloud Agent connects the update operation to the latest confirmed update. Once the pending update operation is confirmed, any other pending operation that does not link to the latest confirmed operation will be discarded. The subsequent updates continuing from that operation will also be discarded. However, the Cloud Agent has a safeguard in place to prevent this issue by rejecting multiple updates submitted on the same DID while previous updates are still being processed.  Please refer to the SECURE_DEPTH parameter in PRISM method - protocol parameters for the number of confirmation blocks. At the time of writing, this number is 112 blocks.  This example shows the DID update capability on the Cloud Agent and the steps to verify that the update has been confirmed and applied.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Update DID","url":"/docs/tutorials/dids/update#endpoints","content":" The example uses the following endpoints  Endpoint\tDescription\tRolePOST /did-registrar/dids/{didRef}/updates\tUpdate a PRISM DID\tDID Controller GET /dids/{didRef}\tResolve a DID to DID document representation\tDID Controller  ","version":"Next","tagName":"h2"},{"title":"DID Controller interactions‚Äã","type":1,"pageTitle":"Update DID","url":"/docs/tutorials/dids/update#did-controller-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Check the current state of the DID document‚Äã","type":1,"pageTitle":"Update DID","url":"/docs/tutorials/dids/update#1-check-the-current-state-of-the-did-document","content":" Given the DID Controller has a DID on the Cloud Agent and that DID is published, he can resolve the DID document using short-form DID.  curl --location --request GET 'http://localhost:8080/cloud-agent/dids/{didRef}' \\ --header &quot;apikey: $API_KEY&quot; \\ --header 'Accept: */*'   Example DID document response (some fields omitted for readability)  { &quot;@context&quot;: &quot;https://w3id.org/did-resolution/v1&quot;, &quot;didDocument&quot;: { &quot;@context&quot;: [&quot;https://www.w3.org/ns/did/v1&quot;], ... &quot;verificationMethod&quot;: [ { &quot;controller&quot;: &quot;did:prism:4262377859267f308a06ec6acf211fbe4d6745aa9e637e04548771169616fb86&quot;, &quot;id&quot;: &quot;did:prism:4262377859267f308a06ec6acf211fbe4d6745aa9e637e04548771169616fb86#key-1&quot;, &quot;publicKeyJwk&quot;: { &quot;crv&quot;: &quot;secp256k1&quot;, &quot;kty&quot;: &quot;EC&quot;, &quot;x&quot;: &quot;biEpgXMrmKMghF8LsXbIR0VDyIO31mnPkbJBpGDYH1g&quot;, &quot;y&quot;: &quot;0YLIMfxY0_3J8Db6W0I1wcHZG3vRCRndNEnVn4h2V7Y&quot; }, &quot;type&quot;: &quot;EcdsaSecp256k1VerificationKey2019&quot; } ] ... }, &quot;didDocumentMetadata&quot;: {...}, &quot;didResolutionMetadata&quot;: {...} }   The verificationMethod in the DID document only shows one public key called key-1.  ","version":"Next","tagName":"h3"},{"title":"2. Add a new key and remove the existing key‚Äã","type":1,"pageTitle":"Update DID","url":"/docs/tutorials/dids/update#2-add-a-new-key-and-remove-the-existing-key","content":" The current DID document contains a key called key-1. The DID Controller wishes to remove that key and add a new key called key-2  The DID Controller submits a DID update request to POST /did-registrar/dids/{didRef}/updates.  curl --location --request POST 'http://localhost:8080/cloud-agent/did-registrar/dids/did:prism:4262377859267f308a06ec6acf211fbe4d6745aa9e637e04548771169616fb86/updates' \\ --header 'Content-Type: application/json' \\ --header 'Accept: application/json' \\ --header &quot;apikey: $API_KEY&quot; \\ --data-raw '{ &quot;actions&quot;: [ { &quot;actionType&quot;: &quot;REMOVE_KEY&quot;, &quot;removeKey&quot;: { &quot;id&quot;: &quot;key-1&quot; } }, { &quot;actionType&quot;: &quot;ADD_KEY&quot;, &quot;addKey&quot;: { &quot;id&quot;: &quot;key-2&quot;, &quot;purpose&quot;: &quot;authentication&quot;, &quot;curve&quot;: &quot;secp256k1&quot; } } ] }'   Under the hood, the Cloud Agent constructs the DID update-operation from the last confirmed operation observed on the blockchain. The DID Controller should receive a response about the scheduled operation, waiting for confirmation on the blockchain.  { &quot;scheduledOperation&quot;: { &quot;didRef&quot;: &quot;did:prism:4262377859267f308a06ec6acf211fbe4d6745aa9e637e04548771169616fb86&quot;, &quot;id&quot;: &quot;cb61cff083e27e2f8bc35b0e561780dc027c4f0072d2a2e478b2e0f26e3783b0&quot; } }   ","version":"Next","tagName":"h3"},{"title":"3. Wait for the confirmation and observe the change on the DID document‚Äã","type":1,"pageTitle":"Update DID","url":"/docs/tutorials/dids/update#3-wait-for-the-confirmation-and-observe-the-change-on-the-did-document","content":" When the DID Controller tries to resolve the DID again using the example in Step 1, the content might remain the same because the operation still needs to be confirmed and applied.  The DID Controller keeps polling this endpoint until the new key, key-2, gets observed.  Example response of updated DID document (some fields omitted for readability)  { &quot;@context&quot;: &quot;https://w3id.org/did-resolution/v1&quot;, &quot;didDocument&quot;: { &quot;@context&quot;: [&quot;https://www.w3.org/ns/did/v1&quot;], ... &quot;verificationMethod&quot;: [ { &quot;controller&quot;: &quot;did:prism:4262377859267f308a06ec6acf211fbe4d6745aa9e637e04548771169616fb86&quot;, &quot;id&quot;: &quot;did:prism:4262377859267f308a06ec6acf211fbe4d6745aa9e637e04548771169616fb86#key-2&quot;, &quot;publicKeyJwk&quot;: { &quot;crv&quot;: &quot;secp256k1&quot;, &quot;kty&quot;: &quot;EC&quot;, &quot;x&quot;: &quot;sg5X06yRDNaW2YcuMuOPwrDPp_vqOtKng0hMHxaME10&quot;, &quot;y&quot;: &quot;uAKJanSsNoC_bcL4YS93qIqu_Qwdsr_80DzRTzI8RLU&quot; }, &quot;type&quot;: &quot;EcdsaSecp256k1VerificationKey2019&quot; } ] ... }, &quot;didDocumentMetadata&quot;: {...}, &quot;didResolutionMetadata&quot;: {...} }   A new key, called key-2, gets observed, and key-1, now removed, has disappeared from the verificationMethod.  ","version":"Next","tagName":"h3"},{"title":"Future work‚Äã","type":1,"pageTitle":"Update DID","url":"/docs/tutorials/dids/update#future-work","content":" The example only shows the case of a successful update. In case of failure, the Cloud Agent will provide the capability to retrieve the low-level operation status and failure detail in the future. ","version":"Next","tagName":"h2"},{"title":"Access Control","type":0,"sectionRef":"#","url":"/docs/tutorials/multitenancy/access-control","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#introduction","content":" Current document describes the levels of access control in the Identus Platform configured in the Vault service The Vault service uses policies to control the access to the secrets, configuration, and other resources. The policies are applied to the entities and groups of entities.  According to the Principle of Least Privilege (PoLP), the access to the resources must be granted to the entities with the minimal set of permissions required to perform the operation.  ","version":"Next","tagName":"h2"},{"title":"Accounts‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#accounts","content":" ","version":"Next","tagName":"h2"},{"title":"SUDO Account‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#sudo-account","content":" The account with sudo privileges that allows to configure the Vault service. The root token is used for this purpose. The root token must be kept in the most safe place and not used for regular cases.  SUDO Account is used for the following purposes:  configure the Vault serviceconfigure authentication methodsconfigure Management Accounts  Managed by DevOps and SRE teams.  ","version":"Next","tagName":"h3"},{"title":"Management Account‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#management-account","content":" Management Account is special account that allows to manage the Cloud Agent.  The account with the limited access to configure the Vault service with the following permissions:  manage the Wallet accountsmanage the Agent accountsenforces the policies to the Wallet account  Management Account can be used in the configuration scripts or by the SRE team.  ","version":"Next","tagName":"h3"},{"title":"Agent Account‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#agent-account","content":" Agent Account is created for the Cloud Agent to authenticate itself to the Vault service. AppRole authentication method is used for this account.  The account with the limited access to configure the Vault service with the following permissions:  create the Wallet accountsissue the token to the Wallet accountdo other operations required to configure the Wallet account  ","version":"Next","tagName":"h3"},{"title":"Wallet Account‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#wallet-account","content":" The Wallet Account is created for and used by the Wallet. The Wallet Account is has access to the secrets of the Wallet and the Cloud Agent must guarantee the data isolation at the Wallet level. This account has the following permissions:  list, read, write, delete the secrets associated with the Walletuse the REST API associated with the Walletmanage the data associated with the Wallet  ","version":"Next","tagName":"h3"},{"title":"Technical Overview‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#technical-overview","content":" ","version":"Next","tagName":"h2"},{"title":"Principle of Least Privilege‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#principle-of-least-privilege","content":" The Principle of Least Privilege (PoLP) is a security concept that requires that a user is granted no more privilege than necessary to perform a task. The following practices are applied to implement the PoLP:  audit: all the credentials are audited and must be under control of the SRE teamadministrator and business accounts are separatedactivity monitoring: activity of the administrator accounts is monitoredjust-in-time access: the access to the resources is granted only for the time required to perform the operation  NOTE: there are other PoLP practices that are not covered in this document. These practices will be ignored for local development and testing purposes.  In order to implement the PoLP, the following access control rules are defined:  the Cloud Agent account has access to the Wallet account that belong to the Agent onlythe Cloud Agent account transparently issues the token to the Wallet account based on configured authentication method  ","version":"Next","tagName":"h3"},{"title":"Token Issuing, Renewal, Expiration and Revocation‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#token-issuing-renewal-expiration-and-revocation","content":" These policies are applied to all tokens except the SUDO account (root token).  All tokens issued by the Identus Platform have the following properties:  expiration timemaximum time to live (TTL)renewable flagorphan flagpoliciesoperation limitations (number of the requests that can be performed by the token)  Management account token policies:  authentication methods: GitHub, GoogleAuth, user/passwordexpiration time: 1 hour  Agent Account token policies:  authentication method: AppRoletoken expiration time: 24 hour  Wallet Account token policies:  authentication methods: JWT, token issued by the Agent account, user/passwordtoken expiration time: 1 hour  NOTE: user/password method is used for the development and testing purposes only.  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Access Control","url":"/docs/tutorials/multitenancy/access-control#links","content":" Vault PoliciesVault TokensVault Authentication MethodsVault AppRole Authentication MethodVault JWT Authentication MethodVault GitHub Authentication MethodVault GoogleAuth Authentication MethodVault Userpass Authentication MethodVault Tokens ","version":"Next","tagName":"h2"},{"title":"Account Management","type":0,"sectionRef":"#","url":"/docs/tutorials/multitenancy/account-management","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Account Management","url":"/docs/tutorials/multitenancy/account-management#introduction","content":" This document describes the account management in the Identus Platform, types of accounts, and their usage, account authentication, and logical isolation of accounts.  ","version":"Next","tagName":"h2"},{"title":"Technical Overview‚Äã","type":1,"pageTitle":"Account Management","url":"/docs/tutorials/multitenancy/account-management#technical-overview","content":" Account management is a set of operations that allow users to manage their accounts. Account is required for both single and multi-tenant configurations. In the Identus Platform, the account owns the corresponding Wallet managed by the Cloud Agent. The account is identified by the tenant ID and represented by the Entity in the Vault service.  ","version":"Next","tagName":"h2"},{"title":"Account Types‚Äã","type":1,"pageTitle":"Account Management","url":"/docs/tutorials/multitenancy/account-management#account-types","content":" The Identus Platform supports the following types of accounts:  Cloud Agent Account - application account used by the Cloud Agent to authenticate itself to the Vault serviceWallet Account - application or user account used to access the Wallet assets over the REST API or WEB UI  ","version":"Next","tagName":"h3"},{"title":"Account Creation‚Äã","type":1,"pageTitle":"Account Management","url":"/docs/tutorials/multitenancy/account-management#account-creation","content":" The Cloud Agent Account is created by before the start of the Cloud Agent using the Vault cli, REST API or WEB UI. The Wallet account can be created on the go by the Agent or using the Vault cli, REST API or WEB UI.  ","version":"Next","tagName":"h3"},{"title":"Cloud Agent Account‚Äã","type":1,"pageTitle":"Account Management","url":"/docs/tutorials/multitenancy/account-management#cloud-agent-account","content":" The Cloud Agent account required to authenticate the instance of the Cloud Agent. The account is responsible for creating the Wallet accounts and issuing the tokens to the Wallet instance. The Cloud Agent account doesn't have the access to the Wallet secrets. The Cloud Agent uses AppRole authentication method to authenticate itself to the Vault service.  ","version":"Next","tagName":"h3"},{"title":"Wallet Account‚Äã","type":1,"pageTitle":"Account Management","url":"/docs/tutorials/multitenancy/account-management#wallet-account","content":" The Wallet account is required to authenticate the entity to the Identus Platform and give it the access to Wallet. The Wallet account can be authenticated by the following methods:  JWT/OIDC tokenuser/passwordAppRole method (for the applications)other methods supported by the Vault service  The Wallet is initialized by the Agent on demand and internally communicates with the Agent to reissue the access token. The Wallet account must guarantee the data isolation between tenants in the multi-tenant configuration by leveraging the policies of the Vault service and Row Based Policies in the PostgreSQL database.  NOTE: It's still discussed which component will be responsible for issuing the JWT token. The Vault service looks promising for configuring OIDC authentication method and use 3rd party system for authentication.  ","version":"Next","tagName":"h3"},{"title":"Account Deactivation‚Äã","type":1,"pageTitle":"Account Management","url":"/docs/tutorials/multitenancy/account-management#account-deactivation","content":" Any account can be deactivated by deactivating the entity in the Vault service using the REST API or cli. The deactivated account can be reactivated by the SRE team. In the case when the account must be deleted, the entity must be deleted from the Vault service. Retention policy is a matter of the configuration and must be discussed separately.  ","version":"Next","tagName":"h3"},{"title":"Links‚Äã","type":1,"pageTitle":"Account Management","url":"/docs/tutorials/multitenancy/account-management#links","content":" Vault AppRoleVault Entities and GroupsVault JWT/OIDC ","version":"Next","tagName":"h2"},{"title":"Admin Authorization with External IAM","type":0,"sectionRef":"#","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#roles","content":" For the Agent admin authorization, we need to distinguish the administrator of each component:  Agent AdministratorKeycloak Administrator  The same person may also represent these roles.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#prerequisites","content":" Keycloak is up and runningKeycloak is configured as follows A realm called my-realm is createdA client called cloud-agent under my-realm with authorization feature is created. (See create client instruction)Make sure the cloud-agent client has direct access grants enabled to simplify the login The Cloud Agent is up and runningThe Cloud Agent is configured with the following environment variables: KEYCLOAK_ENABLED=trueKEYCLOAK_URL=http://localhost:9980 (replace with appropriate value)KEYCLOAK_REALM=my-realmKEYCLOAK_CLIENT_ID=cloud-agentKEYCLOAK_CLIENT_SECRET=&lt;KEYCLOAK_CLIENT_SECRET&gt; (replace with appropriate value)KEYCLOAL_ROLES_CLAIM_PATH=resource_access.cloud-agent.roles  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#overview","content":" This tutorial will guide you through the steps to configure roles in Keycloak and demonstrate the authorization process as an administrator within the agent, enabling you to perform various administrative tasks.  Once authorized as an admin, the user gains the ability to manage the wallet; however, the actual utilization of the wallet remains restricted. Despite UMA permissions configured for the user, the agent strictly maintains a clear segregation of roles between administrator and tenant.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#endpoints","content":" ","version":"Next","tagName":"h2"},{"title":"Agent endpoints‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#agent-endpoints","content":" Endpoint\tDescription\tRoleGET /wallets\tList the wallets on the Cloud Agent\tAdministrator  ","version":"Next","tagName":"h3"},{"title":"Keycloak endpoints‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#keycloak-endpoints","content":" Endpoint\tDescription\tRolePOST /realms/{realm}/protocol/openid-connect/token\tIssue a new JWT token\tAdministrator  ","version":"Next","tagName":"h3"},{"title":"Keycloak Administrator interactions‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#keycloak-administrator-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Configure Keycloak role on the client‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#1-configure-keycloak-role-on-the-client","content":" Open the Keycloak admin UI in the browser and navigate to my-realm in the admin UI. Choose the corresponding client to create a ClientRole. Choose Role tab in the client menu and create a new role called admin    ","version":"Next","tagName":"h3"},{"title":"2. Assign the admin role to the user‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#2-assign-the-admin-role-to-the-user","content":" Once the role gets created, the admin user should be assigned this role. For simplicity, we will assign the role to the user without managing any group or other metadata.  Navigate to Users menu on the sidebar in the admin UI. Click on the user that should have the admin role. Choose Role Mapping tab and click Assign Role. Choose Filter by clients in the dropdown menu. Then choose the admin role.  Fore more info on role mapping see the Keycloak official documentation. If a user does not exist, a new user can be created by following this Keycloak official guide.  After this step, the user should have the admin role assigned, and after they log in, the roles claim should appear in the JWT payload.  ","version":"Next","tagName":"h3"},{"title":"Agent Administrator interactions‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#agent-administrator-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Obtain an access token from Keycloak‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#1-obtain-an-access-token-from-keycloak","content":" The admin user can log in using any configured authorization flow in Keycloak. In this example, the direct access grant is used to login.  Run the command to log in as admin.  curl -X 'POST' \\ 'http://localhost:9980/realms/my-realm/protocol/openid-connect/token' \\ -d &quot;grant_type=password&quot; \\ -d &quot;client_id=admin-cli&quot; \\ -d &quot;username=alice&quot; \\ -d &quot;password=1234&quot;   Example token response (some fields omitted for readability)  { &quot;access_token&quot;: &quot;eyJhbGciOi...7ocDHofUDQ&quot;, &quot;refresh_token&quot;: &quot;eyJhbGciOi...otsEEi4eQA&quot;, ... }   Inspecting the access_token payload, it should have the following content  { &quot;resource_access&quot;: { &quot;cloud-agent&quot;: { &quot;roles&quot;: [ &quot;admin&quot; ] }, &quot;account&quot;: { &quot;roles&quot;: [ &quot;manage-account&quot;, &quot;manage-account-links&quot;, &quot;view-profile&quot; ] } }, ... }   ","version":"Next","tagName":"h3"},{"title":"2. Perform a simple action to verify admin rights on the Agent‚Äã","type":1,"pageTitle":"Admin Authorization with External IAM","url":"/docs/tutorials/multitenancy/admin-authz-ext-iam#2-perform-a-simple-action-to-verify-admin-rights-on-the-agent","content":" To prove that the admin can perform admin tasks, try listing all the tenants' wallets using the JWT in the Authorization header.  curl --location --request GET 'http://localhost:8080/cloud-agent/wallets' \\ -H 'Authorization: Bearer eyJhbGciOi...e7H6W8RUvA' \\ -H 'Accept: application/json'   The response should return a list of all wallets on the Agent with HTTP status 200. Trying to perform prohibited tenant interactions, such as listing the DIDs in the wallet, will result in an authorization error. ","version":"Next","tagName":"h3"},{"title":"Migration from apikey to JWT authentication","type":0,"sectionRef":"#","url":"/docs/tutorials/multitenancy/tenant-migration","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#roles","content":" In the migration process from apikey to JWT, there is only one role:  Tenant  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#prerequisites","content":" Keycloak up and runningKeycloak is configured the same as in Tenant Onboarding Self-ServiceThe Cloud Agent is up and runningThe Cloud Agent is configured the same as in Tenant Onboarding Self-ServiceThe user has access to the wallet using apikey. (See Tenant Onboarding)The user has an account registered on Keycloak  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#overview","content":" This tutorial outlines the steps to transition from apikey to JWT authentication. Initially, users have wallet access through the apikey method. To migrate to JWT authentication, users can create a new UMA permission for their wallet and grant permission to their Keycloak account.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#endpoints","content":" ","version":"Next","tagName":"h2"},{"title":"Agent endpoints‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#agent-endpoints","content":" Endpoint\tDescription\tRoleGET /wallets\tList the wallets on the Cloud Agent\tTenant POST /wallets\tCreate a new wallet on the Cloud Agent\tTenant POST /wallets/{walletId}/uma-permissions\tCreate a uma-permission for a wallet\tTenant GET /did-registrar/dids\tList the DIDs inside the wallet\tTenant  ","version":"Next","tagName":"h3"},{"title":"Keycloak endpoints‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#keycloak-endpoints","content":" Endpoint\tDescription\tRolePOST /realms/{realm}/protocol/openid-connect/token\tIssue a new JWT token\tTenant  ","version":"Next","tagName":"h3"},{"title":"Tenant interactions‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#tenant-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Check the existing wallets using apikey‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#1-check-the-existing-wallets-using-apikey","content":" This tutorial assumes the tenant can access the wallet using apikey. Before granting more permission to the wallet, the walletId must be identified. To find the wallet, list them using apikey.  curl -X 'GET' \\ 'http://localhost:8080/cloud-agent/wallets' \\ -H 'accept: application/json' \\ -H &quot;apikey: my-tenant-token&quot;   Make sure to use the correct apikey from the pre-requisite.  Response Example:  { &quot;self&quot;: &quot;/wallets&quot;, &quot;kind&quot;: &quot;WalletPage&quot;, &quot;pageOf&quot;: &quot;/wallets&quot;, &quot;contents&quot;: [ { &quot;id&quot;: &quot;99734c87-5c9d-4697-b5fd-dea4e9590ba7&quot;, &quot;name&quot;: &quot;my-wallet&quot;, &quot;createdAt&quot;: &quot;2023-01-01T00:00:00Z&quot;, &quot;updatedAt&quot;: &quot;2023-01-01T00:00:00Z&quot; } ] }   ","version":"Next","tagName":"h3"},{"title":"2. Get the access token on keycloak‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#2-get-the-access-token-on-keycloak","content":" Run this command to log in and get the access token  curl -X 'POST' \\ 'http://localhost:9980/realms/my-realm/protocol/openid-connect/token' \\ -d &quot;grant_type=password&quot; \\ -d &quot;client_id=admin-cli&quot; \\ -d &quot;username=alice&quot; \\ -d &quot;password=1234&quot;   Make sure to use the correct username and password. Special attention on the client_id; this should be the actual client_id of the frontend application that logs the user in. For this tutorial, it is OK to use admin-cli  Example token response (some fields omitted for readability)  { &quot;access_token&quot;: &quot;eyJhbGciOi...7ocDHofUDQ&quot;, &quot;refresh_token&quot;: &quot;eyJhbGciOi...otsEEi4eQA&quot;, ... }   ","version":"Next","tagName":"h3"},{"title":"3. Extract the subject ID from JWT‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#3-extract-the-subject-id-from-jwt","content":" When creating a UMA permission, it is important to provide the subject ID to grant permission. To get the subject ID of the tenant, one can inspect the JWT payload sub claim.  Run this command to extract the sub claim of the token from previous step.  echo 'eyJhbGciOi...7ocDHofUDQ' | cut --delimiter='.' --fields=2 | base64 --decode | jq -r '.sub'   Example result  4a5c6ac9-12f5-4d1e-b8f2-667525c083fd   ","version":"Next","tagName":"h3"},{"title":"4. Grant the user permission to the wallet‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#4-grant-the-user-permission-to-the-wallet","content":" UMA permission can be added to the current wallet, giving Keycloak users access. To do this, invoke the POST /wallets/{walletId}/uma-permissions endpoint on the agent.  curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/wallets/99734c87-5c9d-4697-b5fd-dea4e9590ba7/uma-permissions' \\ -v \\ -H 'accept: */*' \\ -H &quot;apikey: my-tenant-token&quot; \\ -H 'Content-Type: application/json' \\ -d '{ &quot;subject&quot;: &quot;205e04b7-0158-41b0-89c3-f91c3a09f89b&quot; }'   Make sure to use the correct subject for the user and the correct walletId from the step earlier.  The response should return the status 200 OK in case of successful permission creation.  ","version":"Next","tagName":"h3"},{"title":"5. Perform a simple action to verify access to the Cloud Agent‚Äã","type":1,"pageTitle":"Migration from apikey to JWT authentication","url":"/docs/tutorials/multitenancy/tenant-migration#5-perform-a-simple-action-to-verify-access-to-the-cloud-agent","content":" After successful UMA permission creation, the user should be able to use the JWT token to authenticate the wallet. List the wallet using a new Authorization header. The listed wallets should contain the wallet with the same ID in step 1.  curl -X 'GET' \\ 'http://localhost:8080/cloud-agent/wallets' \\ -H 'accept: application/json' \\ -H 'Authorization: Bearer eyJhbGciOi...7ocDHofUDQ'   Make sure to use the correct JWT from step 2.  Response Example:  { &quot;self&quot;: &quot;/wallets&quot;, &quot;kind&quot;: &quot;WalletPage&quot;, &quot;pageOf&quot;: &quot;/wallets&quot;, &quot;contents&quot;: [ { &quot;id&quot;: &quot;99734c87-5c9d-4697-b5fd-dea4e9590ba7&quot;, &quot;name&quot;: &quot;my-wallet&quot;, &quot;createdAt&quot;: &quot;2023-01-01T00:00:00Z&quot;, &quot;updatedAt&quot;: &quot;2023-01-01T00:00:00Z&quot; } ] }   This response indicates that the user should be able to perform any wallet interaction with the JWT and apikey interchangeably. ","version":"Next","tagName":"h3"},{"title":"Tenant Onboarding","type":0,"sectionRef":"#","url":"/docs/tutorials/multitenancy/tenant-onboarding","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#roles","content":" In tenant management, there are 2 roles:  AdministratorTenant  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#prerequisites","content":" The Cloud Agent up and runningThe Cloud Agent is configured with the following environment variables: ADMIN_TOKEN=my-admin-tokenAPI_KEY_ENABLED=trueAPI_KEY_AUTO_PROVISIONING=falseDEFAULT_WALLET_ENABLED=false  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#overview","content":" This is a guide on how to onboard a new tenant from scratch. This tutorial will demonstrate the creation of a new entity representing the tenant, the provisioning of a wallet, and enabling an authentication method for this tenant. Subsequently, the tenant will gain the capability to engage in SSI activities within an isolated wallet environment using the Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#endpoints","content":" Endpoint\tDescription\tRoleGET /wallets\tList the wallets on the Cloud Agent\tAdministrator POST /wallets\tCreate a new wallet on the Cloud Agent\tAdministrator POST /iam/entities\tCreate a new entity on the Cloud Agent\tAdministrator POST /iam/apikey-authentication\tCreate a new authentication for the entity\tAdministrator GET /did-registrar/dids\tList the DIDs inside the wallet\tTenant  ","version":"Next","tagName":"h2"},{"title":"Administrator interactions‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#administrator-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Check the existing wallets‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#1-check-the-existing-wallets","content":" When running the Cloud Agent using the configurations above, the Agent should start with an empty state. Listing wallets on it should return empty results.  curl -X 'GET' \\ 'http://localhost:8080/cloud-agent/wallets' \\ -H 'accept: application/json' \\ -H 'x-admin-api-key: my-admin-token'   Response Example:  { &quot;self&quot;: &quot;/wallets&quot;, &quot;kind&quot;: &quot;WalletPage&quot;, &quot;pageOf&quot;: &quot;/wallets&quot;, &quot;contents&quot;: [] }   ","version":"Next","tagName":"h3"},{"title":"2. Create a new wallet‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#2-create-a-new-wallet","content":" The wallet can be created using a POST /wallets endpoint. This wallet is going to act as a container for the tenant's assets (DIDs, VCs, Connections, etc.). The wallet seed may be provided during the wallet creation or omitted to let the Agent generate one randomly.  curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/wallets' \\ -H 'accept: application/json' \\ -H 'x-admin-api-key: my-admin-token' \\ -H 'Content-Type: application/json' \\ -d '{ &quot;seed&quot;: &quot;c9994785ce6d548134020f610b76102ca1075d3bb672a75ec8c9a27a7b8607e3b9b384e43b77bb08f8d5159651ae38b98573f7ecc79f2d7e1f1cc371ce60cf8a&quot;, &quot;name&quot;: &quot;my-wallet&quot; }'   Response Example:  { &quot;id&quot;: &quot;99734c87-5c9d-4697-b5fd-dea4e9590ba7&quot;, &quot;name&quot;: &quot;my-wallet&quot;, &quot;createdAt&quot;: &quot;2023-01-01T00:00:00Z&quot;, &quot;updatedAt&quot;: &quot;2023-01-01T00:00:00Z&quot; }   ","version":"Next","tagName":"h3"},{"title":"3. Create a new entity‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#3-create-a-new-entity","content":" A new entity can be created to represent a tenant. To create a new entity, send a POST request to the /iam/entities endpoint with the following parameters:  curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/iam/entities' \\ -H 'accept: application/json' \\ -H 'x-admin-api-key: my-admin-token' \\ -H 'Content-Type: application/json' \\ -d '{ &quot;name&quot;: &quot;John&quot;, &quot;walletId&quot;: &quot;99734c87-5c9d-4697-b5fd-dea4e9590ba7&quot; }'   Make sure to use the walletId from the previous step.  Response Example:  { &quot;kind&quot;: &quot;Entity&quot;, &quot;self&quot;: &quot;/iam/entities/10000000-0000-0000-0000-000000000000&quot;, &quot;id&quot;: &quot;10000000-0000-0000-0000-000000000000&quot;, &quot;name&quot;: &quot;John&quot;, &quot;walletId&quot;: &quot;99734c87-5c9d-4697-b5fd-dea4e9590ba7&quot;, &quot;createdAt&quot;: &quot;2023-09-01T14:00:38.760045Z&quot;, &quot;updatedAt&quot;: &quot;2023-09-01T14:00:38.760047Z&quot; }   ","version":"Next","tagName":"h3"},{"title":"4. Register apikey authentication method‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#4-register-apikey-authentication-method","content":" With the new tenant now equipped with both a wallet and an entity, the final step involves setting up the entity's authentication method. Once this step is completed, the administrator should provide the tenant with an apikey, granting them access to utilize the Agent.  curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/iam/apikey-authentication' \\ -H 'accept: */*' \\ -H 'x-admin-api-key: my-admin-token' \\ -H 'Content-Type: application/json' \\ -d '{ &quot;entityId&quot;: &quot;10000000-0000-0000-0000-000000000000&quot;, &quot;apiKey&quot;: &quot;my-tenant-token&quot; }'   Make sure to use the entityId from the previous step.  HTTP code 201 returns in the case of the successful request execution.  ","version":"Next","tagName":"h3"},{"title":"Tenant interactions‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#tenant-interactions","content":" With the apikey provisioned by the administrator, the tenant is able to authenticate and use the Cloud Agent.  ","version":"Next","tagName":"h2"},{"title":"1. Perform a simple action to verify access to the Cloud Agent‚Äã","type":1,"pageTitle":"Tenant Onboarding","url":"/docs/tutorials/multitenancy/tenant-onboarding#1-perform-a-simple-action-to-verify-access-to-the-cloud-agent","content":" To prove that the tenant can be authenticated as the created entity and use the wallet, try listing the DIDs in the wallet using apikey header.  curl --location --request GET 'http://localhost:8080/cloud-agent/did-registrar/dids' \\ --header &quot;apikey: my-tenant-token&quot; \\ --header 'Accept: application/json'   The result should show 200 status with an empty list. This means that the wallet has been created and it does not contain any DIDs. Any interactions that the tenant performs should be scoped to only this wallet. ","version":"Next","tagName":"h3"},{"title":"Tenant Onboarding Self-Service","type":0,"sectionRef":"#","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#roles","content":" In self-service tenant management with external IAM, there is only one role:  Tenant  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#prerequisites","content":" Keycloak is up and running.Keycloak is configured as follows A realm called my-realm is createdA client called cloud-agent under my-realm with authorization feature is created. (See create client instruction)Make sure the cloud-agent client has direct access grants enabled to simplify the login process for this tutorial.Make sure to allow user self-registration. The Cloud Agent is up and runningThe Cloud Agent is configured with the following environment variables: ADMIN_TOKEN=my-admin-tokenDEFAULT_WALLET_ENABLED=falseKEYCLOAK_ENABLED=trueKEYCLOAK_URL=http://localhost:9980 (replace with appropriate value)KEYCLOAK_REALM=my-realmKEYCLOAK_CLIENT_ID=cloud-agentKEYCLOAK_CLIENT_SECRET=&lt;KEYCLOAK_CLIENT_SECRET&gt; (replace with appropriate value)KEYCLOAK_UMA_AUTO_UPGRADE_RPT=true  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#overview","content":" This tutorial demonstrate the process of user self-registration on Keycloak. Then, the users can log in to Keycloak to obtain a token. When the agent uses this token for the wallet creation, the agent recognizes it belongs to a tenant and automatically associates the tenant's permission with the created wallet.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#endpoints","content":" ","version":"Next","tagName":"h2"},{"title":"Agent endpoints‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#agent-endpoints","content":" Endpoint\tDescription\tRoleGET /wallets\tList the wallets on the Cloud Agent\tTenant POST /wallets\tCreate a new wallet on the Cloud Agent\tTenant GET /did-registrar/dids\tList the DIDs inside the wallet\tTenant  ","version":"Next","tagName":"h3"},{"title":"Keycloak endpoints‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#keycloak-endpoints","content":" Endpoint\tDescription\tRolePOST /realms/{realm}/protocol/openid-connect/token\tIssue a new JWT token\tTenant  ","version":"Next","tagName":"h3"},{"title":"Tenant interactions‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#tenant-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Self-register account on Keycloak‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#1-self-register-account-on-keycloak","content":" Start by registering a new account on Keycloak, accessible through its login page. Usually, this should be available at http://localhost:9980/realms/my-realm/account/.  For detailed instructions on how to register a new user, please refer to registering a new user section on the official documentation.  ","version":"Next","tagName":"h3"},{"title":"2. Obtain access token from Keycloak‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#2-obtain-access-token-from-keycloak","content":" Once a new account is registered, Keycloak should recognize it, allowing the user to log in and obtain the access token.  Run this command to log in and get the access token.  curl -X 'POST' \\ 'http://localhost:9980/realms/my-realm/protocol/openid-connect/token' \\ -d &quot;grant_type=password&quot; \\ -d &quot;client_id=admin-cli&quot; \\ -d &quot;username=alice&quot; \\ -d &quot;password=1234&quot;   Make sure to use the correct username and password. Special attention on the client_id; this should be the actual client_id of the frontend application that logs the user in. For this tutorial, it is OK to use admin-cli.  Example token response (some fields omitted for readability)  { &quot;access_token&quot;: &quot;eyJhbGciOi...7ocDHofUDQ&quot;, &quot;refresh_token&quot;: &quot;eyJhbGciOi...otsEEi4eQA&quot;, ... }   ","version":"Next","tagName":"h3"},{"title":"3. Check the existing wallets‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#3-check-the-existing-wallets","content":" Right after the account is registered, no permission should be associated with it. Listing wallets on it should return empty results.  curl -X 'GET' \\ 'http://localhost:8080/cloud-agent/wallets' \\ -H 'Authorization: Bearer eyJhbGciOi...7ocDHofUDQ' \\ -H 'Accept: application/json'   Use the correct access_token in the previous command's Authorization header.  Response Example:  { &quot;self&quot;: &quot;/wallets&quot;, &quot;kind&quot;: &quot;WalletPage&quot;, &quot;pageOf&quot;: &quot;/wallets&quot;, &quot;contents&quot;: [] }   ","version":"Next","tagName":"h3"},{"title":"4. Create a new wallet‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#4-create-a-new-wallet","content":" Create a wallet using a POST /wallets endpoint. This wallet will be a container for the tenant's assets (DIDs, VCs, Connections, etc.). The Agent can provide or randomly generate the wallet seed during wallet creation.  If the user already has the wallet associated, the wallet creation will fail as multiple wallets per tenant are not yet allowed.  curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/wallets' \\ -H 'Authorization: Bearer eyJhbGciOi...7ocDHofUDQ' \\ -H 'Accept: application/json' \\ -H 'Content-Type: application/json' \\ -d '{ &quot;seed&quot;: &quot;c9994785ce6d548134020f610b76102ca1075d3bb672a75ec8c9a27a7b8607e3b9b384e43b77bb08f8d5159651ae38b98573f7ecc79f2d7e1f1cc371ce60cf8a&quot;, &quot;name&quot;: &quot;my-wallet&quot; }'   Response Example:  { &quot;id&quot;: &quot;99734c87-5c9d-4697-b5fd-dea4e9590ba7&quot;, &quot;name&quot;: &quot;my-wallet&quot;, &quot;createdAt&quot;: &quot;2023-01-01T00:00:00Z&quot;, &quot;updatedAt&quot;: &quot;2023-01-01T00:00:00Z&quot; }   In this step, the agent creates both wallet resource and UMA permission on Keycloak, assigning the new wallet to the user who created it.  ","version":"Next","tagName":"h3"},{"title":"5. Perform a simple action to verify access to the Cloud Agent‚Äã","type":1,"pageTitle":"Tenant Onboarding Self-Service","url":"/docs/tutorials/multitenancy/tenant-onboarding-self-service#5-perform-a-simple-action-to-verify-access-to-the-cloud-agent","content":" Without further operation, the wallet should be available for the tenant. To prove that the tenant can access the wallet, list the DIDs using RPT in the Authorization header.  curl --location --request GET 'http://localhost:8080/cloud-agent/did-registrar/dids' \\ -H 'Authorization: Bearer eyJhbGciOi...7ocDHofUDQ' \\ -H 'Accept: application/json'   The wallet was successfully created, but it currently does not contain any DIDs - indicated by an empty list and a 200 status. The tenant should only perform interactions within the scope of this wallet. ","version":"Next","tagName":"h3"},{"title":"Delete the credential schema","type":0,"sectionRef":"#","url":"/docs/tutorials/schemas/delete","content":"Delete the credential schema Unfortunately, after publishing (especially in the Verifiable Data Registry (VDR), deleting the credential schema is impossible. The Identus Platform doesn't publish the credential schema in the VDR. This capability will get implemented in the later version of the platform. That's why the platform does not expose the REST API for deletion. If you need to delete the credential schema, you can ask the database administrator or delete it from the Postgres instance by guid. For example: DELETE FROM credential_schema WHERE guid = '3f86a73f-5b78-39c7-af77-0c16123fa9c2' ","keywords":"","version":"Next"},{"title":"Create the credential schema","type":0,"sectionRef":"#","url":"/docs/tutorials/schemas/create","content":"","keywords":"","version":"Next"},{"title":"Step-by-step guide‚Äã","type":1,"pageTitle":"Create the credential schema","url":"/docs/tutorials/schemas/create#step-by-step-guide","content":" The following guide demonstrates how to create a driving license credential schema.  ","version":"Next","tagName":"h2"},{"title":"1. Define the JSON Schema for the Verifiable Credential‚Äã","type":1,"pageTitle":"Create the credential schema","url":"/docs/tutorials/schemas/create#1-define-the-json-schema-for-the-verifiable-credential","content":" Assume that you need a credential schema for the driving license, and the verifiable credential must have the following fields:  emailAddress - the email address of the drivergivenName - the first name of the driverfamilyName - the family name of the driverdateOfIssuance - date of the driver's license issuancedrivingLicenseID - ID of the driving licensedrivingClass - driving class that denotes which types of vehicles the driver is allowed to go. Also, let's assume that the driving license might have additional optional claims.  For the above fields, the JSON Schema definition must be:  { &quot;$id&quot;: &quot;https://example.com/driving-license-1.0.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot; ], &quot;additionalProperties&quot;: true }   The fields $id and $schema must correspond values that describe  the identity of the given JSON Schema as a correctly formatted URL https://example.com/driving-license-1.0.0 andthe meta schema fixed to https://json-schema.org/draft/2020-12/schema which is the only supported value  All the claims are listed under the properties object with corresponding types and formats according to JSON Specification.  additionalProperties is set to true, meaning adding other fields to the verifiable credential is possible.  ","version":"Next","tagName":"h3"},{"title":"2. Create the credential schema record‚Äã","type":1,"pageTitle":"Create the credential schema","url":"/docs/tutorials/schemas/create#2-create-the-credential-schema-record","content":" Open your preferred REST API client, such as Postman or Insomnia, or use the client stub generated based on the OpenAPI specification. In the client, create a new POST request to either /cloud-agent/schema-registry/schemas or /cloud-agent/schema-registry/schemas/did-url endpoints. They both take the same payload. /cloud-agent/schema-registry/schemas creates a schema that can later be resolved via HTTP URL/cloud-agent/schema-registry/schemas/did-url creates a schema that can later be resolved via DID URL, the DID includes a service endpoint with the location of the schema registry.  Note that the value of the author field must match the short form of a PRISM DID that has been created using the same agent. An unpublished DID is sufficient. Please refer to the Create DID documentation page for more details on how to create a PRISM DID.  In the request body, create a JSON object:  { &quot;name&quot;: &quot;driving-license&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;Driving License Schema&quot;, &quot;type&quot;: &quot;https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json&quot;, &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;tags&quot;: [ &quot;driving&quot;, &quot;license&quot; ], &quot;schema&quot;: { &quot;$id&quot;: &quot;https://example.com/driving-license-1.0.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot; ], &quot;additionalProperties&quot;: true } }   Send the POST request to create the new schema. The response should contain a GUID that uniquely identifies the new schema. Curl example is the following:  curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/schema-registry/schemas' \\ -H 'accept: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -H 'Content-Type: application/json' \\ -d '{ &quot;name&quot;: &quot;driving-license&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;Driving License Schema&quot;, &quot;type&quot;: &quot;https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json&quot;, &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;tags&quot;: [ &quot;driving&quot;, &quot;license&quot; ], &quot;schema&quot;: { &quot;$id&quot;: &quot;https://example.com/driving-license-1.0.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot; ], &quot;additionalProperties&quot;: true } }'   ...and response might be the following:  { &quot;guid&quot;: &quot;3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot;, &quot;id&quot;: &quot;f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea&quot;, &quot;longId&quot;: &quot;did:prism:agent/f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea?version=1.0.0&quot;, &quot;name&quot;: &quot;driving-license&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;Driving License Schema&quot;, &quot;type&quot;: &quot;https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json&quot;, &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;authored&quot;: &quot;2023-03-14T14:41:46.713943Z&quot;, &quot;tags&quot;: [ &quot;driving&quot;, &quot;license&quot; ], &quot;schema&quot;: { &quot;$id&quot;: &quot;https://example.com/driving-license-1.0.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot; ], &quot;additionalProperties&quot;: true }, &quot;kind&quot;: &quot;CredentialSchema&quot;, &quot;self&quot;: &quot;/schema-registry/schemas/3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot; }   or in case of DID url, the response will be created schema wrapped in Prism Envelope  { &quot;resource&quot;:&quot;eyJhdXRob3IiOiJkaWQ6cHJpc206ZTAyNjZlZThkODBhMDAxNjNlNWY5MjJkYzI1NjdhYjk2MTE3MjRhMDBkYjkyNDIzMzAxMTU0MjgyMTY5ZGZmOSIsImF1dGhvcmVkIjoiMjAyNC0wOS0yNVQxMDozNzoxNi4wOTM2MDlaIiwiZGVzY3JpcHRpb24iOiJEcml2aW5nIExpY2Vuc2UgU2NoZW1hIiwiZ3VpZCI6IjVjOTNmYTAwLWUwM2UtMzlkZC05NDdmLTI2NWI4YzFlYWQ4YiIsImlkIjoiNjhmMGQ4MDctYTcyYi00OTY2LTg1NWItMmIzNGJjMjYzNzAyIiwibmFtZSI6ImRyaXZpbmctbGljZW5zZSIsInJlc29sdXRpb25NZXRob2QiOiJkaWQiLCJzY2hlbWEiOnsiJGlkIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9kcml2aW5nLWxpY2Vuc2UtMS4wLjAiLCIkc2NoZW1hIjoiaHR0cHM6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQvMjAyMC0xMi9zY2hlbWEiLCJhZGRpdGlvbmFsUHJvcGVydGllcyI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJEcml2aW5nIExpY2Vuc2UiLCJwcm9wZXJ0aWVzIjp7ImRhdGVPZklzc3VhbmNlIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwiZHJpdmluZ0NsYXNzIjp7InR5cGUiOiJpbnRlZ2VyIn0sImRyaXZpbmdMaWNlbnNlSUQiOnsidHlwZSI6InN0cmluZyJ9LCJlbWFpbEFkZHJlc3MiOnsiZm9ybWF0IjoiZW1haWwiLCJ0eXBlIjoic3RyaW5nIn0sImZhbWlseU5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJnaXZlbk5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiZW1haWxBZGRyZXNzIiwiZmFtaWx5TmFtZSIsImRhdGVPZklzc3VhbmNlIiwiZHJpdmluZ0xpY2Vuc2VJRCIsImRyaXZpbmdDbGFzcyJdLCJ0eXBlIjoib2JqZWN0In0sInRhZ3MiOlsiZHJpdmluZyIsImxpY2Vuc2UiXSwidHlwZSI6Imh0dHBzOi8vdzNjLWNjZy5naXRodWIuaW8vdmMtanNvbi1zY2hlbWFzL3NjaGVtYS8yLjAvc2NoZW1hLmpzb24iLCJ2ZXJzaW9uIjoiMS4wLjAifQ==&quot;, &quot;url&quot;:&quot;did:prism:e0266ee8d80a00163e5f922dc2567ab9611724a00db92423301154282169dff9?resourceService=agent-base-url&amp;resourcePath=schema-registry/schemas/did-url/5c93fa00-e03e-39dd-947f-265b8c1ead8b?resourceHash=d1557ede168f0f91097933aa2080edaf2f14fddd8a7362a22add97e431c4efe2&quot; }   ","version":"Next","tagName":"h3"},{"title":"3. Retrieve the created schema‚Äã","type":1,"pageTitle":"Create the credential schema","url":"/docs/tutorials/schemas/create#3-retrieve-the-created-schema","content":" To retrieve the newly created schema, create a new GET request to the /cloud-agent/schema-registry/schemas/{guid}endpoint, where {guid} is the GUID returned in the response from the previous step. Send the GET request to retrieve the schema. Curl example is the following:  curl -X 'GET' \\ 'http://localhost:8080/cloud-agent/schema-registry/schemas/3f86a73f-5b78-39c7-af77-0c16123fa9c2' \\ -H 'accept: application/json' \\ -H &quot;apikey: $API_KEY&quot;   or if you need to resolve a schema created via DID url, the endpoint will look like this /cloud-agent/schema-registry/schemas/did-url/{guid}  curl -X 'GET' \\ 'http://localhost:8080/cloud-agent/schema-registry/schemas/did-url/3f86a73f-5b78-39c7-af77-0c16123fa9c2' \\ -H 'accept: application/json' \\ -H &quot;apikey: $API_KEY&quot;   The response for HTTP URL request should contain the JSON object representing the schema you just created.  { &quot;guid&quot;: &quot;3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot;, &quot;id&quot;: &quot;f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea&quot;, &quot;longId&quot;: &quot;did:prism:agent/f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea?version=1.0.0&quot;, &quot;name&quot;: &quot;driving-license&quot;, &quot;version&quot;: &quot;1.0.0&quot;, &quot;description&quot;: &quot;Driving License Schema&quot;, &quot;type&quot;: &quot;https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json&quot;, &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;authored&quot;: &quot;2023-03-14T14:41:46.713943Z&quot;, &quot;tags&quot;: [ &quot;driving&quot;, &quot;license&quot; ], &quot;schema&quot;: { &quot;$id&quot;: &quot;https://example.com/driving-license-1.0.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot; ], &quot;additionalProperties&quot;: true }, &quot;kind&quot;: &quot;CredentialSchema&quot;, &quot;self&quot;: &quot;/schema-registry/schemas/3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot; }   and for DID URL request, response will include the same schema wrapped in Prism envelope response  { &quot;resource&quot;:&quot;eyJhdXRob3IiOiJkaWQ6cHJpc206ZTAyNjZlZThkODBhMDAxNjNlNWY5MjJkYzI1NjdhYjk2MTE3MjRhMDBkYjkyNDIzMzAxMTU0MjgyMTY5ZGZmOSIsImF1dGhvcmVkIjoiMjAyNC0wOS0yNVQxMDozNzoxNi4wOTM2MDlaIiwiZGVzY3JpcHRpb24iOiJEcml2aW5nIExpY2Vuc2UgU2NoZW1hIiwiZ3VpZCI6IjVjOTNmYTAwLWUwM2UtMzlkZC05NDdmLTI2NWI4YzFlYWQ4YiIsImlkIjoiNjhmMGQ4MDctYTcyYi00OTY2LTg1NWItMmIzNGJjMjYzNzAyIiwibmFtZSI6ImRyaXZpbmctbGljZW5zZSIsInJlc29sdXRpb25NZXRob2QiOiJkaWQiLCJzY2hlbWEiOnsiJGlkIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9kcml2aW5nLWxpY2Vuc2UtMS4wLjAiLCIkc2NoZW1hIjoiaHR0cHM6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQvMjAyMC0xMi9zY2hlbWEiLCJhZGRpdGlvbmFsUHJvcGVydGllcyI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJEcml2aW5nIExpY2Vuc2UiLCJwcm9wZXJ0aWVzIjp7ImRhdGVPZklzc3VhbmNlIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwiZHJpdmluZ0NsYXNzIjp7InR5cGUiOiJpbnRlZ2VyIn0sImRyaXZpbmdMaWNlbnNlSUQiOnsidHlwZSI6InN0cmluZyJ9LCJlbWFpbEFkZHJlc3MiOnsiZm9ybWF0IjoiZW1haWwiLCJ0eXBlIjoic3RyaW5nIn0sImZhbWlseU5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJnaXZlbk5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiZW1haWxBZGRyZXNzIiwiZmFtaWx5TmFtZSIsImRhdGVPZklzc3VhbmNlIiwiZHJpdmluZ0xpY2Vuc2VJRCIsImRyaXZpbmdDbGFzcyJdLCJ0eXBlIjoib2JqZWN0In0sInRhZ3MiOlsiZHJpdmluZyIsImxpY2Vuc2UiXSwidHlwZSI6Imh0dHBzOi8vdzNjLWNjZy5naXRodWIuaW8vdmMtanNvbi1zY2hlbWFzL3NjaGVtYS8yLjAvc2NoZW1hLmpzb24iLCJ2ZXJzaW9uIjoiMS4wLjAifQ==&quot;, &quot;url&quot;:&quot;did:prism:e0266ee8d80a00163e5f922dc2567ab9611724a00db92423301154282169dff9?resourceService=agent-base-url&amp;resourcePath=schema-registry/schemas/did-url/5c93fa00-e03e-39dd-947f-265b8c1ead8b?resourceHash=d1557ede168f0f91097933aa2080edaf2f14fddd8a7362a22add97e431c4efe2&quot; }   Schemas created for HTTP URL (/cloud-agent/schema-registry/schemas) will not be resolvable by endpoint that returns schemas created for DID URL (/cloud-agent/schema-registry/schemas/did-url) and vice verca.  The Cloud Agent instance's triple author, id, and version are unique. So, having a single DID reference that the author uses, creating the credential schema with the same id and versionis impossible.  ","version":"Next","tagName":"h3"},{"title":"4. Update the credential schema‚Äã","type":1,"pageTitle":"Create the credential schema","url":"/docs/tutorials/schemas/create#4-update-the-credential-schema","content":" To upgrade the credential schema, you need to perform the following steps:  Start from the first step and change the JSON SchemaChange the version according to the nature of your changeCreate a new credential schema record with a higher version ","version":"Next","tagName":"h3"},{"title":"Credential Schema Introduction","type":0,"sectionRef":"#","url":"/docs/tutorials/schemas/credential-schema","content":"","keywords":"","version":"Next"},{"title":"Abstract‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#abstract","content":" This document describes the purpose, supported formats, and technical details of the Credential Schema implementation in the Identus Platform.  ","version":"Next","tagName":"h2"},{"title":"1. Introduction‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#1-introduction","content":" Credential Schema is a data template for Verifiable Credentials. It contains claims (attributes) of the Verifiable Credentials, credential schema author, type, name, version, and proof of authorship. By putting schema definitions on a public blockchain, they are available for all verifiers to examine to determine the semantic interoperability of the Credential.  The Identus Platform supports the following specifications of the credential schemas:  Verifiable Credentials JSON Schema 2022AnonCreds Schema  The signed credential schema allows doing following verifications:  semantic verification of the verifiable credentialsauthorship verification  The author can use credential schema to issue the following types of verifiable credentials:  JSON Verifiable CredentialJSON-LD Verifiable CredentialAnoncred Verifiable Credentialall types above but encoded as JWT  Limitations and constraints of the Identus Platform:  The Issuer does not sign the Credential SchemaThe Issuer does not publish the Credential Schema to the VDR (the Cardano blockchain)  ","version":"Next","tagName":"h2"},{"title":"2. Terminology‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#2-terminology","content":" ","version":"Next","tagName":"h2"},{"title":"Credential Schema‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#credential-schema","content":" The Credential Schema is a template that defines a set of attributes the Issuer uses to issue the Verifiable Credential.  ","version":"Next","tagName":"h3"},{"title":"Schema Registry‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#schema-registry","content":" The registry is where the Credential Schema is published and available for parties.  ","version":"Next","tagName":"h3"},{"title":"Issuer, Holder, Verifier‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#issuer-holder-verifier","content":" These are well-known roles in the SSI domain.  ","version":"Next","tagName":"h3"},{"title":"2. Credential Schema Attributes‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#2-credential-schema-attributes","content":" ","version":"Next","tagName":"h2"},{"title":"guid (UUID)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#guid-uuid","content":" It is the globally unique identifier of the credential schema. It is bound to the author, version, and id fields as it is composed of the bytes of the longId string.  ","version":"Next","tagName":"h3"},{"title":"id (UUID)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#id-uuid","content":" The locally unique identifier of the schema.  ","version":"Next","tagName":"h3"},{"title":"longId (String)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#longid-string","content":" Resource identifier of the given credential schema composed from the author's DID reference, id, and version fields.Example: {author}/{id}?version={version}  Note: According to the W3C specification, this field is locally unique and combines the Issuer DID, uuid, and version.  For example: did:example:MDP8AsFhHzhwUvGNuYkX7T/06e126d1-fa44-4882-a243-1e326fbe21db?version=1.0    ","version":"Next","tagName":"h3"},{"title":"type (String)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#type-string","content":" It is a type of the supported JSON Schema of the credential schema. It describes the JSON Schema of the Credential Schema described in this document.  JWT Credential Schema Example:  { &quot;type&quot;: &quot;https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json&quot; }   AnonCred Credential Schema Example:  { &quot;type&quot; : &quot;AnoncredSchemaV1&quot; }     ","version":"Next","tagName":"h3"},{"title":"name (String)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#name-string","content":" It is a human-readable name for the schema.Example:  { &quot;name&quot;: [ &quot;DrivingLicence&quot; ] }     ","version":"Next","tagName":"h3"},{"title":"description (String)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#description-string","content":" It is a human-readable description of the schema.  Note: This field may get removed later as it's not a part of W3C specification but rather the internal field of the JSON schema.    ","version":"Next","tagName":"h3"},{"title":"version (String)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#version-string","content":" It is a version of the schema that contains the revision of the credential schema in SemVerformat.Example:  { &quot;version&quot;: &quot;1.0.0&quot; }   The version field must be the schema evolution and describe the impact of the changes. For the breaking changes, the major version must get increased. In the current implementation, the Identus Platform doesn't validate whether the new version is backward compatible. This logic may get implemented later, so the Issuer is responsible for correctly setting the credential schema's next version.    ","version":"Next","tagName":"h3"},{"title":"author (DID)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#author-did","content":" DID of the identity which authored the credential schema.Example:  { &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot; }     ","version":"Next","tagName":"h3"},{"title":"authored (DateTime)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#authored-datetime","content":" RFC3339 date of when the credential schema creation. A piece of Metadata.Example:  { &quot;authored&quot;: &quot;2022-03-10T12:00:00Z&quot; }     ","version":"Next","tagName":"h3"},{"title":"schema (JSON Schema)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#schema-json-schema","content":" A valid JSON-SCHEMA where the credential schema semantic gets defined. JSON Schema must be composed according to the Metaschema schema.Example:  { &quot;$id&quot;: &quot;https://example.com/driving-license-1.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot; ], &quot;additionalProperties&quot;: true }     ","version":"Next","tagName":"h3"},{"title":"schema (AnonCred Schema)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#schema-anoncred-schema","content":" A valid ANONCRED-SCHEMA where the credential schema semantic gets defined.Example:  { &quot;name&quot;:&quot;anoncred-birthday-cert&quot;, &quot;version&quot;:&quot;1.0.0&quot;, &quot;description&quot;:&quot;Birthday certificate&quot;, &quot;type&quot;:&quot;AnoncredSchemaV1&quot;, &quot;author&quot;:&quot;did:prism:e0266ee8d80a00163e5f922dc2567ab9611724a00db92423301154282169dff9&quot;, &quot;tags&quot;:[ &quot;birth&quot;, &quot;certificate&quot; ], &quot;schema&quot;:{ &quot;$schema&quot;:&quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;type&quot;:&quot;object&quot;, &quot;properties&quot;:{ &quot;name&quot;:{ &quot;type&quot;:&quot;string&quot;, &quot;minLength&quot;:1 }, &quot;version&quot;:{ &quot;type&quot;:&quot;string&quot;, &quot;minLength&quot;:1 }, &quot;attrNames&quot;:{ &quot;type&quot;:&quot;array&quot;, &quot;items&quot;:{ &quot;type&quot;:&quot;string&quot;, &quot;minLength&quot;:1 }, &quot;minItems&quot;:1, &quot;maxItems&quot;:125, &quot;uniqueItems&quot;:true }, &quot;issuerId&quot;:{ &quot;type&quot;:&quot;string&quot;, &quot;minLength&quot;:1 } }, &quot;name&quot;:&quot;Birth Certificate Schema&quot;, &quot;version&quot;:&quot;1.0&quot;, &quot;attrNames&quot;:[ &quot;location&quot;, &quot;birthday&quot; ], &quot;issuerId&quot;:&quot;did:prism:e0266ee8d80a00163e5f922dc2567ab9611724a00db92423301154282169dff9&quot; }, &quot;required&quot;:[ &quot;name&quot;, &quot;version&quot; ], &quot;additionalProperties&quot;:true }     ","version":"Next","tagName":"h3"},{"title":"tags (String[])‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#tags-string","content":" It is a set of tokens that allow one to look up and filter the credential schema records. This field is not a part of the W3C specification. Its usage by the Identus Platform for filtering the records.Example:  { &quot;tags&quot;: [ &quot;id&quot;, &quot;driving&quot; ] }   ","version":"Next","tagName":"h3"},{"title":"proof (object)‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#proof-object","content":" The proof field is a JOSE object containing the credential schema's signature, including the following fields:  typecreatedverificationMethodproofPurposeproofValuedomainjws  Example:  { &quot;proof&quot;: { &quot;type&quot;: &quot;Ed25519Signature2018&quot;, &quot;created&quot;: &quot;2022-03-10T12:00:00Z&quot;, &quot;verificationMethod&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff#key-1&quot;, &quot;proofPurpose&quot;: &quot;assertionMethod&quot;, &quot;proofValue&quot;: &quot;FiPfjknHikKmZ...&quot;, &quot;jws&quot;: &quot;eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il0sImt0eSI6Ik...&quot;, &quot;domain&quot;: &quot;prims.atala.com&quot; } }     ","version":"Next","tagName":"h3"},{"title":"References‚Äã","type":1,"pageTitle":"Credential Schema Introduction","url":"/docs/tutorials/schemas/credential-schema#references","content":" Verifiable Credentials JSON Schema 2022Verifiable Credential Data Integrity 1.0 ","version":"Next","tagName":"h2"},{"title":"Tenant Onboarding with External IAM","type":0,"sectionRef":"#","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#roles","content":" In tenant management with external IAM, there are 2 roles:  AdministratorTenant  ","version":"Next","tagName":"h2"},{"title":"Prerequisites‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#prerequisites","content":" Keycloak up and runningKeycloak is configured as follows A realm called my-realm is createdA client called cloud-agent under my-realm with authorization feature is created. (See create client instruction)Make sure the cloud-agent client has direct access grants enabled to simplify the login process for this tutorial the Cloud Agent is up and runningthe Cloud Agent is configured with the following environment variables: ADMIN_TOKEN=my-admin-tokenDEFAULT_WALLET_ENABLED=falseKEYCLOAK_ENABLED=trueKEYCLOAK_URL=http://localhost:9980 (replace with appropriate value)KEYCLOAK_REALM=my-realmKEYCLOAK_CLIENT_ID=cloud-agentKEYCLOAK_CLIENT_SECRET=&lt;KEYCLOAK_CLIENT_SECRET&gt; (replace with appropriate value)KEYCLOAK_UMA_AUTO_UPGRADE_RPT=false  ","version":"Next","tagName":"h2"},{"title":"Overview‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#overview","content":" This tutorial illustrates the process of provisioning a wallet resource for the new tenant and creating a tenant in Keycloak. The administrator can then create a UMA permission for the wallet, giving access to the tenant.  When setting up UMA permissions on the agent, the wallet resource, along with the UMA policy and permission are created on Keycloak according to a predefined convention. For flexibility in defining custom policy and permission models, administrators can manually create these UMA resources (resource, policy, permission) directly on Keycloak using a set of UMA endpoints called Protection API (see Keycloak Protection API). However, using Protection API to manage permissions is out of the scope of this tutorial.  Once the registration is successful, the tenant can obtain an ID token from Keycloak using any available OIDC flow, such as the direct access grants (username &amp; password). This ID token typically contains user claims such as username and subject ID. The tenant can use Keycloak's token endpoint to convert this token to an RPT (requesting party token), another token containing permissions information. The tenant can access the multi-tenant agent by providing the RPT in the Authorization header.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#endpoints","content":" ","version":"Next","tagName":"h2"},{"title":"Agent endpoints‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#agent-endpoints","content":" Endpoint\tDescription\tRoleGET /wallets\tList the wallets on the Cloud Agent\tAdministrator POST /wallets\tCreate a new wallet on the Cloud Agent\tAdministrator POST /wallets/{walletId}/uma-permissions\tCreate a uma-permission for a wallet\tAdministrator GET /did-registrar/dids\tList the DIDs inside the wallet\tTenant  ","version":"Next","tagName":"h3"},{"title":"Keycloak endpoints‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#keycloak-endpoints","content":" Endpoint\tDescription\tRolePOST /admin/realms/{realm}/users\tCreate a new user on Keycloak\tAdministrator POST /realms/{realm}/protocol/openid-connect/token\tIssue a new JWT token\tAdministrator, Tenant  ","version":"Next","tagName":"h3"},{"title":"Administrator interactions‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#administrator-interactions","content":" ","version":"Next","tagName":"h2"},{"title":"1. Check the existing wallets‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#1-check-the-existing-wallets","content":" When running Cloud Agent using the configurations above, the Cloud Agent should start with an empty state. Listing wallets on it should return empty results.  curl -X 'GET' \\ 'http://localhost:8080/cloud-agent/wallets' \\ -H 'accept: application/json' \\ -H 'x-admin-api-key: my-admin-token'   Response Example:  { &quot;self&quot;: &quot;/wallets&quot;, &quot;kind&quot;: &quot;WalletPage&quot;, &quot;pageOf&quot;: &quot;/wallets&quot;, &quot;contents&quot;: [] }   ","version":"Next","tagName":"h3"},{"title":"2. Create a new wallet‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#2-create-a-new-wallet","content":" Create a wallet using a POST /wallets endpoint. This wallet will be a container for the tenant's assets (DIDs, VCs, Connections, etc.). Provide a wallet seed during the wallet creation or let the Agent generate one  curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/wallets' \\ -H 'accept: application/json' \\ -H 'x-admin-api-key: my-admin-token' \\ -H 'Content-Type: application/json' \\ -d '{ &quot;seed&quot;: &quot;c9994785ce6d548134020f610b76102ca1075d3bb672a75ec8c9a27a7b8607e3b9b384e43b77bb08f8d5159651ae38b98573f7ecc79f2d7e1f1cc371ce60cf8a&quot;, &quot;name&quot;: &quot;my-wallet&quot; }'   Response Example:  { &quot;id&quot;: &quot;99734c87-5c9d-4697-b5fd-dea4e9590ba7&quot;, &quot;name&quot;: &quot;my-wallet&quot;, &quot;createdAt&quot;: &quot;2023-01-01T00:00:00Z&quot;, &quot;updatedAt&quot;: &quot;2023-01-01T00:00:00Z&quot; }   ","version":"Next","tagName":"h3"},{"title":"3. User registration on Keycloak‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#3-user-registration-on-keycloak","content":" There are multiple ways to complete this step. The goal is to ensure the user has registered on Keycloak. Keycloak offers great flexibility, allowing users to self-register, For this tutorial, we will generate the user manually using Keycloak admin API for simplicity.  The first step is to get an admin token from Keycloak using the username and password. This token allows the admin to perform operations on Keycloak, such as creating a new user. Running the provided command should return the admin access token.  curl -X 'POST' \\ 'http://localhost:9980/realms/master/protocol/openid-connect/token' \\ -d &quot;grant_type=password&quot; \\ -d &quot;client_id=admin-cli&quot; \\ -d &quot;username=$KEYCLOAK_ADMIN_USER&quot; \\ -d &quot;password=$KEYCLOAK_ADMIN_PASSWORD&quot;   Make sure to replace the Keycloak variables with appropriate values.  Example token response (some fields omitted for readability)  { &quot;access_token&quot;: &quot;eyJhbGciOi...7ocDHofUDQ&quot;, &quot;refresh_token&quot;: &quot;eyJhbGciOi...otsEEi4eQA&quot;, ... }   After obtaining the access_token from Keycloak's admin, a new user can be created using this command:  curl -X 'POST' \\ 'http://localhost:9980/admin/realms/my-realm/users' \\ -v \\ -H 'Authorization: Bearer eyJhbGciOi...7ocDHofUDQ' \\ -H 'Content-Type: application/json' \\ --data-raw &quot;{ \\&quot;username\\&quot;: \\&quot;alice\\&quot;, \\&quot;firstName\\&quot;: \\&quot;Alice\\&quot;, \\&quot;enabled\\&quot;: true, \\&quot;credentials\\&quot;: [{\\&quot;value\\&quot;: \\&quot;1234\\&quot;, \\&quot;temporary\\&quot;: false}] }&quot;   Make sure to use the correct access_token in the Authorization header from the previous command.  Example response log  &lt; HTTP/1.1 201 Created &lt; Referrer-Policy: no-referrer &lt; X-Frame-Options: SAMEORIGIN &lt; Strict-Transport-Security: max-age=31536000; includeSubDomains &lt; X-Content-Type-Options: nosniff &lt; X-XSS-Protection: 1; mode=block &lt; Location: http://localhost:9980/admin/realms/my-realm/users/205e04b7-0158-41b0-89c3-f91c3a09f89b &lt; content-length: 0   The response should return status 201 Created indicating the new user is registered with username alice with a password 1234. The user ID can be observed from Location header of the response. This ID will be used for creating permission later in this tutorial.  For in-depth user management, please consult the official Keycloak administration documentation on managing users section.  ","version":"Next","tagName":"h3"},{"title":"4. Grant the user permission to the wallet‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#4-grant-the-user-permission-to-the-wallet","content":" Once the user and wallet have been successfully created, the permissions can be created giving the user access to the wallet. This can be done by invoking the POST /wallets/{walletId}/uma-permissions endpoint on the agent.  curl -X 'POST' \\ 'http://localhost:8080/cloud-agent/wallets/99734c87-5c9d-4697-b5fd-dea4e9590ba7/uma-permissions' \\ -v \\ -H 'accept: */*' \\ -H 'x-admin-api-key: my-admin-token' \\ -H 'Content-Type: application/json' \\ -d '{ &quot;subject&quot;: &quot;205e04b7-0158-41b0-89c3-f91c3a09f89b&quot; }'   Make sure to use the correct subject for the user and the correct walletId from the step earlier. The user ID can be observed from the response header from the previous step or in the User menu in Keycloak Admin UI.  The response should return status 200 OK in case of successful permission creation.  ","version":"Next","tagName":"h3"},{"title":"Tenant interactions‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#tenant-interactions","content":" After the user is registered on Keycloak and the required permission is created by admin, the tenant can log in and utilize the agent by using the token issued by Keycloak.  ","version":"Next","tagName":"h2"},{"title":"1. Obtain access token from Keycloak‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#1-obtain-access-token-from-keycloak","content":" The first step is to authenticate via Keycloak through any applicable authentication method. Usually, the tenant will use some frontend application that follows the standard flow for logging in. For simplicity, we use a flow for username and password in this tutorial. The administrator has already set up the username and password for the tenant. To get the access token, the tenant can call the Keycloak token endpoint directly with those credentials.  Run the command to log in  curl -X 'POST' \\ 'http://localhost:9980/realms/my-realm/protocol/openid-connect/token' \\ -d &quot;grant_type=password&quot; \\ -d &quot;client_id=admin-cli&quot; \\ -d &quot;username=alice&quot; \\ -d &quot;password=1234&quot;   Special attention on the client_id; this should be the actual client_id of the frontend application that logs the user in. For this tutorial, it is OK to use admin-cli.  Example token response (some fields omitted for readability)  { &quot;access_token&quot;: &quot;eyJhbGciOi...7ocDHofUDQ&quot;, &quot;refresh_token&quot;: &quot;eyJhbGciOi...otsEEi4eQA&quot;, ... }   ","version":"Next","tagName":"h3"},{"title":"2. Request RPT (requesting party token) from access token‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#2-request-rpt-requesting-party-token-from-access-token","content":" After the access token is acquired, the next step is to get the RPT token, which holds information about the permissions. It is possible to request the RPT by running this command:  curl -X POST \\ 'http://localhost:9980/realms/my-realm/protocol/openid-connect/token' \\ -H &quot;Authorization: Bearer eyJhbGciOi...7ocDHofUDQ&quot; \\ -d &quot;grant_type=urn:ietf:params:oauth:grant-type:uma-ticket&quot; \\ -d &quot;audience=cloud-agent&quot;   Example token response (some fields omitted for readability)  { &quot;access_token&quot;: &quot;eyJhbGciOi...e7H6W8RUvA&quot;, &quot;refresh_token&quot;: &quot;eyJhbGciOi...W1_y1AF_YY&quot;, ... }   After inspecting the response token, a new claim named authorization should appear in the JWT payload.  Example RPT payload (some fields omitted for readability)  { ... &quot;authorization&quot;: { &quot;permissions&quot;: [ { &quot;rsid&quot;: &quot;99734c87-5c9d-4697-b5fd-dea4e9590ba7&quot;, &quot;rsname&quot;: &quot;&lt;WALLET_RESOURCE_NAME&gt;&quot; }, ... ] }, ... }   ","version":"Next","tagName":"h3"},{"title":"3. Perform a simple action to verify access to the Cloud Agent‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#3-perform-a-simple-action-to-verify-access-to-the-cloud-agent","content":" To prove that the tenant can access the wallet using RPT, try listing the DIDs in the wallet using RPT in the Authorization header.  curl --location --request GET 'http://localhost:8080/cloud-agent/did-registrar/dids' \\ -H 'Authorization: Bearer eyJhbGciOi...e7H6W8RUvA' \\ -H 'Accept: application/json'   Make sure to replace the token with RPT from previous step.  The result should show 200 status with an empty list. This means that the wallet has been created and does not contain any DIDs. All actions carried out by the tenant must be limited to this specific wallet.  ","version":"Next","tagName":"h3"},{"title":"A note on RPT‚Äã","type":1,"pageTitle":"Tenant Onboarding with External IAM","url":"/docs/tutorials/multitenancy/tenant-onboarding-ext-iam#a-note-on-rpt","content":" In this tutorial, there is an additional step for the tenant to request the RPT from the access token. This process aligns with the standard UMA interaction, where the handling of RPT typically occurs on the client side. To simplify the experience, the agent has a feature allowing users to bypass this process. By setting the variable KEYCLOAK_UMA_AUTO_UPGRADE_RPT=true, tenants can utilize the access token obtained in step 1 directly in the Authorization header, eliminating the need for additional RPT request step. ","version":"Next","tagName":"h3"},{"title":"Operating an agent with secrets","type":0,"sectionRef":"#","url":"/docs/tutorials/secrets/operation","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Operating an agent with secrets","url":"/docs/tutorials/secrets/operation#introduction","content":" The Cloud Agent offers a DID (Decentralized Identifier) management solution which involves creating, storing and using key materials. To generate a DID key material, the software relies on a seed, following the BIP32 / BIP39 standards. The system operators have the option to either provide their own seed or allow the software to generate one automatically. However, in a production environment, it is crucial for the system operators to explicitly supply the seed to the agent. This ensures full control over the DID key material and guarantees secure management of user identities.  The Cloud Agent uses the following environment variables for secret management.  Name\tDescription\tDefaultSECRET_STORAGE_BACKEND\tThe storage backend that will be used for the secret storage\tvault VAULT_ADDR\tThe address which the Cloud Agent can reach the Vault\thttp://localhost:8200 VAULT_TOKEN\tThe token for accessing HashiCorp Vault\t- VAULT_APPROLE_ROLE_ID\tThe role_id for HashiCorp Vault authentication with AppRole\t- VAULT_APPROLE_SECRET_ID\tThe secret_id for HashiCorp Vault authentication with AppRole\t- VAULT_USE_SEMANTIC_PATH\tEnable full path convention for vault secret path\ttrue DEFAULT_WALLET_SEED\tThe seed used for DID key management for the default wallet\t-  ","version":"Next","tagName":"h2"},{"title":"Storage backend configuration‚Äã","type":1,"pageTitle":"Operating an agent with secrets","url":"/docs/tutorials/secrets/operation#storage-backend-configuration","content":" Secret storage supports various backends like the Vault service or Postgres database. By default, the backend chosen for secret storage is Vault, which is suitable for production environments. There are multiple supported backend implementations, each catering to specific use cases.  ","version":"Next","tagName":"h2"},{"title":"HashiCorp Vault‚Äã","type":1,"pageTitle":"Operating an agent with secrets","url":"/docs/tutorials/secrets/operation#hashicorp-vault","content":" When operating in a production environment, the agent has the option to utilize Vault as a secure secret storage backend. This choice is deemed suitable for production because all data is encrypted and it also offers additional security-related capabilities. By default, the agent uses this backend but the option is configurable. To utilize this backend, set the SECRET_STORAGE_BACKEND variable to vault.  Authentication and Authorization  The agent expects to read and write secrets to the path /secret/*, so ensure the appropriate permissions are provisioned.  Example Vault policy  path &quot;secret/*&quot; { capabilities = [&quot;create&quot;, &quot;read&quot;, &quot;update&quot;, &quot;patch&quot;, &quot;delete&quot;, &quot;list&quot;] }   HashiCorp Vault provides multiple authentication methods. One of the simplest methods is token authentication. To authenticate using the token, set the environment variable VAULT_TOKEN. The agent prefers token authentication if provided with multiple authentication methods.  Another method is AppRole authentication which is suitable for automatic workflows. To use AppRole authentication, set the environment variable VAULT_APPROLE_ROLE_ID and VAULT_APPROLE_SECRET_ID.  Storage Backend  HashiCorp Vault supports multiple backends for storage, such as filesystem, Etcd, PostgreSQL, or Integrated Storage (Raft). Each backend has different properties, which have implications for how secrets can be stored. The agent logically stores secrets in the following hierarchies.  # Wallet seed /secret/&lt;wallet-id&gt;/seed # Peer DID keys /secret/&lt;wallet-id&gt;/dids/peer/&lt;peer-did&gt;/keys/&lt;key-id&gt; # Generic secrets /secret/&lt;wallet-id&gt;/generic-secrets/&lt;specific-path&gt;   Each storage backend has certain limitations, such as size, number of sub-paths, or path length. Some backends can support path lengths of up to 32,768 characters, while others only allow a few hundred characters. In some cases, the storage backends might not support the above logical convention due to excessively long paths.  To address this issue, the agent supports path shortening. This feature can be toggled by setting the environment variable VAULT_USE_SEMANTIC_PATH=false. When it is disabled, the unbounded portion of the path will be replaced by a SHA-256 digest of the original relative path. Additionally, the original path will be stored in the secret metadata.  ","version":"Next","tagName":"h3"},{"title":"Postgres‚Äã","type":1,"pageTitle":"Operating an agent with secrets","url":"/docs/tutorials/secrets/operation#postgres","content":" Postgres is an alternative backend option for secret storage. However, this option must be explicitly chosen and will replace Vault. By opting for Postgres, there is no need for an additional service like Vault, which simplifies the process of setting up a local development instance. It utilizes the same database instance as the agent itself. To enable this option, set the SECRET_STORAGE_BACKEND to postgres, and it will utilize the same database configuration as the agent's database. It is important to note that while this option facilitates an easier development experience, it does not provide a secure method of storing secrets. The data is not encrypted, making it unsuitable for production use. ","version":"Next","tagName":"h3"},{"title":"Update the credential schema","type":0,"sectionRef":"#","url":"/docs/tutorials/schemas/update","content":"","keywords":"","version":"Next"},{"title":"Step-by-step guide‚Äã","type":1,"pageTitle":"Update the credential schema","url":"/docs/tutorials/schemas/update#step-by-step-guide","content":" The following guide demonstrates how to update a driving license credential schema.  ","version":"Next","tagName":"h2"},{"title":"1. Define the updated JSON Schema for the Verifiable Credential‚Äã","type":1,"pageTitle":"Update the credential schema","url":"/docs/tutorials/schemas/update#1-define-the-updated-json-schema-for-the-verifiable-credential","content":" Assume that you need to update the credential schema from the previous tutorial. So, there is an existing driving license, and the verifiable credential must additionally include two fields:  bloodType - the blood type of the driverorganDonor - indicates whether or not the person is an organ donor  The blood type on a driver's license is represented using the ABO blood group system, and potentially represented as A+, A-, B+, B-, AB+, AB-, O+, or O-. So, assume that this set of values must be enforced by the schema definition using the following regex:  ^(A|B|AB|O)[+-]?$   At the same time, the organ donor must represent a binary value: true/false, yes/no, depending on the jurisdiction, and it also might be unknown and must be enforced by the schema definition using the enum keyword:   enum: - true - false - yes - no - unknown   Note: As the original credential schema allows additionalProperties to be defined, we assume that two additional claims must get added to the required attributes.  As the change to the credential schema is backward compatible, the next version can be 1.1.0    The JSON Schema changes must be defined as follows:  { &quot;$id&quot;: &quot;https://example.com/driving-license-1.1.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; }, &quot;bloodType&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;pattern&quot;: &quot;^(A|B|AB|O)[+-]?$&quot; }, &quot;donorStatus&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;enum&quot;: [ &quot;true&quot;, &quot;false&quot;, &quot;yes&quot;, &quot;no&quot; ] } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot;, &quot;bloodType&quot;, &quot;donorStatus&quot; ], &quot;additionalProperties&quot;: true }   ","version":"Next","tagName":"h3"},{"title":"2. Update the credential schema record‚Äã","type":1,"pageTitle":"Update the credential schema","url":"/docs/tutorials/schemas/update#2-update-the-credential-schema-record","content":" Open your preferred REST API client, such as Postman or Insomnia, or use the client stub generated based on the OpenAPI specification. In the client, create a new PUT request to either /cloud-agent/schema-registry/schemas/{id} or /cloud-agent/schema-registry/schemas/did-url/{id} endpoint, where id is a locally unique credential schema id, formatted as a URL, they both take same payload. When updating a schema, it is imporant to consider if the schema is HTTP URL resolvable or DID URL resolvable, the id in this endpoint needs to be used accordingly, if schema is HTTP URL resolvable, then only /cloud-agent/schema-registry/schemas/{id} can be used to update it, and same with regards to DID URL  Note that the value of the author field must match the short form of a PRISM DID that has been created using the same agent. An unpublished DID is sufficient. Please refer to the Create DID documentation page for more details on how to create a PRISM DID.  In the request body, create a JSON object:  { &quot;name&quot;: &quot;driving-license&quot;, &quot;version&quot;: &quot;1.1.0&quot;, &quot;description&quot;: &quot;Driving License Schema&quot;, &quot;type&quot;: &quot;https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json&quot;, &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;schema&quot;: { &quot;$id&quot;: &quot;https://example.com/driving-license-1.1.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; }, &quot;bloodType&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;pattern&quot;: &quot;^(A|B|AB|O)[+-]?$&quot; }, &quot;donorStatus&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;enum&quot;: [ &quot;true&quot;, &quot;false&quot;, &quot;yes&quot;, &quot;no&quot; ] } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot;, &quot;bloodType&quot;, &quot;donorStatus&quot; ], &quot;additionalProperties&quot;: true }, &quot;tags&quot;: [ &quot;driving&quot;, &quot;license&quot; ] }   The curl example might be the following:  curl -X 'PUT' \\ 'http://localhost:8080/cloud-agent/schema-registry/schemas/f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea' \\ -H 'accept: application/json' \\ -H &quot;apikey: $API_KEY&quot; \\ -H 'Content-Type: application/json' \\ -d '{ &quot;name&quot;: &quot;driving-license&quot;, &quot;version&quot;: &quot;1.1.0&quot;, &quot;description&quot;: &quot;Driving License Schema&quot;, &quot;type&quot;: &quot;https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json&quot;, &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;schema&quot;: { &quot;$id&quot;: &quot;https://example.com/driving-license-1.1.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; }, &quot;bloodType&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;pattern&quot;: &quot;^(A|B|AB|O)[+-]?$&quot; }, &quot;donorStatus&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;enum&quot;: [ &quot;true&quot;, &quot;false&quot;, &quot;yes&quot;, &quot;no&quot; ] } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot;, &quot;bloodType&quot;, &quot;donorStatus&quot; ], &quot;additionalProperties&quot;: true }, &quot;tags&quot;: [ &quot;driving&quot;, &quot;license&quot; ] }'   ...and response might be the following:  { &quot;guid&quot;: &quot;3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot;, &quot;id&quot;: &quot;f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea&quot;, &quot;longId&quot;: &quot;did:prism:agent/f2bfbf78-8bd6-4cc6-8b39-b3a25e01e8ea?version=1.1.0&quot;, &quot;name&quot;: &quot;driving-license&quot;, &quot;version&quot;: &quot;1.1.0&quot;, &quot;description&quot;: &quot;Driving License Schema&quot;, &quot;type&quot;: &quot;https://w3c-ccg.github.io/vc-json-schemas/schema/2.0/schema.json&quot;, &quot;author&quot;: &quot;did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff&quot;, &quot;authored&quot;: &quot;2023-03-14T14:41:46.713943Z&quot;, &quot;tags&quot;: [ &quot;driving&quot;, &quot;license&quot; ], &quot;schema&quot;: { &quot;$id&quot;: &quot;https://example.com/driving-license-1.1.0&quot;, &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;, &quot;description&quot;: &quot;Driving License&quot;, &quot;type&quot;: &quot;object&quot;, &quot;properties&quot;: { &quot;emailAddress&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;email&quot; }, &quot;givenName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;familyName&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;dateOfIssuance&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;format&quot;: &quot;date-time&quot; }, &quot;drivingLicenseID&quot;: { &quot;type&quot;: &quot;string&quot; }, &quot;drivingClass&quot;: { &quot;type&quot;: &quot;integer&quot; }, &quot;bloodType&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;pattern&quot;: &quot;^(A|B|AB|O)[+-]?$&quot; }, &quot;donorStatus&quot;: { &quot;type&quot;: &quot;string&quot;, &quot;enum&quot;: [ &quot;true&quot;, &quot;false&quot;, &quot;yes&quot;, &quot;no&quot; ] } }, &quot;required&quot;: [ &quot;emailAddress&quot;, &quot;familyName&quot;, &quot;dateOfIssuance&quot;, &quot;drivingLicenseID&quot;, &quot;drivingClass&quot;, &quot;bloodType&quot;, &quot;donorStatus&quot; ], &quot;additionalProperties&quot;: true }, &quot;kind&quot;: &quot;CredentialSchema&quot;, &quot;self&quot;: &quot;/schema-registry/schemas/3f86a73f-5b78-39c7-af77-0c16123fa9c2&quot; }   If you are updating schema that is DID URL resolvable, the response will be in a forom of Prism Envelope, like this:  { &quot;resource&quot;:&quot;eyJhdXRob3IiOiJkaWQ6cHJpc206ZTAyNjZlZThkODBhMDAxNjNlNWY5MjJkYzI1NjdhYjk2MTE3MjRhMDBkYjkyNDIzMzAxMTU0MjgyMTY5ZGZmOSIsImF1dGhvcmVkIjoiMjAyNC0wOS0yNVQxMDozNzoxNi4wOTM2MDlaIiwiZGVzY3JpcHRpb24iOiJEcml2aW5nIExpY2Vuc2UgU2NoZW1hIiwiZ3VpZCI6IjVjOTNmYTAwLWUwM2UtMzlkZC05NDdmLTI2NWI4YzFlYWQ4YiIsImlkIjoiNjhmMGQ4MDctYTcyYi00OTY2LTg1NWItMmIzNGJjMjYzNzAyIiwibmFtZSI6ImRyaXZpbmctbGljZW5zZSIsInJlc29sdXRpb25NZXRob2QiOiJkaWQiLCJzY2hlbWEiOnsiJGlkIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9kcml2aW5nLWxpY2Vuc2UtMS4wLjAiLCIkc2NoZW1hIjoiaHR0cHM6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQvMjAyMC0xMi9zY2hlbWEiLCJhZGRpdGlvbmFsUHJvcGVydGllcyI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJEcml2aW5nIExpY2Vuc2UiLCJwcm9wZXJ0aWVzIjp7ImRhdGVPZklzc3VhbmNlIjp7ImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwiZHJpdmluZ0NsYXNzIjp7InR5cGUiOiJpbnRlZ2VyIn0sImRyaXZpbmdMaWNlbnNlSUQiOnsidHlwZSI6InN0cmluZyJ9LCJlbWFpbEFkZHJlc3MiOnsiZm9ybWF0IjoiZW1haWwiLCJ0eXBlIjoic3RyaW5nIn0sImZhbWlseU5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJnaXZlbk5hbWUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiZW1haWxBZGRyZXNzIiwiZmFtaWx5TmFtZSIsImRhdGVPZklzc3VhbmNlIiwiZHJpdmluZ0xpY2Vuc2VJRCIsImRyaXZpbmdDbGFzcyJdLCJ0eXBlIjoib2JqZWN0In0sInRhZ3MiOlsiZHJpdmluZyIsImxpY2Vuc2UiXSwidHlwZSI6Imh0dHBzOi8vdzNjLWNjZy5naXRodWIuaW8vdmMtanNvbi1zY2hlbWFzL3NjaGVtYS8yLjAvc2NoZW1hLmpzb24iLCJ2ZXJzaW9uIjoiMS4wLjAifQ==&quot;, &quot;url&quot;:&quot;did:prism:e0266ee8d80a00163e5f922dc2567ab9611724a00db92423301154282169dff9?resourceService=agent-base-url&amp;resourcePath=schema-registry/schemas/did-url/5c93fa00-e03e-39dd-947f-265b8c1ead8b?resourceHash=d1557ede168f0f91097933aa2080edaf2f14fddd8a7362a22add97e431c4efe2&quot; }  ","version":"Next","tagName":"h3"},{"title":"Secret Storage Flows","type":0,"sectionRef":"#","url":"/docs/tutorials/secrets/sequence-diagrams","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Secret Storage Flows","url":"/docs/tutorials/secrets/sequence-diagrams#introduction","content":" The current document describes the sequence diagrams of the Identus Platform components: APISIX, Cloud Agent, Wallet, Vault, Tenant. The diagrams are stated from the simplest scenarios to the more complex ones to enforce the security and privacy of the data.  ","version":"Next","tagName":"h2"},{"title":"Sequence Diagrams‚Äã","type":1,"pageTitle":"Secret Storage Flows","url":"/docs/tutorials/secrets/sequence-diagrams#sequence-diagrams","content":" ","version":"Next","tagName":"h2"},{"title":"Phase #1: Basic Flow for Secret Management‚Äã","type":1,"pageTitle":"Secret Storage Flows","url":"/docs/tutorials/secrets/sequence-diagrams#phase-1-basic-flow-for-secret-management","content":" This diagram describes the basic flow for the secret management.  Goal : the Agent stores the secrets using the root token to access the Vault service  Context:  Tenant uses the access token to access the REST API via APISIX.The Agent uses root Vault token to communicate with the Vault.Tenant represented by any REST API client, Web or Mobile application.    ","version":"Next","tagName":"h3"},{"title":"Phase #2: Single Tenant Flow for Secret Management‚Äã","type":1,"pageTitle":"Secret Storage Flows","url":"/docs/tutorials/secrets/sequence-diagrams#phase-2-single-tenant-flow-for-secret-management","content":" This diagram describes the flow for the secret management for the single tenant.  Goal: AppRole authentication method is used to authenticate the Agent to the Vault service.  Context:  The Agent is authenticated to the Vault using the AppRole authentication method.Tenant uses the access token to access the REST API via APISIX.Tenant represented by any REST API client, Web or Mobile application.    ","version":"Next","tagName":"h3"},{"title":"Phase #3: Single Tenant Flow for Secret Management with Wallet‚Äã","type":1,"pageTitle":"Secret Storage Flows","url":"/docs/tutorials/secrets/sequence-diagrams#phase-3-single-tenant-flow-for-secret-management-with-wallet","content":" This diagram describes the flow for the secret management for the single tenant with the Wallet.  Goal: Tenant uses JWT token to authenticate to the Identus Platform.  Context:  The Agent is authenticated to the Vault using the AppRole authentication method.Tenant uses the access token to access the REST API via APISIX (probably this might be removed, we need to decide what to do with the api-token)Tenant represented by any REST API client, Web or Mobile application authenticated to the Identus Platform using JWT token.Tenant uses the Wallet to communicate with the Vault    ","version":"Next","tagName":"h3"},{"title":"Phase #4: Multi Tenant Flow for Secret Management‚Äã","type":1,"pageTitle":"Secret Storage Flows","url":"/docs/tutorials/secrets/sequence-diagrams#phase-4-multi-tenant-flow-for-secret-management","content":" This diagram describes the flow for the secret management for the multi tenant.  //TBD ","version":"Next","tagName":"h3"},{"title":"Secret storage","type":0,"sectionRef":"#","url":"/docs/tutorials/secrets/secret-storage","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#introduction","content":" Secrets are sensitive data that should be stored securely. There are following types of the secrets in the Identus Platform:  seed: a secret used to derive cryptographic keysprivate key: a secret used to sign dataany other entities that contain sensitive data (for instance, credential-definition and the link-secret used by the AnonCreds)  NOTE: public keys are not considered as secrets and can be stored in the same of other storage depending on the needs  The Identus Platform provides a secure storage for secrets. Hashicorp Vault is used as a secret storage service and provides a REST API, Web UI and command client to interact with the service.  NOTE: The Identus Platform uses a single Vault instance for all tenants per environment. Logical data separation is achieved by using Vault namespaces and policies applied to the tenant.  ","version":"Next","tagName":"h2"},{"title":"Terminology‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#terminology","content":" ","version":"Next","tagName":"h2"},{"title":"Vault‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#vault","content":" Vault is a secrets management service developed by HashiCorp. It can be used as the default secret storage for the Identus Platform as well as for authentication and account management.  NOTE: The Identus Platform must not be dependent on the Vault service and must be able to use other services for the same purposes  ","version":"Next","tagName":"h3"},{"title":"Agent‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#agent","content":" The Cloud Agent is a service that provides an APIs to interact with the Identus Platform and use the SSI capabilities.  ","version":"Next","tagName":"h3"},{"title":"Wallet‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#wallet","content":" Logical component of the Agent that holds secrets and provides the logical or physical isolation of the data.  ","version":"Next","tagName":"h3"},{"title":"Technical Overview‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#technical-overview","content":" ","version":"Next","tagName":"h2"},{"title":"The Cloud Agent Logical Isolation‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#the-cloud-agent-logical-isolation","content":" Each instance of the Cloud Agent needs to have access to the secrets but must be isolated from other agents at the same environment. For horizontal scalability the group of agents can be configured to share the same namespace, so they can access the same secrets, but they still need to use different Vault account to authenticate themselves to the Vault service.  ","version":"Next","tagName":"h3"},{"title":"The Cloud Agent Authentication‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#the-cloud-agent-authentication","content":" Each instance of the Cloud Agent needs to authenticate itself to the Vault service. The Vault service uses a token-based authentication mechanism. The Cloud Agent uses a Vault AppRole authentication method to authenticate itself to the Vault service. The token issued to the agent has the expiration time set in the application configuration. After the token expires, the agent needs to re-authenticate itself to the Vault service.  ","version":"Next","tagName":"h3"},{"title":"Wallet Authentication‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#wallet-authentication","content":" Each instance of the Wallet needs to authenticate itself to the Vault service. The Cloud Agent issues the authentication token to the Wallet based on the tenant ID.  ","version":"Next","tagName":"h3"},{"title":"Secrets Engine Configuration‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#secrets-engine-configuration","content":" The Vault service uses a secrets engine to store secrets. KV2 secrets engine is used to store secrets in the Vault service and provides the following features:  secrets are encrypted at restsecrets are encrypted in transitsecrets are versionedsecrets can be deleted, restored and rolled back to a previous versionsecrets are available via REST API, WEB UI, and command clientsecrets are logically separated by tenants  ","version":"Next","tagName":"h3"},{"title":"Single and Multi-Tenant Configuration‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#single-and-multi-tenant-configuration","content":" The Identus Platform supports single and multi-tenant configurations. In the single-tenant configuration, the Cloud Agent uses a single Wallet and a single Vault account to authenticate itself to the Vault service. In the multi-tenant configuration, the Cloud Agent manages multiple Wallets, each Wallet is associated with a single tenant. Multi-tenant configuration is used to achieve logical data separation between tenants, so each Wallet can access only its own secrets. The Wallet is identified by the tenant ID and represented by the account in the Vault service.  The common sequence diagram for the single and multi-tenant configurations is shown below:    ","version":"Next","tagName":"h3"},{"title":"Key Derivation‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#key-derivation","content":" The Identus Platform uses HD key derivation to derive cryptographic keys from the seed. The Wallet is initialized with the seed and uses it to derive cryptographic keys for managed DIDs. Key derivation path is conventional and is defined as follows:  m / wallet-purpose / DID-index / key-purpose / key-index   ","version":"Next","tagName":"h3"},{"title":"Naming Convention‚Äã","type":1,"pageTitle":"Secret storage","url":"/docs/tutorials/secrets/secret-storage#naming-convention","content":" To store the assets in the Vault service each asset is assigned a unique name. The Vault is a key/value store with metadata attached to the key and versioning.  The naming convention for the Vault assets is a matter of the implementation, but for the multi-tenant configuration all the assets of the Wallet must be stored under the path that contains the tenant-id.  For example, the seed can be stored by the following path:  &lt;tenant-id&gt;/seed value=&lt;base64-encoded-value&gt; &lt;metadata&gt;   The private keys for the DID can be stored by the following path:  &lt;tenant-id&gt;/dids/prism/&lt;did-ref&gt;/keys/&lt;key-purpose&gt;/&lt;key-index&gt;/&lt;operation-hash&gt; value=&lt;base64-encoded-value&gt; &lt;metadata&gt;   where:  tenant-id is the tenant ID assigned to the Walletdid-ref is the DID refkey-purpose is the key purpose according to the PRISM DID Method specificationkey-index is the key index. Starts from 0 and grows incrementally after each key rotationoperation-hash is the reference to the update DID document operationbase64-encoded-value is the base64-encoded value of the keymetadata is the key/value metadata attached the key that can be used to store additional information about the key such as seed or key-derivation-path  The keys material of the DID peer can be stored by the following path:  &lt;tenant-id&gt;/dids/peer/&lt;did-ref&gt;/keys/&lt;key-purpose&gt; value=&lt;base64-encoded-value&gt; &lt;metadata&gt;   Links:  PRISM DID Method SpecificationVault Secrets Engine APIVault NamespacesHD Key Derivation ADRVault AppRole AuthenticationVault Token AuthenticationVault KV Secrets EngineVault Entities ","version":"Next","tagName":"h3"},{"title":"Creating the Cloud Agent wallet seed","type":0,"sectionRef":"#","url":"/docs/tutorials/secrets/seed-generation","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Creating the Cloud Agent wallet seed","url":"/docs/tutorials/secrets/seed-generation#introduction","content":" The Cloud Agent utilizes a hierarchical-deterministic key derivation algorithm for managing PRISM DIDs, which follows the BIP32 standard. In order to generate the required keys, BIP32 uses a master binary seed serving as the root of the derivation tree, and all other keys are derived from this seed. Given that the Cloud Agent employs BIP32, it expects a 64-byte binary seed as input. Various methods exist for generating a byte sequence, each serving different purposes.  The Cloud Agent does not have any opinion on how the seed should be generated as long as a valid hex string is provided. However, it is strongly recommended to use high entropy for generating the master seed. The Cloud Agent allows customizing the default wallet seed by using the environment variable DEFAULT_WALLET_SEED. Other wallet seeds can also be configured when creating a wallet using REST API. The variable must contain a 64-byte value encoded in hexadecimal format.  ","version":"Next","tagName":"h2"},{"title":"1. Static seed‚Äã","type":1,"pageTitle":"Creating the Cloud Agent wallet seed","url":"/docs/tutorials/secrets/seed-generation#1-static-seed","content":" The Cloud Agent expects any valid 64-byte input for a wallet seed. Any static 128-character hexadecimal string can be used to simplify the testing.  For example  # Any of these are valid DEFAULT_WALLET_SEED=00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 DEFAULT_WALLET_SEED=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111 DEFAULT_WALLET_SEED=0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a   Note: Do not use method this in production.  ","version":"Next","tagName":"h3"},{"title":"2. Simple dynamic seed‚Äã","type":1,"pageTitle":"Creating the Cloud Agent wallet seed","url":"/docs/tutorials/secrets/seed-generation#2-simple-dynamic-seed","content":" Users have the option to create a random hexadecimal string of a desired length using scripting languages like Bash or Python. An example of a Bash script is shown below.  DEFAULT_WALLET_SEED=$(tr -dc a-f0-9 &lt;/dev/urandom | head -c 128 ; echo '')   This approach is suitable for basic testing scenarios requiring dynamically generated seeds. However, for production use, it is advisable to employ a reputable implementation of BIP39 with a high level of entropy. (Refer to the details below for further information.)  ","version":"Next","tagName":"h3"},{"title":"3. Use BIP39 implementation to generate a seed (recommended)‚Äã","type":1,"pageTitle":"Creating the Cloud Agent wallet seed","url":"/docs/tutorials/secrets/seed-generation#3-use-bip39-implementation-to-generate-a-seed-recommended","content":" The BIP39protocol can be utilized to generate a BIP32 master seed, offering a human-friendly approach to seed management. Instead of noting down a seemingly random hexadecimal string, users can write down their mnemonic phrase, making it more convenient to keep track of them.  By using BIP39, users have options to choose a mnemonic phrase length as well as a passphrase. There are many tools for generating a BIP39 seed including but not limited to:  BIP39 (use the BIP39 seed field which provides a 128-chars hex string)BIP39 - implementations section also provides a list of implementations ","version":"Next","tagName":"h3"},{"title":"Managing VDR entries","type":0,"sectionRef":"#","url":"/docs/tutorials/vdr/manage","content":"","keywords":"","version":"Next"},{"title":"Roles‚Äã","type":1,"pageTitle":"Managing VDR entries","url":"/docs/tutorials/vdr/manage#roles","content":" The data owner - is responsible for managing the VDR entries and their lifecycle.  Overview  In this example, we will store data using a database driver to enable easy setup and testing.  ","version":"Next","tagName":"h2"},{"title":"Endpoints‚Äã","type":1,"pageTitle":"Managing VDR entries","url":"/docs/tutorials/vdr/manage#endpoints","content":" The example uses the following endpoints  Endpoint\tDescription\tRoleGET /vdr/entires\tResolve the data using VDR URI\tAnyone POST /vdr/entries\tCreate a new VDR entry\tData owner DELETE /vdr/entries\tDelete the VDR entry\tData owner  ","version":"Next","tagName":"h2"},{"title":"1. Create a sample binary data to store‚Äã","type":1,"pageTitle":"Managing VDR entries","url":"/docs/tutorials/vdr/manage#1-create-a-sample-binary-data-to-store","content":" echo -ne '\\x01\\x02\\x03\\x04' &gt; sample_in.bin   We should have a file named sample_in.bin containing 4 bytes  ","version":"Next","tagName":"h3"},{"title":"2. Create a new VDR entry with sample data‚Äã","type":1,"pageTitle":"Managing VDR entries","url":"/docs/tutorials/vdr/manage#2-create-a-new-vdr-entry-with-sample-data","content":" curl -X POST &quot;http://localhost:8080/cloud-agent/vdr/entries?drid=database&quot; \\ -H &quot;Content-Type: application/octet-stream&quot; \\ --data-binary @sample_in.bin   The response should look something like  { &quot;url&quot;:&quot;vdr://?drf=memory&amp;drid=memory&amp;drv=0.1.0&amp;m=0#d63bdd21-0347-4caf-a255-0cca7c2851fe&quot; }   The URL is the locator for the VDR entry. If referenced in the SSI protocol, anyone should be able to resolve this data. In this example, we are using only a database driver, so the data is resolvable only within the same agent instance.  ","version":"Next","tagName":"h3"},{"title":"3. Resolve the data using VDR URL‚Äã","type":1,"pageTitle":"Managing VDR entries","url":"/docs/tutorials/vdr/manage#3-resolve-the-data-using-vdr-url","content":" Take the URL from previous step and run this command to resolve the URL.  curl -X GET &quot;http://localhost:8080/cloud-agent/vdr/entries?url=&lt;ENCODED_VDR_URL&gt;&quot; &gt; sample_out.bin   Remember to encode the URL using percent encoding to escape any reserved characters in the URL syntax. If executed successfully, the response status should be 200, with the response body saved to a file named sample_out.bin.  ","version":"Next","tagName":"h3"},{"title":"4. Compare the VDR entry and the input‚Äã","type":1,"pageTitle":"Managing VDR entries","url":"/docs/tutorials/vdr/manage#4-compare-the-vdr-entry-and-the-input","content":" diff sample_in.bin sample_out.bin   The output of the diff command should be empty, as the VDR entry is exactly the same as the input data.  ","version":"Next","tagName":"h3"},{"title":"5. Deactivate the VDR entry‚Äã","type":1,"pageTitle":"Managing VDR entries","url":"/docs/tutorials/vdr/manage#5-deactivate-the-vdr-entry","content":" curl -X DELETE &quot;http://localhost:8080/cloud-agent/vdr/entries?url=&lt;ENCODED_VDR_URL&gt;&quot;   Similar to resolving the data, we now change the HTTP method to DELETE to deactivate the VDR entry. The response status should be 200, indicating a successful operation.  After trying to resolve the VDR entry in step 3, the response should be  { &quot;status&quot;:404, &quot;type&quot;:&quot;error:VdrServiceError:VdrEntryNotFound&quot;, &quot;title&quot;:&quot;Vdr Entry Not Found&quot;, &quot;detail&quot;:&quot;The data could not be found from a provided URL&quot;, &quot;instance&quot;:&quot;error:instance:b70984a1-71f5-409f-9afc-3b8bada54445&quot; }   indicating the resource is no longer available for resolution. ","version":"Next","tagName":"h3"},{"title":"Webhook Notifications","type":0,"sectionRef":"#","url":"/docs/tutorials/webhooks/webhook","content":"","keywords":"","version":"Next"},{"title":"Introduction‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#introduction","content":" Welcome to the tutorial on webhook notifications in the Cloud Agent. In this tutorial, we will explore how webhook notifications can enhance your experience with the Cloud Agent by providing real-time updates on events. By leveraging webhook notifications, you can stay informed about important changes happening within the agent.  ","version":"Next","tagName":"h2"},{"title":"Understanding Webhook Notifications‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#understanding-webhook-notifications","content":" ","version":"Next","tagName":"h2"},{"title":"What are Webhooks?‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#what-are-webhooks","content":" Webhooks enable real-time communication between applications by sending HTTP requests containing event data to specified endpoints (webhook URLs) when events occur. They establish a direct communication channel, allowing applications to receive instant updates and respond in a timely manner, promoting efficient integration between event-driven systems.  ","version":"Next","tagName":"h3"},{"title":"Purpose of Webhook Notifications in the Cloud Agent‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#purpose-of-webhook-notifications-in-the-cloud-agent","content":" Webhook notifications in the CLoud Agent serve as a vital feature, enabling you to receive timely updates on various events occurring within the agent. Webhooks allow you to receive HTTP requests containing event details at a specified endpoint (webhook URL). These events are specifically related to the execution of the Connect, Issue, and Presentation flows. Webhook notifications will be sent each time there is a state change during the execution of these protocols.  By leveraging webhooks, you can integrate the Cloud Agent seamlessly into your applications and systems. You can track and monitor the progress of the main flows, receiving timely updates about changes and events.  ","version":"Next","tagName":"h3"},{"title":"Configuring the Webhook Feature‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#configuring-the-webhook-feature","content":" ","version":"Next","tagName":"h2"},{"title":"Enabling the Webhook Feature‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#enabling-the-webhook-feature","content":" There are two kinds of webhook notifications: global webhooks and wallet webhooks. Global webhooks capture all events that happen on the Cloud Agent across all wallets, whereas wallet webhooks only capture events that are specific to assets within a particular wallet.  Enable global webhook using environment variables‚Äã  The Cloud Agent uses the following environment variables to manage global webhook notifications:  Name\tDescription\tDefaultGLOBAL_WEBHOOK_URL\tThe webhook endpoint URL where the notifications will be sent\tnull GLOBAL_WEBHOOK_API_KEY\tThe optional API key (bearer token) to use as the Authorization header\tnull  Enable wallet webhook for default wallet using environment variables‚Äã  In a multi-tenant scenario, the Cloud Agent can optionally create a default wallet to simplify the development and deployment process. The webhook configuration for this default wallet can be defined using environment variables. After the default wallet is created, its webhook settings are stored in the system and are no longer influenced by these environment variables.  Name\tDescription\tDefaultDEFAULT_WALLET_ENABLED\tAutomatically create default on the Cloud Agent startup\ttrue DEFAULT_WALLET_WEBHOOK_URL\tThe webhook endpoint URL where the notifications will be sent\tnull DEFAULT_WALLET_WEBHOOK_API_KEY\tThe optional API key (bearer token) to use as the Authorization header\tnull  Enable wallet hook using REST API‚Äã  In a multi-tenant scenario, there is an option to configure wallet webhook parameters using a REST API, which offers more flexibility. For each individual wallet, users can create a new webhook by making a POST request to /events/webhooks, which in turn creates a new webhook resource specific to their wallet.  curl --location --request POST 'http://localhost:8080/cloud-agent/events/webhooks' \\ --header 'Content-Type: application/json' \\ --header 'Accept: application/json' \\ --header &quot;apiKey: $API_KEY&quot; \\ --data-raw '{ &quot;url&quot;: &quot;http://localhost:9095&quot; }'   Response Example:  { &quot;id&quot;: &quot;e9569dd0-bffa-4be4-94fe-f5025a79029a&quot;, &quot;url&quot;: &quot;http://localhost:9095&quot;, &quot;customHeaders&quot;: {}, &quot;createdAt&quot;: &quot;2023-09-12T08:39:03.871339Z&quot; }   ","version":"Next","tagName":"h3"},{"title":"Securing the Webhook Endpoint‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#securing-the-webhook-endpoint","content":" It is essential to secure the webhook endpoint to protect the integrity and confidentiality of the event data. Consider the following best practices when securing your webhook endpoint:  Use HTTPS to encrypt communication between the Cloud Agent and the webhook endpoint.Implement authentication mechanisms (e.g., API keys, tokens) to verify the authenticity of incoming requests.Validate and sanitize incoming webhook requests to mitigate potential security risks.  One of the authorization mechanism for the Cloud Agent's webhook notifications is the bearer token. If configured, the token will be included in the Authorization header of the HTTP request sent by the agent to the webhook endpoint. You can configure this bearer token by setting the value of theGLOBAL_WEBHOOK_API_KEY or DEFAULT_WALLET_WEBHOOK_API_KEY environment variable.  An alternative approach is to make use of the customHeaders property within the REST API for configuring webhooks. This option offers increased flexibility when custom or multiple headers are needed.  ","version":"Next","tagName":"h3"},{"title":"Event Format and Types‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#event-format-and-types","content":" ","version":"Next","tagName":"h2"},{"title":"Event Format‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#event-format","content":" Webhook notifications from the Cloud Agent are sent as JSON payloads in the HTTP requests.  The event format is consistent across all events. Each event follows a common structure, while the 'data' field within the event payload contains information specific to the type of event. Here is an example of the JSON payload format:  { &quot;id&quot;: &quot;cb8d4e96-30f0-4892-863f-44d49d634211&quot;, &quot;ts&quot;: &quot;2023-07-06T12:01:19.769427Z&quot;, &quot;type&quot;: &quot;xxxx&quot;, &quot;data&quot;: { // Event-specific data goes here }, &quot;walletId&quot;: &quot;00000000-0000-0000-0000-000000000000&quot; }   This event format ensures consistency and allows you to handle webhook notifications uniformly while easily extracting the relevant data specific to each event type from the data field.  Here is a complete example of a webhook notification event related to a connection flow state change (invitation generated):  { &quot;id&quot;: &quot;cb8d4e96-30f0-4892-863f-44d49d634211&quot;, &quot;ts&quot;: &quot;2023-07-06T12:01:19.769427Z&quot;, &quot;type&quot;: &quot;ConnectionUpdated&quot;, &quot;data&quot;: { &quot;connectionId&quot;: &quot;c10787cf-99bb-47f4-99bb-1fdcca32b673&quot;, &quot;label&quot;: &quot;Connect with Alice&quot;, &quot;role&quot;: &quot;Inviter&quot;, &quot;state&quot;: &quot;InvitationGenerated&quot;, &quot;invitation&quot;: { &quot;id&quot;: &quot;c10787cf-99bb-47f4-99bb-1fdcca32b673&quot;, &quot;type&quot;: &quot;https://didcomm.org/out-of-band/2.0/invitation&quot;, &quot;from&quot;: &quot;did:peer:2.Ez6LS...jIiXX0&quot;, &quot;invitationUrl&quot;: &quot;https://my.domain.com/path?_oob=eyJpZCI6...bXX19&quot; }, &quot;createdAt&quot;: &quot;2023-07-06T12:01:19.760126Z&quot;, &quot;self&quot;: &quot;c10787cf-99bb-47f4-99bb-1fdcca32b673&quot;, &quot;kind&quot;: &quot;Connection&quot; }, &quot;walletId&quot;: &quot;00000000-0000-0000-0000-000000000000&quot; }   ","version":"Next","tagName":"h3"},{"title":"Common Event Types‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#common-event-types","content":" The Cloud Agent sends webhook notifications for events related to protocol state changes in the Connect, Issue,Presentation flows, and also DID publicationstate changes. These events allow you to track the progress and updates within these flows in real-time.  The id field of the common event structure is the unique identifier (UUID) of the event and is randomly generated at event creation time.  The ts field contains the timestamp (date + time) at which the event was created.  The walletId field contains information about the wallet from which the event originates.  The type field indicates to which flow/process the received event is related, and hence the type of JSON payload that can be expected in the inner data field. Possible values are:  Value\tDescriptionConnectionUpdated\tAn update in the connection flow state IssueCredentialRecordUpdated\tAn update in the VC issuance flow state PresentationUpdated\tAn update in the VC presentation flow state DIDStatusUpdated\tAn update in the DID publication state  State change notifications that you can expect to receive through webhook notifications include:  Connection State Change: Notifies about state changes in the connection flow, such as InvitationGenerated,ConnectionRequestSent, ConnectionResponseReceived, etc. Please refer to the state field of the connection resourcefor an exhaustive list of states.Credential State Change: Indicates changes in the credential issuance flow, such as OfferSent, RequestReceived,CredentialSent, etc. Please refer to the protocolState field of the credential resourcefor an exhaustive list of states.Presentation State Change: Notifies about changes in the presentation flow, such as RequestReceived,PresentationGenerated, PresentationVerified, etc. Please refer to the status field of the presentation resource for an exhaustive list of states.DID State Change: Notifies about DID-related state changes. Currently, only the Published DID publication state event will be notified.  ","version":"Next","tagName":"h3"},{"title":"Processing Webhook Notifications‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#processing-webhook-notifications","content":" ","version":"Next","tagName":"h2"},{"title":"Handling Incoming Webhook Requests‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#handling-incoming-webhook-requests","content":" To handle incoming webhook notifications from the Cloud Agent in your application, follow these general steps:  Receive the HTTP request at your specified webhook endpoint.Parse the JSON payload of the request to extract the event details.Process the event data according to your application's requirements.Send a response back to acknowledge the successful receipt of the webhook notification. For a successful reception, the response status code should be &gt;= 200 and &lt; 300. Any other response status code will lead to a new attempt from the Cloud Agent.  ","version":"Next","tagName":"h3"},{"title":"Error Handling and Retry Mechanisms‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#error-handling-and-retry-mechanisms","content":" When working with webhook notifications in the Cloud Agent, it is important to consider error handling and retry mechanisms. In case of failed webhook notifications or errors, the Cloud Agent employs an automatic retry mechanism to ensure delivery. The agent will attempt to send the webhook notification up to three times, with a five-second interval between each attempt. Please note that the number of retries and the interval duration are currently not configurable in the Cloud Agent.  By default, this retry mechanism provides a reasonable level of reliability for delivering webhook notifications, allowing for temporary network issues or intermittent failures.  ","version":"Next","tagName":"h3"},{"title":"A basic Webhook implementation for logging requests‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#a-basic-webhook-implementation-for-logging-requests","content":" In the following example, we will demonstrate a simple Python code snippet that sets up a webhook endpoint and logs incoming HTTP requests to the console. This basic implementation can serve as a starting point for building more advanced webhook systems.  In the provided Python code snippet, the port on which the webhook listener will listen for incoming requests should be passed as a command-line parameter. This allows flexibility in starting multiple webhooks in parallel, which is useful when testing multiple locally running agents, e.g. for a holder, an issuer, and/or a verifier.  #!/usr/bin/env python3 &quot;&quot;&quot; Very simple HTTP server in python for logging requests Usage:: ./server.py [&lt;port&gt;] &quot;&quot;&quot; import logging import json from http.server import BaseHTTPRequestHandler, HTTPServer grey = &quot;\\x1b[38;20m&quot; yellow = &quot;\\x1b[33;20m&quot; green = &quot;\\x1b[32;20m&quot; red = &quot;\\x1b[31;20m&quot; bold_red = &quot;\\x1b[31;1m&quot; reset = &quot;\\x1b[0m&quot; consoleHandler = logging.StreamHandler() formatter = logging.Formatter(f&quot;&quot;&quot;%(asctime)s - %(levelname)s - %(name)s --------------------------------------- request --------------------------------------- {green}%(method)s %(path)s{reset} %(headers)s {yellow}%(data)s{reset} ----------------------------------- &quot;&quot;&quot; ) consoleHandler.setFormatter(formatter) consoleHandler.setLevel(logging.INFO) logger = logging.getLogger('http-request') logger.setLevel(logging.INFO) logger.addHandler(consoleHandler) class S(BaseHTTPRequestHandler): def _set_response(self): self.send_response(200) self.send_header('Content-type', 'text/html') self.end_headers() def do_GET(self): logging.info(&quot;GET request,\\nPath: %s\\nHeaders:\\n%s\\n&quot;, str(self.path), str(self.headers)) self._set_response() self.wfile.write(&quot;GET request for {}&quot;.format(self.path).encode('utf-8')) def do_POST(self): content_length = int(self.headers['Content-Length']) # &lt;--- Gets the size of data post_data = self.rfile.read(content_length) # &lt;--- Gets the data itself json_obj = json.loads(post_data.decode('utf-8')) json_data = json.dumps(json_obj, indent=2) logger.info(msg=&quot;Request content&quot;, extra={ 'method': &quot;POST&quot;, 'path': str(self.path), 'headers': str(self.headers), 'data': json_data }) self._set_response() self.wfile.write(&quot;POST request for {}&quot;.format(self.path).encode('utf-8')) def log_message(self, format, *args): pass def run(server_class=HTTPServer, handler_class=S, port=80): server_address = ('', port) httpd = server_class(server_address, handler_class) try: httpd.serve_forever() except KeyboardInterrupt: pass httpd.server_close() if __name__ == '__main__': from sys import argv if len(argv) == 2: run(port=int(argv[1])) else: run()   ","version":"Next","tagName":"h3"},{"title":"Conclusion‚Äã","type":1,"pageTitle":"Webhook Notifications","url":"/docs/tutorials/webhooks/webhook#conclusion","content":" Congratulations! You've learned about webhook notifications in the Cloud Agent. By leveraging this feature, you can receive real-time updates on events happening within the agent, enabling you to integrate the Cloud Agent seamlessly into your applications. Remember to secure your webhook endpoint and handle webhook notifications effectively to maximize the benefits of this feature.  Start integrating webhook notifications into your Cloud Agent workflow and unlock the power of real-time event updates!  If you have any further questions or need assistance, don't hesitate to reach out to the Identus support team or refer to the official documentation for more details. ","version":"Next","tagName":"h2"}],"options":{"id":"default"}}