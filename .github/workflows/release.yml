name: Release docs image

on:
  workflow_call:
  workflow_dispatch:
    inputs:
      release-branch:
        description: "Branch to release from"
        required: false
        default: "main"

jobs:
  release:
    env:
      GITHUB_ACTOR: "hyperledger-bot"
      GITHUB_ACTOR_EMAIL: "hyperledger-bot@hyperledger.org"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.inputs.release-branch }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - uses: crazy-max/ghaction-import-gpg@v6
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.HYP_BOT_GPG_PRIVATE }}
          passphrase: ${{ secrets.HYP_BOT_GPG_PASSWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_config_global: true
          git_tag_gpgsign: true
          git_push_gpgsign: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_ACTOR }}
          password: ${{ env.GITHUB_TOKEN }}

      - name: Build ADRs
        run: |
          cd ./identus-cloud-agent
          npm install -g log4brains
          log4brains build --out ../static/adrs --basePath /adrs
          touch ../static/adrs/.nojekyll

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Release
        env:
          GIT_AUTHOR_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_COMMITTER_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_AUTHOR_NAME: ${{ steps.import_gpg.outputs.name }}
          GIT_COMMITTER_NAME: ${{ steps.import_gpg.outputs.name }}
          GITHUB_TOKEN: ${{ secrets.IDENTUS_CI }}
        run: |
          npm install
          npx semantic-release --debug
