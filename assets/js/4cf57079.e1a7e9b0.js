"use strict";(self.webpackChunkidentus_documentation_portal=self.webpackChunkidentus_documentation_portal||[]).push([[10374],{59562:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var n=i(74848),r=i(28453);const t={},o="DID PRISM Resolver",d={id:"identus/did-prism-resolver/did-prism-resolver",title:"DID PRISM Resolver",description:"The did:prism method has multiple resolver implementations in different programming languages, that are totally independent.",source:"@site/documentation/home/identus/did-prism-resolver/did-prism-resolver.md",sourceDirName:"identus/did-prism-resolver",slug:"/identus/did-prism-resolver/",permalink:"/docs/home/identus/did-prism-resolver/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Overview",permalink:"/docs/home/identus/did-prism-resolver/overview"},next:{title:"DID PRISM Resolver in SDKs",permalink:"/docs/home/identus/did-prism-resolver/did-prism-resolver-sdk"}},a={},l=[{value:"Cloud Agent and Prism Node",id:"cloud-agent-and-prism-node",level:2},{value:"Universal Resolver",id:"universal-resolver",level:2},{value:"SDKs",id:"sdks",level:2},{value:"Identus Community Project",id:"identus-community-project",level:2},{value:"Blocktrust Node",id:"blocktrust-node",level:3},{value:"Neoprism",id:"neoprism",level:3},{value:"PRISM Indexer",id:"prism-indexer",level:3},{value:"Prism-VDR",id:"prism-vdr",level:4},{value:"Blockfrost &amp; PRISM",id:"blockfrost--prism",level:4},{value:"scala-did",id:"scala-did",level:4}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"did-prism-resolver",children:"DID PRISM Resolver"}),"\n",(0,n.jsxs)(s.p,{children:["The did",":prism"," method has multiple resolver implementations in different programming languages, that are totally independent."]}),"\n",(0,n.jsxs)(s.p,{children:["Officially according to the specs the ",(0,n.jsx)(s.code,{children:"did:prism"})," method only existed in the Cardano ",(0,n.jsx)(s.code,{children:"mainnet"})," network.\nBut for testing purposes, many of the users are using the Cardano ",(0,n.jsx)(s.code,{children:"preprod"})," network."]}),"\n",(0,n.jsx)(s.h2,{id:"cloud-agent-and-prism-node",children:"Cloud Agent and Prism Node"}),"\n",(0,n.jsxs)(s.p,{children:["The Cloud Agent together with the Prism Node provides a comprehensive solution for managing and resolving DIDs. The Prism Node is a microservice that exposes gRPC endpoints and implements ",(0,n.jsx)(s.code,{children:"did:prism"})," events, allowing users to create, update, deactivate, and resolve DIDs in a secure and privacy-preserving manner.\nThis solution is designed for the enterprise use case and requires setting up the full Cardano stack together with the Prism Node."]}),"\n",(0,n.jsx)(s.h2,{id:"universal-resolver",children:"Universal Resolver"}),"\n",(0,n.jsxs)(s.p,{children:["The Universal Resolver is a service that provides a unified interface for resolving DIDs across different DID methods.\nIt allows users to resolve DIDs from various DID methods, including PRISM, and retrieve their associated DID Documents.\nThe ",(0,n.jsx)(s.code,{children:"did:prism"})," has been integrated into the Universal Resolver, enabling users to resolve PRISM DIDs using the same interface as other DID methods."]}),"\n",(0,n.jsxs)(s.p,{children:["According to the ",(0,n.jsx)(s.code,{children:"did:prism"})," specification, the Universal Resolver resolves PRISM DIDs published on the Cardano mainnet."]}),"\n",(0,n.jsxs)(s.p,{children:["The Universal Resolver endpoint for PRISM DIDs is:\n",(0,n.jsx)(s.a,{href:"https://dev.uniresolver.io/",children:"https://dev.uniresolver.io/"})]}),"\n",(0,n.jsx)(s.h2,{id:"sdks",children:"SDKs"}),"\n",(0,n.jsxs)(s.p,{children:["Each SDK provides a way to resolve DIDs and retrieve their associated DID Documents. The SDKs are designed to be easy to use and integrate into existing applications, allowing developers to quickly add DID resolution capabilities to their projects.\nEach SDK implements the ",(0,n.jsx)(s.code,{children:"DIDResolver"})," interface via a URL. In order to configure the DIDResolver the corresponding endpoint should be set in the SDK configuration."]}),"\n",(0,n.jsx)(s.h2,{id:"identus-community-project",children:"Identus Community Project"}),"\n",(0,n.jsx)(s.h3,{id:"blocktrust-node",children:"Blocktrust Node"}),"\n",(0,n.jsx)(s.p,{children:"The Blocktrust Node is a community alternative to the Prism Node, providing similar functionality for resolving DIDs and managing DID Documents.\nThe publicly available Blocktrust Node can be used to resolve PRISM DIDs and retrieve their associated DID Documents."}),"\n",(0,n.jsxs)(s.p,{children:["The list of the Blocktrust endpoints for the PRISM DIDs is:\n",(0,n.jsx)(s.a,{href:"https://statistics.blocktrust.dev/resolve",children:"https://statistics.blocktrust.dev/resolve"})]}),"\n",(0,n.jsx)(s.h3,{id:"neoprism",children:"Neoprism"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.a,{href:"https://github.com/patextreme/neoprism",children:"Neoprism"})," is a community alternative to the Prism Node, providing similar functionality for resolving DIDs and managing DID Documents.\nThe publicly available Neoprism can be used to resolve PRISM DIDs and retrieve their associated DID Documents."]}),"\n",(0,n.jsxs)(s.p,{children:["The instance of the Neoprism for the PRISM DIDs published in the Cardano mainnet is:\n",(0,n.jsx)(s.a,{href:"https://neoprism.patlo.dev/resolver",children:"https://neoprism.patlo.dev/resolver"})]}),"\n",(0,n.jsx)(s.h3,{id:"prism-indexer",children:"PRISM Indexer"}),"\n",(0,n.jsxs)(s.p,{children:["The PRISM Indexer is a community project that uses the Blockfrost API to fetch all relative transactions and metadata from the Cardano Blockchain relative to ",(0,n.jsx)(s.code,{children:"did:prism"})," protocol.\nIt them passes the method data into PRISM events and indexes them by DID."]}),"\n",(0,n.jsxs)(s.p,{children:["After having the sequence of events relative to each ",(0,n.jsx)(s.code,{children:"did:prism"})," the indexer is capable of validate the PRISM Events and build the corresponding DID Document.\nThis validation can also be performed locally on the end-user's device. Requiring zero trust on Indexer since from the PRISM events you can verify the authenticity from the SSI itself."]}),"\n",(0,n.jsxs)(s.p,{children:["The project is distributed as a Docker image and available in ",(0,n.jsx)(s.a,{href:"https://hub.docker.com/repository/docker/fmgp/prism-indexer/general",children:"fmgp's Docker Hub"}),".\nThis image store the status off all DIDs in the file system. But the image is light enough that is capable of running constantly in GitHub actions."]}),"\n",(0,n.jsxs)(s.p,{children:["The code is also distributed as a library in ",(0,n.jsx)(s.a,{href:"https://mvnrepository.com/repos/central",children:"Maven Central repository"})," and it's capable to run on the JVM and JS Environments."]}),"\n",(0,n.jsx)(s.h4,{id:"prism-vdr",children:"Prism-VDR"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.a,{href:"https://github.com/FabioPinheiro/prism-vdr",children:"prism-vdr"})," is alternative PRISM DID indexer that stores all the PRISM DIDs events and their associated DID Documents in the GitHub repository.\nThe PRISM-VDR supports the following Cardano networks:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"https://github.com/FabioPinheiro/prism-vdr/tree/main/mainnet/diddoc",children:[(0,n.jsx)(s.code,{children:"mainnet"})," network"]})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"https://github.com/FabioPinheiro/prism-vdr/tree/main/preprod/diddoc",children:[(0,n.jsx)(s.code,{children:"preprod"})," network"]})}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"blockfrost--prism",children:"Blockfrost & PRISM"}),"\n",(0,n.jsxs)(s.p,{children:["Blockfrost is also constantly running the PRISM Indexer for all the Cardano networks and uploading the status to a ",(0,n.jsx)(s.a,{href:"https://github.com/blockfrost/prism-vdr",children:"Blockfrost's GitHub repository"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"https://github.com/blockfrost/prism-vdr/tree/main/mainnet/diddoc",children:[(0,n.jsx)(s.code,{children:"mainnet"})," network"]})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"https://github.com/blockfrost/prism-vdr/tree/main/preprod/diddoc",children:[(0,n.jsx)(s.code,{children:"preprod"})," network"]})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsxs)(s.a,{href:"https://github.com/blockfrost/prism-vdr/tree/main/preview/diddoc",children:[(0,n.jsx)(s.code,{children:"preview"})," network"]})}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Blockfrost is also developing a experimental API for resolving and managing the PRISM DIDs."}),"\n",(0,n.jsx)(s.h4,{id:"scala-did",children:"scala-did"}),"\n",(0,n.jsx)(s.p,{children:"Its a tool using the same library as PRISM Indexer but running the in JS Environment.\nIts fetchs the all PRISM events from one DID from the Prism-VDR Github repos and resolves into a DID Document."}),"\n",(0,n.jsxs)(s.p,{children:["A instance of this tool can be found in ",(0,n.jsx)(s.a,{href:"https://did.fmgp.app/#/resolver/did:prism:00592a141a4c2bcb7a6aa691750511e2e9b048231820125e15ab70b12a210aae",children:"did.fmgp.app"}),".\nIts capable of resolving some DID methods including the ",(0,n.jsx)(s.code,{children:"did:prism"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>d});var n=i(96540);const r={},t=n.createContext(r);function o(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);