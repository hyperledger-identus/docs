"use strict";(self.webpackChunkidentus_documentation_portal=self.webpackChunkidentus_documentation_portal||[]).push([[9704],{19147:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=t(74848),i=t(28453);const r={},a="Connectionless Presentation",o={id:"examples/connectionless/ConnectionlessPresentation",title:"Connectionless Presentation",description:"Description",source:"@site/sdk-ts/docs/examples/connectionless/ConnectionlessPresentation.md",sourceDirName:"examples/connectionless",slug:"/examples/connectionless/ConnectionlessPresentation",permalink:"/docs/sdk-ts/examples/connectionless/ConnectionlessPresentation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialsSidebar",previous:{title:"Credential Offer",permalink:"/docs/sdk-ts/examples/connectionless/ConnectionlessOffer"},next:{title:"SDK Package Release",permalink:"/docs/sdk-ts/decisions/sdk-package-release"}},l={},d=[{value:"Description",id:"description",level:2},{value:"For Issuers",id:"for-issuers",level:2},{value:"Using the Cloud Agent",id:"using-the-cloud-agent",level:3},{value:"Using TS SDK",id:"using-ts-sdk",level:3},{value:"For Holders",id:"for-holders",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",mermaid:"mermaid",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"connectionless-presentation",children:"Connectionless Presentation"}),"\n",(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["A Connectionless PresentationRequest is an Out of Band Invitation with a PresentationRequest Attachment.\nThis should be a URI with a single query parameter ",(0,s.jsx)(n.code,{children:"_oob"}),", which is an encoded JSON.\nIt should look similar to:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"https://my.domain.com/path?_oob=eyJpZCI6IjcxYTE2ZGEzLTk3ZmYtNDYwYS1iNWY5LTI1YTYxZmU4NjRmNCIsInR5cGUiOiJodHRwczovL2RpZGNvbW0ub3JnL291dC1vZi1iYW5kLzIuMC9pbnZpdGF0aW9uIiwiZnJvbSI6ImRpZDpwZWVyOjIuRXo2TFN0MkMxeHZpQjduRkVVSEpBeVdxdkRGMnh5SnRRSFdhZlFNeG15MVN5U29INi5WejZNa2dNQ2hxWlZRNDdHODhFQlk2UVpvUGJCc0NxQnlodHlmQTNUUXB5QktuN0VqLlNleUowSWpvaVpHMGlMQ0p6SWpwN0luVnlhU0k2SW1oMGRIQTZMeTh4T1RJdU1UWTRMakV1TkRRNk9EQXdNQzlrYVdSamIyMXRJaXdpY2lJNlcxMHNJbUVpT2xzaVpHbGtZMjl0YlM5Mk1pSmRmWDAiLCJib2R5Ijp7ImdvYWxfY29kZSI6InByZXNlbnQtdnAiLCJnb2FsIjoiUmVxdWVzdCBwcm9vZiBvZiB2YWNjaW5hdGlvbiBpbmZvcm1hdGlvbiIsImFjY2VwdCI6W119LCJhdHRhY2htZW50cyI6W3siaWQiOiJjOGMxY2E3Zi05YjJjLTQwOGQtODZkMi0zNWJiYmU2ZTMwNjgiLCJtZWRpYV90eXBlIjoiYXBwbGljYXRpb24vanNvbiIsImRhdGEiOnsianNvbiI6eyJpZCI6Ijc4ZTc5NTFhLWZhOTYtNDg2Mi1hYmVkLWFmYTBhZWQyMzgzNCIsInR5cGUiOiJodHRwczovL2RpZGNvbW0uYXRhbGFwcmlzbS5pby9wcmVzZW50LXByb29mLzMuMC9yZXF1ZXN0LXByZXNlbnRhdGlvbiIsImJvZHkiOnsiZ29hbF9jb2RlIjoiUmVxdWVzdCBQcm9vZiBQcmVzZW50YXRpb24iLCJ3aWxsX2NvbmZpcm0iOmZhbHNlLCJwcm9vZl90eXBlcyI6W119LCJhdHRhY2htZW50cyI6W3siaWQiOiJiNWIzZjBjMC05NWQ2LTRkOTItOWQ0Ni1hNDVmYTdlMzVjYWEiLCJtZWRpYV90eXBlIjoiYXBwbGljYXRpb24vanNvbiIsImRhdGEiOnsianNvbiI6eyJvcHRpb25zIjp7ImNoYWxsZW5nZSI6IjExYzkxNDkzLTAxYjMtNGM0ZC1hYzM2LWIzMzZiYWI1YmRkZiIsImRvbWFpbiI6Imh0dHBzOi8vcHJpc20tdmVyaWZpZXIuY29tIn0sInByZXNlbnRhdGlvbl9kZWZpbml0aW9uIjp7ImlkIjoiZjNmNmQwYTAtYzdhNS00NjAzLWJkZjUtMjU1ZWJkZGU5ODdiIiwiaW5wdXRfZGVzY3JpcHRvcnMiOltdfX19LCJmb3JtYXQiOiJwcmlzbS9qd3QifV0sInRoaWQiOiI3MWExNmRhMy05N2ZmLTQ2MGEtYjVmOS0yNWE2MWZlODY0ZjQiLCJmcm9tIjoiZGlkOnBlZXI6Mi5FejZMU3QyQzF4dmlCN25GRVVISkF5V3F2REYyeHlKdFFIV2FmUU14bXkxU3lTb0g2LlZ6Nk1rZ01DaHFaVlE0N0c4OEVCWTZRWm9QYkJzQ3FCeWh0eWZBM1RRcHlCS243RWouU2V5SjBJam9pWkcwaUxDSnpJanA3SW5WeWFTSTZJbWgwZEhBNkx5OHhPVEl1TVRZNExqRXVORFE2T0RBd01DOWthV1JqYjIxdElpd2ljaUk2VzEwc0ltRWlPbHNpWkdsa1kyOXRiUzkyTWlKZGZYMCJ9fX1dLCJjcmVhdGVkX3RpbWUiOjE3MjQ0MjY1NjgsImV4cGlyZXNfdGltZSI6MTcyNDQyNjg2OH0=\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The Verifier creates a PresentationRequest and shares it with the Holder as an out-of-band URL. The Holder can then decode the ",(0,s.jsx)(n.code,{children:"PresentationRequest"})," and use the SDK to either approve or reject it."]}),"\n",(0,s.jsxs)(n.p,{children:["If the Holder accepts the PresentationRequest, a credential ",(0,s.jsx)(n.code,{children:"Presentation"})," is sent to the Verifier. The Verifier will then resolve the DIDs onChain and verify that the Presentation is valid. All communications are performed using DIDComm v2."]}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant Verifier\n    participant Holder\n\n    Verifier->>Holder: Shares Out of Band URL (containing PresentationRequest)\n    Note right of Holder: Holder scans QRCode or opens link\n    Holder->>Holder: Decodes URL and parses PresentationRequest (OOB)\n    Holder->>Holder: Approves PresentationRequest and selects credential(s) (via SDK)\n    Holder->>Verifier: Sends Presentation (DIDCommV2)\n    Verifier->>Verifier: Verifies Presentation"}),"\n",(0,s.jsx)(n.h2,{id:"for-issuers",children:"For Issuers"}),"\n",(0,s.jsx)(n.h3,{id:"using-the-cloud-agent",children:"Using the Cloud Agent"}),"\n",(0,s.jsxs)(n.p,{children:["Creating a Credential Offer OOB Url through the Cloud Agent is pretty straight forward, do ",(0,s.jsx)(n.a,{href:"/docs/agent-api/#tag/Present-Proof/operation/createOOBRequestPresentationInvitation",children:"POST request to /present-proof/presentations/invitation"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"curl --location 'http:///cloud-agent/present-proof/presentations/invitation' \\\n--header 'Content-Type: application/json' \\\n--data '.......'\n"})}),"\n",(0,s.jsx)(n.p,{children:"A successful response will contain (string) invitation.invitationUrl."}),"\n",(0,s.jsx)(n.h3,{id:"using-ts-sdk",children:"Using TS SDK"}),"\n",(0,s.jsxs)(n.p,{children:["The SDK provides everything that is needed by Verifiers, creating and publishing prism",":dids",", resolving those onChain, creating OOB Presentation requests..."]}),"\n",(0,s.jsx)(n.p,{children:"Add the required imports"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import SDK from "@hyperledger/identus-sdk";\n'})}),"\n",(0,s.jsx)(n.p,{children:"Here's the types we are going to be using"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'async function createRequestPresentationMessage<T extends SDK.Domain.CredentialType>(\n  agent: SDK.Agent,\n  type: T,\n  claims: SDK.Domain.PresentationClaims<T>,\n  toDID?: SDK.Domain.DID,\n): Promise<SDK.Domain.Message>  {\n  if (!agent) {\n    throw new Error("No agent found");\n  }\n\n  const peerDID = await createPeerDID();\n  let task: SDK.Utils.Task<any>;\n\n  const task = new SDK.Tasks.CreatePresentationRequest({ \n    type, \n    toDID: toDID ?? peerDID, \n    claims:claims\n  })\n\n  const requestPresentation = await agent.runTask<SDK.RequestPresentation>(task);\n  const requestPresentationMessage = requestPresentation.makeMessage();\n  if (!toDID) {\n    delete (requestPresentationMessage as any).to;\n  }\n  return requestPresentationMessage;\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["That function will return a ",(0,s.jsx)(n.code,{children:"SDK.Domain.Message"})," that we can easily send with ",(0,s.jsx)(n.code,{children:"agent.send(requestPresentationMessage)"})]}),"\n",(0,s.jsx)(n.h2,{id:"for-holders",children:"For Holders"}),"\n",(0,s.jsx)(n.p,{children:"Holders will scan the qrcode, and extract the PresentationRequest from the OutOfBandInvitation Message."}),"\n",(0,s.jsx)(n.p,{children:"Parsing the OOB Url is very easy in the SDK:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import SDK from "@hyperledger/identus-sdk";\nasync function parseOOB(agent: SDK.Agent, url: string): Promise<SDK.InvitationType> {\n    return agent.parseInvitation(url)\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"We would then build the complete Presentation message, holder at this point should have accepted or rejected already:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import SDK from "@hyperledger/identus-sdk";\nconst selfPeerDID = await agent.createPeerDID([], true)\nconst oobMessage = await parseOOB(agent, oobURL);\nconst presentationRequestMessage = SDK.Domain.Message.fromJson(\n  oobMessage.attachments.at(0)?.payload\n)\nconst request = SDK.RequestPresentation.fromMessage(message);\nconst credential:SDK.Domain.Credential = //The credential tha the user accepted the PresentaionRequest with\nconst task = new SDK.Tasks.CreatePresentation({ request, credential })\nconst presentationMessage = await agent.runTask(task);\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Once the user has accepted the PresentationRequest, it will choose one ",(0,s.jsx)(n.code,{children:"SDK.Domain.Credential"})," and reply to the ",(0,s.jsx)(n.code,{children:"SDK.RequestPresentation"})," Message with a ",(0,s.jsx)(n.code,{children:"SDK.Presentation"})," Message."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"await agent.send(presentationMessage);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(96540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);