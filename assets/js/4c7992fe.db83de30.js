"use strict";(self.webpackChunkidentus_documentation_portal=self.webpackChunkidentus_documentation_portal||[]).push([[9790],{15393:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var i=n(74848),s=n(28453);const o={},d="Publish DID",r={id:"dids/publish",title:"Publish DID",description:"PRISM DID creation involves generating key pairs and additional data (e.g., services) to construct a create-operation.",source:"@site/identus-cloud-agent/docs/docusaurus/dids/publish.md",sourceDirName:"dids",slug:"/dids/publish",permalink:"/identus-docs/tutorials/dids/publish",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialsSidebar",previous:{title:"Update DID",permalink:"/identus-docs/tutorials/dids/update"},next:{title:"Deactivate DID",permalink:"/identus-docs/tutorials/dids/deactivate"}},a={},l=[{value:"Roles",id:"roles",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Overview",id:"overview",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"DID Controller interactions",id:"did-controller-interactions",level:2},{value:"1. Check the status of an unpublished DID",id:"1-check-the-status-of-an-unpublished-did",level:3},{value:"2. Request a publication of a DID",id:"2-request-a-publication-of-a-did",level:3},{value:"3. Wait until the DID operation is confirmed",id:"3-wait-until-the-did-operation-is-confirmed",level:3},{value:"4. Resolve a short-form DID",id:"4-resolve-a-short-form-did",level:3}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"publish-did",children:"Publish DID"}),"\n",(0,i.jsxs)(t.p,{children:["PRISM DID creation involves generating key pairs and additional data (e.g., services) to construct a create-operation.\nThe create-operation allows ",(0,i.jsx)(t.a,{href:"/docs/concepts/glossary#did-controller",children:"DID Controller"})," to derive two types of ",(0,i.jsx)(t.a,{href:"/docs/concepts/glossary#decentralized-identifiers",children:"DIDs"}),":"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://github.com/input-output-hk/prism-did-method-spec/blob/main/w3c-spec/PRISM-method.md#long-form-dids-unpublished-dids",children:"Long-form DID"}),". It has the following format ",(0,i.jsx)(t.code,{children:"did:prism:<initial-hash>:<encoded-state>"})]}),"\n",(0,i.jsxs)(t.li,{children:["Short-form DID. It has the following format ",(0,i.jsx)(t.code,{children:"did:prism:<initial-hash>"})]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The difference is the long-form DID contains the encoded create-operation in the DID itself while, the short-form DID doesn't have this information.\nAs a result, when resolving the short-form DID, the resolver must look for additional data from the blockchain.\nOn the other hand, resolving long-form DID is self-contained.\nEven if the data is not on the blockchain, the resolver can still work out the DID document of the long-form DID."}),"\n",(0,i.jsx)(t.p,{children:"The resolution of short-form DID is achievable by DID publication, which is a process of putting the create-operation on the blockchain."}),"\n",(0,i.jsx)(t.h2,{id:"roles",children:"Roles"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"DID Controller is the organization or individual who has control of the DID."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"DID Controller Cloud Agent up and running"}),"\n",(0,i.jsxs)(t.li,{children:["DID Controller has a DID created by the Cloud Agent (see ",(0,i.jsx)(t.a,{href:"/identus-docs/tutorials/dids/create",children:"Create DID"}),")"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(t.p,{children:["Publishing a DID requires the DID create-operation and the DID ",(0,i.jsx)(t.code,{children:"MASTER"})," key pairs, which the Cloud Agent already created under the hood.\nWhen the DID Controller requests a publication of their DID, the Cloud Agent uses the DID ",(0,i.jsx)(t.code,{children:"MASTER"})," key to sign the operation and submit the signed operation to the blockchain.\nAfter the operation submission to the blockchain, a specific number of confirmation blocks must get created before the DID operation is processed and published.\n(see ",(0,i.jsx)(t.a,{href:"https://github.com/input-output-hk/prism-did-method-spec/blob/main/w3c-spec/PRISM-method.md#processing-of-operations",children:"PRISM DID method - Processing of DID operation"}),")"]}),"\n",(0,i.jsx)(t.h2,{id:"endpoints",children:"Endpoints"}),"\n",(0,i.jsx)(t.p,{children:"The example uses the following endpoints"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Endpoint"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Role"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/agent-api/#tag/DID-Registrar/operation/getManagedDid",children:(0,i.jsx)(t.code,{children:"GET /did-registrar/dids/{didRef}"})})}),(0,i.jsx)(t.td,{children:"Get the DID stored in the Cloud Agent"}),(0,i.jsx)(t.td,{children:"DID Controller"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/agent-api/#tag/DID-Registrar/operation/publishManagedDid",children:(0,i.jsx)(t.code,{children:"POST /did-registrar/dids/{didRef}/publications"})})}),(0,i.jsx)(t.td,{children:"Publish the DID stored in the Cloud Agent to the blockchain"}),(0,i.jsx)(t.td,{children:"DID Controller"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.a,{href:"/agent-api/#tag/DID/operation/getDid",children:(0,i.jsx)(t.code,{children:"GET /dids/{didRef}"})})}),(0,i.jsx)(t.td,{children:"Resolve a DID to DID document representation"}),(0,i.jsx)(t.td,{children:"DID Controller"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"did-controller-interactions",children:"DID Controller interactions"}),"\n",(0,i.jsx)(t.h3,{id:"1-check-the-status-of-an-unpublished-did",children:"1. Check the status of an unpublished DID"}),"\n",(0,i.jsxs)(t.p,{children:["DID Controller checks the status by replacing the ",(0,i.jsx)(t.code,{children:"{didRef}"})," with the unpublished DID on the Agent.\nThe ",(0,i.jsx)(t.code,{children:"{didRef}"})," path segment can be either short-form or long-form DID.\nWhen a DID gets created and not published, it has the status of ",(0,i.jsx)(t.code,{children:"CREATED"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"curl --location --request GET 'http://localhost:8080/cloud-agent/did-registrar/dids/{didRef}' \\\n--header \"apikey: $API_KEY\" \\\n--header 'Accept: application/json'\n"})}),"\n",(0,i.jsx)(t.p,{children:"Example response"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n    "did": "did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff",\n    "longFormDid": "did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ",\n    "status": "CREATED"\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"2-request-a-publication-of-a-did",children:"2. Request a publication of a DID"}),"\n",(0,i.jsxs)(t.p,{children:["To publish a DID, use DID Controller ",(0,i.jsx)(t.code,{children:"POST"})," a request to ",(0,i.jsx)(t.code,{children:"/did-registrar/dids/{didRef}/publications"})," endpoint."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"curl --location --request POST 'http://localhost:8080/cloud-agent/did-registrar/dids/{didRef}/publications' \\\n--header \"apikey: $API_KEY\" \\\n--header 'Accept: application/json'\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The Cloud Agent will retrieve a DID ",(0,i.jsx)(t.code,{children:"MASTER"})," key and sign the operation before submitting it to the blockchain.\nThe process is asynchronous, and it takes time until the operation is confirmed.\nThe DID Controller receives a scheduled operation as a response."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n    "scheduledOperation": {\n        "didRef": "did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff",\n        "id": "0cf945eaf3be143e5d64eef992666f3c613ae986fdb34e71ef4a9d2f25a6704f"\n    }\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["The response contains the ",(0,i.jsx)(t.code,{children:"scheduledOperation"})," property, which describes a scheduled operation.\nThe submitted DID operations are batched together along with other operations to reduce the transaction cost when interacting with the blockchain."]}),"\n",(0,i.jsx)(t.p,{children:"The Cloud Agent will eventually expose an endpoint to check the status of a scheduled operation.\nChecking the publishing status is possible by following Step 3."}),"\n",(0,i.jsx)(t.h3,{id:"3-wait-until-the-did-operation-is-confirmed",children:"3. Wait until the DID operation is confirmed"}),"\n",(0,i.jsxs)(t.p,{children:["The DID Controller checks the DID status the same as in Step 1. The status of the DID has changed to ",(0,i.jsx)(t.code,{children:"PUBLICATION_PENDING"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Example response with status ",(0,i.jsx)(t.code,{children:"PUBLICATION_PENDING"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n    "did": "did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff",\n    "longFormDid": "did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff:Cr4BCrsBElsKBmF1dGgtMRAEQk8KCXNlY3AyNTZrMRIg0opTuxu-zt6aRbT1tPniG4eu4CYsQPM3rrLzvzNiNgwaIIFTnyT2N4U7qCQ78qtWC3-p0el6Hvv8qxG5uuEw-WgMElwKB21hc3RlcjAQAUJPCglzZWNwMjU2azESIKhBU0eCOO6Vinz_8vhtFSAhYYqrkEXC8PHGxkuIUev8GiAydFHLXb7c22A1Uj_PR21NZp6BCDQqNq2xd244txRgsQ",\n    "status": "PUBLICATION_PENDING"\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["If the operation is confirmed, the status becomes ",(0,i.jsx)(t.code,{children:"PUBLISHED"}),". The ",(0,i.jsx)(t.code,{children:"longFormDid"})," property is no longer mandatory for published DID."]}),"\n",(0,i.jsxs)(t.p,{children:["Example response with status ",(0,i.jsx)(t.code,{children:"PUBLISHED"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n    "did": "did:prism:4a5b5cf0a513e83b598bbea25cd6196746747f361a73ef77068268bc9bd732ff",\n    "status": "PUBLISHED"\n}\n'})}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"Note:"})," The ",(0,i.jsx)(t.code,{children:"status"})," here is the internal status of the DID on the Cloud Agent (",(0,i.jsx)(t.code,{children:"PUBLISHED"}),", ",(0,i.jsx)(t.code,{children:"CREATED"}),", ",(0,i.jsx)(t.code,{children:"PUBLICAION_PENDING"}),"). It does not indicate the lifecycle of the DID observed on the blockchain (e.g., deactivated, etc.). The ",(0,i.jsx)(t.a,{href:"/docs/concepts/glossary#did-resolution",children:"DID resolution"})," metadata is for that purpose."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"4-resolve-a-short-form-did",children:"4. Resolve a short-form DID"}),"\n",(0,i.jsx)(t.p,{children:"Only published DID can be resolved using short-form.\nTo confirm that the short-form DID is resolvable, test the DID against the resolution endpoint."}),"\n",(0,i.jsxs)(t.p,{children:["Replace ",(0,i.jsx)(t.code,{children:"{didRef}"})," with the short-form DID; the response should return a DID document."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"curl --location --request GET 'http://localhost:8080/cloud-agent/dids/{didRef}' \\\n--header \"apikey: $API_KEY\" \\\n--header 'Accept: */*'\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>r});var i=n(96540);const s={},o=i.createContext(s);function d(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);