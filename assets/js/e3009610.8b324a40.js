"use strict";(self.webpackChunkidentus_documentation_portal=self.webpackChunkidentus_documentation_portal||[]).push([[7369],{12183:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=n(74848),i=n(28453);const r={},a="Operating an agent with secrets",o={id:"secrets/operation",title:"Operating an agent with secrets",description:"Introduction",source:"@site/cloud-agent/docs/docusaurus/secrets/operation.md",sourceDirName:"secrets",slug:"/secrets/operation",permalink:"/docs/tutorials/secrets/operation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialsSidebar",previous:{title:"Secret Management",permalink:"/docs/tutorials/category/secret-management"},next:{title:"Creating the Cloud Agent wallet seed",permalink:"/docs/tutorials/secrets/seed-generation"}},c={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Storage backend configuration",id:"storage-backend-configuration",level:2},{value:"HashiCorp Vault",id:"hashicorp-vault",level:3},{value:"Postgres",id:"postgres",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"operating-an-agent-with-secrets",children:"Operating an agent with secrets"}),"\n",(0,s.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(t.p,{children:"The Cloud Agent offers a DID (Decentralized Identifier) management solution\nwhich involves creating, storing and using key materials.\nTo generate a DID key material, the software relies on a seed, following the BIP32 / BIP39 standards.\nThe system operators have the option to either provide their own seed or\nallow the software to generate one automatically. However, in a production environment,\nit is crucial for the system operators to explicitly supply the seed to the agent.\nThis ensures full control over the DID key material and guarantees secure management of user identities."}),"\n",(0,s.jsx)(t.p,{children:"The Cloud Agent uses the following environment variables for secret management."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Default"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"SECRET_STORAGE_BACKEND"})}),(0,s.jsx)(t.td,{children:"The storage backend that will be used for the secret storage"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"vault"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"VAULT_ADDR"})}),(0,s.jsx)(t.td,{children:"The address which the Cloud Agent can reach the Vault"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"http://localhost:8200"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"VAULT_TOKEN"})}),(0,s.jsx)(t.td,{children:"The token for accessing HashiCorp Vault"}),(0,s.jsx)(t.td,{children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"VAULT_APPROLE_ROLE_ID"})}),(0,s.jsxs)(t.td,{children:["The ",(0,s.jsx)(t.code,{children:"role_id"})," for HashiCorp Vault authentication with AppRole"]}),(0,s.jsx)(t.td,{children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"VAULT_APPROLE_SECRET_ID"})}),(0,s.jsxs)(t.td,{children:["The ",(0,s.jsx)(t.code,{children:"secret_id"})," for HashiCorp Vault authentication with AppRole"]}),(0,s.jsx)(t.td,{children:"-"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"VAULT_USE_SEMANTIC_PATH"})}),(0,s.jsx)(t.td,{children:"Enable full path convention for vault secret path"}),(0,s.jsx)(t.td,{children:"true"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"DEFAULT_WALLET_SEED"})}),(0,s.jsx)(t.td,{children:"The seed used for DID key management for the default wallet"}),(0,s.jsx)(t.td,{children:"-"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"storage-backend-configuration",children:"Storage backend configuration"}),"\n",(0,s.jsx)(t.p,{children:"Secret storage supports various backends like the Vault service or Postgres database.\nBy default, the backend chosen for secret storage is Vault, which is suitable for production environments.\nThere are multiple supported backend implementations, each catering to specific use cases."}),"\n",(0,s.jsx)(t.h3,{id:"hashicorp-vault",children:"HashiCorp Vault"}),"\n",(0,s.jsxs)(t.p,{children:["When operating in a production environment, the agent has the option to utilize Vault\nas a secure secret storage backend. This choice is deemed suitable for production because\nall data is encrypted and it also offers additional security-related capabilities.\nBy default, the agent uses this backend but the option is configurable.\nTo utilize this backend, set the ",(0,s.jsx)(t.code,{children:"SECRET_STORAGE_BACKEND"})," variable to ",(0,s.jsx)(t.code,{children:"vault"}),"."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Authentication and Authorization"})}),"\n",(0,s.jsxs)(t.p,{children:["The agent expects to read and write secrets to the path ",(0,s.jsx)(t.code,{children:"/secret/*"}),",\nso ensure the appropriate permissions are provisioned."]}),"\n",(0,s.jsx)(t.p,{children:"Example Vault policy"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'path "secret/*" {\n    capabilities = ["create", "read", "update", "patch", "delete", "list"]\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["HashiCorp Vault provides multiple authentication methods.\nOne of the simplest methods is ",(0,s.jsx)(t.a,{href:"https://developer.hashicorp.com/vault/docs/auth/token",children:"token authentication"}),".\nTo authenticate using the token, set the environment variable ",(0,s.jsx)(t.code,{children:"VAULT_TOKEN"}),".\nThe agent prefers token authentication if provided with multiple authentication methods."]}),"\n",(0,s.jsxs)(t.p,{children:["Another method is ",(0,s.jsx)(t.a,{href:"https://developer.hashicorp.com/vault/docs/auth/approle",children:"AppRole authentication"})," which is suitable for automatic workflows.\nTo use AppRole authentication, set the environment variable ",(0,s.jsx)(t.code,{children:"VAULT_APPROLE_ROLE_ID"})," and ",(0,s.jsx)(t.code,{children:"VAULT_APPROLE_SECRET_ID"}),"."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Storage Backend"})}),"\n",(0,s.jsx)(t.p,{children:"HashiCorp Vault supports multiple backends for storage, such as filesystem, Etcd, PostgreSQL, or Integrated Storage (Raft).\nEach backend has different properties, which have implications for how secrets can be stored.\nThe agent logically stores secrets in the following hierarchies."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"# Wallet seed\n/secret/<wallet-id>/seed\n\n# Peer DID keys\n/secret/<wallet-id>/dids/peer/<peer-did>/keys/<key-id>\n\n# Generic secrets\n/secret/<wallet-id>/generic-secrets/<specific-path>\n"})}),"\n",(0,s.jsx)(t.p,{children:"Each storage backend has certain limitations, such as size, number of sub-paths, or path length.\nSome backends can support path lengths of up to 32,768 characters, while others only allow a few hundred characters.\nIn some cases, the storage backends might not support the above logical convention due to excessively long paths."}),"\n",(0,s.jsxs)(t.p,{children:["To address this issue, the agent supports path shortening.\nThis feature can be toggled by setting the environment variable ",(0,s.jsx)(t.code,{children:"VAULT_USE_SEMANTIC_PATH=false"}),".\nWhen it is disabled, the unbounded portion of the path will be replaced by a SHA-256 digest of the original relative path.\nAdditionally, the original path will be stored in the secret metadata."]}),"\n",(0,s.jsx)(t.h3,{id:"postgres",children:"Postgres"}),"\n",(0,s.jsxs)(t.p,{children:["Postgres is an alternative backend option for secret storage.\nHowever, this option must be explicitly chosen and will replace Vault.\nBy opting for Postgres, there is no need for an additional service like Vault,\nwhich simplifies the process of setting up a local development instance.\nIt utilizes the same database instance as the agent itself. To enable this option,\nset the ",(0,s.jsx)(t.code,{children:"SECRET_STORAGE_BACKEND"})," to ",(0,s.jsx)(t.code,{children:"postgres"}),", and it will utilize the same database\nconfiguration as the agent's database. It is important to note that while this option\nfacilitates an easier development experience, it does not provide a secure method of storing secrets.\nThe data is not encrypted, making it unsuitable for production use."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(96540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);