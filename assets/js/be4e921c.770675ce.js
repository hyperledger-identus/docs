"use strict";(self.webpackChunkidentus_documentation_portal=self.webpackChunkidentus_documentation_portal||[]).push([[20964],{30371:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var n=i(74848),r=i(28453);const s={},o="Overview",d={id:"identus/did-prism-resolver/overview",title:"Overview",description:"Decentralized Identifiers (DIDs) are a key component of decentralized identity systems, enabling users to control their digital identities without relying on a centralized authority.",source:"@site/documentation/home/identus/did-prism-resolver/overview.md",sourceDirName:"identus/did-prism-resolver",slug:"/identus/did-prism-resolver/overview",permalink:"/docs/home/identus/did-prism-resolver/overview",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"DID PRISM Resolver",permalink:"/docs/home/category/did-prism-resolver"},next:{title:"DID PRISM Resolver",permalink:"/docs/home/identus/did-prism-resolver/"}},a={},c=[{value:"Cloud Agent and Prism Node",id:"cloud-agent-and-prism-node",level:2},{value:"Universal Resolver",id:"universal-resolver",level:2},{value:"SDK",id:"sdk",level:2}];function l(e){const t={a:"a",h1:"h1",h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(t.p,{children:["Decentralized Identifiers (",(0,n.jsx)(t.a,{href:"/home/concepts/glossary#did",children:"DIDs"}),") are a key component of decentralized identity systems, enabling users to control their digital identities without relying on a centralized authority.\nThe ",(0,n.jsx)(t.a,{href:"https://github.com/input-output-hk/prism-did-method-spec/blob/main/w3c-spec/PRISM-method.md",children:"DID PRISM method specification"})," specifies a DID method that conforms to the ",(0,n.jsx)(t.a,{href:"https://www.w3.org/TR/did-core/",children:"W3C DID specification"}),".\nDID PRISM Resolution refers to the process of retrieving the corresponding DID Document for a given PRISM DID.\nThis document contains the public keys, authentication methods, service endpoints, and other metadata required to interact with the subject identified by the DID."]}),"\n",(0,n.jsx)(t.h2,{id:"cloud-agent-and-prism-node",children:"Cloud Agent and Prism Node"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.a,{href:"/home/identus/prism-node/overview",children:"Prism-Node"})," is a microservice that exposes gRPC endpoint and implements DID PRISM operations, allowing users to create, update, deactivate, and resolve DIDs in a secure and privacy-preserving manner.\nThe DID PRISM resolver is a component that interacts with the Prism-Node to retrieve the current state of a DID and its associated DID Document.\nThe Cloud Agent can serve as a DID PRISM resolver, allowing users to resolve DIDs and retrieve their associated DID Documents."]}),"\n",(0,n.jsx)(t.h2,{id:"universal-resolver",children:"Universal Resolver"}),"\n",(0,n.jsx)(t.p,{children:"The DID PRISM can also be resolved via the Universal Resolver, which is a service that provides a unified interface for resolving DIDs across different DID methods."}),"\n",(0,n.jsx)(t.h2,{id:"sdk",children:"SDK"}),"\n",(0,n.jsx)(t.p,{children:"This documentation provides an in-depth guide to the DID PRISM resolution process, including its architecture, resolution flow, components, and how it integrates with decentralized identity ecosystems.\nWhether you're building identity-enabled applications or integrating DID support into your systems, this overview will help you understand how DID PRISM resolves DIDs and retrieves trusted identity data."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>d});var n=i(96540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);