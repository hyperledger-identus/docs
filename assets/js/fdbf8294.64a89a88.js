"use strict";(self.webpackChunkidentus_documentation_portal=self.webpackChunkidentus_documentation_portal||[]).push([[77116],{64692:(s,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=t(74848),n=t(28453);const i={},d=void 0,c={id:"sdk/overview/namespaces/Utils/README",title:"README",description:"@hyperledger/identus-sdk v7.0.0",source:"@site/sdk-ts/docs/sdk/overview/namespaces/Utils/README.md",sourceDirName:"sdk/overview/namespaces/Utils",slug:"/sdk/overview/namespaces/Utils/",permalink:"/docs/sdk-ts/sdk/overview/namespaces/Utils/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialsSidebar",previous:{title:"TypedSchema",permalink:"/docs/sdk-ts/sdk/overview/type-aliases/TypedSchema"},next:{title:"Arrayable",permalink:"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Arrayable"}},a={},l=[{value:"Namespaces",id:"namespaces",level:2},{value:"Classes",id:"classes",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Type Aliases",id:"type-aliases",level:2},{value:"Functions",id:"functions",level:2}];function h(s){const e={a:"a",h1:"h1",h2:"h2",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...s.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.p,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/",children:(0,r.jsx)(e.strong,{children:"@hyperledger/identus-sdk v7.0.0"})})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/",children:"@hyperledger/identus-sdk"})," / ",(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/",children:"overview"})," / Utils"]}),"\n",(0,r.jsx)(e.h1,{id:"utils",children:"Utils"}),"\n",(0,r.jsx)(e.h2,{id:"namespaces",children:"Namespaces"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Namespace"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsx)(e.tbody,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/namespaces/Task/",children:"Task"})}),(0,r.jsx)(e.td,{children:"-"})]})})]}),"\n",(0,r.jsx)(e.h2,{id:"classes",children:"Classes"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Class"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/ConsoleLogger",children:"ConsoleLogger"})}),(0,r.jsx)(e.td,{children:"-"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/classes/Task",children:"Task"})}),(0,r.jsx)(e.td,{children:"A Task encapsulates a unit of work"})]})]})]}),"\n",(0,r.jsx)(e.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Interface"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Ctor",children:"Ctor"})}),(0,r.jsx)(e.td,{children:"Constructor for T"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/interfaces/Logger",children:"Logger"})}),(0,r.jsx)(e.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(e.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Type Alias"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Arrayable",children:"Arrayable"})}),(0,r.jsx)(e.td,{children:"T is either an Array or a single item"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/JsonObj",children:"JsonObj"})}),(0,r.jsx)(e.td,{children:"Construct a Type with a set of string Keys of type T"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/LogLevel",children:"LogLevel"})}),(0,r.jsx)(e.td,{children:"-"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Nil",children:"Nil"})}),(0,r.jsx)(e.td,{children:"no value shorthand"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/type-aliases/Normalize",children:"Normalize"})}),(0,r.jsx)(e.td,{children:"Flatten intersect to show single interface"})]})]})]}),"\n",(0,r.jsx)(e.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Function"}),(0,r.jsx)(e.th,{children:"Description"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asArray",children:"asArray"})}),(0,r.jsx)(e.td,{children:"asArray convert a value to an array"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/asJsonObj",children:"asJsonObj"})}),(0,r.jsx)(e.td,{children:"-"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/expect",children:"expect"})}),(0,r.jsx)(e.td,{children:"expect assert a value is notNil and return the value typed as such panic otherwise"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isArray",children:"isArray"})}),(0,r.jsx)(e.td,{children:"isArray Typeguard - check a value is an Array"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isEmpty",children:"isEmpty"})}),(0,r.jsx)(e.td,{children:"isEmpty Logic - check a given value is considered empty empty depends on typeof value: - null - undefined - array: length = 0 - string: length = 0"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isNil",children:"isNil"})}),(0,r.jsx)(e.td,{children:"isNullish Typeguard - check a value is undefined or null"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isObject",children:"isObject"})}),(0,r.jsx)(e.td,{children:"isObject Typeguard - check a value is an object in the conceptual sense not the JS sense excluding JS overlap with: null Arrays Functions"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/isString",children:"isString"})}),(0,r.jsx)(e.td,{children:"isString TypeGuard to check a value is a string"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notEmptyString",children:"notEmptyString"})}),(0,r.jsx)(e.td,{children:"notEmptyString Typeguard + Logic - check a value is a string with contents"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/notNil",children:"notNil"})}),(0,r.jsx)(e.td,{children:"notNil Typeguard - check a value is neither undefined or null"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validate",children:"validate"})}),(0,r.jsx)(e.td,{children:"validate Type assertion - assert a value matches a schema"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:(0,r.jsx)(e.a,{href:"/docs/sdk-ts/sdk/overview/namespaces/Utils/functions/validateSafe",children:"validateSafe"})}),(0,r.jsx)(e.td,{children:"validateSafe Typeguard - check a value matches a schema"})]})]})]})]})}function o(s={}){const{wrapper:e}={...(0,n.R)(),...s.components};return e?(0,r.jsx)(e,{...s,children:(0,r.jsx)(h,{...s})}):h(s)}},28453:(s,e,t)=>{t.d(e,{R:()=>d,x:()=>c});var r=t(96540);const n={},i=r.createContext(n);function d(s){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function c(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(n):s.components||n:d(s.components),r.createElement(i.Provider,{value:e},s.children)}}}]);